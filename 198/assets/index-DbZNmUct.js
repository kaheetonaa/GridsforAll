(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Em="175",aw=0,Bg=1,ow=2,Kx=1,cw=2,Vr=3,es=0,yi=1,qr=2,Ps=0,bo=1,$g=2,kg=3,zg=4,lw=5,oa=100,hw=101,uw=102,dw=103,fw=104,pw=200,mw=201,gw=202,_w=203,np=204,ip=205,vw=206,xw=207,yw=208,bw=209,Mw=210,Sw=211,ww=212,Tw=213,Ew=214,rp=0,sp=1,ap=2,Ao=3,op=4,cp=5,lp=6,hp=7,Cm=0,Cw=1,Aw=2,Is=0,Rw=1,Pw=2,Iw=3,Lw=4,Dw=5,Fw=6,Nw=7,Jx=300,Ro=301,Po=302,up=303,dp=304,Hu=306,gu=1e3,la=1001,fp=1002,ar=1003,Ow=1004,Ll=1005,vr=1006,_d=1007,ha=1008,ts=1009,Qx=1010,ey=1011,Bc=1012,Am=1013,pa=1014,jr=1015,hl=1016,Rm=1017,Pm=1018,$c=1020,ty=35902,ny=1021,iy=1022,sr=1023,ry=1024,sy=1025,kc=1026,zc=1027,ay=1028,Im=1029,oy=1030,Lm=1031,Dm=1033,Qh=33776,eu=33777,tu=33778,nu=33779,pp=35840,mp=35841,gp=35842,_p=35843,vp=36196,xp=37492,yp=37496,bp=37808,Mp=37809,Sp=37810,wp=37811,Tp=37812,Ep=37813,Cp=37814,Ap=37815,Rp=37816,Pp=37817,Ip=37818,Lp=37819,Dp=37820,Fp=37821,iu=36492,Np=36494,Op=36495,cy=36283,Up=36284,Bp=36285,$p=36286,Uw=3200,Bw=3201,ly=0,$w=1,Es="",kn="srgb",Io="srgb-linear",_u="linear",Jt="srgb",Ea=7680,Vg=519,kw=512,zw=513,Vw=514,hy=515,Hw=516,Gw=517,Ww=518,qw=519,Hg=35044,Gg="300 es",Xr=2e3,vu=2001;let Ho=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}};const qn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],vd=Math.PI/180,kp=180/Math.PI;function ul(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(qn[r&255]+qn[r>>8&255]+qn[r>>16&255]+qn[r>>24&255]+"-"+qn[e&255]+qn[e>>8&255]+"-"+qn[e>>16&15|64]+qn[e>>24&255]+"-"+qn[t&63|128]+qn[t>>8&255]+"-"+qn[t>>16&255]+qn[t>>24&255]+qn[n&255]+qn[n>>8&255]+qn[n>>16&255]+qn[n>>24&255]).toLowerCase()}function Pt(r,e,t){return Math.max(e,Math.min(t,r))}function jw(r,e){return(r%e+e)%e}function xd(r,e,t){return(1-t)*r+t*e}function tc(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function mi(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}let jt=class uy{constructor(e=0,t=0){uy.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Pt(this.x,e.x,t.x),this.y=Pt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Pt(this.x,e,t),this.y=Pt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Pt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Pt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},Mt=class dy{constructor(e,t,n,i,s,a,o,c,l){dy.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,o,c,l)}set(e,t,n,i,s,a,o,c,l){const h=this.elements;return h[0]=e,h[1]=i,h[2]=o,h[3]=t,h[4]=s,h[5]=c,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],o=n[3],c=n[6],l=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],g=i[0],_=i[3],m=i[6],v=i[1],y=i[4],x=i[7],w=i[2],E=i[5],M=i[8];return s[0]=a*g+o*v+c*w,s[3]=a*_+o*y+c*E,s[6]=a*m+o*x+c*M,s[1]=l*g+h*v+u*w,s[4]=l*_+h*y+u*E,s[7]=l*m+h*x+u*M,s[2]=d*g+f*v+p*w,s[5]=d*_+f*y+p*E,s[8]=d*m+f*x+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8];return t*a*h-t*o*l-n*s*h+n*o*c+i*s*l-i*a*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=h*a-o*l,d=o*c-h*s,f=l*s-a*c,p=t*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=u*g,e[1]=(i*l-h*n)*g,e[2]=(o*n-i*a)*g,e[3]=d*g,e[4]=(h*t-i*c)*g,e[5]=(i*s-o*t)*g,e[6]=f*g,e[7]=(n*c-l*t)*g,e[8]=(a*t-n*s)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,o){const c=Math.cos(s),l=Math.sin(s);return this.set(n*c,n*l,-n*(c*a+l*o)+a+e,-i*l,i*c,-i*(-l*a+c*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(yd.makeScale(e,t)),this}rotate(e){return this.premultiply(yd.makeRotation(-e)),this}translate(e,t){return this.premultiply(yd.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const yd=new Mt;function fy(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}function Vc(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Xw(){const r=Vc("canvas");return r.style.display="block",r}const Wg={};function ru(r){r in Wg||(Wg[r]=!0,console.warn(r))}function Yw(r,e,t){return new Promise(function(n,i){function s(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:i();break;case r.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function Zw(r){const e=r.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function Kw(r){const e=r.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const qg=new Mt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),jg=new Mt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Jw(){const r={enabled:!0,workingColorSpace:Io,spaces:{},convert:function(i,s,a){return this.enabled===!1||s===a||!s||!a||(this.spaces[s].transfer===Jt&&(i.r=Yr(i.r),i.g=Yr(i.g),i.b=Yr(i.b)),this.spaces[s].primaries!==this.spaces[a].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===Jt&&(i.r=Mo(i.r),i.g=Mo(i.g),i.b=Mo(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Es?_u:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,a){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return r.define({[Io]:{primaries:e,whitePoint:n,transfer:_u,toXYZ:qg,fromXYZ:jg,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:kn},outputColorSpaceConfig:{drawingBufferColorSpace:kn}},[kn]:{primaries:e,whitePoint:n,transfer:Jt,toXYZ:qg,fromXYZ:jg,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:kn}}}),r}const Rt=Jw();function Yr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Mo(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Ca,Qw=class{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Ca===void 0&&(Ca=Vc("canvas")),Ca.width=e.width,Ca.height=e.height;const i=Ca.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=Ca}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Vc("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=Yr(s[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Yr(t[n]/255)*255):t[n]=Yr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},e1=0;class Fm{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:e1++}),this.uuid=ul(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?s.push(bd(i[a].image)):s.push(bd(i[a]))}else s=bd(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function bd(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Qw.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let t1=0,hr=class su extends Ho{constructor(e=su.DEFAULT_IMAGE,t=su.DEFAULT_MAPPING,n=la,i=la,s=vr,a=ha,o=sr,c=ts,l=su.DEFAULT_ANISOTROPY,h=Es){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:t1++}),this.uuid=ul(),this.name="",this.source=new Fm(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new jt(0,0),this.repeat=new jt(1,1),this.center=new jt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Mt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Jx)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case gu:e.x=e.x-Math.floor(e.x);break;case la:e.x=e.x<0?0:1;break;case fp:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case gu:e.y=e.y-Math.floor(e.y);break;case la:e.y=e.y<0?0:1;break;case fp:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};hr.DEFAULT_IMAGE=null;hr.DEFAULT_MAPPING=Jx;hr.DEFAULT_ANISOTROPY=1;let En=class py{constructor(e=0,t=0,n=0,i=1){py.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const c=e.elements,l=c[0],h=c[4],u=c[8],d=c[1],f=c[5],p=c[9],g=c[2],_=c[6],m=c[10];if(Math.abs(h-d)<.01&&Math.abs(u-g)<.01&&Math.abs(p-_)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+g)<.1&&Math.abs(p+_)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(l+1)/2,x=(f+1)/2,w=(m+1)/2,E=(h+d)/4,M=(u+g)/4,A=(p+_)/4;return y>x&&y>w?y<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(y),i=E/n,s=M/n):x>w?x<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(x),n=E/i,s=A/i):w<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(w),n=M/s,i=A/s),this.set(n,i,s,t),this}let v=Math.sqrt((_-p)*(_-p)+(u-g)*(u-g)+(d-h)*(d-h));return Math.abs(v)<.001&&(v=1),this.x=(_-p)/v,this.y=(u-g)/v,this.z=(d-h)/v,this.w=Math.acos((l+f+m-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Pt(this.x,e.x,t.x),this.y=Pt(this.y,e.y,t.y),this.z=Pt(this.z,e.z,t.z),this.w=Pt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Pt(this.x,e,t),this.y=Pt(this.y,e,t),this.z=Pt(this.z,e,t),this.w=Pt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Pt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}};class n1 extends Ho{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new En(0,0,e,t),this.scissorTest=!1,this.viewport=new En(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:vr,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new hr(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let o=0;o<a;o++)this.textures[o]=s.clone(),this.textures[o].isRenderTargetTexture=!0,this.textures[o].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new Fm(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}let ma=class extends n1{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}};class my extends hr{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ar,this.minFilter=ar,this.wrapR=la,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class i1 extends hr{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ar,this.minFilter=ar,this.wrapR=la,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let dl=class{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,a,o){let c=n[i+0],l=n[i+1],h=n[i+2],u=n[i+3];const d=s[a+0],f=s[a+1],p=s[a+2],g=s[a+3];if(o===0){e[t+0]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(o===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=g;return}if(u!==g||c!==d||l!==f||h!==p){let _=1-o;const m=c*d+l*f+h*p+u*g,v=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const w=Math.sqrt(y),E=Math.atan2(w,m*v);_=Math.sin(_*E)/w,o=Math.sin(o*E)/w}const x=o*v;if(c=c*_+d*x,l=l*_+f*x,h=h*_+p*x,u=u*_+g*x,_===1-o){const w=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=w,l*=w,h*=w,u*=w}}e[t]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,s,a){const o=n[i],c=n[i+1],l=n[i+2],h=n[i+3],u=s[a],d=s[a+1],f=s[a+2],p=s[a+3];return e[t]=o*p+h*u+c*f-l*d,e[t+1]=c*p+h*d+l*u-o*f,e[t+2]=l*p+h*f+o*d-c*u,e[t+3]=h*p-o*u-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,a=e._order,o=Math.cos,c=Math.sin,l=o(n/2),h=o(i/2),u=o(s/2),d=c(n/2),f=c(i/2),p=c(s/2);switch(a){case"XYZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"YZX":this._x=d*h*u+l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u-d*f*p;break;case"XZY":this._x=d*h*u-l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],a=t[1],o=t[5],c=t[9],l=t[2],h=t[6],u=t[10],d=n+o+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-c)*f,this._y=(s-l)*f,this._z=(a-i)*f}else if(n>o&&n>u){const f=2*Math.sqrt(1+n-o-u);this._w=(h-c)/f,this._x=.25*f,this._y=(i+a)/f,this._z=(s+l)/f}else if(o>u){const f=2*Math.sqrt(1+o-n-u);this._w=(s-l)/f,this._x=(i+a)/f,this._y=.25*f,this._z=(c+h)/f}else{const f=2*Math.sqrt(1+u-n-o);this._w=(a-i)/f,this._x=(s+l)/f,this._y=(c+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Pt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,a=e._w,o=t._x,c=t._y,l=t._z,h=t._w;return this._x=n*h+a*o+i*l-s*c,this._y=i*h+a*c+s*o-n*l,this._z=s*h+a*l+n*c-i*o,this._w=a*h-n*o-i*c-s*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=s,this;const c=1-o*o;if(c<=Number.EPSILON){const f=1-t;return this._w=f*a+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,o),u=Math.sin((1-t)*h)/l,d=Math.sin(t*h)/l;return this._w=a*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},te=class gy{constructor(e=0,t=0,n=0){gy.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Xg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Xg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,a=e.y,o=e.z,c=e.w,l=2*(a*i-o*n),h=2*(o*t-s*i),u=2*(s*n-a*t);return this.x=t+c*l+a*u-o*h,this.y=n+c*h+o*l-s*u,this.z=i+c*u+s*h-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Pt(this.x,e.x,t.x),this.y=Pt(this.y,e.y,t.y),this.z=Pt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Pt(this.x,e,t),this.y=Pt(this.y,e,t),this.z=Pt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Pt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,a=t.x,o=t.y,c=t.z;return this.x=i*c-s*o,this.y=s*a-n*c,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Md.copy(this).projectOnVector(e),this.sub(Md)}reflect(e){return this.sub(Md.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Pt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const Md=new te,Xg=new dl;let fl=class{constructor(e=new te(1/0,1/0,1/0),t=new te(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ki.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ki.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ki.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=s.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,Ki):Ki.fromBufferAttribute(s,a),Ki.applyMatrix4(e.matrixWorld),this.expandByPoint(Ki);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Dl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Dl.copy(n.boundingBox)),Dl.applyMatrix4(e.matrixWorld),this.union(Dl)}const i=e.children;for(let s=0,a=i.length;s<a;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Ki),Ki.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(nc),Fl.subVectors(this.max,nc),Aa.subVectors(e.a,nc),Ra.subVectors(e.b,nc),Pa.subVectors(e.c,nc),cs.subVectors(Ra,Aa),ls.subVectors(Pa,Ra),Ys.subVectors(Aa,Pa);let t=[0,-cs.z,cs.y,0,-ls.z,ls.y,0,-Ys.z,Ys.y,cs.z,0,-cs.x,ls.z,0,-ls.x,Ys.z,0,-Ys.x,-cs.y,cs.x,0,-ls.y,ls.x,0,-Ys.y,Ys.x,0];return!Sd(t,Aa,Ra,Pa,Fl)||(t=[1,0,0,0,1,0,0,0,1],!Sd(t,Aa,Ra,Pa,Fl))?!1:(Nl.crossVectors(cs,ls),t=[Nl.x,Nl.y,Nl.z],Sd(t,Aa,Ra,Pa,Fl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ki).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ki).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ar[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ar[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ar[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ar[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ar[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ar[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ar[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ar[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ar),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const Ar=[new te,new te,new te,new te,new te,new te,new te,new te],Ki=new te,Dl=new fl,Aa=new te,Ra=new te,Pa=new te,cs=new te,ls=new te,Ys=new te,nc=new te,Fl=new te,Nl=new te,Zs=new te;function Sd(r,e,t,n,i){for(let s=0,a=r.length-3;s<=a;s+=3){Zs.fromArray(r,s);const o=i.x*Math.abs(Zs.x)+i.y*Math.abs(Zs.y)+i.z*Math.abs(Zs.z),c=e.dot(Zs),l=t.dot(Zs),h=n.dot(Zs);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>o)return!1}return!0}const r1=new fl,ic=new te,wd=new te;let pl=class{constructor(e=new te,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):r1.setFromPoints(e).getCenter(n);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ic.subVectors(e,this.center);const t=ic.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ic,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(wd.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ic.copy(e.center).add(wd)),this.expandByPoint(ic.copy(e.center).sub(wd))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Rr=new te,Td=new te,Ol=new te,hs=new te,Ed=new te,Ul=new te,Cd=new te;let Nm=class{constructor(e=new te,t=new te(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Rr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Rr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Rr.copy(this.origin).addScaledVector(this.direction,t),Rr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Td.copy(e).add(t).multiplyScalar(.5),Ol.copy(t).sub(e).normalize(),hs.copy(this.origin).sub(Td);const s=e.distanceTo(t)*.5,a=-this.direction.dot(Ol),o=hs.dot(this.direction),c=-hs.dot(Ol),l=hs.lengthSq(),h=Math.abs(1-a*a);let u,d,f,p;if(h>0)if(u=a*c-o,d=a*o-c,p=s*h,u>=0)if(d>=-p)if(d<=p){const g=1/h;u*=g,d*=g,f=u*(u+a*d+2*o)+d*(a*u+d+2*c)+l}else d=s,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;else d=-s,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;else d<=-p?(u=Math.max(0,-(-a*s+o)),d=u>0?-s:Math.min(Math.max(-s,-c),s),f=-u*u+d*(d+2*c)+l):d<=p?(u=0,d=Math.min(Math.max(-s,-c),s),f=d*(d+2*c)+l):(u=Math.max(0,-(a*s+o)),d=u>0?s:Math.min(Math.max(-s,-c),s),f=-u*u+d*(d+2*c)+l);else d=a>0?-s:s,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(Td).addScaledVector(Ol,d),f}intersectSphere(e,t){Rr.subVectors(e.center,this.origin);const n=Rr.dot(this.direction),i=Rr.dot(Rr)-n*n,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),o=n-a,c=n+a;return c<0?null:o<0?this.at(c,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,a,o,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),h>=0?(s=(e.min.y-d.y)*h,a=(e.max.y-d.y)*h):(s=(e.max.y-d.y)*h,a=(e.min.y-d.y)*h),n>a||s>i||((s>n||isNaN(n))&&(n=s),(a<i||isNaN(i))&&(i=a),u>=0?(o=(e.min.z-d.z)*u,c=(e.max.z-d.z)*u):(o=(e.max.z-d.z)*u,c=(e.min.z-d.z)*u),n>c||o>i)||((o>n||n!==n)&&(n=o),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Rr)!==null}intersectTriangle(e,t,n,i,s){Ed.subVectors(t,e),Ul.subVectors(n,e),Cd.crossVectors(Ed,Ul);let a=this.direction.dot(Cd),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;hs.subVectors(this.origin,e);const c=o*this.direction.dot(Ul.crossVectors(hs,Ul));if(c<0)return null;const l=o*this.direction.dot(Ed.cross(hs));if(l<0||c+l>a)return null;const h=-o*hs.dot(Cd);return h<0?null:this.at(h/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},bn=class zp{constructor(e,t,n,i,s,a,o,c,l,h,u,d,f,p,g,_){zp.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,o,c,l,h,u,d,f,p,g,_)}set(e,t,n,i,s,a,o,c,l,h,u,d,f,p,g,_){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=i,m[1]=s,m[5]=a,m[9]=o,m[13]=c,m[2]=l,m[6]=h,m[10]=u,m[14]=d,m[3]=f,m[7]=p,m[11]=g,m[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new zp().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ia.setFromMatrixColumn(e,0).length(),s=1/Ia.setFromMatrixColumn(e,1).length(),a=1/Ia.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,a=Math.cos(n),o=Math.sin(n),c=Math.cos(i),l=Math.sin(i),h=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const d=a*h,f=a*u,p=o*h,g=o*u;t[0]=c*h,t[4]=-c*u,t[8]=l,t[1]=f+p*l,t[5]=d-g*l,t[9]=-o*c,t[2]=g-d*l,t[6]=p+f*l,t[10]=a*c}else if(e.order==="YXZ"){const d=c*h,f=c*u,p=l*h,g=l*u;t[0]=d+g*o,t[4]=p*o-f,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-o,t[2]=f*o-p,t[6]=g+d*o,t[10]=a*c}else if(e.order==="ZXY"){const d=c*h,f=c*u,p=l*h,g=l*u;t[0]=d-g*o,t[4]=-a*u,t[8]=p+f*o,t[1]=f+p*o,t[5]=a*h,t[9]=g-d*o,t[2]=-a*l,t[6]=o,t[10]=a*c}else if(e.order==="ZYX"){const d=a*h,f=a*u,p=o*h,g=o*u;t[0]=c*h,t[4]=p*l-f,t[8]=d*l+g,t[1]=c*u,t[5]=g*l+d,t[9]=f*l-p,t[2]=-l,t[6]=o*c,t[10]=a*c}else if(e.order==="YZX"){const d=a*c,f=a*l,p=o*c,g=o*l;t[0]=c*h,t[4]=g-d*u,t[8]=p*u+f,t[1]=u,t[5]=a*h,t[9]=-o*h,t[2]=-l*h,t[6]=f*u+p,t[10]=d-g*u}else if(e.order==="XZY"){const d=a*c,f=a*l,p=o*c,g=o*l;t[0]=c*h,t[4]=-u,t[8]=l*h,t[1]=d*u+g,t[5]=a*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=o*h,t[10]=g*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(s1,e,a1)}lookAt(e,t,n){const i=this.elements;return Si.subVectors(e,t),Si.lengthSq()===0&&(Si.z=1),Si.normalize(),us.crossVectors(n,Si),us.lengthSq()===0&&(Math.abs(n.z)===1?Si.x+=1e-4:Si.z+=1e-4,Si.normalize(),us.crossVectors(n,Si)),us.normalize(),Bl.crossVectors(Si,us),i[0]=us.x,i[4]=Bl.x,i[8]=Si.x,i[1]=us.y,i[5]=Bl.y,i[9]=Si.y,i[2]=us.z,i[6]=Bl.z,i[10]=Si.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],o=n[4],c=n[8],l=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],g=n[6],_=n[10],m=n[14],v=n[3],y=n[7],x=n[11],w=n[15],E=i[0],M=i[4],A=i[8],T=i[12],S=i[1],b=i[5],U=i[9],L=i[13],N=i[2],k=i[6],B=i[10],z=i[14],H=i[3],ee=i[7],de=i[11],ce=i[15];return s[0]=a*E+o*S+c*N+l*H,s[4]=a*M+o*b+c*k+l*ee,s[8]=a*A+o*U+c*B+l*de,s[12]=a*T+o*L+c*z+l*ce,s[1]=h*E+u*S+d*N+f*H,s[5]=h*M+u*b+d*k+f*ee,s[9]=h*A+u*U+d*B+f*de,s[13]=h*T+u*L+d*z+f*ce,s[2]=p*E+g*S+_*N+m*H,s[6]=p*M+g*b+_*k+m*ee,s[10]=p*A+g*U+_*B+m*de,s[14]=p*T+g*L+_*z+m*ce,s[3]=v*E+y*S+x*N+w*H,s[7]=v*M+y*b+x*k+w*ee,s[11]=v*A+y*U+x*B+w*de,s[15]=v*T+y*L+x*z+w*ce,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],a=e[1],o=e[5],c=e[9],l=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],g=e[7],_=e[11],m=e[15];return p*(+s*c*u-i*l*u-s*o*d+n*l*d+i*o*f-n*c*f)+g*(+t*c*f-t*l*d+s*a*d-i*a*f+i*l*h-s*c*h)+_*(+t*l*u-t*o*f-s*a*u+n*a*f+s*o*h-n*l*h)+m*(-i*o*h-t*c*u+t*o*d+i*a*u-n*a*d+n*c*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],g=e[13],_=e[14],m=e[15],v=u*_*l-g*d*l+g*c*f-o*_*f-u*c*m+o*d*m,y=p*d*l-h*_*l-p*c*f+a*_*f+h*c*m-a*d*m,x=h*g*l-p*u*l+p*o*f-a*g*f-h*o*m+a*u*m,w=p*u*c-h*g*c-p*o*d+a*g*d+h*o*_-a*u*_,E=t*v+n*y+i*x+s*w;if(E===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/E;return e[0]=v*M,e[1]=(g*d*s-u*_*s-g*i*f+n*_*f+u*i*m-n*d*m)*M,e[2]=(o*_*s-g*c*s+g*i*l-n*_*l-o*i*m+n*c*m)*M,e[3]=(u*c*s-o*d*s-u*i*l+n*d*l+o*i*f-n*c*f)*M,e[4]=y*M,e[5]=(h*_*s-p*d*s+p*i*f-t*_*f-h*i*m+t*d*m)*M,e[6]=(p*c*s-a*_*s-p*i*l+t*_*l+a*i*m-t*c*m)*M,e[7]=(a*d*s-h*c*s+h*i*l-t*d*l-a*i*f+t*c*f)*M,e[8]=x*M,e[9]=(p*u*s-h*g*s-p*n*f+t*g*f+h*n*m-t*u*m)*M,e[10]=(a*g*s-p*o*s+p*n*l-t*g*l-a*n*m+t*o*m)*M,e[11]=(h*o*s-a*u*s-h*n*l+t*u*l+a*n*f-t*o*f)*M,e[12]=w*M,e[13]=(h*g*i-p*u*i+p*n*d-t*g*d-h*n*_+t*u*_)*M,e[14]=(p*o*i-a*g*i-p*n*c+t*g*c+a*n*_-t*o*_)*M,e[15]=(a*u*i-h*o*i+h*n*c-t*u*c-a*n*d+t*o*d)*M,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,a=e.x,o=e.y,c=e.z,l=s*a,h=s*o;return this.set(l*a+n,l*o-i*c,l*c+i*o,0,l*o+i*c,h*o+n,h*c-i*a,0,l*c-i*o,h*c+i*a,s*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,a){return this.set(1,n,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,a=t._y,o=t._z,c=t._w,l=s+s,h=a+a,u=o+o,d=s*l,f=s*h,p=s*u,g=a*h,_=a*u,m=o*u,v=c*l,y=c*h,x=c*u,w=n.x,E=n.y,M=n.z;return i[0]=(1-(g+m))*w,i[1]=(f+x)*w,i[2]=(p-y)*w,i[3]=0,i[4]=(f-x)*E,i[5]=(1-(d+m))*E,i[6]=(_+v)*E,i[7]=0,i[8]=(p+y)*M,i[9]=(_-v)*M,i[10]=(1-(d+g))*M,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ia.set(i[0],i[1],i[2]).length();const a=Ia.set(i[4],i[5],i[6]).length(),o=Ia.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Ji.copy(this);const l=1/s,h=1/a,u=1/o;return Ji.elements[0]*=l,Ji.elements[1]*=l,Ji.elements[2]*=l,Ji.elements[4]*=h,Ji.elements[5]*=h,Ji.elements[6]*=h,Ji.elements[8]*=u,Ji.elements[9]*=u,Ji.elements[10]*=u,t.setFromRotationMatrix(Ji),n.x=s,n.y=a,n.z=o,this}makePerspective(e,t,n,i,s,a,o=Xr){const c=this.elements,l=2*s/(t-e),h=2*s/(n-i),u=(t+e)/(t-e),d=(n+i)/(n-i);let f,p;if(o===Xr)f=-(a+s)/(a-s),p=-2*a*s/(a-s);else if(o===vu)f=-a/(a-s),p=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return c[0]=l,c[4]=0,c[8]=u,c[12]=0,c[1]=0,c[5]=h,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=p,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,i,s,a,o=Xr){const c=this.elements,l=1/(t-e),h=1/(n-i),u=1/(a-s),d=(t+e)*l,f=(n+i)*h;let p,g;if(o===Xr)p=(a+s)*u,g=-2*u;else if(o===vu)p=s*u,g=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=g,c[14]=-p,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}};const Ia=new te,Ji=new bn,s1=new te(0,0,0),a1=new te(1,1,1),us=new te,Bl=new te,Si=new te,Yg=new bn,Zg=new dl;let Us=class _y{constructor(e=0,t=0,n=0,i=_y.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],a=i[4],o=i[8],c=i[1],l=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(Pt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Pt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(Pt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-Pt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(Pt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-Pt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Yg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Yg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Zg.setFromEuler(this),this.setFromQuaternion(Zg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Us.DEFAULT_ORDER="XYZ";let vy=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},o1=0;const Kg=new te,La=new dl,Pr=new bn,$l=new te,rc=new te,c1=new te,l1=new dl,Jg=new te(1,0,0),Qg=new te(0,1,0),e_=new te(0,0,1),t_={type:"added"},h1={type:"removed"},Da={type:"childadded",child:null},Ad={type:"childremoved",child:null};let bi=class au extends Ho{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:o1++}),this.uuid=ul(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=au.DEFAULT_UP.clone();const e=new te,t=new Us,n=new dl,i=new te(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new bn},normalMatrix:{value:new Mt}}),this.matrix=new bn,this.matrixWorld=new bn,this.matrixAutoUpdate=au.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=au.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new vy,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return La.setFromAxisAngle(e,t),this.quaternion.multiply(La),this}rotateOnWorldAxis(e,t){return La.setFromAxisAngle(e,t),this.quaternion.premultiply(La),this}rotateX(e){return this.rotateOnAxis(Jg,e)}rotateY(e){return this.rotateOnAxis(Qg,e)}rotateZ(e){return this.rotateOnAxis(e_,e)}translateOnAxis(e,t){return Kg.copy(e).applyQuaternion(this.quaternion),this.position.add(Kg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Jg,e)}translateY(e){return this.translateOnAxis(Qg,e)}translateZ(e){return this.translateOnAxis(e_,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Pr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?$l.copy(e):$l.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),rc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Pr.lookAt(rc,$l,this.up):Pr.lookAt($l,rc,this.up),this.quaternion.setFromRotationMatrix(Pr),i&&(Pr.extractRotation(i.matrixWorld),La.setFromRotationMatrix(Pr),this.quaternion.premultiply(La.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(t_),Da.child=e,this.dispatchEvent(Da),Da.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(h1),Ad.child=e,this.dispatchEvent(Ad),Ad.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Pr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Pr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Pr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(t_),Da.child=e,this.dispatchEvent(Da),Da.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rc,e,c1),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rc,l1,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];s(e.shapes,u)}else s(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(s(e.materials,this.material[c]));i.material=o}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];i.animations.push(s(e.animations,c))}}if(t){const o=a(e.geometries),c=a(e.materials),l=a(e.textures),h=a(e.images),u=a(e.shapes),d=a(e.skeletons),f=a(e.animations),p=a(e.nodes);o.length>0&&(n.geometries=o),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function a(o){const c=[];for(const l in o){const h=o[l];delete h.metadata,c.push(h)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}};bi.DEFAULT_UP=new te(0,1,0);bi.DEFAULT_MATRIX_AUTO_UPDATE=!0;bi.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Qi=new te,Ir=new te,Rd=new te,Lr=new te,Fa=new te,Na=new te,n_=new te,Pd=new te,Id=new te,Ld=new te,Dd=new En,Fd=new En,Nd=new En;let sc=class ho{constructor(e=new te,t=new te,n=new te){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Qi.subVectors(e,t),i.cross(Qi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Qi.subVectors(i,t),Ir.subVectors(n,t),Rd.subVectors(e,t);const a=Qi.dot(Qi),o=Qi.dot(Ir),c=Qi.dot(Rd),l=Ir.dot(Ir),h=Ir.dot(Rd),u=a*l-o*o;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(l*c-o*h)*d,p=(a*h-o*c)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Lr)===null?!1:Lr.x>=0&&Lr.y>=0&&Lr.x+Lr.y<=1}static getInterpolation(e,t,n,i,s,a,o,c){return this.getBarycoord(e,t,n,i,Lr)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(s,Lr.x),c.addScaledVector(a,Lr.y),c.addScaledVector(o,Lr.z),c)}static getInterpolatedAttribute(e,t,n,i,s,a){return Dd.setScalar(0),Fd.setScalar(0),Nd.setScalar(0),Dd.fromBufferAttribute(e,t),Fd.fromBufferAttribute(e,n),Nd.fromBufferAttribute(e,i),a.setScalar(0),a.addScaledVector(Dd,s.x),a.addScaledVector(Fd,s.y),a.addScaledVector(Nd,s.z),a}static isFrontFacing(e,t,n,i){return Qi.subVectors(n,t),Ir.subVectors(e,t),Qi.cross(Ir).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Qi.subVectors(this.c,this.b),Ir.subVectors(this.a,this.b),Qi.cross(Ir).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ho.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ho.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return ho.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return ho.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ho.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let a,o;Fa.subVectors(i,n),Na.subVectors(s,n),Pd.subVectors(e,n);const c=Fa.dot(Pd),l=Na.dot(Pd);if(c<=0&&l<=0)return t.copy(n);Id.subVectors(e,i);const h=Fa.dot(Id),u=Na.dot(Id);if(h>=0&&u<=h)return t.copy(i);const d=c*u-h*l;if(d<=0&&c>=0&&h<=0)return a=c/(c-h),t.copy(n).addScaledVector(Fa,a);Ld.subVectors(e,s);const f=Fa.dot(Ld),p=Na.dot(Ld);if(p>=0&&f<=p)return t.copy(s);const g=f*l-c*p;if(g<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(n).addScaledVector(Na,o);const _=h*p-f*u;if(_<=0&&u-h>=0&&f-p>=0)return n_.subVectors(s,i),o=(u-h)/(u-h+(f-p)),t.copy(i).addScaledVector(n_,o);const m=1/(_+g+d);return a=g*m,o=d*m,t.copy(n).addScaledVector(Fa,a).addScaledVector(Na,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const xy={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ds={h:0,s:0,l:0},kl={h:0,s:0,l:0};function Od(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}let wt=class{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=kn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Rt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Rt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Rt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Rt.workingColorSpace){if(e=jw(e,1),t=Pt(t,0,1),n=Pt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,a=2*n-s;this.r=Od(a,s,e+1/3),this.g=Od(a,s,e),this.b=Od(a,s,e-1/3)}return Rt.toWorkingColorSpace(this,i),this}setStyle(e,t=kn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=kn){const n=xy[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Yr(e.r),this.g=Yr(e.g),this.b=Yr(e.b),this}copyLinearToSRGB(e){return this.r=Mo(e.r),this.g=Mo(e.g),this.b=Mo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=kn){return Rt.fromWorkingColorSpace(jn.copy(this),e),Math.round(Pt(jn.r*255,0,255))*65536+Math.round(Pt(jn.g*255,0,255))*256+Math.round(Pt(jn.b*255,0,255))}getHexString(e=kn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Rt.workingColorSpace){Rt.fromWorkingColorSpace(jn.copy(this),t);const n=jn.r,i=jn.g,s=jn.b,a=Math.max(n,i,s),o=Math.min(n,i,s);let c,l;const h=(o+a)/2;if(o===a)c=0,l=0;else{const u=a-o;switch(l=h<=.5?u/(a+o):u/(2-a-o),a){case n:c=(i-s)/u+(i<s?6:0);break;case i:c=(s-n)/u+2;break;case s:c=(n-i)/u+4;break}c/=6}return e.h=c,e.s=l,e.l=h,e}getRGB(e,t=Rt.workingColorSpace){return Rt.fromWorkingColorSpace(jn.copy(this),t),e.r=jn.r,e.g=jn.g,e.b=jn.b,e}getStyle(e=kn){Rt.fromWorkingColorSpace(jn.copy(this),e);const t=jn.r,n=jn.g,i=jn.b;return e!==kn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(ds),this.setHSL(ds.h+e,ds.s+t,ds.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ds),e.getHSL(kl);const n=xd(ds.h,kl.h,t),i=xd(ds.s,kl.s,t),s=xd(ds.l,kl.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const jn=new wt;wt.NAMES=xy;let u1=0,ns=class extends Ho{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:u1++}),this.uuid=ul(),this.name="",this.type="Material",this.blending=bo,this.side=es,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=np,this.blendDst=ip,this.blendEquation=oa,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new wt(0,0,0),this.blendAlpha=0,this.depthFunc=Ao,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Vg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ea,this.stencilZFail=Ea,this.stencilZPass=Ea,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==bo&&(n.blending=this.blending),this.side!==es&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==np&&(n.blendSrc=this.blendSrc),this.blendDst!==ip&&(n.blendDst=this.blendDst),this.blendEquation!==oa&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Ao&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Vg&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ea&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ea&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ea&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const a=[];for(const o in s){const c=s[o];delete c.metadata,a.push(c)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},ws=class extends ns{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new wt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Us,this.combine=Cm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const wn=new te,zl=new jt;let d1=0,xr=class{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:d1++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Hg,this.updateRanges=[],this.gpuType=jr,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)zl.fromBufferAttribute(this,t),zl.applyMatrix3(e),this.setXY(t,zl.x,zl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyMatrix3(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyMatrix4(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyNormalMatrix(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.transformDirection(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=tc(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=mi(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=tc(t,this.array)),t}setX(e,t){return this.normalized&&(t=mi(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=tc(t,this.array)),t}setY(e,t){return this.normalized&&(t=mi(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=tc(t,this.array)),t}setZ(e,t){return this.normalized&&(t=mi(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=tc(t,this.array)),t}setW(e,t){return this.normalized&&(t=mi(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=mi(t,this.array),n=mi(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=mi(t,this.array),n=mi(n,this.array),i=mi(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=mi(t,this.array),n=mi(n,this.array),i=mi(i,this.array),s=mi(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Hg&&(e.usage=this.usage),e}},yy=class extends xr{constructor(e,t,n){super(new Uint16Array(e),t,n)}},by=class extends xr{constructor(e,t,n){super(new Uint32Array(e),t,n)}},ci=class extends xr{constructor(e,t,n){super(new Float32Array(e),t,n)}},f1=0;const Oi=new bn,Ud=new bi,Oa=new te,wi=new fl,ac=new fl,Nn=new te;let is=class My extends Ho{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:f1++}),this.uuid=ul(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(fy(e)?by:yy)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Mt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Oi.makeRotationFromQuaternion(e),this.applyMatrix4(Oi),this}rotateX(e){return Oi.makeRotationX(e),this.applyMatrix4(Oi),this}rotateY(e){return Oi.makeRotationY(e),this.applyMatrix4(Oi),this}rotateZ(e){return Oi.makeRotationZ(e),this.applyMatrix4(Oi),this}translate(e,t,n){return Oi.makeTranslation(e,t,n),this.applyMatrix4(Oi),this}scale(e,t,n){return Oi.makeScale(e,t,n),this.applyMatrix4(Oi),this}lookAt(e){return Ud.lookAt(e),Ud.updateMatrix(),this.applyMatrix4(Ud.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Oa).negate(),this.translate(Oa.x,Oa.y,Oa.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,s=e.length;i<s;i++){const a=e[i];n.push(a.x,a.y,a.z||0)}this.setAttribute("position",new ci(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const s=e[i];t.setXYZ(i,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new fl);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new te(-1/0,-1/0,-1/0),new te(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];wi.setFromBufferAttribute(s),this.morphTargetsRelative?(Nn.addVectors(this.boundingBox.min,wi.min),this.boundingBox.expandByPoint(Nn),Nn.addVectors(this.boundingBox.max,wi.max),this.boundingBox.expandByPoint(Nn)):(this.boundingBox.expandByPoint(wi.min),this.boundingBox.expandByPoint(wi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new pl);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new te,1/0);return}if(e){const n=this.boundingSphere.center;if(wi.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];ac.setFromBufferAttribute(o),this.morphTargetsRelative?(Nn.addVectors(wi.min,ac.min),wi.expandByPoint(Nn),Nn.addVectors(wi.max,ac.max),wi.expandByPoint(Nn)):(wi.expandByPoint(ac.min),wi.expandByPoint(ac.max))}wi.getCenter(n);let i=0;for(let s=0,a=e.count;s<a;s++)Nn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Nn));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],c=this.morphTargetsRelative;for(let l=0,h=o.count;l<h;l++)Nn.fromBufferAttribute(o,l),c&&(Oa.fromBufferAttribute(e,l),Nn.add(Oa)),i=Math.max(i,n.distanceToSquared(Nn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new xr(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),o=[],c=[];for(let A=0;A<n.count;A++)o[A]=new te,c[A]=new te;const l=new te,h=new te,u=new te,d=new jt,f=new jt,p=new jt,g=new te,_=new te;function m(A,T,S){l.fromBufferAttribute(n,A),h.fromBufferAttribute(n,T),u.fromBufferAttribute(n,S),d.fromBufferAttribute(s,A),f.fromBufferAttribute(s,T),p.fromBufferAttribute(s,S),h.sub(l),u.sub(l),f.sub(d),p.sub(d);const b=1/(f.x*p.y-p.x*f.y);isFinite(b)&&(g.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(b),_.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(b),o[A].add(g),o[T].add(g),o[S].add(g),c[A].add(_),c[T].add(_),c[S].add(_))}let v=this.groups;v.length===0&&(v=[{start:0,count:e.count}]);for(let A=0,T=v.length;A<T;++A){const S=v[A],b=S.start,U=S.count;for(let L=b,N=b+U;L<N;L+=3)m(e.getX(L+0),e.getX(L+1),e.getX(L+2))}const y=new te,x=new te,w=new te,E=new te;function M(A){w.fromBufferAttribute(i,A),E.copy(w);const T=o[A];y.copy(T),y.sub(w.multiplyScalar(w.dot(T))).normalize(),x.crossVectors(E,T);const b=x.dot(c[A])<0?-1:1;a.setXYZW(A,y.x,y.y,y.z,b)}for(let A=0,T=v.length;A<T;++A){const S=v[A],b=S.start,U=S.count;for(let L=b,N=b+U;L<N;L+=3)M(e.getX(L+0)),M(e.getX(L+1)),M(e.getX(L+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new xr(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new te,s=new te,a=new te,o=new te,c=new te,l=new te,h=new te,u=new te;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),g=e.getX(d+1),_=e.getX(d+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,g),a.fromBufferAttribute(t,_),h.subVectors(a,s),u.subVectors(i,s),h.cross(u),o.fromBufferAttribute(n,p),c.fromBufferAttribute(n,g),l.fromBufferAttribute(n,_),o.add(h),c.add(h),l.add(h),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(g,c.x,c.y,c.z),n.setXYZ(_,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),h.subVectors(a,s),u.subVectors(i,s),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Nn.fromBufferAttribute(e,t),Nn.normalize(),e.setXYZ(t,Nn.x,Nn.y,Nn.z)}toNonIndexed(){function e(o,c){const l=o.array,h=o.itemSize,u=o.normalized,d=new l.constructor(c.length*h);let f=0,p=0;for(let g=0,_=c.length;g<_;g++){o.isInterleavedBufferAttribute?f=c[g]*o.data.stride+o.offset:f=c[g]*h;for(let m=0;m<h;m++)d[p++]=l[f++]}return new xr(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new My,n=this.index.array,i=this.attributes;for(const o in i){const c=i[o],l=e(c,n);t.setAttribute(o,l)}const s=this.morphAttributes;for(const o in s){const c=[],l=s[o];for(let h=0,u=l.length;h<u;h++){const d=l[h],f=e(d,n);c.push(f)}t.morphAttributes[o]=c}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const l=a[o];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let s=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];h.push(f.toJSON(e.data))}h.length>0&&(i[c]=h,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const i=e.attributes;for(const l in i){const h=i[l];this.setAttribute(l,h.clone(t))}const s=e.morphAttributes;for(const l in s){const h=[],u=s[l];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[l]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let l=0,h=a.length;l<h;l++){const u=a[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const i_=new bn,Ks=new Nm,Vl=new pl,r_=new te,Hl=new te,Gl=new te,Wl=new te,Bd=new te,ql=new te,s_=new te,jl=new te;let Vi=class extends bi{constructor(e=new is,t=new ws){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(s&&o){ql.set(0,0,0);for(let c=0,l=s.length;c<l;c++){const h=o[c],u=s[c];h!==0&&(Bd.fromBufferAttribute(u,e),a?ql.addScaledVector(Bd,h):ql.addScaledVector(Bd.sub(t),h))}t.add(ql)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Vl.copy(n.boundingSphere),Vl.applyMatrix4(s),Ks.copy(e.ray).recast(e.near),!(Vl.containsPoint(Ks.origin)===!1&&(Ks.intersectSphere(Vl,r_)===null||Ks.origin.distanceToSquared(r_)>(e.far-e.near)**2))&&(i_.copy(s).invert(),Ks.copy(e.ray).applyMatrix4(i_),!(n.boundingBox!==null&&Ks.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Ks)))}_computeIntersections(e,t,n){let i;const s=this.geometry,a=this.material,o=s.index,c=s.attributes.position,l=s.attributes.uv,h=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(o!==null)if(Array.isArray(a))for(let p=0,g=d.length;p<g;p++){const _=d[p],m=a[_.materialIndex],v=Math.max(_.start,f.start),y=Math.min(o.count,Math.min(_.start+_.count,f.start+f.count));for(let x=v,w=y;x<w;x+=3){const E=o.getX(x),M=o.getX(x+1),A=o.getX(x+2);i=Xl(this,m,e,n,l,h,u,E,M,A),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=_.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),g=Math.min(o.count,f.start+f.count);for(let _=p,m=g;_<m;_+=3){const v=o.getX(_),y=o.getX(_+1),x=o.getX(_+2);i=Xl(this,a,e,n,l,h,u,v,y,x),i&&(i.faceIndex=Math.floor(_/3),t.push(i))}}else if(c!==void 0)if(Array.isArray(a))for(let p=0,g=d.length;p<g;p++){const _=d[p],m=a[_.materialIndex],v=Math.max(_.start,f.start),y=Math.min(c.count,Math.min(_.start+_.count,f.start+f.count));for(let x=v,w=y;x<w;x+=3){const E=x,M=x+1,A=x+2;i=Xl(this,m,e,n,l,h,u,E,M,A),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=_.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),g=Math.min(c.count,f.start+f.count);for(let _=p,m=g;_<m;_+=3){const v=_,y=_+1,x=_+2;i=Xl(this,a,e,n,l,h,u,v,y,x),i&&(i.faceIndex=Math.floor(_/3),t.push(i))}}}};function p1(r,e,t,n,i,s,a,o){let c;if(e.side===yi?c=n.intersectTriangle(a,s,i,!0,o):c=n.intersectTriangle(i,s,a,e.side===es,o),c===null)return null;jl.copy(o),jl.applyMatrix4(r.matrixWorld);const l=t.ray.origin.distanceTo(jl);return l<t.near||l>t.far?null:{distance:l,point:jl.clone(),object:r}}function Xl(r,e,t,n,i,s,a,o,c,l){r.getVertexPosition(o,Hl),r.getVertexPosition(c,Gl),r.getVertexPosition(l,Wl);const h=p1(r,e,t,n,Hl,Gl,Wl,s_);if(h){const u=new te;sc.getBarycoord(s_,Hl,Gl,Wl,u),i&&(h.uv=sc.getInterpolatedAttribute(i,o,c,l,u,new jt)),s&&(h.uv1=sc.getInterpolatedAttribute(s,o,c,l,u,new jt)),a&&(h.normal=sc.getInterpolatedAttribute(a,o,c,l,u,new te),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a:o,b:c,c:l,normal:new te,materialIndex:0};sc.getNormal(Hl,Gl,Wl,d.normal),h.face=d,h.barycoord=u}return h}let Gu=class Sy extends is{constructor(e=1,t=1,n=1,i=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:a};const o=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const c=[],l=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,a,s,0),p("z","y","x",1,-1,n,t,-e,a,s,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(c),this.setAttribute("position",new ci(l,3)),this.setAttribute("normal",new ci(h,3)),this.setAttribute("uv",new ci(u,2));function p(g,_,m,v,y,x,w,E,M,A,T){const S=x/M,b=w/A,U=x/2,L=w/2,N=E/2,k=M+1,B=A+1;let z=0,H=0;const ee=new te;for(let de=0;de<B;de++){const ce=de*b-L;for(let Ce=0;Ce<k;Ce++){const me=Ce*S-U;ee[g]=me*v,ee[_]=ce*y,ee[m]=N,l.push(ee.x,ee.y,ee.z),ee[g]=0,ee[_]=0,ee[m]=E>0?1:-1,h.push(ee.x,ee.y,ee.z),u.push(Ce/M),u.push(1-de/A),z+=1}}for(let de=0;de<A;de++)for(let ce=0;ce<M;ce++){const Ce=d+ce+k*de,me=d+ce+k*(de+1),j=d+(ce+1)+k*(de+1),pe=d+(ce+1)+k*de;c.push(Ce,me,pe),c.push(me,j,pe),H+=6}o.addGroup(f,H,T),f+=H,d+=z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Sy(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function Lo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function ri(r){const e={};for(let t=0;t<r.length;t++){const n=Lo(r[t]);for(const i in n)e[i]=n[i]}return e}function m1(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function wy(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Rt.workingColorSpace}const g1={clone:Lo,merge:ri};var _1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,v1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let Bs=class extends ns{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=_1,this.fragmentShader=v1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Lo(e.uniforms),this.uniformsGroups=m1(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}},Om=class extends bi{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new bn,this.projectionMatrix=new bn,this.projectionMatrixInverse=new bn,this.coordinateSystem=Xr}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const fs=new te,a_=new jt,o_=new jt;let rr=class extends Om{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=kp*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(vd*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return kp*2*Math.atan(Math.tan(vd*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){fs.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(fs.x,fs.y).multiplyScalar(-e/fs.z),fs.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(fs.x,fs.y).multiplyScalar(-e/fs.z)}getViewSize(e,t){return this.getViewBounds(e,a_,o_),t.subVectors(o_,a_)}setViewOffset(e,t,n,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(vd*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,l=a.fullHeight;s+=a.offsetX*i/c,t-=a.offsetY*n/l,i*=a.width/c,n*=a.height/l}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const Ua=-90,Ba=1;let x1=class extends bi{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new rr(Ua,Ba,e,t);i.layers=this.layers,this.add(i);const s=new rr(Ua,Ba,e,t);s.layers=this.layers,this.add(s);const a=new rr(Ua,Ba,e,t);a.layers=this.layers,this.add(a);const o=new rr(Ua,Ba,e,t);o.layers=this.layers,this.add(o);const c=new rr(Ua,Ba,e,t);c.layers=this.layers,this.add(c);const l=new rr(Ua,Ba,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,a,o,c]=t;for(const l of t)this.remove(l);if(e===Xr)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===vu)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,o,c,l,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,o),e.setRenderTarget(n,3,i),e.render(t,c),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=g,e.setRenderTarget(n,5,i),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}},Ty=class extends hr{constructor(e=[],t=Ro,n,i,s,a,o,c,l,h){super(e,t,n,i,s,a,o,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},y1=class extends ma{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Ty(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:vr}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Gu(5,5,5),s=new Bs({name:"CubemapFromEquirect",uniforms:Lo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:yi,blending:Ps});s.uniforms.tEquirect.value=t;const a=new Vi(i,s),o=t.minFilter;return t.minFilter===ha&&(t.minFilter=vr),new x1(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(s)}},yc=class extends bi{constructor(){super(),this.isGroup=!0,this.type="Group"}};const b1={type:"move"};let $d=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new yc,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new yc,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new te,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new te),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new yc,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new te,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new te),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,a=null;const o=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){a=!0;for(const g of e.hand.values()){const _=t.getJointPose(g,n),m=this._getHandJoint(l,g);_!==null&&(m.matrix.fromArray(_.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=_.radius),m.visible=_!==null}const h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;l.inputState.pinching&&d>f+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(c.matrix.fromArray(s.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,s.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(s.linearVelocity)):c.hasLinearVelocity=!1,s.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(s.angularVelocity)):c.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(b1)))}return o!==null&&(o.visible=i!==null),c!==null&&(c.visible=s!==null),l!==null&&(l.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new yc;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}},M1=class extends bi{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Us,this.environmentIntensity=1,this.environmentRotation=new Us,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};const kd=new te,S1=new te,w1=new Mt;let ra=class{constructor(e=new te(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=kd.subVectors(n,t).cross(S1.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(kd),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||w1.getNormalMatrix(e),i=this.coplanarPoint(kd).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Js=new pl,Yl=new te;let Um=class{constructor(e=new ra,t=new ra,n=new ra,i=new ra,s=new ra,a=new ra){this.planes=[e,t,n,i,s,a]}set(e,t,n,i,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Xr){const n=this.planes,i=e.elements,s=i[0],a=i[1],o=i[2],c=i[3],l=i[4],h=i[5],u=i[6],d=i[7],f=i[8],p=i[9],g=i[10],_=i[11],m=i[12],v=i[13],y=i[14],x=i[15];if(n[0].setComponents(c-s,d-l,_-f,x-m).normalize(),n[1].setComponents(c+s,d+l,_+f,x+m).normalize(),n[2].setComponents(c+a,d+h,_+p,x+v).normalize(),n[3].setComponents(c-a,d-h,_-p,x-v).normalize(),n[4].setComponents(c-o,d-u,_-g,x-y).normalize(),t===Xr)n[5].setComponents(c+o,d+u,_+g,x+y).normalize();else if(t===vu)n[5].setComponents(o,u,g,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Js.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Js.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Js)}intersectsSprite(e){return Js.center.set(0,0,0),Js.radius=.7071067811865476,Js.applyMatrix4(e.matrixWorld),this.intersectsSphere(Js)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Yl.x=i.normal.x>0?e.max.x:e.min.x,Yl.y=i.normal.y>0?e.max.y:e.min.y,Yl.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Yl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}},ou=class extends ns{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new wt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}};const xu=new te,yu=new te,c_=new bn,oc=new Nm,Zl=new pl,zd=new te,l_=new te;let T1=class extends bi{constructor(e=new is,t=new ou){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)xu.fromBufferAttribute(t,i-1),yu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=xu.distanceTo(yu);e.setAttribute("lineDistance",new ci(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Zl.copy(n.boundingSphere),Zl.applyMatrix4(i),Zl.radius+=s,e.ray.intersectsSphere(Zl)===!1)return;c_.copy(i).invert(),oc.copy(e.ray).applyMatrix4(c_);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=this.isLineSegments?2:1,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,a.start),p=Math.min(h.count,a.start+a.count);for(let g=f,_=p-1;g<_;g+=l){const m=h.getX(g),v=h.getX(g+1),y=Kl(this,e,oc,c,m,v,g);y&&t.push(y)}if(this.isLineLoop){const g=h.getX(p-1),_=h.getX(f),m=Kl(this,e,oc,c,g,_,p-1);m&&t.push(m)}}else{const f=Math.max(0,a.start),p=Math.min(d.count,a.start+a.count);for(let g=f,_=p-1;g<_;g+=l){const m=Kl(this,e,oc,c,g,g+1,g);m&&t.push(m)}if(this.isLineLoop){const g=Kl(this,e,oc,c,p-1,f,p-1);g&&t.push(g)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}};function Kl(r,e,t,n,i,s,a){const o=r.geometry.attributes.position;if(xu.fromBufferAttribute(o,i),yu.fromBufferAttribute(o,s),t.distanceSqToSegment(xu,yu,zd,l_)>n)return;zd.applyMatrix4(r.matrixWorld);const l=e.ray.origin.distanceTo(zd);if(!(l<e.near||l>e.far))return{distance:l,point:l_.clone().applyMatrix4(r.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:r}}const h_=new te,u_=new te;let d_=class extends T1{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)h_.fromBufferAttribute(t,i),u_.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+h_.distanceTo(u_);e.setAttribute("lineDistance",new ci(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}},bc=class extends ns{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new wt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}};const f_=new bn,Vp=new Nm,Jl=new pl,Ql=new te;let Vd=class extends bi{constructor(e=new is,t=new bc){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Jl.copy(n.boundingSphere),Jl.applyMatrix4(i),Jl.radius+=s,e.ray.intersectsSphere(Jl)===!1)return;f_.copy(i).invert(),Vp.copy(e.ray).applyMatrix4(f_);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=n.index,u=n.attributes.position;if(l!==null){const d=Math.max(0,a.start),f=Math.min(l.count,a.start+a.count);for(let p=d,g=f;p<g;p++){const _=l.getX(p);Ql.fromBufferAttribute(u,_),p_(Ql,_,c,i,e,t,this)}}else{const d=Math.max(0,a.start),f=Math.min(u.count,a.start+a.count);for(let p=d,g=f;p<g;p++)Ql.fromBufferAttribute(u,p),p_(Ql,p,c,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}};function p_(r,e,t,n,i,s,a){const o=Vp.distanceSqToPoint(r);if(o<t){const c=new te;Vp.closestPointToPoint(r,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:c,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}let Ey=class extends hr{constructor(e,t,n=pa,i,s,a,o=ar,c=ar,l,h=kc){if(h!==kc&&h!==zc)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,i,s,a,o,c,h,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Fm(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}},Cy=class Ay extends is{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,a=t/2,o=Math.floor(n),c=Math.floor(i),l=o+1,h=c+1,u=e/o,d=t/c,f=[],p=[],g=[],_=[];for(let m=0;m<h;m++){const v=m*d-a;for(let y=0;y<l;y++){const x=y*u-s;p.push(x,-v,0),g.push(0,0,1),_.push(y/o),_.push(1-m/c)}}for(let m=0;m<c;m++)for(let v=0;v<o;v++){const y=v+l*m,x=v+l*(m+1),w=v+1+l*(m+1),E=v+1+l*m;f.push(y,x,E),f.push(x,w,E)}this.setIndex(f),this.setAttribute("position",new ci(p,3)),this.setAttribute("normal",new ci(g,3)),this.setAttribute("uv",new ci(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ay(e.width,e.height,e.widthSegments,e.heightSegments)}},Ry=class extends ns{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new wt(16777215),this.specular=new wt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new wt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ly,this.normalScale=new jt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Us,this.combine=Cm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},E1=class extends ns{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Uw,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}},C1=class extends ns{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};const bu={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};let A1=class{constructor(e,t,n){const i=this;let s=!1,a=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){o++,s===!1&&i.onStart!==void 0&&i.onStart(h,a,o),s=!0},this.itemEnd=function(h){a++,i.onProgress!==void 0&&i.onProgress(h,a,o),a===o&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,u){return l.push(h,u),this},this.removeHandler=function(h){const u=l.indexOf(h);return u!==-1&&l.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=l.length;u<d;u+=2){const f=l[u],p=l[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}};const Py=new A1;let Go=class{constructor(e){this.manager=e!==void 0?e:Py,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}};Go.DEFAULT_MATERIAL_NAME="__DEFAULT";const Dr={};class R1 extends Error{constructor(e,t){super(e),this.response=t}}let Iy=class extends Go{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=bu.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Dr[e]!==void 0){Dr[e].push({onLoad:t,onProgress:n,onError:i});return}Dr[e]=[],Dr[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,c=this.responseType;fetch(a).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const h=Dr[e],u=l.body.getReader(),d=l.headers.get("X-File-Size")||l.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let g=0;const _=new ReadableStream({start(m){v();function v(){u.read().then(({done:y,value:x})=>{if(y)m.close();else{g+=x.byteLength;const w=new ProgressEvent("progress",{lengthComputable:p,loaded:g,total:f});for(let E=0,M=h.length;E<M;E++){const A=h[E];A.onProgress&&A.onProgress(w)}m.enqueue(x),v()}},y=>{m.error(y)})}}});return new Response(_)}else throw new R1(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return l.json();default:if(o==="")return l.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return l.arrayBuffer().then(p=>f.decode(p))}}}).then(l=>{bu.add(e,l);const h=Dr[e];delete Dr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(l)}}).catch(l=>{const h=Dr[e];if(h===void 0)throw this.manager.itemError(e),l;delete Dr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}},P1=class extends Go{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=bu.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o=Vc("img");function c(){h(),bu.add(e,this),t&&t(this),s.manager.itemEnd(e)}function l(u){h(),i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){o.removeEventListener("load",c,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}},I1=class extends Go{constructor(e){super(e)}load(e,t,n,i){const s=new hr,a=new P1(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}},Ly=class extends bi{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new wt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}};const Hd=new bn,m_=new te,g_=new te;let L1=class{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new jt(512,512),this.map=null,this.mapPass=null,this.matrix=new bn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Um,this._frameExtents=new jt(1,1),this._viewportCount=1,this._viewports=[new En(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;m_.setFromMatrixPosition(e.matrixWorld),t.position.copy(m_),g_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(g_),t.updateMatrixWorld(),Hd.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Hd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Hd)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}},Dy=class extends Om{constructor(e=-1,t=1,n=1,i=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,a=n+e,o=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=l*this.view.offsetX,a=s+l*this.view.width,o-=h*this.view.offsetY,c=o-h*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}},D1=class extends L1{constructor(){super(new Dy(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}},F1=class extends Ly{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(bi.DEFAULT_UP),this.updateMatrix(),this.target=new bi,this.shadow=new D1}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},N1=class extends Ly{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}},O1=class{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}},U1=class extends rr{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}};function __(r,e,t,n){const i=B1(n);switch(t){case ny:return r*e;case ry:return r*e;case sy:return r*e*2;case ay:return r*e/i.components*i.byteLength;case Im:return r*e/i.components*i.byteLength;case oy:return r*e*2/i.components*i.byteLength;case Lm:return r*e*2/i.components*i.byteLength;case iy:return r*e*3/i.components*i.byteLength;case sr:return r*e*4/i.components*i.byteLength;case Dm:return r*e*4/i.components*i.byteLength;case Qh:case eu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case tu:case nu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case mp:case _p:return Math.max(r,16)*Math.max(e,8)/4;case pp:case gp:return Math.max(r,8)*Math.max(e,8)/2;case vp:case xp:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case yp:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case bp:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Mp:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case Sp:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case wp:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case Tp:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case Ep:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Cp:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Ap:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case Rp:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case Pp:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case Ip:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case Lp:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Dp:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case Fp:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case iu:case Np:case Op:return Math.ceil(r/4)*Math.ceil(e/4)*16;case cy:case Up:return Math.ceil(r/4)*Math.ceil(e/4)*8;case Bp:case $p:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function B1(r){switch(r){case ts:case Qx:return{byteLength:1,components:1};case Bc:case ey:case hl:return{byteLength:2,components:1};case Rm:case Pm:return{byteLength:2,components:4};case pa:case Am:case jr:return{byteLength:4,components:1};case ty:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Em}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Em);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Fy(){let r=null,e=!1,t=null,n=null;function i(s,a){t(s,a),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function $1(r){const e=new WeakMap;function t(o,c){const l=o.array,h=o.usage,u=l.byteLength,d=r.createBuffer();r.bindBuffer(c,d),r.bufferData(c,l,h),o.onUploadCallback();let f;if(l instanceof Float32Array)f=r.FLOAT;else if(l instanceof Uint16Array)o.isFloat16BufferAttribute?f=r.HALF_FLOAT:f=r.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=r.SHORT;else if(l instanceof Uint32Array)f=r.UNSIGNED_INT;else if(l instanceof Int32Array)f=r.INT;else if(l instanceof Int8Array)f=r.BYTE;else if(l instanceof Uint8Array)f=r.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:d,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:o.version,size:u}}function n(o,c,l){const h=c.array,u=c.updateRanges;if(r.bindBuffer(l,o),u.length===0)r.bufferSubData(l,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],g=u[f];g.start<=p.start+p.count+1?p.count=Math.max(p.count,g.start+g.count-p.start):(++d,u[d]=g)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const g=u[f];r.bufferSubData(l,g.start*h.BYTES_PER_ELEMENT,h,g.start,g.count)}c.clearUpdateRanges()}c.onUploadCallback()}function i(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function s(o){o.isInterleavedBufferAttribute&&(o=o.data);const c=e.get(o);c&&(r.deleteBuffer(c.buffer),e.delete(o))}function a(o,c){if(o.isInterleavedBufferAttribute&&(o=o.data),o.isGLBufferAttribute){const h=e.get(o);(!h||h.version<o.version)&&e.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}const l=e.get(o);if(l===void 0)e.set(o,t(o,c));else if(l.version<o.version){if(l.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(l.buffer,o,c),l.version=o.version}}return{get:i,remove:s,update:a}}var k1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,z1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,V1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,H1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,G1=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,W1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,q1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,j1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,X1=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,Y1=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,Z1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,K1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,J1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Q1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,eT=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,tT=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,nT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,iT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,rT=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,sT=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,aT=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,oT=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,cT=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,lT=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,hT=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,uT=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,dT=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,fT=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,pT=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,mT=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,gT="gl_FragColor = linearToOutputTexel( gl_FragColor );",_T=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,vT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,xT=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,yT=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,bT=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,MT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,ST=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,wT=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,TT=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ET=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,CT=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,AT=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,RT=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,PT=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,IT=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,LT=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,DT=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,FT=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,NT=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,OT=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,UT=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,BT=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,$T=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,kT=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,zT=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,VT=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,HT=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,GT=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,WT=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,qT=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,jT=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,XT=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,YT=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ZT=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,KT=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,JT=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,QT=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,eE=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,tE=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,nE=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,iE=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,rE=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,sE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,aE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,oE=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,cE=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,lE=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,hE=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,uE=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,dE=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,fE=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,pE=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,mE=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,gE=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,_E=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,vE=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,xE=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,yE=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,bE=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,ME=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,SE=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,wE=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,TE=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,EE=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,CE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,AE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,RE=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,PE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,IE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,LE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,DE=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,FE=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,NE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,OE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,UE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,BE=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const $E=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,kE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,zE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,VE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,HE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,GE=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,WE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,qE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,jE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,XE=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,YE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,ZE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,KE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,JE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,QE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,eC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,nC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,iC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,rC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,aC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,oC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,hC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,dC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,pC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,mC=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,_C=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,vC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,bt={alphahash_fragment:k1,alphahash_pars_fragment:z1,alphamap_fragment:V1,alphamap_pars_fragment:H1,alphatest_fragment:G1,alphatest_pars_fragment:W1,aomap_fragment:q1,aomap_pars_fragment:j1,batching_pars_vertex:X1,batching_vertex:Y1,begin_vertex:Z1,beginnormal_vertex:K1,bsdfs:J1,iridescence_fragment:Q1,bumpmap_pars_fragment:eT,clipping_planes_fragment:tT,clipping_planes_pars_fragment:nT,clipping_planes_pars_vertex:iT,clipping_planes_vertex:rT,color_fragment:sT,color_pars_fragment:aT,color_pars_vertex:oT,color_vertex:cT,common:lT,cube_uv_reflection_fragment:hT,defaultnormal_vertex:uT,displacementmap_pars_vertex:dT,displacementmap_vertex:fT,emissivemap_fragment:pT,emissivemap_pars_fragment:mT,colorspace_fragment:gT,colorspace_pars_fragment:_T,envmap_fragment:vT,envmap_common_pars_fragment:xT,envmap_pars_fragment:yT,envmap_pars_vertex:bT,envmap_physical_pars_fragment:LT,envmap_vertex:MT,fog_vertex:ST,fog_pars_vertex:wT,fog_fragment:TT,fog_pars_fragment:ET,gradientmap_pars_fragment:CT,lightmap_pars_fragment:AT,lights_lambert_fragment:RT,lights_lambert_pars_fragment:PT,lights_pars_begin:IT,lights_toon_fragment:DT,lights_toon_pars_fragment:FT,lights_phong_fragment:NT,lights_phong_pars_fragment:OT,lights_physical_fragment:UT,lights_physical_pars_fragment:BT,lights_fragment_begin:$T,lights_fragment_maps:kT,lights_fragment_end:zT,logdepthbuf_fragment:VT,logdepthbuf_pars_fragment:HT,logdepthbuf_pars_vertex:GT,logdepthbuf_vertex:WT,map_fragment:qT,map_pars_fragment:jT,map_particle_fragment:XT,map_particle_pars_fragment:YT,metalnessmap_fragment:ZT,metalnessmap_pars_fragment:KT,morphinstance_vertex:JT,morphcolor_vertex:QT,morphnormal_vertex:eE,morphtarget_pars_vertex:tE,morphtarget_vertex:nE,normal_fragment_begin:iE,normal_fragment_maps:rE,normal_pars_fragment:sE,normal_pars_vertex:aE,normal_vertex:oE,normalmap_pars_fragment:cE,clearcoat_normal_fragment_begin:lE,clearcoat_normal_fragment_maps:hE,clearcoat_pars_fragment:uE,iridescence_pars_fragment:dE,opaque_fragment:fE,packing:pE,premultiplied_alpha_fragment:mE,project_vertex:gE,dithering_fragment:_E,dithering_pars_fragment:vE,roughnessmap_fragment:xE,roughnessmap_pars_fragment:yE,shadowmap_pars_fragment:bE,shadowmap_pars_vertex:ME,shadowmap_vertex:SE,shadowmask_pars_fragment:wE,skinbase_vertex:TE,skinning_pars_vertex:EE,skinning_vertex:CE,skinnormal_vertex:AE,specularmap_fragment:RE,specularmap_pars_fragment:PE,tonemapping_fragment:IE,tonemapping_pars_fragment:LE,transmission_fragment:DE,transmission_pars_fragment:FE,uv_pars_fragment:NE,uv_pars_vertex:OE,uv_vertex:UE,worldpos_vertex:BE,background_vert:$E,background_frag:kE,backgroundCube_vert:zE,backgroundCube_frag:VE,cube_vert:HE,cube_frag:GE,depth_vert:WE,depth_frag:qE,distanceRGBA_vert:jE,distanceRGBA_frag:XE,equirect_vert:YE,equirect_frag:ZE,linedashed_vert:KE,linedashed_frag:JE,meshbasic_vert:QE,meshbasic_frag:eC,meshlambert_vert:tC,meshlambert_frag:nC,meshmatcap_vert:iC,meshmatcap_frag:rC,meshnormal_vert:sC,meshnormal_frag:aC,meshphong_vert:oC,meshphong_frag:cC,meshphysical_vert:lC,meshphysical_frag:hC,meshtoon_vert:uC,meshtoon_frag:dC,points_vert:fC,points_frag:pC,shadow_vert:mC,shadow_frag:gC,sprite_vert:_C,sprite_frag:vC},ke={common:{diffuse:{value:new wt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Mt},alphaMap:{value:null},alphaMapTransform:{value:new Mt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Mt}},envmap:{envMap:{value:null},envMapRotation:{value:new Mt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Mt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Mt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Mt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Mt},normalScale:{value:new jt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Mt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Mt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Mt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Mt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new wt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new wt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Mt},alphaTest:{value:0},uvTransform:{value:new Mt}},sprite:{diffuse:{value:new wt(16777215)},opacity:{value:1},center:{value:new jt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Mt},alphaMap:{value:null},alphaMapTransform:{value:new Mt},alphaTest:{value:0}}},mr={basic:{uniforms:ri([ke.common,ke.specularmap,ke.envmap,ke.aomap,ke.lightmap,ke.fog]),vertexShader:bt.meshbasic_vert,fragmentShader:bt.meshbasic_frag},lambert:{uniforms:ri([ke.common,ke.specularmap,ke.envmap,ke.aomap,ke.lightmap,ke.emissivemap,ke.bumpmap,ke.normalmap,ke.displacementmap,ke.fog,ke.lights,{emissive:{value:new wt(0)}}]),vertexShader:bt.meshlambert_vert,fragmentShader:bt.meshlambert_frag},phong:{uniforms:ri([ke.common,ke.specularmap,ke.envmap,ke.aomap,ke.lightmap,ke.emissivemap,ke.bumpmap,ke.normalmap,ke.displacementmap,ke.fog,ke.lights,{emissive:{value:new wt(0)},specular:{value:new wt(1118481)},shininess:{value:30}}]),vertexShader:bt.meshphong_vert,fragmentShader:bt.meshphong_frag},standard:{uniforms:ri([ke.common,ke.envmap,ke.aomap,ke.lightmap,ke.emissivemap,ke.bumpmap,ke.normalmap,ke.displacementmap,ke.roughnessmap,ke.metalnessmap,ke.fog,ke.lights,{emissive:{value:new wt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:bt.meshphysical_vert,fragmentShader:bt.meshphysical_frag},toon:{uniforms:ri([ke.common,ke.aomap,ke.lightmap,ke.emissivemap,ke.bumpmap,ke.normalmap,ke.displacementmap,ke.gradientmap,ke.fog,ke.lights,{emissive:{value:new wt(0)}}]),vertexShader:bt.meshtoon_vert,fragmentShader:bt.meshtoon_frag},matcap:{uniforms:ri([ke.common,ke.bumpmap,ke.normalmap,ke.displacementmap,ke.fog,{matcap:{value:null}}]),vertexShader:bt.meshmatcap_vert,fragmentShader:bt.meshmatcap_frag},points:{uniforms:ri([ke.points,ke.fog]),vertexShader:bt.points_vert,fragmentShader:bt.points_frag},dashed:{uniforms:ri([ke.common,ke.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:bt.linedashed_vert,fragmentShader:bt.linedashed_frag},depth:{uniforms:ri([ke.common,ke.displacementmap]),vertexShader:bt.depth_vert,fragmentShader:bt.depth_frag},normal:{uniforms:ri([ke.common,ke.bumpmap,ke.normalmap,ke.displacementmap,{opacity:{value:1}}]),vertexShader:bt.meshnormal_vert,fragmentShader:bt.meshnormal_frag},sprite:{uniforms:ri([ke.sprite,ke.fog]),vertexShader:bt.sprite_vert,fragmentShader:bt.sprite_frag},background:{uniforms:{uvTransform:{value:new Mt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:bt.background_vert,fragmentShader:bt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Mt}},vertexShader:bt.backgroundCube_vert,fragmentShader:bt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:bt.cube_vert,fragmentShader:bt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:bt.equirect_vert,fragmentShader:bt.equirect_frag},distanceRGBA:{uniforms:ri([ke.common,ke.displacementmap,{referencePosition:{value:new te},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:bt.distanceRGBA_vert,fragmentShader:bt.distanceRGBA_frag},shadow:{uniforms:ri([ke.lights,ke.fog,{color:{value:new wt(0)},opacity:{value:1}}]),vertexShader:bt.shadow_vert,fragmentShader:bt.shadow_frag}};mr.physical={uniforms:ri([mr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Mt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Mt},clearcoatNormalScale:{value:new jt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Mt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Mt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Mt},sheen:{value:0},sheenColor:{value:new wt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Mt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Mt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Mt},transmissionSamplerSize:{value:new jt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Mt},attenuationDistance:{value:0},attenuationColor:{value:new wt(0)},specularColor:{value:new wt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Mt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Mt},anisotropyVector:{value:new jt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Mt}}]),vertexShader:bt.meshphysical_vert,fragmentShader:bt.meshphysical_frag};const eh={r:0,b:0,g:0},Qs=new Us,xC=new bn;function yC(r,e,t,n,i,s,a){const o=new wt(0);let c=s===!0?0:1,l,h,u=null,d=0,f=null;function p(y){let x=y.isScene===!0?y.background:null;return x&&x.isTexture&&(x=(y.backgroundBlurriness>0?t:e).get(x)),x}function g(y){let x=!1;const w=p(y);w===null?m(o,c):w&&w.isColor&&(m(w,1),x=!0);const E=r.xr.getEnvironmentBlendMode();E==="additive"?n.buffers.color.setClear(0,0,0,1,a):E==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(r.autoClear||x)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function _(y,x){const w=p(x);w&&(w.isCubeTexture||w.mapping===Hu)?(h===void 0&&(h=new Vi(new Gu(1,1,1),new Bs({name:"BackgroundCubeMaterial",uniforms:Lo(mr.backgroundCube.uniforms),vertexShader:mr.backgroundCube.vertexShader,fragmentShader:mr.backgroundCube.fragmentShader,side:yi,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(E,M,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),Qs.copy(x.backgroundRotation),Qs.x*=-1,Qs.y*=-1,Qs.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Qs.y*=-1,Qs.z*=-1),h.material.uniforms.envMap.value=w,h.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(xC.makeRotationFromEuler(Qs)),h.material.toneMapped=Rt.getTransfer(w.colorSpace)!==Jt,(u!==w||d!==w.version||f!==r.toneMapping)&&(h.material.needsUpdate=!0,u=w,d=w.version,f=r.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null)):w&&w.isTexture&&(l===void 0&&(l=new Vi(new Cy(2,2),new Bs({name:"BackgroundMaterial",uniforms:Lo(mr.background.uniforms),vertexShader:mr.background.vertexShader,fragmentShader:mr.background.fragmentShader,side:es,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=w,l.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,l.material.toneMapped=Rt.getTransfer(w.colorSpace)!==Jt,w.matrixAutoUpdate===!0&&w.updateMatrix(),l.material.uniforms.uvTransform.value.copy(w.matrix),(u!==w||d!==w.version||f!==r.toneMapping)&&(l.material.needsUpdate=!0,u=w,d=w.version,f=r.toneMapping),l.layers.enableAll(),y.unshift(l,l.geometry,l.material,0,0,null))}function m(y,x){y.getRGB(eh,wy(r)),n.buffers.color.setClear(eh.r,eh.g,eh.b,x,a)}function v(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),l!==void 0&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}return{getClearColor:function(){return o},setClearColor:function(y,x=1){o.set(y),c=x,m(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(y){c=y,m(o,c)},render:g,addToRenderList:_,dispose:v}}function bC(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=d(null);let s=i,a=!1;function o(S,b,U,L,N){let k=!1;const B=u(L,U,b);s!==B&&(s=B,l(s.object)),k=f(S,L,U,N),k&&p(S,L,U,N),N!==null&&e.update(N,r.ELEMENT_ARRAY_BUFFER),(k||a)&&(a=!1,x(S,b,U,L),N!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(N).buffer))}function c(){return r.createVertexArray()}function l(S){return r.bindVertexArray(S)}function h(S){return r.deleteVertexArray(S)}function u(S,b,U){const L=U.wireframe===!0;let N=n[S.id];N===void 0&&(N={},n[S.id]=N);let k=N[b.id];k===void 0&&(k={},N[b.id]=k);let B=k[L];return B===void 0&&(B=d(c()),k[L]=B),B}function d(S){const b=[],U=[],L=[];for(let N=0;N<t;N++)b[N]=0,U[N]=0,L[N]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:b,enabledAttributes:U,attributeDivisors:L,object:S,attributes:{},index:null}}function f(S,b,U,L){const N=s.attributes,k=b.attributes;let B=0;const z=U.getAttributes();for(const H in z)if(z[H].location>=0){const de=N[H];let ce=k[H];if(ce===void 0&&(H==="instanceMatrix"&&S.instanceMatrix&&(ce=S.instanceMatrix),H==="instanceColor"&&S.instanceColor&&(ce=S.instanceColor)),de===void 0||de.attribute!==ce||ce&&de.data!==ce.data)return!0;B++}return s.attributesNum!==B||s.index!==L}function p(S,b,U,L){const N={},k=b.attributes;let B=0;const z=U.getAttributes();for(const H in z)if(z[H].location>=0){let de=k[H];de===void 0&&(H==="instanceMatrix"&&S.instanceMatrix&&(de=S.instanceMatrix),H==="instanceColor"&&S.instanceColor&&(de=S.instanceColor));const ce={};ce.attribute=de,de&&de.data&&(ce.data=de.data),N[H]=ce,B++}s.attributes=N,s.attributesNum=B,s.index=L}function g(){const S=s.newAttributes;for(let b=0,U=S.length;b<U;b++)S[b]=0}function _(S){m(S,0)}function m(S,b){const U=s.newAttributes,L=s.enabledAttributes,N=s.attributeDivisors;U[S]=1,L[S]===0&&(r.enableVertexAttribArray(S),L[S]=1),N[S]!==b&&(r.vertexAttribDivisor(S,b),N[S]=b)}function v(){const S=s.newAttributes,b=s.enabledAttributes;for(let U=0,L=b.length;U<L;U++)b[U]!==S[U]&&(r.disableVertexAttribArray(U),b[U]=0)}function y(S,b,U,L,N,k,B){B===!0?r.vertexAttribIPointer(S,b,U,N,k):r.vertexAttribPointer(S,b,U,L,N,k)}function x(S,b,U,L){g();const N=L.attributes,k=U.getAttributes(),B=b.defaultAttributeValues;for(const z in k){const H=k[z];if(H.location>=0){let ee=N[z];if(ee===void 0&&(z==="instanceMatrix"&&S.instanceMatrix&&(ee=S.instanceMatrix),z==="instanceColor"&&S.instanceColor&&(ee=S.instanceColor)),ee!==void 0){const de=ee.normalized,ce=ee.itemSize,Ce=e.get(ee);if(Ce===void 0)continue;const me=Ce.buffer,j=Ce.type,pe=Ce.bytesPerElement,Z=j===r.INT||j===r.UNSIGNED_INT||ee.gpuType===Am;if(ee.isInterleavedBufferAttribute){const ye=ee.data,Pe=ye.stride,Ie=ee.offset;if(ye.isInstancedInterleavedBuffer){for(let Te=0;Te<H.locationSize;Te++)m(H.location+Te,ye.meshPerAttribute);S.isInstancedMesh!==!0&&L._maxInstanceCount===void 0&&(L._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let Te=0;Te<H.locationSize;Te++)_(H.location+Te);r.bindBuffer(r.ARRAY_BUFFER,me);for(let Te=0;Te<H.locationSize;Te++)y(H.location+Te,ce/H.locationSize,j,de,Pe*pe,(Ie+ce/H.locationSize*Te)*pe,Z)}else{if(ee.isInstancedBufferAttribute){for(let ye=0;ye<H.locationSize;ye++)m(H.location+ye,ee.meshPerAttribute);S.isInstancedMesh!==!0&&L._maxInstanceCount===void 0&&(L._maxInstanceCount=ee.meshPerAttribute*ee.count)}else for(let ye=0;ye<H.locationSize;ye++)_(H.location+ye);r.bindBuffer(r.ARRAY_BUFFER,me);for(let ye=0;ye<H.locationSize;ye++)y(H.location+ye,ce/H.locationSize,j,de,ce*pe,ce/H.locationSize*ye*pe,Z)}}else if(B!==void 0){const de=B[z];if(de!==void 0)switch(de.length){case 2:r.vertexAttrib2fv(H.location,de);break;case 3:r.vertexAttrib3fv(H.location,de);break;case 4:r.vertexAttrib4fv(H.location,de);break;default:r.vertexAttrib1fv(H.location,de)}}}}v()}function w(){A();for(const S in n){const b=n[S];for(const U in b){const L=b[U];for(const N in L)h(L[N].object),delete L[N];delete b[U]}delete n[S]}}function E(S){if(n[S.id]===void 0)return;const b=n[S.id];for(const U in b){const L=b[U];for(const N in L)h(L[N].object),delete L[N];delete b[U]}delete n[S.id]}function M(S){for(const b in n){const U=n[b];if(U[S.id]===void 0)continue;const L=U[S.id];for(const N in L)h(L[N].object),delete L[N];delete U[S.id]}}function A(){T(),a=!0,s!==i&&(s=i,l(s.object))}function T(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:o,reset:A,resetDefaultState:T,dispose:w,releaseStatesOfGeometry:E,releaseStatesOfProgram:M,initAttributes:g,enableAttribute:_,disableUnusedAttributes:v}}function MC(r,e,t){let n;function i(l){n=l}function s(l,h){r.drawArrays(n,l,h),t.update(h,n,1)}function a(l,h,u){u!==0&&(r.drawArraysInstanced(n,l,h,u),t.update(h,n,u))}function o(l,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,l,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,n,1)}function c(l,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<l.length;p++)a(l[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,l,0,h,0,d,0,u);let p=0;for(let g=0;g<u;g++)p+=h[g]*d[g];t.update(p,n,1)}}this.setMode=i,this.render=s,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=c}function SC(r,e,t,n){let i;function s(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");i=r.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(M){return!(M!==sr&&n.convert(M)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(M){const A=M===hl&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==ts&&n.convert(M)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==jr&&!A)}function c(M){if(M==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const h=c(l);h!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",h,"instead."),l=h);const u=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=r.getParameter(r.MAX_TEXTURE_SIZE),_=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),m=r.getParameter(r.MAX_VERTEX_ATTRIBS),v=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),y=r.getParameter(r.MAX_VARYING_VECTORS),x=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),w=p>0,E=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:c,textureFormatReadable:a,textureTypeReadable:o,precision:l,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:g,maxCubemapSize:_,maxAttributes:m,maxVertexUniforms:v,maxVaryings:y,maxFragmentUniforms:x,vertexTextures:w,maxSamples:E}}function wC(r){const e=this;let t=null,n=0,i=!1,s=!1;const a=new ra,o=new Mt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||n!==0||i;return i=d,n=u.length,f},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,g=u.clipIntersection,_=u.clipShadows,m=r.get(u);if(!i||p===null||p.length===0||s&&!_)s?h(null):l();else{const v=s?0:n,y=v*4;let x=m.clippingState||null;c.value=x,x=h(p,d,y,f);for(let w=0;w!==y;++w)x[w]=t[w];m.clippingState=x,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=v}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,d,f,p){const g=u!==null?u.length:0;let _=null;if(g!==0){if(_=c.value,p!==!0||_===null){const m=f+g*4,v=d.matrixWorldInverse;o.getNormalMatrix(v),(_===null||_.length<m)&&(_=new Float32Array(m));for(let y=0,x=f;y!==g;++y,x+=4)a.copy(u[y]).applyMatrix4(v,o),a.normal.toArray(_,x),_[x+3]=a.constant}c.value=_,c.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,_}}function TC(r){let e=new WeakMap;function t(a,o){return o===up?a.mapping=Ro:o===dp&&(a.mapping=Po),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===up||o===dp)if(e.has(a)){const c=e.get(a).texture;return t(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const l=new y1(c.height);return l.fromEquirectangularTexture(r,a),e.set(a,l),a.addEventListener("dispose",i),t(l.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const c=e.get(o);c!==void 0&&(e.delete(o),c.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}const mo=4,v_=[.125,.215,.35,.446,.526,.582],ca=20,Gd=new Dy,x_=new wt;let Wd=null,qd=0,jd=0,Xd=!1;const sa=(1+Math.sqrt(5))/2,$a=1/sa,y_=[new te(-sa,$a,0),new te(sa,$a,0),new te(-$a,0,sa),new te($a,0,sa),new te(0,sa,-$a),new te(0,sa,$a),new te(-1,1,-1),new te(1,1,-1),new te(-1,1,1),new te(1,1,1)],EC=new te;let b_=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,s={}){const{size:a=256,position:o=EC}=s;Wd=this._renderer.getRenderTarget(),qd=this._renderer.getActiveCubeFace(),jd=this._renderer.getActiveMipmapLevel(),Xd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,n,i,c,o),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=w_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=S_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Wd,qd,jd),this._renderer.xr.enabled=Xd,e.scissorTest=!1,th(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ro||e.mapping===Po?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Wd=this._renderer.getRenderTarget(),qd=this._renderer.getActiveCubeFace(),jd=this._renderer.getActiveMipmapLevel(),Xd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:vr,minFilter:vr,generateMipmaps:!1,type:hl,format:sr,colorSpace:Io,depthBuffer:!1},i=M_(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=M_(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=CC(s)),this._blurMaterial=AC(s,e,t)}return i}_compileMaterial(e){const t=new Vi(this._lodPlanes[0],e);this._renderer.compile(t,Gd)}_sceneToCubeUV(e,t,n,i,s){const c=new rr(90,1,t,n),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(x_),u.toneMapping=Is,u.autoClear=!1;const p=new ws({name:"PMREM.Background",side:yi,depthWrite:!1,depthTest:!1}),g=new Vi(new Gu,p);let _=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,_=!0):(p.color.copy(x_),_=!0);for(let v=0;v<6;v++){const y=v%3;y===0?(c.up.set(0,l[v],0),c.position.set(s.x,s.y,s.z),c.lookAt(s.x+h[v],s.y,s.z)):y===1?(c.up.set(0,0,l[v]),c.position.set(s.x,s.y,s.z),c.lookAt(s.x,s.y+h[v],s.z)):(c.up.set(0,l[v],0),c.position.set(s.x,s.y,s.z),c.lookAt(s.x,s.y,s.z+h[v]));const x=this._cubeSize;th(i,y*x,v>2?x:0,x,x),u.setRenderTarget(i),_&&u.render(g,c),u.render(e,c)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Ro||e.mapping===Po;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=w_()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=S_());const s=i?this._cubemapMaterial:this._equirectMaterial,a=new Vi(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const c=this._cubeSize;th(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(a,Gd)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const a=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=y_[(i-s-1)%y_.length];this._blur(e,s-1,s,a,o)}t.autoClear=n}_blur(e,t,n,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",s),this._halfBlur(a,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,a,o){const c=this._renderer,l=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new Vi(this._lodPlanes[i],l),d=l.uniforms,f=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*ca-1),g=s/p,_=isFinite(s)?1+Math.floor(h*g):ca;_>ca&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${ca}`);const m=[];let v=0;for(let M=0;M<ca;++M){const A=M/g,T=Math.exp(-A*A/2);m.push(T),M===0?v+=T:M<_&&(v+=2*T)}for(let M=0;M<m.length;M++)m[M]=m[M]/v;d.envMap.value=e.texture,d.samples.value=_,d.weights.value=m,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-n;const x=this._sizeLods[i],w=3*x*(i>y-mo?i-y+mo:0),E=4*(this._cubeSize-x);th(t,w,E,3*x,2*x),c.setRenderTarget(t),c.render(u,Gd)}};function CC(r){const e=[],t=[],n=[];let i=r;const s=r-mo+1+v_.length;for(let a=0;a<s;a++){const o=Math.pow(2,i);t.push(o);let c=1/o;a>r-mo?c=v_[a-r+mo-1]:a===0&&(c=0),n.push(c);const l=1/(o-2),h=-l,u=1+l,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,g=3,_=2,m=1,v=new Float32Array(g*p*f),y=new Float32Array(_*p*f),x=new Float32Array(m*p*f);for(let E=0;E<f;E++){const M=E%3*2/3-1,A=E>2?0:-1,T=[M,A,0,M+2/3,A,0,M+2/3,A+1,0,M,A,0,M+2/3,A+1,0,M,A+1,0];v.set(T,g*p*E),y.set(d,_*p*E);const S=[E,E,E,E,E,E];x.set(S,m*p*E)}const w=new is;w.setAttribute("position",new xr(v,g)),w.setAttribute("uv",new xr(y,_)),w.setAttribute("faceIndex",new xr(x,m)),e.push(w),i>mo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function M_(r,e,t){const n=new ma(r,e,t);return n.texture.mapping=Hu,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function th(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function AC(r,e,t){const n=new Float32Array(ca),i=new te(0,1,0);return new Bs({name:"SphericalGaussianBlur",defines:{n:ca,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Bm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ps,depthTest:!1,depthWrite:!1})}function S_(){return new Bs({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Bm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ps,depthTest:!1,depthWrite:!1})}function w_(){return new Bs({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Bm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ps,depthTest:!1,depthWrite:!1})}function Bm(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function RC(r){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const c=o.mapping,l=c===up||c===dp,h=c===Ro||c===Po;if(l||h){let u=e.get(o);const d=u!==void 0?u.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==d)return t===null&&(t=new b_(r)),u=l?t.fromEquirectangular(o,u):t.fromCubemap(o,u),u.texture.pmremVersion=o.pmremVersion,e.set(o,u),u.texture;if(u!==void 0)return u.texture;{const f=o.image;return l&&f&&f.height>0||h&&f&&i(f)?(t===null&&(t=new b_(r)),u=l?t.fromEquirectangular(o):t.fromCubemap(o),u.texture.pmremVersion=o.pmremVersion,e.set(o,u),o.addEventListener("dispose",s),u.texture):null}}}return o}function i(o){let c=0;const l=6;for(let h=0;h<l;h++)o[h]!==void 0&&c++;return c===l}function s(o){const c=o.target;c.removeEventListener("dispose",s);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function PC(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&ru("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function IC(r,e,t,n){const i={},s=new WeakMap;function a(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",a),delete i[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function o(u,d){return i[d.id]===!0||(d.addEventListener("dispose",a),i[d.id]=!0,t.memory.geometries++),d}function c(u){const d=u.attributes;for(const f in d)e.update(d[f],r.ARRAY_BUFFER)}function l(u){const d=[],f=u.index,p=u.attributes.position;let g=0;if(f!==null){const v=f.array;g=f.version;for(let y=0,x=v.length;y<x;y+=3){const w=v[y+0],E=v[y+1],M=v[y+2];d.push(w,E,E,M,M,w)}}else if(p!==void 0){const v=p.array;g=p.version;for(let y=0,x=v.length/3-1;y<x;y+=3){const w=y+0,E=y+1,M=y+2;d.push(w,E,E,M,M,w)}}else return;const _=new(fy(d)?by:yy)(d,1);_.version=g;const m=s.get(u);m&&e.remove(m),s.set(u,_)}function h(u){const d=s.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&l(u)}else l(u);return s.get(u)}return{get:o,update:c,getWireframeAttribute:h}}function LC(r,e,t){let n;function i(d){n=d}let s,a;function o(d){s=d.type,a=d.bytesPerElement}function c(d,f){r.drawElements(n,f,s,d*a),t.update(f,n,1)}function l(d,f,p){p!==0&&(r.drawElementsInstanced(n,f,s,d*a,p),t.update(f,n,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,s,d,0,p);let _=0;for(let m=0;m<p;m++)_+=f[m];t.update(_,n,1)}function u(d,f,p,g){if(p===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let m=0;m<d.length;m++)l(d[m]/a,f[m],g[m]);else{_.multiDrawElementsInstancedWEBGL(n,f,0,s,d,0,g,0,p);let m=0;for(let v=0;v<p;v++)m+=f[v]*g[v];t.update(m,n,1)}}this.setMode=i,this.setIndex=o,this.render=c,this.renderInstances=l,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function DC(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,o){switch(t.calls++,a){case r.TRIANGLES:t.triangles+=o*(s/3);break;case r.LINES:t.lines+=o*(s/2);break;case r.LINE_STRIP:t.lines+=o*(s-1);break;case r.LINE_LOOP:t.lines+=o*s;break;case r.POINTS:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function FC(r,e,t){const n=new WeakMap,i=new En;function s(a,o,c){const l=a.morphTargetInfluences,h=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,u=h!==void 0?h.length:0;let d=n.get(o);if(d===void 0||d.count!==u){let S=function(){A.dispose(),n.delete(o),o.removeEventListener("dispose",S)};var f=S;d!==void 0&&d.texture.dispose();const p=o.morphAttributes.position!==void 0,g=o.morphAttributes.normal!==void 0,_=o.morphAttributes.color!==void 0,m=o.morphAttributes.position||[],v=o.morphAttributes.normal||[],y=o.morphAttributes.color||[];let x=0;p===!0&&(x=1),g===!0&&(x=2),_===!0&&(x=3);let w=o.attributes.position.count*x,E=1;w>e.maxTextureSize&&(E=Math.ceil(w/e.maxTextureSize),w=e.maxTextureSize);const M=new Float32Array(w*E*4*u),A=new my(M,w,E,u);A.type=jr,A.needsUpdate=!0;const T=x*4;for(let b=0;b<u;b++){const U=m[b],L=v[b],N=y[b],k=w*E*4*b;for(let B=0;B<U.count;B++){const z=B*T;p===!0&&(i.fromBufferAttribute(U,B),M[k+z+0]=i.x,M[k+z+1]=i.y,M[k+z+2]=i.z,M[k+z+3]=0),g===!0&&(i.fromBufferAttribute(L,B),M[k+z+4]=i.x,M[k+z+5]=i.y,M[k+z+6]=i.z,M[k+z+7]=0),_===!0&&(i.fromBufferAttribute(N,B),M[k+z+8]=i.x,M[k+z+9]=i.y,M[k+z+10]=i.z,M[k+z+11]=N.itemSize===4?i.w:1)}}d={count:u,texture:A,size:new jt(w,E)},n.set(o,d),o.addEventListener("dispose",S)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)c.getUniforms().setValue(r,"morphTexture",a.morphTexture,t);else{let p=0;for(let _=0;_<l.length;_++)p+=l[_];const g=o.morphTargetsRelative?1:1-p;c.getUniforms().setValue(r,"morphTargetBaseInfluence",g),c.getUniforms().setValue(r,"morphTargetInfluences",l)}c.getUniforms().setValue(r,"morphTargetsTexture",d.texture,t),c.getUniforms().setValue(r,"morphTargetsTextureSize",d.size)}return{update:s}}function NC(r,e,t,n){let i=new WeakMap;function s(c){const l=n.render.frame,h=c.geometry,u=e.get(c,h);if(i.get(u)!==l&&(e.update(u),i.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),i.get(c)!==l&&(t.update(c.instanceMatrix,r.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,r.ARRAY_BUFFER),i.set(c,l))),c.isSkinnedMesh){const d=c.skeleton;i.get(d)!==l&&(d.update(),i.set(d,l))}return u}function a(){i=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:s,dispose:a}}const Ny=new hr,T_=new Ey(1,1),Oy=new my,Uy=new i1,By=new Ty,E_=[],C_=[],A_=new Float32Array(16),R_=new Float32Array(9),P_=new Float32Array(4);function Wo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=E_[i];if(s===void 0&&(s=new Float32Array(i),E_[i]=s),e!==0){n.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,r[a].toArray(s,o)}return s}function Ln(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Dn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Wu(r,e){let t=C_[e];t===void 0&&(t=new Int32Array(e),C_[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function OC(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function UC(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ln(t,e))return;r.uniform2fv(this.addr,e),Dn(t,e)}}function BC(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Ln(t,e))return;r.uniform3fv(this.addr,e),Dn(t,e)}}function $C(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ln(t,e))return;r.uniform4fv(this.addr,e),Dn(t,e)}}function kC(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ln(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Dn(t,e)}else{if(Ln(t,n))return;P_.set(n),r.uniformMatrix2fv(this.addr,!1,P_),Dn(t,n)}}function zC(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ln(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Dn(t,e)}else{if(Ln(t,n))return;R_.set(n),r.uniformMatrix3fv(this.addr,!1,R_),Dn(t,n)}}function VC(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ln(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Dn(t,e)}else{if(Ln(t,n))return;A_.set(n),r.uniformMatrix4fv(this.addr,!1,A_),Dn(t,n)}}function HC(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function GC(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ln(t,e))return;r.uniform2iv(this.addr,e),Dn(t,e)}}function WC(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ln(t,e))return;r.uniform3iv(this.addr,e),Dn(t,e)}}function qC(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ln(t,e))return;r.uniform4iv(this.addr,e),Dn(t,e)}}function jC(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function XC(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ln(t,e))return;r.uniform2uiv(this.addr,e),Dn(t,e)}}function YC(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ln(t,e))return;r.uniform3uiv(this.addr,e),Dn(t,e)}}function ZC(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ln(t,e))return;r.uniform4uiv(this.addr,e),Dn(t,e)}}function KC(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);let s;this.type===r.SAMPLER_2D_SHADOW?(T_.compareFunction=hy,s=T_):s=Ny,t.setTexture2D(e||s,i)}function JC(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Uy,i)}function QC(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||By,i)}function eA(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Oy,i)}function tA(r){switch(r){case 5126:return OC;case 35664:return UC;case 35665:return BC;case 35666:return $C;case 35674:return kC;case 35675:return zC;case 35676:return VC;case 5124:case 35670:return HC;case 35667:case 35671:return GC;case 35668:case 35672:return WC;case 35669:case 35673:return qC;case 5125:return jC;case 36294:return XC;case 36295:return YC;case 36296:return ZC;case 35678:case 36198:case 36298:case 36306:case 35682:return KC;case 35679:case 36299:case 36307:return JC;case 35680:case 36300:case 36308:case 36293:return QC;case 36289:case 36303:case 36311:case 36292:return eA}}function nA(r,e){r.uniform1fv(this.addr,e)}function iA(r,e){const t=Wo(e,this.size,2);r.uniform2fv(this.addr,t)}function rA(r,e){const t=Wo(e,this.size,3);r.uniform3fv(this.addr,t)}function sA(r,e){const t=Wo(e,this.size,4);r.uniform4fv(this.addr,t)}function aA(r,e){const t=Wo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function oA(r,e){const t=Wo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function cA(r,e){const t=Wo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function lA(r,e){r.uniform1iv(this.addr,e)}function hA(r,e){r.uniform2iv(this.addr,e)}function uA(r,e){r.uniform3iv(this.addr,e)}function dA(r,e){r.uniform4iv(this.addr,e)}function fA(r,e){r.uniform1uiv(this.addr,e)}function pA(r,e){r.uniform2uiv(this.addr,e)}function mA(r,e){r.uniform3uiv(this.addr,e)}function gA(r,e){r.uniform4uiv(this.addr,e)}function _A(r,e,t){const n=this.cache,i=e.length,s=Wu(t,i);Ln(n,s)||(r.uniform1iv(this.addr,s),Dn(n,s));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||Ny,s[a])}function vA(r,e,t){const n=this.cache,i=e.length,s=Wu(t,i);Ln(n,s)||(r.uniform1iv(this.addr,s),Dn(n,s));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||Uy,s[a])}function xA(r,e,t){const n=this.cache,i=e.length,s=Wu(t,i);Ln(n,s)||(r.uniform1iv(this.addr,s),Dn(n,s));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||By,s[a])}function yA(r,e,t){const n=this.cache,i=e.length,s=Wu(t,i);Ln(n,s)||(r.uniform1iv(this.addr,s),Dn(n,s));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||Oy,s[a])}function bA(r){switch(r){case 5126:return nA;case 35664:return iA;case 35665:return rA;case 35666:return sA;case 35674:return aA;case 35675:return oA;case 35676:return cA;case 5124:case 35670:return lA;case 35667:case 35671:return hA;case 35668:case 35672:return uA;case 35669:case 35673:return dA;case 5125:return fA;case 36294:return pA;case 36295:return mA;case 36296:return gA;case 35678:case 36198:case 36298:case 36306:case 35682:return _A;case 35679:case 36299:case 36307:return vA;case 35680:case 36300:case 36308:case 36293:return xA;case 36289:case 36303:case 36311:case 36292:return yA}}let MA=class{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=tA(t.type)}},SA=class{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=bA(t.type)}},wA=class{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,a=i.length;s!==a;++s){const o=i[s];o.setValue(e,t[o.id],n)}}};const Yd=/(\w+)(\])?(\[|\.)?/g;function I_(r,e){r.seq.push(e),r.map[e.id]=e}function TA(r,e,t){const n=r.name,i=n.length;for(Yd.lastIndex=0;;){const s=Yd.exec(n),a=Yd.lastIndex;let o=s[1];const c=s[2]==="]",l=s[3];if(c&&(o=o|0),l===void 0||l==="["&&a+2===i){I_(t,l===void 0?new MA(o,r,e):new SA(o,r,e));break}else{let u=t.map[o];u===void 0&&(u=new wA(o),I_(t,u)),t=u}}}let cu=class{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),a=e.getUniformLocation(t,s.name);TA(s,a,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,a=t.length;s!==a;++s){const o=t[s],c=n[o.id];c.needsUpdate!==!1&&o.setValue(e,c.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const a=e[i];a.id in t&&n.push(a)}return n}};function L_(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const EA=37297;let CA=0;function AA(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=i;a<s;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}const D_=new Mt;function RA(r){Rt._getMatrix(D_,Rt.workingColorSpace,r);const e=`mat3( ${D_.elements.map(t=>t.toFixed(4))} )`;switch(Rt.getTransfer(r)){case _u:return[e,"LinearTransferOETF"];case Jt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function F_(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+AA(r.getShaderSource(e),a)}else return i}function PA(r,e){const t=RA(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function IA(r,e){let t;switch(e){case Rw:t="Linear";break;case Pw:t="Reinhard";break;case Iw:t="Cineon";break;case Lw:t="ACESFilmic";break;case Fw:t="AgX";break;case Nw:t="Neutral";break;case Dw:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const nh=new te;function LA(){Rt.getLuminanceCoefficients(nh);const r=nh.x.toFixed(4),e=nh.y.toFixed(4),t=nh.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function DA(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Mc).join(`
`)}function FA(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function NA(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),a=s.name;let o=1;s.type===r.FLOAT_MAT2&&(o=2),s.type===r.FLOAT_MAT3&&(o=3),s.type===r.FLOAT_MAT4&&(o=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:o}}return t}function Mc(r){return r!==""}function N_(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function O_(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const OA=/^[ \t]*#include +<([\w\d./]+)>/gm;function Hp(r){return r.replace(OA,BA)}const UA=new Map;function BA(r,e){let t=bt[e];if(t===void 0){const n=UA.get(e);if(n!==void 0)t=bt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Hp(t)}const $A=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function U_(r){return r.replace($A,kA)}function kA(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function B_(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function zA(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Kx?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===cw?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Vr&&(e="SHADOWMAP_TYPE_VSM"),e}function VA(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Ro:case Po:e="ENVMAP_TYPE_CUBE";break;case Hu:e="ENVMAP_TYPE_CUBE_UV";break}return e}function HA(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Po:e="ENVMAP_MODE_REFRACTION";break}return e}function GA(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Cm:e="ENVMAP_BLENDING_MULTIPLY";break;case Cw:e="ENVMAP_BLENDING_MIX";break;case Aw:e="ENVMAP_BLENDING_ADD";break}return e}function WA(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function qA(r,e,t,n){const i=r.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const c=zA(t),l=VA(t),h=HA(t),u=GA(t),d=WA(t),f=DA(t),p=FA(s),g=i.createProgram();let _,m,v=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Mc).join(`
`),_.length>0&&(_+=`
`),m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Mc).join(`
`),m.length>0&&(m+=`
`)):(_=[B_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Mc).join(`
`),m=[B_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Is?"#define TONE_MAPPING":"",t.toneMapping!==Is?bt.tonemapping_pars_fragment:"",t.toneMapping!==Is?IA("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",bt.colorspace_pars_fragment,PA("linearToOutputTexel",t.outputColorSpace),LA(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Mc).join(`
`)),a=Hp(a),a=N_(a,t),a=O_(a,t),o=Hp(o),o=N_(o,t),o=O_(o,t),a=U_(a),o=U_(o),t.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,_=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,m=["#define varying in",t.glslVersion===Gg?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Gg?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const y=v+_+a,x=v+m+o,w=L_(i,i.VERTEX_SHADER,y),E=L_(i,i.FRAGMENT_SHADER,x);i.attachShader(g,w),i.attachShader(g,E),t.index0AttributeName!==void 0?i.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g);function M(b){if(r.debug.checkShaderErrors){const U=i.getProgramInfoLog(g).trim(),L=i.getShaderInfoLog(w).trim(),N=i.getShaderInfoLog(E).trim();let k=!0,B=!0;if(i.getProgramParameter(g,i.LINK_STATUS)===!1)if(k=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,g,w,E);else{const z=F_(i,w,"vertex"),H=F_(i,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,i.VALIDATE_STATUS)+`

Material Name: `+b.name+`
Material Type: `+b.type+`

Program Info Log: `+U+`
`+z+`
`+H)}else U!==""?console.warn("THREE.WebGLProgram: Program Info Log:",U):(L===""||N==="")&&(B=!1);B&&(b.diagnostics={runnable:k,programLog:U,vertexShader:{log:L,prefix:_},fragmentShader:{log:N,prefix:m}})}i.deleteShader(w),i.deleteShader(E),A=new cu(i,g),T=NA(i,g)}let A;this.getUniforms=function(){return A===void 0&&M(this),A};let T;this.getAttributes=function(){return T===void 0&&M(this),T};let S=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return S===!1&&(S=i.getProgramParameter(g,EA)),S},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=CA++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=E,this}let jA=0;class XA{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new YA(e),t.set(e,n)),n}}class YA{constructor(e){this.id=jA++,this.code=e,this.usedTimes=0}}function ZA(r,e,t,n,i,s,a){const o=new vy,c=new XA,l=new Set,h=[],u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(T){return l.add(T),T===0?"uv":`uv${T}`}function _(T,S,b,U,L){const N=U.fog,k=L.geometry,B=T.isMeshStandardMaterial?U.environment:null,z=(T.isMeshStandardMaterial?t:e).get(T.envMap||B),H=z&&z.mapping===Hu?z.image.height:null,ee=p[T.type];T.precision!==null&&(f=i.getMaxPrecision(T.precision),f!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",f,"instead."));const de=k.morphAttributes.position||k.morphAttributes.normal||k.morphAttributes.color,ce=de!==void 0?de.length:0;let Ce=0;k.morphAttributes.position!==void 0&&(Ce=1),k.morphAttributes.normal!==void 0&&(Ce=2),k.morphAttributes.color!==void 0&&(Ce=3);let me,j,pe,Z;if(ee){const Ft=mr[ee];me=Ft.vertexShader,j=Ft.fragmentShader}else me=T.vertexShader,j=T.fragmentShader,c.update(T),pe=c.getVertexShaderID(T),Z=c.getFragmentShaderID(T);const ye=r.getRenderTarget(),Pe=r.state.buffers.depth.getReversed(),Ie=L.isInstancedMesh===!0,Te=L.isBatchedMesh===!0,Je=!!T.map,fe=!!T.matcap,xe=!!z,F=!!T.aoMap,Ye=!!T.lightMap,Ee=!!T.bumpMap,O=!!T.normalMap,P=!!T.displacementMap,se=!!T.emissiveMap,he=!!T.metalnessMap,R=!!T.roughnessMap,C=T.anisotropy>0,q=T.clearcoat>0,Q=T.dispersion>0,oe=T.iridescence>0,K=T.sheen>0,G=T.transmission>0,le=C&&!!T.anisotropyMap,J=q&&!!T.clearcoatMap,Oe=q&&!!T.clearcoatNormalMap,ae=q&&!!T.clearcoatRoughnessMap,Ae=oe&&!!T.iridescenceMap,Qe=oe&&!!T.iridescenceThicknessMap,nt=K&&!!T.sheenColorMap,qe=K&&!!T.sheenRoughnessMap,ot=!!T.specularMap,ft=!!T.specularColorMap,St=!!T.specularIntensityMap,X=G&&!!T.transmissionMap,Ge=G&&!!T.thicknessMap,_e=!!T.gradientMap,Me=!!T.alphaMap,je=T.alphaTest>0,We=!!T.alphaHash,_t=!!T.extensions;let en=Is;T.toneMapped&&(ye===null||ye.isXRRenderTarget===!0)&&(en=r.toneMapping);const Fn={shaderID:ee,shaderType:T.type,shaderName:T.name,vertexShader:me,fragmentShader:j,defines:T.defines,customVertexShaderID:pe,customFragmentShaderID:Z,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:f,batching:Te,batchingColor:Te&&L._colorsTexture!==null,instancing:Ie,instancingColor:Ie&&L.instanceColor!==null,instancingMorph:Ie&&L.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:ye===null?r.outputColorSpace:ye.isXRRenderTarget===!0?ye.texture.colorSpace:Io,alphaToCoverage:!!T.alphaToCoverage,map:Je,matcap:fe,envMap:xe,envMapMode:xe&&z.mapping,envMapCubeUVHeight:H,aoMap:F,lightMap:Ye,bumpMap:Ee,normalMap:O,displacementMap:d&&P,emissiveMap:se,normalMapObjectSpace:O&&T.normalMapType===$w,normalMapTangentSpace:O&&T.normalMapType===ly,metalnessMap:he,roughnessMap:R,anisotropy:C,anisotropyMap:le,clearcoat:q,clearcoatMap:J,clearcoatNormalMap:Oe,clearcoatRoughnessMap:ae,dispersion:Q,iridescence:oe,iridescenceMap:Ae,iridescenceThicknessMap:Qe,sheen:K,sheenColorMap:nt,sheenRoughnessMap:qe,specularMap:ot,specularColorMap:ft,specularIntensityMap:St,transmission:G,transmissionMap:X,thicknessMap:Ge,gradientMap:_e,opaque:T.transparent===!1&&T.blending===bo&&T.alphaToCoverage===!1,alphaMap:Me,alphaTest:je,alphaHash:We,combine:T.combine,mapUv:Je&&g(T.map.channel),aoMapUv:F&&g(T.aoMap.channel),lightMapUv:Ye&&g(T.lightMap.channel),bumpMapUv:Ee&&g(T.bumpMap.channel),normalMapUv:O&&g(T.normalMap.channel),displacementMapUv:P&&g(T.displacementMap.channel),emissiveMapUv:se&&g(T.emissiveMap.channel),metalnessMapUv:he&&g(T.metalnessMap.channel),roughnessMapUv:R&&g(T.roughnessMap.channel),anisotropyMapUv:le&&g(T.anisotropyMap.channel),clearcoatMapUv:J&&g(T.clearcoatMap.channel),clearcoatNormalMapUv:Oe&&g(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ae&&g(T.clearcoatRoughnessMap.channel),iridescenceMapUv:Ae&&g(T.iridescenceMap.channel),iridescenceThicknessMapUv:Qe&&g(T.iridescenceThicknessMap.channel),sheenColorMapUv:nt&&g(T.sheenColorMap.channel),sheenRoughnessMapUv:qe&&g(T.sheenRoughnessMap.channel),specularMapUv:ot&&g(T.specularMap.channel),specularColorMapUv:ft&&g(T.specularColorMap.channel),specularIntensityMapUv:St&&g(T.specularIntensityMap.channel),transmissionMapUv:X&&g(T.transmissionMap.channel),thicknessMapUv:Ge&&g(T.thicknessMap.channel),alphaMapUv:Me&&g(T.alphaMap.channel),vertexTangents:!!k.attributes.tangent&&(O||C),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!k.attributes.color&&k.attributes.color.itemSize===4,pointsUvs:L.isPoints===!0&&!!k.attributes.uv&&(Je||Me),fog:!!N,useFog:T.fog===!0,fogExp2:!!N&&N.isFogExp2,flatShading:T.flatShading===!0,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:Pe,skinning:L.isSkinnedMesh===!0,morphTargets:k.morphAttributes.position!==void 0,morphNormals:k.morphAttributes.normal!==void 0,morphColors:k.morphAttributes.color!==void 0,morphTargetsCount:ce,morphTextureStride:Ce,numDirLights:S.directional.length,numPointLights:S.point.length,numSpotLights:S.spot.length,numSpotLightMaps:S.spotLightMap.length,numRectAreaLights:S.rectArea.length,numHemiLights:S.hemi.length,numDirLightShadows:S.directionalShadowMap.length,numPointLightShadows:S.pointShadowMap.length,numSpotLightShadows:S.spotShadowMap.length,numSpotLightShadowsWithMaps:S.numSpotLightShadowsWithMaps,numLightProbes:S.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:T.dithering,shadowMapEnabled:r.shadowMap.enabled&&b.length>0,shadowMapType:r.shadowMap.type,toneMapping:en,decodeVideoTexture:Je&&T.map.isVideoTexture===!0&&Rt.getTransfer(T.map.colorSpace)===Jt,decodeVideoTextureEmissive:se&&T.emissiveMap.isVideoTexture===!0&&Rt.getTransfer(T.emissiveMap.colorSpace)===Jt,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===qr,flipSided:T.side===yi,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionClipCullDistance:_t&&T.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(_t&&T.extensions.multiDraw===!0||Te)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:T.customProgramCacheKey()};return Fn.vertexUv1s=l.has(1),Fn.vertexUv2s=l.has(2),Fn.vertexUv3s=l.has(3),l.clear(),Fn}function m(T){const S=[];if(T.shaderID?S.push(T.shaderID):(S.push(T.customVertexShaderID),S.push(T.customFragmentShaderID)),T.defines!==void 0)for(const b in T.defines)S.push(b),S.push(T.defines[b]);return T.isRawShaderMaterial===!1&&(v(S,T),y(S,T),S.push(r.outputColorSpace)),S.push(T.customProgramCacheKey),S.join()}function v(T,S){T.push(S.precision),T.push(S.outputColorSpace),T.push(S.envMapMode),T.push(S.envMapCubeUVHeight),T.push(S.mapUv),T.push(S.alphaMapUv),T.push(S.lightMapUv),T.push(S.aoMapUv),T.push(S.bumpMapUv),T.push(S.normalMapUv),T.push(S.displacementMapUv),T.push(S.emissiveMapUv),T.push(S.metalnessMapUv),T.push(S.roughnessMapUv),T.push(S.anisotropyMapUv),T.push(S.clearcoatMapUv),T.push(S.clearcoatNormalMapUv),T.push(S.clearcoatRoughnessMapUv),T.push(S.iridescenceMapUv),T.push(S.iridescenceThicknessMapUv),T.push(S.sheenColorMapUv),T.push(S.sheenRoughnessMapUv),T.push(S.specularMapUv),T.push(S.specularColorMapUv),T.push(S.specularIntensityMapUv),T.push(S.transmissionMapUv),T.push(S.thicknessMapUv),T.push(S.combine),T.push(S.fogExp2),T.push(S.sizeAttenuation),T.push(S.morphTargetsCount),T.push(S.morphAttributeCount),T.push(S.numDirLights),T.push(S.numPointLights),T.push(S.numSpotLights),T.push(S.numSpotLightMaps),T.push(S.numHemiLights),T.push(S.numRectAreaLights),T.push(S.numDirLightShadows),T.push(S.numPointLightShadows),T.push(S.numSpotLightShadows),T.push(S.numSpotLightShadowsWithMaps),T.push(S.numLightProbes),T.push(S.shadowMapType),T.push(S.toneMapping),T.push(S.numClippingPlanes),T.push(S.numClipIntersection),T.push(S.depthPacking)}function y(T,S){o.disableAll(),S.supportsVertexTextures&&o.enable(0),S.instancing&&o.enable(1),S.instancingColor&&o.enable(2),S.instancingMorph&&o.enable(3),S.matcap&&o.enable(4),S.envMap&&o.enable(5),S.normalMapObjectSpace&&o.enable(6),S.normalMapTangentSpace&&o.enable(7),S.clearcoat&&o.enable(8),S.iridescence&&o.enable(9),S.alphaTest&&o.enable(10),S.vertexColors&&o.enable(11),S.vertexAlphas&&o.enable(12),S.vertexUv1s&&o.enable(13),S.vertexUv2s&&o.enable(14),S.vertexUv3s&&o.enable(15),S.vertexTangents&&o.enable(16),S.anisotropy&&o.enable(17),S.alphaHash&&o.enable(18),S.batching&&o.enable(19),S.dispersion&&o.enable(20),S.batchingColor&&o.enable(21),T.push(o.mask),o.disableAll(),S.fog&&o.enable(0),S.useFog&&o.enable(1),S.flatShading&&o.enable(2),S.logarithmicDepthBuffer&&o.enable(3),S.reverseDepthBuffer&&o.enable(4),S.skinning&&o.enable(5),S.morphTargets&&o.enable(6),S.morphNormals&&o.enable(7),S.morphColors&&o.enable(8),S.premultipliedAlpha&&o.enable(9),S.shadowMapEnabled&&o.enable(10),S.doubleSided&&o.enable(11),S.flipSided&&o.enable(12),S.useDepthPacking&&o.enable(13),S.dithering&&o.enable(14),S.transmission&&o.enable(15),S.sheen&&o.enable(16),S.opaque&&o.enable(17),S.pointsUvs&&o.enable(18),S.decodeVideoTexture&&o.enable(19),S.decodeVideoTextureEmissive&&o.enable(20),S.alphaToCoverage&&o.enable(21),T.push(o.mask)}function x(T){const S=p[T.type];let b;if(S){const U=mr[S];b=g1.clone(U.uniforms)}else b=T.uniforms;return b}function w(T,S){let b;for(let U=0,L=h.length;U<L;U++){const N=h[U];if(N.cacheKey===S){b=N,++b.usedTimes;break}}return b===void 0&&(b=new qA(r,S,T,s),h.push(b)),b}function E(T){if(--T.usedTimes===0){const S=h.indexOf(T);h[S]=h[h.length-1],h.pop(),T.destroy()}}function M(T){c.remove(T)}function A(){c.dispose()}return{getParameters:_,getProgramCacheKey:m,getUniforms:x,acquireProgram:w,releaseProgram:E,releaseShaderCache:M,programs:h,dispose:A}}function KA(){let r=new WeakMap;function e(a){return r.has(a)}function t(a){let o=r.get(a);return o===void 0&&(o={},r.set(a,o)),o}function n(a){r.delete(a)}function i(a,o,c){r.get(a)[o]=c}function s(){r=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:s}}function JA(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function $_(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function k_(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function a(u,d,f,p,g,_){let m=r[e];return m===void 0?(m={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:g,group:_},r[e]=m):(m.id=u.id,m.object=u,m.geometry=d,m.material=f,m.groupOrder=p,m.renderOrder=u.renderOrder,m.z=g,m.group=_),e++,m}function o(u,d,f,p,g,_){const m=a(u,d,f,p,g,_);f.transmission>0?n.push(m):f.transparent===!0?i.push(m):t.push(m)}function c(u,d,f,p,g,_){const m=a(u,d,f,p,g,_);f.transmission>0?n.unshift(m):f.transparent===!0?i.unshift(m):t.unshift(m)}function l(u,d){t.length>1&&t.sort(u||JA),n.length>1&&n.sort(d||$_),i.length>1&&i.sort(d||$_)}function h(){for(let u=e,d=r.length;u<d;u++){const f=r[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:o,unshift:c,finish:h,sort:l}}function QA(){let r=new WeakMap;function e(n,i){const s=r.get(n);let a;return s===void 0?(a=new k_,r.set(n,[a])):i>=s.length?(a=new k_,s.push(a)):a=s[i],a}function t(){r=new WeakMap}return{get:e,dispose:t}}function eR(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new te,color:new wt};break;case"SpotLight":t={position:new te,direction:new te,color:new wt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new te,color:new wt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new te,skyColor:new wt,groundColor:new wt};break;case"RectAreaLight":t={color:new wt,position:new te,halfWidth:new te,halfHeight:new te};break}return r[e.id]=t,t}}}function tR(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new jt};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new jt};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new jt,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let nR=0;function iR(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function rR(r){const e=new eR,t=tR(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new te);const i=new te,s=new bn,a=new bn;function o(l){let h=0,u=0,d=0;for(let T=0;T<9;T++)n.probe[T].set(0,0,0);let f=0,p=0,g=0,_=0,m=0,v=0,y=0,x=0,w=0,E=0,M=0;l.sort(iR);for(let T=0,S=l.length;T<S;T++){const b=l[T],U=b.color,L=b.intensity,N=b.distance,k=b.shadow&&b.shadow.map?b.shadow.map.texture:null;if(b.isAmbientLight)h+=U.r*L,u+=U.g*L,d+=U.b*L;else if(b.isLightProbe){for(let B=0;B<9;B++)n.probe[B].addScaledVector(b.sh.coefficients[B],L);M++}else if(b.isDirectionalLight){const B=e.get(b);if(B.color.copy(b.color).multiplyScalar(b.intensity),b.castShadow){const z=b.shadow,H=t.get(b);H.shadowIntensity=z.intensity,H.shadowBias=z.bias,H.shadowNormalBias=z.normalBias,H.shadowRadius=z.radius,H.shadowMapSize=z.mapSize,n.directionalShadow[f]=H,n.directionalShadowMap[f]=k,n.directionalShadowMatrix[f]=b.shadow.matrix,v++}n.directional[f]=B,f++}else if(b.isSpotLight){const B=e.get(b);B.position.setFromMatrixPosition(b.matrixWorld),B.color.copy(U).multiplyScalar(L),B.distance=N,B.coneCos=Math.cos(b.angle),B.penumbraCos=Math.cos(b.angle*(1-b.penumbra)),B.decay=b.decay,n.spot[g]=B;const z=b.shadow;if(b.map&&(n.spotLightMap[w]=b.map,w++,z.updateMatrices(b),b.castShadow&&E++),n.spotLightMatrix[g]=z.matrix,b.castShadow){const H=t.get(b);H.shadowIntensity=z.intensity,H.shadowBias=z.bias,H.shadowNormalBias=z.normalBias,H.shadowRadius=z.radius,H.shadowMapSize=z.mapSize,n.spotShadow[g]=H,n.spotShadowMap[g]=k,x++}g++}else if(b.isRectAreaLight){const B=e.get(b);B.color.copy(U).multiplyScalar(L),B.halfWidth.set(b.width*.5,0,0),B.halfHeight.set(0,b.height*.5,0),n.rectArea[_]=B,_++}else if(b.isPointLight){const B=e.get(b);if(B.color.copy(b.color).multiplyScalar(b.intensity),B.distance=b.distance,B.decay=b.decay,b.castShadow){const z=b.shadow,H=t.get(b);H.shadowIntensity=z.intensity,H.shadowBias=z.bias,H.shadowNormalBias=z.normalBias,H.shadowRadius=z.radius,H.shadowMapSize=z.mapSize,H.shadowCameraNear=z.camera.near,H.shadowCameraFar=z.camera.far,n.pointShadow[p]=H,n.pointShadowMap[p]=k,n.pointShadowMatrix[p]=b.shadow.matrix,y++}n.point[p]=B,p++}else if(b.isHemisphereLight){const B=e.get(b);B.skyColor.copy(b.color).multiplyScalar(L),B.groundColor.copy(b.groundColor).multiplyScalar(L),n.hemi[m]=B,m++}}_>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=ke.LTC_FLOAT_1,n.rectAreaLTC2=ke.LTC_FLOAT_2):(n.rectAreaLTC1=ke.LTC_HALF_1,n.rectAreaLTC2=ke.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=d;const A=n.hash;(A.directionalLength!==f||A.pointLength!==p||A.spotLength!==g||A.rectAreaLength!==_||A.hemiLength!==m||A.numDirectionalShadows!==v||A.numPointShadows!==y||A.numSpotShadows!==x||A.numSpotMaps!==w||A.numLightProbes!==M)&&(n.directional.length=f,n.spot.length=g,n.rectArea.length=_,n.point.length=p,n.hemi.length=m,n.directionalShadow.length=v,n.directionalShadowMap.length=v,n.pointShadow.length=y,n.pointShadowMap.length=y,n.spotShadow.length=x,n.spotShadowMap.length=x,n.directionalShadowMatrix.length=v,n.pointShadowMatrix.length=y,n.spotLightMatrix.length=x+w-E,n.spotLightMap.length=w,n.numSpotLightShadowsWithMaps=E,n.numLightProbes=M,A.directionalLength=f,A.pointLength=p,A.spotLength=g,A.rectAreaLength=_,A.hemiLength=m,A.numDirectionalShadows=v,A.numPointShadows=y,A.numSpotShadows=x,A.numSpotMaps=w,A.numLightProbes=M,n.version=nR++)}function c(l,h){let u=0,d=0,f=0,p=0,g=0;const _=h.matrixWorldInverse;for(let m=0,v=l.length;m<v;m++){const y=l[m];if(y.isDirectionalLight){const x=n.directional[u];x.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),x.direction.sub(i),x.direction.transformDirection(_),u++}else if(y.isSpotLight){const x=n.spot[f];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(_),x.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),x.direction.sub(i),x.direction.transformDirection(_),f++}else if(y.isRectAreaLight){const x=n.rectArea[p];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(_),a.identity(),s.copy(y.matrixWorld),s.premultiply(_),a.extractRotation(s),x.halfWidth.set(y.width*.5,0,0),x.halfHeight.set(0,y.height*.5,0),x.halfWidth.applyMatrix4(a),x.halfHeight.applyMatrix4(a),p++}else if(y.isPointLight){const x=n.point[d];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(_),d++}else if(y.isHemisphereLight){const x=n.hemi[g];x.direction.setFromMatrixPosition(y.matrixWorld),x.direction.transformDirection(_),g++}}}return{setup:o,setupView:c,state:n}}function z_(r){const e=new rR(r),t=[],n=[];function i(h){l.camera=h,t.length=0,n.length=0}function s(h){t.push(h)}function a(h){n.push(h)}function o(){e.setup(t)}function c(h){e.setupView(t,h)}const l={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:l,setupLights:o,setupLightsView:c,pushLight:s,pushShadow:a}}function sR(r){let e=new WeakMap;function t(i,s=0){const a=e.get(i);let o;return a===void 0?(o=new z_(r),e.set(i,[o])):s>=a.length?(o=new z_(r),a.push(o)):o=a[s],o}function n(){e=new WeakMap}return{get:t,dispose:n}}const aR=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,oR=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function cR(r,e,t){let n=new Um;const i=new jt,s=new jt,a=new En,o=new E1({depthPacking:Bw}),c=new C1,l={},h=t.maxTextureSize,u={[es]:yi,[yi]:es,[qr]:qr},d=new Bs({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new jt},radius:{value:4}},vertexShader:aR,fragmentShader:oR}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new is;p.setAttribute("position",new xr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Vi(p,d),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Kx;let m=this.type;this.render=function(E,M,A){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||E.length===0)return;const T=r.getRenderTarget(),S=r.getActiveCubeFace(),b=r.getActiveMipmapLevel(),U=r.state;U.setBlending(Ps),U.buffers.color.setClear(1,1,1,1),U.buffers.depth.setTest(!0),U.setScissorTest(!1);const L=m!==Vr&&this.type===Vr,N=m===Vr&&this.type!==Vr;for(let k=0,B=E.length;k<B;k++){const z=E[k],H=z.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",z,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;i.copy(H.mapSize);const ee=H.getFrameExtents();if(i.multiply(ee),s.copy(H.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(s.x=Math.floor(h/ee.x),i.x=s.x*ee.x,H.mapSize.x=s.x),i.y>h&&(s.y=Math.floor(h/ee.y),i.y=s.y*ee.y,H.mapSize.y=s.y)),H.map===null||L===!0||N===!0){const ce=this.type!==Vr?{minFilter:ar,magFilter:ar}:{};H.map!==null&&H.map.dispose(),H.map=new ma(i.x,i.y,ce),H.map.texture.name=z.name+".shadowMap",H.camera.updateProjectionMatrix()}r.setRenderTarget(H.map),r.clear();const de=H.getViewportCount();for(let ce=0;ce<de;ce++){const Ce=H.getViewport(ce);a.set(s.x*Ce.x,s.y*Ce.y,s.x*Ce.z,s.y*Ce.w),U.viewport(a),H.updateMatrices(z,ce),n=H.getFrustum(),x(M,A,H.camera,z,this.type)}H.isPointLightShadow!==!0&&this.type===Vr&&v(H,A),H.needsUpdate=!1}m=this.type,_.needsUpdate=!1,r.setRenderTarget(T,S,b)};function v(E,M){const A=e.update(g);d.defines.VSM_SAMPLES!==E.blurSamples&&(d.defines.VSM_SAMPLES=E.blurSamples,f.defines.VSM_SAMPLES=E.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),E.mapPass===null&&(E.mapPass=new ma(i.x,i.y)),d.uniforms.shadow_pass.value=E.map.texture,d.uniforms.resolution.value=E.mapSize,d.uniforms.radius.value=E.radius,r.setRenderTarget(E.mapPass),r.clear(),r.renderBufferDirect(M,null,A,d,g,null),f.uniforms.shadow_pass.value=E.mapPass.texture,f.uniforms.resolution.value=E.mapSize,f.uniforms.radius.value=E.radius,r.setRenderTarget(E.map),r.clear(),r.renderBufferDirect(M,null,A,f,g,null)}function y(E,M,A,T){let S=null;const b=A.isPointLight===!0?E.customDistanceMaterial:E.customDepthMaterial;if(b!==void 0)S=b;else if(S=A.isPointLight===!0?c:o,r.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const U=S.uuid,L=M.uuid;let N=l[U];N===void 0&&(N={},l[U]=N);let k=N[L];k===void 0&&(k=S.clone(),N[L]=k,M.addEventListener("dispose",w)),S=k}if(S.visible=M.visible,S.wireframe=M.wireframe,T===Vr?S.side=M.shadowSide!==null?M.shadowSide:M.side:S.side=M.shadowSide!==null?M.shadowSide:u[M.side],S.alphaMap=M.alphaMap,S.alphaTest=M.alphaTest,S.map=M.map,S.clipShadows=M.clipShadows,S.clippingPlanes=M.clippingPlanes,S.clipIntersection=M.clipIntersection,S.displacementMap=M.displacementMap,S.displacementScale=M.displacementScale,S.displacementBias=M.displacementBias,S.wireframeLinewidth=M.wireframeLinewidth,S.linewidth=M.linewidth,A.isPointLight===!0&&S.isMeshDistanceMaterial===!0){const U=r.properties.get(S);U.light=A}return S}function x(E,M,A,T,S){if(E.visible===!1)return;if(E.layers.test(M.layers)&&(E.isMesh||E.isLine||E.isPoints)&&(E.castShadow||E.receiveShadow&&S===Vr)&&(!E.frustumCulled||n.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,E.matrixWorld);const L=e.update(E),N=E.material;if(Array.isArray(N)){const k=L.groups;for(let B=0,z=k.length;B<z;B++){const H=k[B],ee=N[H.materialIndex];if(ee&&ee.visible){const de=y(E,ee,T,S);E.onBeforeShadow(r,E,M,A,L,de,H),r.renderBufferDirect(A,null,L,de,E,H),E.onAfterShadow(r,E,M,A,L,de,H)}}}else if(N.visible){const k=y(E,N,T,S);E.onBeforeShadow(r,E,M,A,L,k,null),r.renderBufferDirect(A,null,L,k,E,null),E.onAfterShadow(r,E,M,A,L,k,null)}}const U=E.children;for(let L=0,N=U.length;L<N;L++)x(U[L],M,A,T,S)}function w(E){E.target.removeEventListener("dispose",w);for(const A in l){const T=l[A],S=E.target.uuid;S in T&&(T[S].dispose(),delete T[S])}}}const lR={[rp]:sp,[ap]:lp,[op]:hp,[Ao]:cp,[sp]:rp,[lp]:ap,[hp]:op,[cp]:Ao};function hR(r,e){function t(){let X=!1;const Ge=new En;let _e=null;const Me=new En(0,0,0,0);return{setMask:function(je){_e!==je&&!X&&(r.colorMask(je,je,je,je),_e=je)},setLocked:function(je){X=je},setClear:function(je,We,_t,en,Fn){Fn===!0&&(je*=en,We*=en,_t*=en),Ge.set(je,We,_t,en),Me.equals(Ge)===!1&&(r.clearColor(je,We,_t,en),Me.copy(Ge))},reset:function(){X=!1,_e=null,Me.set(-1,0,0,0)}}}function n(){let X=!1,Ge=!1,_e=null,Me=null,je=null;return{setReversed:function(We){if(Ge!==We){const _t=e.get("EXT_clip_control");We?_t.clipControlEXT(_t.LOWER_LEFT_EXT,_t.ZERO_TO_ONE_EXT):_t.clipControlEXT(_t.LOWER_LEFT_EXT,_t.NEGATIVE_ONE_TO_ONE_EXT),Ge=We;const en=je;je=null,this.setClear(en)}},getReversed:function(){return Ge},setTest:function(We){We?ye(r.DEPTH_TEST):Pe(r.DEPTH_TEST)},setMask:function(We){_e!==We&&!X&&(r.depthMask(We),_e=We)},setFunc:function(We){if(Ge&&(We=lR[We]),Me!==We){switch(We){case rp:r.depthFunc(r.NEVER);break;case sp:r.depthFunc(r.ALWAYS);break;case ap:r.depthFunc(r.LESS);break;case Ao:r.depthFunc(r.LEQUAL);break;case op:r.depthFunc(r.EQUAL);break;case cp:r.depthFunc(r.GEQUAL);break;case lp:r.depthFunc(r.GREATER);break;case hp:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Me=We}},setLocked:function(We){X=We},setClear:function(We){je!==We&&(Ge&&(We=1-We),r.clearDepth(We),je=We)},reset:function(){X=!1,_e=null,Me=null,je=null,Ge=!1}}}function i(){let X=!1,Ge=null,_e=null,Me=null,je=null,We=null,_t=null,en=null,Fn=null;return{setTest:function(Ft){X||(Ft?ye(r.STENCIL_TEST):Pe(r.STENCIL_TEST))},setMask:function(Ft){Ge!==Ft&&!X&&(r.stencilMask(Ft),Ge=Ft)},setFunc:function(Ft,fi,Yi){(_e!==Ft||Me!==fi||je!==Yi)&&(r.stencilFunc(Ft,fi,Yi),_e=Ft,Me=fi,je=Yi)},setOp:function(Ft,fi,Yi){(We!==Ft||_t!==fi||en!==Yi)&&(r.stencilOp(Ft,fi,Yi),We=Ft,_t=fi,en=Yi)},setLocked:function(Ft){X=Ft},setClear:function(Ft){Fn!==Ft&&(r.clearStencil(Ft),Fn=Ft)},reset:function(){X=!1,Ge=null,_e=null,Me=null,je=null,We=null,_t=null,en=null,Fn=null}}}const s=new t,a=new n,o=new i,c=new WeakMap,l=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,g=!1,_=null,m=null,v=null,y=null,x=null,w=null,E=null,M=new wt(0,0,0),A=0,T=!1,S=null,b=null,U=null,L=null,N=null;const k=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let B=!1,z=0;const H=r.getParameter(r.VERSION);H.indexOf("WebGL")!==-1?(z=parseFloat(/^WebGL (\d)/.exec(H)[1]),B=z>=1):H.indexOf("OpenGL ES")!==-1&&(z=parseFloat(/^OpenGL ES (\d)/.exec(H)[1]),B=z>=2);let ee=null,de={};const ce=r.getParameter(r.SCISSOR_BOX),Ce=r.getParameter(r.VIEWPORT),me=new En().fromArray(ce),j=new En().fromArray(Ce);function pe(X,Ge,_e,Me){const je=new Uint8Array(4),We=r.createTexture();r.bindTexture(X,We),r.texParameteri(X,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(X,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let _t=0;_t<_e;_t++)X===r.TEXTURE_3D||X===r.TEXTURE_2D_ARRAY?r.texImage3D(Ge,0,r.RGBA,1,1,Me,0,r.RGBA,r.UNSIGNED_BYTE,je):r.texImage2D(Ge+_t,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,je);return We}const Z={};Z[r.TEXTURE_2D]=pe(r.TEXTURE_2D,r.TEXTURE_2D,1),Z[r.TEXTURE_CUBE_MAP]=pe(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),Z[r.TEXTURE_2D_ARRAY]=pe(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Z[r.TEXTURE_3D]=pe(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),a.setClear(1),o.setClear(0),ye(r.DEPTH_TEST),a.setFunc(Ao),Ee(!1),O(Bg),ye(r.CULL_FACE),F(Ps);function ye(X){h[X]!==!0&&(r.enable(X),h[X]=!0)}function Pe(X){h[X]!==!1&&(r.disable(X),h[X]=!1)}function Ie(X,Ge){return u[X]!==Ge?(r.bindFramebuffer(X,Ge),u[X]=Ge,X===r.DRAW_FRAMEBUFFER&&(u[r.FRAMEBUFFER]=Ge),X===r.FRAMEBUFFER&&(u[r.DRAW_FRAMEBUFFER]=Ge),!0):!1}function Te(X,Ge){let _e=f,Me=!1;if(X){_e=d.get(Ge),_e===void 0&&(_e=[],d.set(Ge,_e));const je=X.textures;if(_e.length!==je.length||_e[0]!==r.COLOR_ATTACHMENT0){for(let We=0,_t=je.length;We<_t;We++)_e[We]=r.COLOR_ATTACHMENT0+We;_e.length=je.length,Me=!0}}else _e[0]!==r.BACK&&(_e[0]=r.BACK,Me=!0);Me&&r.drawBuffers(_e)}function Je(X){return p!==X?(r.useProgram(X),p=X,!0):!1}const fe={[oa]:r.FUNC_ADD,[hw]:r.FUNC_SUBTRACT,[uw]:r.FUNC_REVERSE_SUBTRACT};fe[dw]=r.MIN,fe[fw]=r.MAX;const xe={[pw]:r.ZERO,[mw]:r.ONE,[gw]:r.SRC_COLOR,[np]:r.SRC_ALPHA,[Mw]:r.SRC_ALPHA_SATURATE,[yw]:r.DST_COLOR,[vw]:r.DST_ALPHA,[_w]:r.ONE_MINUS_SRC_COLOR,[ip]:r.ONE_MINUS_SRC_ALPHA,[bw]:r.ONE_MINUS_DST_COLOR,[xw]:r.ONE_MINUS_DST_ALPHA,[Sw]:r.CONSTANT_COLOR,[ww]:r.ONE_MINUS_CONSTANT_COLOR,[Tw]:r.CONSTANT_ALPHA,[Ew]:r.ONE_MINUS_CONSTANT_ALPHA};function F(X,Ge,_e,Me,je,We,_t,en,Fn,Ft){if(X===Ps){g===!0&&(Pe(r.BLEND),g=!1);return}if(g===!1&&(ye(r.BLEND),g=!0),X!==lw){if(X!==_||Ft!==T){if((m!==oa||x!==oa)&&(r.blendEquation(r.FUNC_ADD),m=oa,x=oa),Ft)switch(X){case bo:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case $g:r.blendFunc(r.ONE,r.ONE);break;case kg:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case zg:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}else switch(X){case bo:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case $g:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case kg:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case zg:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}v=null,y=null,w=null,E=null,M.set(0,0,0),A=0,_=X,T=Ft}return}je=je||Ge,We=We||_e,_t=_t||Me,(Ge!==m||je!==x)&&(r.blendEquationSeparate(fe[Ge],fe[je]),m=Ge,x=je),(_e!==v||Me!==y||We!==w||_t!==E)&&(r.blendFuncSeparate(xe[_e],xe[Me],xe[We],xe[_t]),v=_e,y=Me,w=We,E=_t),(en.equals(M)===!1||Fn!==A)&&(r.blendColor(en.r,en.g,en.b,Fn),M.copy(en),A=Fn),_=X,T=!1}function Ye(X,Ge){X.side===qr?Pe(r.CULL_FACE):ye(r.CULL_FACE);let _e=X.side===yi;Ge&&(_e=!_e),Ee(_e),X.blending===bo&&X.transparent===!1?F(Ps):F(X.blending,X.blendEquation,X.blendSrc,X.blendDst,X.blendEquationAlpha,X.blendSrcAlpha,X.blendDstAlpha,X.blendColor,X.blendAlpha,X.premultipliedAlpha),a.setFunc(X.depthFunc),a.setTest(X.depthTest),a.setMask(X.depthWrite),s.setMask(X.colorWrite);const Me=X.stencilWrite;o.setTest(Me),Me&&(o.setMask(X.stencilWriteMask),o.setFunc(X.stencilFunc,X.stencilRef,X.stencilFuncMask),o.setOp(X.stencilFail,X.stencilZFail,X.stencilZPass)),se(X.polygonOffset,X.polygonOffsetFactor,X.polygonOffsetUnits),X.alphaToCoverage===!0?ye(r.SAMPLE_ALPHA_TO_COVERAGE):Pe(r.SAMPLE_ALPHA_TO_COVERAGE)}function Ee(X){S!==X&&(X?r.frontFace(r.CW):r.frontFace(r.CCW),S=X)}function O(X){X!==aw?(ye(r.CULL_FACE),X!==b&&(X===Bg?r.cullFace(r.BACK):X===ow?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Pe(r.CULL_FACE),b=X}function P(X){X!==U&&(B&&r.lineWidth(X),U=X)}function se(X,Ge,_e){X?(ye(r.POLYGON_OFFSET_FILL),(L!==Ge||N!==_e)&&(r.polygonOffset(Ge,_e),L=Ge,N=_e)):Pe(r.POLYGON_OFFSET_FILL)}function he(X){X?ye(r.SCISSOR_TEST):Pe(r.SCISSOR_TEST)}function R(X){X===void 0&&(X=r.TEXTURE0+k-1),ee!==X&&(r.activeTexture(X),ee=X)}function C(X,Ge,_e){_e===void 0&&(ee===null?_e=r.TEXTURE0+k-1:_e=ee);let Me=de[_e];Me===void 0&&(Me={type:void 0,texture:void 0},de[_e]=Me),(Me.type!==X||Me.texture!==Ge)&&(ee!==_e&&(r.activeTexture(_e),ee=_e),r.bindTexture(X,Ge||Z[X]),Me.type=X,Me.texture=Ge)}function q(){const X=de[ee];X!==void 0&&X.type!==void 0&&(r.bindTexture(X.type,null),X.type=void 0,X.texture=void 0)}function Q(){try{r.compressedTexImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function oe(){try{r.compressedTexImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function K(){try{r.texSubImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function G(){try{r.texSubImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function le(){try{r.compressedTexSubImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function J(){try{r.compressedTexSubImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Oe(){try{r.texStorage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function ae(){try{r.texStorage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Ae(){try{r.texImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Qe(){try{r.texImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function nt(X){me.equals(X)===!1&&(r.scissor(X.x,X.y,X.z,X.w),me.copy(X))}function qe(X){j.equals(X)===!1&&(r.viewport(X.x,X.y,X.z,X.w),j.copy(X))}function ot(X,Ge){let _e=l.get(Ge);_e===void 0&&(_e=new WeakMap,l.set(Ge,_e));let Me=_e.get(X);Me===void 0&&(Me=r.getUniformBlockIndex(Ge,X.name),_e.set(X,Me))}function ft(X,Ge){const Me=l.get(Ge).get(X);c.get(Ge)!==Me&&(r.uniformBlockBinding(Ge,Me,X.__bindingPointIndex),c.set(Ge,Me))}function St(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),a.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},ee=null,de={},u={},d=new WeakMap,f=[],p=null,g=!1,_=null,m=null,v=null,y=null,x=null,w=null,E=null,M=new wt(0,0,0),A=0,T=!1,S=null,b=null,U=null,L=null,N=null,me.set(0,0,r.canvas.width,r.canvas.height),j.set(0,0,r.canvas.width,r.canvas.height),s.reset(),a.reset(),o.reset()}return{buffers:{color:s,depth:a,stencil:o},enable:ye,disable:Pe,bindFramebuffer:Ie,drawBuffers:Te,useProgram:Je,setBlending:F,setMaterial:Ye,setFlipSided:Ee,setCullFace:O,setLineWidth:P,setPolygonOffset:se,setScissorTest:he,activeTexture:R,bindTexture:C,unbindTexture:q,compressedTexImage2D:Q,compressedTexImage3D:oe,texImage2D:Ae,texImage3D:Qe,updateUBOMapping:ot,uniformBlockBinding:ft,texStorage2D:Oe,texStorage3D:ae,texSubImage2D:K,texSubImage3D:G,compressedTexSubImage2D:le,compressedTexSubImage3D:J,scissor:nt,viewport:qe,reset:St}}function uR(r,e,t,n,i,s,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new jt,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(R,C){return f?new OffscreenCanvas(R,C):Vc("canvas")}function g(R,C,q){let Q=1;const oe=he(R);if((oe.width>q||oe.height>q)&&(Q=q/Math.max(oe.width,oe.height)),Q<1)if(typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&R instanceof ImageBitmap||typeof VideoFrame<"u"&&R instanceof VideoFrame){const K=Math.floor(Q*oe.width),G=Math.floor(Q*oe.height);u===void 0&&(u=p(K,G));const le=C?p(K,G):u;return le.width=K,le.height=G,le.getContext("2d").drawImage(R,0,0,K,G),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+oe.width+"x"+oe.height+") to ("+K+"x"+G+")."),le}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+oe.width+"x"+oe.height+")."),R;return R}function _(R){return R.generateMipmaps}function m(R){r.generateMipmap(R)}function v(R){return R.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:R.isWebGL3DRenderTarget?r.TEXTURE_3D:R.isWebGLArrayRenderTarget||R.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function y(R,C,q,Q,oe=!1){if(R!==null){if(r[R]!==void 0)return r[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let K=C;if(C===r.RED&&(q===r.FLOAT&&(K=r.R32F),q===r.HALF_FLOAT&&(K=r.R16F),q===r.UNSIGNED_BYTE&&(K=r.R8)),C===r.RED_INTEGER&&(q===r.UNSIGNED_BYTE&&(K=r.R8UI),q===r.UNSIGNED_SHORT&&(K=r.R16UI),q===r.UNSIGNED_INT&&(K=r.R32UI),q===r.BYTE&&(K=r.R8I),q===r.SHORT&&(K=r.R16I),q===r.INT&&(K=r.R32I)),C===r.RG&&(q===r.FLOAT&&(K=r.RG32F),q===r.HALF_FLOAT&&(K=r.RG16F),q===r.UNSIGNED_BYTE&&(K=r.RG8)),C===r.RG_INTEGER&&(q===r.UNSIGNED_BYTE&&(K=r.RG8UI),q===r.UNSIGNED_SHORT&&(K=r.RG16UI),q===r.UNSIGNED_INT&&(K=r.RG32UI),q===r.BYTE&&(K=r.RG8I),q===r.SHORT&&(K=r.RG16I),q===r.INT&&(K=r.RG32I)),C===r.RGB_INTEGER&&(q===r.UNSIGNED_BYTE&&(K=r.RGB8UI),q===r.UNSIGNED_SHORT&&(K=r.RGB16UI),q===r.UNSIGNED_INT&&(K=r.RGB32UI),q===r.BYTE&&(K=r.RGB8I),q===r.SHORT&&(K=r.RGB16I),q===r.INT&&(K=r.RGB32I)),C===r.RGBA_INTEGER&&(q===r.UNSIGNED_BYTE&&(K=r.RGBA8UI),q===r.UNSIGNED_SHORT&&(K=r.RGBA16UI),q===r.UNSIGNED_INT&&(K=r.RGBA32UI),q===r.BYTE&&(K=r.RGBA8I),q===r.SHORT&&(K=r.RGBA16I),q===r.INT&&(K=r.RGBA32I)),C===r.RGB&&q===r.UNSIGNED_INT_5_9_9_9_REV&&(K=r.RGB9_E5),C===r.RGBA){const G=oe?_u:Rt.getTransfer(Q);q===r.FLOAT&&(K=r.RGBA32F),q===r.HALF_FLOAT&&(K=r.RGBA16F),q===r.UNSIGNED_BYTE&&(K=G===Jt?r.SRGB8_ALPHA8:r.RGBA8),q===r.UNSIGNED_SHORT_4_4_4_4&&(K=r.RGBA4),q===r.UNSIGNED_SHORT_5_5_5_1&&(K=r.RGB5_A1)}return(K===r.R16F||K===r.R32F||K===r.RG16F||K===r.RG32F||K===r.RGBA16F||K===r.RGBA32F)&&e.get("EXT_color_buffer_float"),K}function x(R,C){let q;return R?C===null||C===pa||C===$c?q=r.DEPTH24_STENCIL8:C===jr?q=r.DEPTH32F_STENCIL8:C===Bc&&(q=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):C===null||C===pa||C===$c?q=r.DEPTH_COMPONENT24:C===jr?q=r.DEPTH_COMPONENT32F:C===Bc&&(q=r.DEPTH_COMPONENT16),q}function w(R,C){return _(R)===!0||R.isFramebufferTexture&&R.minFilter!==ar&&R.minFilter!==vr?Math.log2(Math.max(C.width,C.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?C.mipmaps.length:1}function E(R){const C=R.target;C.removeEventListener("dispose",E),A(C),C.isVideoTexture&&h.delete(C)}function M(R){const C=R.target;C.removeEventListener("dispose",M),S(C)}function A(R){const C=n.get(R);if(C.__webglInit===void 0)return;const q=R.source,Q=d.get(q);if(Q){const oe=Q[C.__cacheKey];oe.usedTimes--,oe.usedTimes===0&&T(R),Object.keys(Q).length===0&&d.delete(q)}n.remove(R)}function T(R){const C=n.get(R);r.deleteTexture(C.__webglTexture);const q=R.source,Q=d.get(q);delete Q[C.__cacheKey],a.memory.textures--}function S(R){const C=n.get(R);if(R.depthTexture&&(R.depthTexture.dispose(),n.remove(R.depthTexture)),R.isWebGLCubeRenderTarget)for(let Q=0;Q<6;Q++){if(Array.isArray(C.__webglFramebuffer[Q]))for(let oe=0;oe<C.__webglFramebuffer[Q].length;oe++)r.deleteFramebuffer(C.__webglFramebuffer[Q][oe]);else r.deleteFramebuffer(C.__webglFramebuffer[Q]);C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer[Q])}else{if(Array.isArray(C.__webglFramebuffer))for(let Q=0;Q<C.__webglFramebuffer.length;Q++)r.deleteFramebuffer(C.__webglFramebuffer[Q]);else r.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&r.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let Q=0;Q<C.__webglColorRenderbuffer.length;Q++)C.__webglColorRenderbuffer[Q]&&r.deleteRenderbuffer(C.__webglColorRenderbuffer[Q]);C.__webglDepthRenderbuffer&&r.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const q=R.textures;for(let Q=0,oe=q.length;Q<oe;Q++){const K=n.get(q[Q]);K.__webglTexture&&(r.deleteTexture(K.__webglTexture),a.memory.textures--),n.remove(q[Q])}n.remove(R)}let b=0;function U(){b=0}function L(){const R=b;return R>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+i.maxTextures),b+=1,R}function N(R){const C=[];return C.push(R.wrapS),C.push(R.wrapT),C.push(R.wrapR||0),C.push(R.magFilter),C.push(R.minFilter),C.push(R.anisotropy),C.push(R.internalFormat),C.push(R.format),C.push(R.type),C.push(R.generateMipmaps),C.push(R.premultiplyAlpha),C.push(R.flipY),C.push(R.unpackAlignment),C.push(R.colorSpace),C.join()}function k(R,C){const q=n.get(R);if(R.isVideoTexture&&P(R),R.isRenderTargetTexture===!1&&R.version>0&&q.__version!==R.version){const Q=R.image;if(Q===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Q.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{j(q,R,C);return}}t.bindTexture(r.TEXTURE_2D,q.__webglTexture,r.TEXTURE0+C)}function B(R,C){const q=n.get(R);if(R.version>0&&q.__version!==R.version){j(q,R,C);return}t.bindTexture(r.TEXTURE_2D_ARRAY,q.__webglTexture,r.TEXTURE0+C)}function z(R,C){const q=n.get(R);if(R.version>0&&q.__version!==R.version){j(q,R,C);return}t.bindTexture(r.TEXTURE_3D,q.__webglTexture,r.TEXTURE0+C)}function H(R,C){const q=n.get(R);if(R.version>0&&q.__version!==R.version){pe(q,R,C);return}t.bindTexture(r.TEXTURE_CUBE_MAP,q.__webglTexture,r.TEXTURE0+C)}const ee={[gu]:r.REPEAT,[la]:r.CLAMP_TO_EDGE,[fp]:r.MIRRORED_REPEAT},de={[ar]:r.NEAREST,[Ow]:r.NEAREST_MIPMAP_NEAREST,[Ll]:r.NEAREST_MIPMAP_LINEAR,[vr]:r.LINEAR,[_d]:r.LINEAR_MIPMAP_NEAREST,[ha]:r.LINEAR_MIPMAP_LINEAR},ce={[kw]:r.NEVER,[qw]:r.ALWAYS,[zw]:r.LESS,[hy]:r.LEQUAL,[Vw]:r.EQUAL,[Ww]:r.GEQUAL,[Hw]:r.GREATER,[Gw]:r.NOTEQUAL};function Ce(R,C){if(C.type===jr&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===vr||C.magFilter===_d||C.magFilter===Ll||C.magFilter===ha||C.minFilter===vr||C.minFilter===_d||C.minFilter===Ll||C.minFilter===ha)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(R,r.TEXTURE_WRAP_S,ee[C.wrapS]),r.texParameteri(R,r.TEXTURE_WRAP_T,ee[C.wrapT]),(R===r.TEXTURE_3D||R===r.TEXTURE_2D_ARRAY)&&r.texParameteri(R,r.TEXTURE_WRAP_R,ee[C.wrapR]),r.texParameteri(R,r.TEXTURE_MAG_FILTER,de[C.magFilter]),r.texParameteri(R,r.TEXTURE_MIN_FILTER,de[C.minFilter]),C.compareFunction&&(r.texParameteri(R,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(R,r.TEXTURE_COMPARE_FUNC,ce[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===ar||C.minFilter!==Ll&&C.minFilter!==ha||C.type===jr&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const q=e.get("EXT_texture_filter_anisotropic");r.texParameterf(R,q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function me(R,C){let q=!1;R.__webglInit===void 0&&(R.__webglInit=!0,C.addEventListener("dispose",E));const Q=C.source;let oe=d.get(Q);oe===void 0&&(oe={},d.set(Q,oe));const K=N(C);if(K!==R.__cacheKey){oe[K]===void 0&&(oe[K]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,q=!0),oe[K].usedTimes++;const G=oe[R.__cacheKey];G!==void 0&&(oe[R.__cacheKey].usedTimes--,G.usedTimes===0&&T(C)),R.__cacheKey=K,R.__webglTexture=oe[K].texture}return q}function j(R,C,q){let Q=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(Q=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(Q=r.TEXTURE_3D);const oe=me(R,C),K=C.source;t.bindTexture(Q,R.__webglTexture,r.TEXTURE0+q);const G=n.get(K);if(K.version!==G.__version||oe===!0){t.activeTexture(r.TEXTURE0+q);const le=Rt.getPrimaries(Rt.workingColorSpace),J=C.colorSpace===Es?null:Rt.getPrimaries(C.colorSpace),Oe=C.colorSpace===Es||le===J?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Oe);let ae=g(C.image,!1,i.maxTextureSize);ae=se(C,ae);const Ae=s.convert(C.format,C.colorSpace),Qe=s.convert(C.type);let nt=y(C.internalFormat,Ae,Qe,C.colorSpace,C.isVideoTexture);Ce(Q,C);let qe;const ot=C.mipmaps,ft=C.isVideoTexture!==!0,St=G.__version===void 0||oe===!0,X=K.dataReady,Ge=w(C,ae);if(C.isDepthTexture)nt=x(C.format===zc,C.type),St&&(ft?t.texStorage2D(r.TEXTURE_2D,1,nt,ae.width,ae.height):t.texImage2D(r.TEXTURE_2D,0,nt,ae.width,ae.height,0,Ae,Qe,null));else if(C.isDataTexture)if(ot.length>0){ft&&St&&t.texStorage2D(r.TEXTURE_2D,Ge,nt,ot[0].width,ot[0].height);for(let _e=0,Me=ot.length;_e<Me;_e++)qe=ot[_e],ft?X&&t.texSubImage2D(r.TEXTURE_2D,_e,0,0,qe.width,qe.height,Ae,Qe,qe.data):t.texImage2D(r.TEXTURE_2D,_e,nt,qe.width,qe.height,0,Ae,Qe,qe.data);C.generateMipmaps=!1}else ft?(St&&t.texStorage2D(r.TEXTURE_2D,Ge,nt,ae.width,ae.height),X&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,ae.width,ae.height,Ae,Qe,ae.data)):t.texImage2D(r.TEXTURE_2D,0,nt,ae.width,ae.height,0,Ae,Qe,ae.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){ft&&St&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ge,nt,ot[0].width,ot[0].height,ae.depth);for(let _e=0,Me=ot.length;_e<Me;_e++)if(qe=ot[_e],C.format!==sr)if(Ae!==null)if(ft){if(X)if(C.layerUpdates.size>0){const je=__(qe.width,qe.height,C.format,C.type);for(const We of C.layerUpdates){const _t=qe.data.subarray(We*je/qe.data.BYTES_PER_ELEMENT,(We+1)*je/qe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,_e,0,0,We,qe.width,qe.height,1,Ae,_t)}C.clearLayerUpdates()}else t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,_e,0,0,0,qe.width,qe.height,ae.depth,Ae,qe.data)}else t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,_e,nt,qe.width,qe.height,ae.depth,0,qe.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else ft?X&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,_e,0,0,0,qe.width,qe.height,ae.depth,Ae,Qe,qe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,_e,nt,qe.width,qe.height,ae.depth,0,Ae,Qe,qe.data)}else{ft&&St&&t.texStorage2D(r.TEXTURE_2D,Ge,nt,ot[0].width,ot[0].height);for(let _e=0,Me=ot.length;_e<Me;_e++)qe=ot[_e],C.format!==sr?Ae!==null?ft?X&&t.compressedTexSubImage2D(r.TEXTURE_2D,_e,0,0,qe.width,qe.height,Ae,qe.data):t.compressedTexImage2D(r.TEXTURE_2D,_e,nt,qe.width,qe.height,0,qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ft?X&&t.texSubImage2D(r.TEXTURE_2D,_e,0,0,qe.width,qe.height,Ae,Qe,qe.data):t.texImage2D(r.TEXTURE_2D,_e,nt,qe.width,qe.height,0,Ae,Qe,qe.data)}else if(C.isDataArrayTexture)if(ft){if(St&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ge,nt,ae.width,ae.height,ae.depth),X)if(C.layerUpdates.size>0){const _e=__(ae.width,ae.height,C.format,C.type);for(const Me of C.layerUpdates){const je=ae.data.subarray(Me*_e/ae.data.BYTES_PER_ELEMENT,(Me+1)*_e/ae.data.BYTES_PER_ELEMENT);t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,Me,ae.width,ae.height,1,Ae,Qe,je)}C.clearLayerUpdates()}else t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,ae.width,ae.height,ae.depth,Ae,Qe,ae.data)}else t.texImage3D(r.TEXTURE_2D_ARRAY,0,nt,ae.width,ae.height,ae.depth,0,Ae,Qe,ae.data);else if(C.isData3DTexture)ft?(St&&t.texStorage3D(r.TEXTURE_3D,Ge,nt,ae.width,ae.height,ae.depth),X&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,ae.width,ae.height,ae.depth,Ae,Qe,ae.data)):t.texImage3D(r.TEXTURE_3D,0,nt,ae.width,ae.height,ae.depth,0,Ae,Qe,ae.data);else if(C.isFramebufferTexture){if(St)if(ft)t.texStorage2D(r.TEXTURE_2D,Ge,nt,ae.width,ae.height);else{let _e=ae.width,Me=ae.height;for(let je=0;je<Ge;je++)t.texImage2D(r.TEXTURE_2D,je,nt,_e,Me,0,Ae,Qe,null),_e>>=1,Me>>=1}}else if(ot.length>0){if(ft&&St){const _e=he(ot[0]);t.texStorage2D(r.TEXTURE_2D,Ge,nt,_e.width,_e.height)}for(let _e=0,Me=ot.length;_e<Me;_e++)qe=ot[_e],ft?X&&t.texSubImage2D(r.TEXTURE_2D,_e,0,0,Ae,Qe,qe):t.texImage2D(r.TEXTURE_2D,_e,nt,Ae,Qe,qe);C.generateMipmaps=!1}else if(ft){if(St){const _e=he(ae);t.texStorage2D(r.TEXTURE_2D,Ge,nt,_e.width,_e.height)}X&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ae,Qe,ae)}else t.texImage2D(r.TEXTURE_2D,0,nt,Ae,Qe,ae);_(C)&&m(Q),G.__version=K.version,C.onUpdate&&C.onUpdate(C)}R.__version=C.version}function pe(R,C,q){if(C.image.length!==6)return;const Q=me(R,C),oe=C.source;t.bindTexture(r.TEXTURE_CUBE_MAP,R.__webglTexture,r.TEXTURE0+q);const K=n.get(oe);if(oe.version!==K.__version||Q===!0){t.activeTexture(r.TEXTURE0+q);const G=Rt.getPrimaries(Rt.workingColorSpace),le=C.colorSpace===Es?null:Rt.getPrimaries(C.colorSpace),J=C.colorSpace===Es||G===le?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,J);const Oe=C.isCompressedTexture||C.image[0].isCompressedTexture,ae=C.image[0]&&C.image[0].isDataTexture,Ae=[];for(let Me=0;Me<6;Me++)!Oe&&!ae?Ae[Me]=g(C.image[Me],!0,i.maxCubemapSize):Ae[Me]=ae?C.image[Me].image:C.image[Me],Ae[Me]=se(C,Ae[Me]);const Qe=Ae[0],nt=s.convert(C.format,C.colorSpace),qe=s.convert(C.type),ot=y(C.internalFormat,nt,qe,C.colorSpace),ft=C.isVideoTexture!==!0,St=K.__version===void 0||Q===!0,X=oe.dataReady;let Ge=w(C,Qe);Ce(r.TEXTURE_CUBE_MAP,C);let _e;if(Oe){ft&&St&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ge,ot,Qe.width,Qe.height);for(let Me=0;Me<6;Me++){_e=Ae[Me].mipmaps;for(let je=0;je<_e.length;je++){const We=_e[je];C.format!==sr?nt!==null?ft?X&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,je,0,0,We.width,We.height,nt,We.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,je,ot,We.width,We.height,0,We.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ft?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,je,0,0,We.width,We.height,nt,qe,We.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,je,ot,We.width,We.height,0,nt,qe,We.data)}}}else{if(_e=C.mipmaps,ft&&St){_e.length>0&&Ge++;const Me=he(Ae[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,Ge,ot,Me.width,Me.height)}for(let Me=0;Me<6;Me++)if(ae){ft?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0,0,0,Ae[Me].width,Ae[Me].height,nt,qe,Ae[Me].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0,ot,Ae[Me].width,Ae[Me].height,0,nt,qe,Ae[Me].data);for(let je=0;je<_e.length;je++){const _t=_e[je].image[Me].image;ft?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,je+1,0,0,_t.width,_t.height,nt,qe,_t.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,je+1,ot,_t.width,_t.height,0,nt,qe,_t.data)}}else{ft?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0,0,0,nt,qe,Ae[Me]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0,ot,nt,qe,Ae[Me]);for(let je=0;je<_e.length;je++){const We=_e[je];ft?X&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,je+1,0,0,nt,qe,We.image[Me]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,je+1,ot,nt,qe,We.image[Me])}}}_(C)&&m(r.TEXTURE_CUBE_MAP),K.__version=oe.version,C.onUpdate&&C.onUpdate(C)}R.__version=C.version}function Z(R,C,q,Q,oe,K){const G=s.convert(q.format,q.colorSpace),le=s.convert(q.type),J=y(q.internalFormat,G,le,q.colorSpace),Oe=n.get(C),ae=n.get(q);if(ae.__renderTarget=C,!Oe.__hasExternalTextures){const Ae=Math.max(1,C.width>>K),Qe=Math.max(1,C.height>>K);oe===r.TEXTURE_3D||oe===r.TEXTURE_2D_ARRAY?t.texImage3D(oe,K,J,Ae,Qe,C.depth,0,G,le,null):t.texImage2D(oe,K,J,Ae,Qe,0,G,le,null)}t.bindFramebuffer(r.FRAMEBUFFER,R),O(C)?o.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,Q,oe,ae.__webglTexture,0,Ee(C)):(oe===r.TEXTURE_2D||oe>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&oe<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,Q,oe,ae.__webglTexture,K),t.bindFramebuffer(r.FRAMEBUFFER,null)}function ye(R,C,q){if(r.bindRenderbuffer(r.RENDERBUFFER,R),C.depthBuffer){const Q=C.depthTexture,oe=Q&&Q.isDepthTexture?Q.type:null,K=x(C.stencilBuffer,oe),G=C.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,le=Ee(C);O(C)?o.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,le,K,C.width,C.height):q?r.renderbufferStorageMultisample(r.RENDERBUFFER,le,K,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,K,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,G,r.RENDERBUFFER,R)}else{const Q=C.textures;for(let oe=0;oe<Q.length;oe++){const K=Q[oe],G=s.convert(K.format,K.colorSpace),le=s.convert(K.type),J=y(K.internalFormat,G,le,K.colorSpace),Oe=Ee(C);q&&O(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Oe,J,C.width,C.height):O(C)?o.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Oe,J,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,J,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Pe(R,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,R),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Q=n.get(C.depthTexture);Q.__renderTarget=C,(!Q.__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),k(C.depthTexture,0);const oe=Q.__webglTexture,K=Ee(C);if(C.depthTexture.format===kc)O(C)?o.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,oe,0,K):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,oe,0);else if(C.depthTexture.format===zc)O(C)?o.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,oe,0,K):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,oe,0);else throw new Error("Unknown depthTexture format")}function Ie(R){const C=n.get(R),q=R.isWebGLCubeRenderTarget===!0;if(C.__boundDepthTexture!==R.depthTexture){const Q=R.depthTexture;if(C.__depthDisposeCallback&&C.__depthDisposeCallback(),Q){const oe=()=>{delete C.__boundDepthTexture,delete C.__depthDisposeCallback,Q.removeEventListener("dispose",oe)};Q.addEventListener("dispose",oe),C.__depthDisposeCallback=oe}C.__boundDepthTexture=Q}if(R.depthTexture&&!C.__autoAllocateDepthBuffer){if(q)throw new Error("target.depthTexture not supported in Cube render targets");Pe(C.__webglFramebuffer,R)}else if(q){C.__webglDepthbuffer=[];for(let Q=0;Q<6;Q++)if(t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[Q]),C.__webglDepthbuffer[Q]===void 0)C.__webglDepthbuffer[Q]=r.createRenderbuffer(),ye(C.__webglDepthbuffer[Q],R,!1);else{const oe=R.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,K=C.__webglDepthbuffer[Q];r.bindRenderbuffer(r.RENDERBUFFER,K),r.framebufferRenderbuffer(r.FRAMEBUFFER,oe,r.RENDERBUFFER,K)}}else if(t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer===void 0)C.__webglDepthbuffer=r.createRenderbuffer(),ye(C.__webglDepthbuffer,R,!1);else{const Q=R.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,oe=C.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,oe),r.framebufferRenderbuffer(r.FRAMEBUFFER,Q,r.RENDERBUFFER,oe)}t.bindFramebuffer(r.FRAMEBUFFER,null)}function Te(R,C,q){const Q=n.get(R);C!==void 0&&Z(Q.__webglFramebuffer,R,R.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),q!==void 0&&Ie(R)}function Je(R){const C=R.texture,q=n.get(R),Q=n.get(C);R.addEventListener("dispose",M);const oe=R.textures,K=R.isWebGLCubeRenderTarget===!0,G=oe.length>1;if(G||(Q.__webglTexture===void 0&&(Q.__webglTexture=r.createTexture()),Q.__version=C.version,a.memory.textures++),K){q.__webglFramebuffer=[];for(let le=0;le<6;le++)if(C.mipmaps&&C.mipmaps.length>0){q.__webglFramebuffer[le]=[];for(let J=0;J<C.mipmaps.length;J++)q.__webglFramebuffer[le][J]=r.createFramebuffer()}else q.__webglFramebuffer[le]=r.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){q.__webglFramebuffer=[];for(let le=0;le<C.mipmaps.length;le++)q.__webglFramebuffer[le]=r.createFramebuffer()}else q.__webglFramebuffer=r.createFramebuffer();if(G)for(let le=0,J=oe.length;le<J;le++){const Oe=n.get(oe[le]);Oe.__webglTexture===void 0&&(Oe.__webglTexture=r.createTexture(),a.memory.textures++)}if(R.samples>0&&O(R)===!1){q.__webglMultisampledFramebuffer=r.createFramebuffer(),q.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,q.__webglMultisampledFramebuffer);for(let le=0;le<oe.length;le++){const J=oe[le];q.__webglColorRenderbuffer[le]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,q.__webglColorRenderbuffer[le]);const Oe=s.convert(J.format,J.colorSpace),ae=s.convert(J.type),Ae=y(J.internalFormat,Oe,ae,J.colorSpace,R.isXRRenderTarget===!0),Qe=Ee(R);r.renderbufferStorageMultisample(r.RENDERBUFFER,Qe,Ae,R.width,R.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+le,r.RENDERBUFFER,q.__webglColorRenderbuffer[le])}r.bindRenderbuffer(r.RENDERBUFFER,null),R.depthBuffer&&(q.__webglDepthRenderbuffer=r.createRenderbuffer(),ye(q.__webglDepthRenderbuffer,R,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(K){t.bindTexture(r.TEXTURE_CUBE_MAP,Q.__webglTexture),Ce(r.TEXTURE_CUBE_MAP,C);for(let le=0;le<6;le++)if(C.mipmaps&&C.mipmaps.length>0)for(let J=0;J<C.mipmaps.length;J++)Z(q.__webglFramebuffer[le][J],R,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+le,J);else Z(q.__webglFramebuffer[le],R,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+le,0);_(C)&&m(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(G){for(let le=0,J=oe.length;le<J;le++){const Oe=oe[le],ae=n.get(Oe);t.bindTexture(r.TEXTURE_2D,ae.__webglTexture),Ce(r.TEXTURE_2D,Oe),Z(q.__webglFramebuffer,R,Oe,r.COLOR_ATTACHMENT0+le,r.TEXTURE_2D,0),_(Oe)&&m(r.TEXTURE_2D)}t.unbindTexture()}else{let le=r.TEXTURE_2D;if((R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(le=R.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(le,Q.__webglTexture),Ce(le,C),C.mipmaps&&C.mipmaps.length>0)for(let J=0;J<C.mipmaps.length;J++)Z(q.__webglFramebuffer[J],R,C,r.COLOR_ATTACHMENT0,le,J);else Z(q.__webglFramebuffer,R,C,r.COLOR_ATTACHMENT0,le,0);_(C)&&m(le),t.unbindTexture()}R.depthBuffer&&Ie(R)}function fe(R){const C=R.textures;for(let q=0,Q=C.length;q<Q;q++){const oe=C[q];if(_(oe)){const K=v(R),G=n.get(oe).__webglTexture;t.bindTexture(K,G),m(K),t.unbindTexture()}}}const xe=[],F=[];function Ye(R){if(R.samples>0){if(O(R)===!1){const C=R.textures,q=R.width,Q=R.height;let oe=r.COLOR_BUFFER_BIT;const K=R.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,G=n.get(R),le=C.length>1;if(le)for(let J=0;J<C.length;J++)t.bindFramebuffer(r.FRAMEBUFFER,G.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+J,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,G.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+J,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,G.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,G.__webglFramebuffer);for(let J=0;J<C.length;J++){if(R.resolveDepthBuffer&&(R.depthBuffer&&(oe|=r.DEPTH_BUFFER_BIT),R.stencilBuffer&&R.resolveStencilBuffer&&(oe|=r.STENCIL_BUFFER_BIT)),le){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,G.__webglColorRenderbuffer[J]);const Oe=n.get(C[J]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Oe,0)}r.blitFramebuffer(0,0,q,Q,0,0,q,Q,oe,r.NEAREST),c===!0&&(xe.length=0,F.length=0,xe.push(r.COLOR_ATTACHMENT0+J),R.depthBuffer&&R.resolveDepthBuffer===!1&&(xe.push(K),F.push(K),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,F)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,xe))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),le)for(let J=0;J<C.length;J++){t.bindFramebuffer(r.FRAMEBUFFER,G.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+J,r.RENDERBUFFER,G.__webglColorRenderbuffer[J]);const Oe=n.get(C[J]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,G.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+J,r.TEXTURE_2D,Oe,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,G.__webglMultisampledFramebuffer)}else if(R.depthBuffer&&R.resolveDepthBuffer===!1&&c){const C=R.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[C])}}}function Ee(R){return Math.min(i.maxSamples,R.samples)}function O(R){const C=n.get(R);return R.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function P(R){const C=a.render.frame;h.get(R)!==C&&(h.set(R,C),R.update())}function se(R,C){const q=R.colorSpace,Q=R.format,oe=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||q!==Io&&q!==Es&&(Rt.getTransfer(q)===Jt?(Q!==sr||oe!==ts)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",q)),C}function he(R){return typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement?(l.width=R.naturalWidth||R.width,l.height=R.naturalHeight||R.height):typeof VideoFrame<"u"&&R instanceof VideoFrame?(l.width=R.displayWidth,l.height=R.displayHeight):(l.width=R.width,l.height=R.height),l}this.allocateTextureUnit=L,this.resetTextureUnits=U,this.setTexture2D=k,this.setTexture2DArray=B,this.setTexture3D=z,this.setTextureCube=H,this.rebindTextures=Te,this.setupRenderTarget=Je,this.updateRenderTargetMipmap=fe,this.updateMultisampleRenderTarget=Ye,this.setupDepthRenderbuffer=Ie,this.setupFrameBufferTexture=Z,this.useMultisampledRTT=O}function dR(r,e){function t(n,i=Es){let s;const a=Rt.getTransfer(i);if(n===ts)return r.UNSIGNED_BYTE;if(n===Rm)return r.UNSIGNED_SHORT_4_4_4_4;if(n===Pm)return r.UNSIGNED_SHORT_5_5_5_1;if(n===ty)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===Qx)return r.BYTE;if(n===ey)return r.SHORT;if(n===Bc)return r.UNSIGNED_SHORT;if(n===Am)return r.INT;if(n===pa)return r.UNSIGNED_INT;if(n===jr)return r.FLOAT;if(n===hl)return r.HALF_FLOAT;if(n===ny)return r.ALPHA;if(n===iy)return r.RGB;if(n===sr)return r.RGBA;if(n===ry)return r.LUMINANCE;if(n===sy)return r.LUMINANCE_ALPHA;if(n===kc)return r.DEPTH_COMPONENT;if(n===zc)return r.DEPTH_STENCIL;if(n===ay)return r.RED;if(n===Im)return r.RED_INTEGER;if(n===oy)return r.RG;if(n===Lm)return r.RG_INTEGER;if(n===Dm)return r.RGBA_INTEGER;if(n===Qh||n===eu||n===tu||n===nu)if(a===Jt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Qh)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===eu)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===tu)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===nu)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Qh)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===eu)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===tu)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===nu)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===pp||n===mp||n===gp||n===_p)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===pp)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===mp)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===gp)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===_p)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===vp||n===xp||n===yp)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===vp||n===xp)return a===Jt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===yp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===bp||n===Mp||n===Sp||n===wp||n===Tp||n===Ep||n===Cp||n===Ap||n===Rp||n===Pp||n===Ip||n===Lp||n===Dp||n===Fp)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===bp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Mp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Sp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===wp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Tp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Ep)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Cp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Ap)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Rp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Pp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Ip)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Lp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Dp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Fp)return a===Jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===iu||n===Np||n===Op)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===iu)return a===Jt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Np)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Op)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===cy||n===Up||n===Bp||n===$p)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===iu)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Up)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Bp)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===$p)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===$c?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}const fR=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,pR=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class mR{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new hr,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new Bs({vertexShader:fR,fragmentShader:pR,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Vi(new Cy(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}let gR=class extends Ho{constructor(e,t){super();const n=this;let i=null,s=1,a=null,o="local-floor",c=1,l=null,h=null,u=null,d=null,f=null,p=null;const g=new mR,_=t.getContextAttributes();let m=null,v=null;const y=[],x=[],w=new jt;let E=null;const M=new rr;M.viewport=new En;const A=new rr;A.viewport=new En;const T=[M,A],S=new U1;let b=null,U=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let pe=y[j];return pe===void 0&&(pe=new $d,y[j]=pe),pe.getTargetRaySpace()},this.getControllerGrip=function(j){let pe=y[j];return pe===void 0&&(pe=new $d,y[j]=pe),pe.getGripSpace()},this.getHand=function(j){let pe=y[j];return pe===void 0&&(pe=new $d,y[j]=pe),pe.getHandSpace()};function L(j){const pe=x.indexOf(j.inputSource);if(pe===-1)return;const Z=y[pe];Z!==void 0&&(Z.update(j.inputSource,j.frame,l||a),Z.dispatchEvent({type:j.type,data:j.inputSource}))}function N(){i.removeEventListener("select",L),i.removeEventListener("selectstart",L),i.removeEventListener("selectend",L),i.removeEventListener("squeeze",L),i.removeEventListener("squeezestart",L),i.removeEventListener("squeezeend",L),i.removeEventListener("end",N),i.removeEventListener("inputsourceschange",k);for(let j=0;j<y.length;j++){const pe=x[j];pe!==null&&(x[j]=null,y[j].disconnect(pe))}b=null,U=null,g.reset(),e.setRenderTarget(m),f=null,d=null,u=null,i=null,v=null,me.stop(),n.isPresenting=!1,e.setPixelRatio(E),e.setSize(w.width,w.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){o=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(j){l=j},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(j){if(i=j,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",L),i.addEventListener("selectstart",L),i.addEventListener("selectend",L),i.addEventListener("squeeze",L),i.addEventListener("squeezestart",L),i.addEventListener("squeezeend",L),i.addEventListener("end",N),i.addEventListener("inputsourceschange",k),_.xrCompatible!==!0&&await t.makeXRCompatible(),E=e.getPixelRatio(),e.getSize(w),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Z=null,ye=null,Pe=null;_.depth&&(Pe=_.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Z=_.stencil?zc:kc,ye=_.stencil?$c:pa);const Ie={colorFormat:t.RGBA8,depthFormat:Pe,scaleFactor:s};u=new XRWebGLBinding(i,t),d=u.createProjectionLayer(Ie),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),v=new ma(d.textureWidth,d.textureHeight,{format:sr,type:ts,depthTexture:new Ey(d.textureWidth,d.textureHeight,ye,void 0,void 0,void 0,void 0,void 0,void 0,Z),stencilBuffer:_.stencil,colorSpace:e.outputColorSpace,samples:_.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const Z={antialias:_.antialias,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,Z),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),v=new ma(f.framebufferWidth,f.framebufferHeight,{format:sr,type:ts,colorSpace:e.outputColorSpace,stencilBuffer:_.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}v.isXRRenderTarget=!0,this.setFoveation(c),l=null,a=await i.requestReferenceSpace(o),me.setContext(i),me.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return g.getDepthTexture()};function k(j){for(let pe=0;pe<j.removed.length;pe++){const Z=j.removed[pe],ye=x.indexOf(Z);ye>=0&&(x[ye]=null,y[ye].disconnect(Z))}for(let pe=0;pe<j.added.length;pe++){const Z=j.added[pe];let ye=x.indexOf(Z);if(ye===-1){for(let Ie=0;Ie<y.length;Ie++)if(Ie>=x.length){x.push(Z),ye=Ie;break}else if(x[Ie]===null){x[Ie]=Z,ye=Ie;break}if(ye===-1)break}const Pe=y[ye];Pe&&Pe.connect(Z)}}const B=new te,z=new te;function H(j,pe,Z){B.setFromMatrixPosition(pe.matrixWorld),z.setFromMatrixPosition(Z.matrixWorld);const ye=B.distanceTo(z),Pe=pe.projectionMatrix.elements,Ie=Z.projectionMatrix.elements,Te=Pe[14]/(Pe[10]-1),Je=Pe[14]/(Pe[10]+1),fe=(Pe[9]+1)/Pe[5],xe=(Pe[9]-1)/Pe[5],F=(Pe[8]-1)/Pe[0],Ye=(Ie[8]+1)/Ie[0],Ee=Te*F,O=Te*Ye,P=ye/(-F+Ye),se=P*-F;if(pe.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(se),j.translateZ(P),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert(),Pe[10]===-1)j.projectionMatrix.copy(pe.projectionMatrix),j.projectionMatrixInverse.copy(pe.projectionMatrixInverse);else{const he=Te+P,R=Je+P,C=Ee-se,q=O+(ye-se),Q=fe*Je/R*he,oe=xe*Je/R*he;j.projectionMatrix.makePerspective(C,q,Q,oe,he,R),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}}function ee(j,pe){pe===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(pe.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(i===null)return;let pe=j.near,Z=j.far;g.texture!==null&&(g.depthNear>0&&(pe=g.depthNear),g.depthFar>0&&(Z=g.depthFar)),S.near=A.near=M.near=pe,S.far=A.far=M.far=Z,(b!==S.near||U!==S.far)&&(i.updateRenderState({depthNear:S.near,depthFar:S.far}),b=S.near,U=S.far),M.layers.mask=j.layers.mask|2,A.layers.mask=j.layers.mask|4,S.layers.mask=M.layers.mask|A.layers.mask;const ye=j.parent,Pe=S.cameras;ee(S,ye);for(let Ie=0;Ie<Pe.length;Ie++)ee(Pe[Ie],ye);Pe.length===2?H(S,M,A):S.projectionMatrix.copy(M.projectionMatrix),de(j,S,ye)};function de(j,pe,Z){Z===null?j.matrix.copy(pe.matrixWorld):(j.matrix.copy(Z.matrixWorld),j.matrix.invert(),j.matrix.multiply(pe.matrixWorld)),j.matrix.decompose(j.position,j.quaternion,j.scale),j.updateMatrixWorld(!0),j.projectionMatrix.copy(pe.projectionMatrix),j.projectionMatrixInverse.copy(pe.projectionMatrixInverse),j.isPerspectiveCamera&&(j.fov=kp*2*Math.atan(1/j.projectionMatrix.elements[5]),j.zoom=1)}this.getCamera=function(){return S},this.getFoveation=function(){if(!(d===null&&f===null))return c},this.setFoveation=function(j){c=j,d!==null&&(d.fixedFoveation=j),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=j)},this.hasDepthSensing=function(){return g.texture!==null},this.getDepthSensingMesh=function(){return g.getMesh(S)};let ce=null;function Ce(j,pe){if(h=pe.getViewerPose(l||a),p=pe,h!==null){const Z=h.views;f!==null&&(e.setRenderTargetFramebuffer(v,f.framebuffer),e.setRenderTarget(v));let ye=!1;Z.length!==S.cameras.length&&(S.cameras.length=0,ye=!0);for(let Te=0;Te<Z.length;Te++){const Je=Z[Te];let fe=null;if(f!==null)fe=f.getViewport(Je);else{const F=u.getViewSubImage(d,Je);fe=F.viewport,Te===0&&(e.setRenderTargetTextures(v,F.colorTexture,F.depthStencilTexture),e.setRenderTarget(v))}let xe=T[Te];xe===void 0&&(xe=new rr,xe.layers.enable(Te),xe.viewport=new En,T[Te]=xe),xe.matrix.fromArray(Je.transform.matrix),xe.matrix.decompose(xe.position,xe.quaternion,xe.scale),xe.projectionMatrix.fromArray(Je.projectionMatrix),xe.projectionMatrixInverse.copy(xe.projectionMatrix).invert(),xe.viewport.set(fe.x,fe.y,fe.width,fe.height),Te===0&&(S.matrix.copy(xe.matrix),S.matrix.decompose(S.position,S.quaternion,S.scale)),ye===!0&&S.cameras.push(xe)}const Pe=i.enabledFeatures;if(Pe&&Pe.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&u){const Te=u.getDepthInformation(Z[0]);Te&&Te.isValid&&Te.texture&&g.init(e,Te,i.renderState)}}for(let Z=0;Z<y.length;Z++){const ye=x[Z],Pe=y[Z];ye!==null&&Pe!==void 0&&Pe.update(ye,pe,l||a)}ce&&ce(j,pe),pe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:pe}),p=null}const me=new Fy;me.setAnimationLoop(Ce),this.setAnimationLoop=function(j){ce=j},this.dispose=function(){}}};const ea=new Us,_R=new bn;function vR(r,e){function t(_,m){_.matrixAutoUpdate===!0&&_.updateMatrix(),m.value.copy(_.matrix)}function n(_,m){m.color.getRGB(_.fogColor.value,wy(r)),m.isFog?(_.fogNear.value=m.near,_.fogFar.value=m.far):m.isFogExp2&&(_.fogDensity.value=m.density)}function i(_,m,v,y,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?s(_,m):m.isMeshToonMaterial?(s(_,m),u(_,m)):m.isMeshPhongMaterial?(s(_,m),h(_,m)):m.isMeshStandardMaterial?(s(_,m),d(_,m),m.isMeshPhysicalMaterial&&f(_,m,x)):m.isMeshMatcapMaterial?(s(_,m),p(_,m)):m.isMeshDepthMaterial?s(_,m):m.isMeshDistanceMaterial?(s(_,m),g(_,m)):m.isMeshNormalMaterial?s(_,m):m.isLineBasicMaterial?(a(_,m),m.isLineDashedMaterial&&o(_,m)):m.isPointsMaterial?c(_,m,v,y):m.isSpriteMaterial?l(_,m):m.isShadowMaterial?(_.color.value.copy(m.color),_.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function s(_,m){_.opacity.value=m.opacity,m.color&&_.diffuse.value.copy(m.color),m.emissive&&_.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(_.map.value=m.map,t(m.map,_.mapTransform)),m.alphaMap&&(_.alphaMap.value=m.alphaMap,t(m.alphaMap,_.alphaMapTransform)),m.bumpMap&&(_.bumpMap.value=m.bumpMap,t(m.bumpMap,_.bumpMapTransform),_.bumpScale.value=m.bumpScale,m.side===yi&&(_.bumpScale.value*=-1)),m.normalMap&&(_.normalMap.value=m.normalMap,t(m.normalMap,_.normalMapTransform),_.normalScale.value.copy(m.normalScale),m.side===yi&&_.normalScale.value.negate()),m.displacementMap&&(_.displacementMap.value=m.displacementMap,t(m.displacementMap,_.displacementMapTransform),_.displacementScale.value=m.displacementScale,_.displacementBias.value=m.displacementBias),m.emissiveMap&&(_.emissiveMap.value=m.emissiveMap,t(m.emissiveMap,_.emissiveMapTransform)),m.specularMap&&(_.specularMap.value=m.specularMap,t(m.specularMap,_.specularMapTransform)),m.alphaTest>0&&(_.alphaTest.value=m.alphaTest);const v=e.get(m),y=v.envMap,x=v.envMapRotation;y&&(_.envMap.value=y,ea.copy(x),ea.x*=-1,ea.y*=-1,ea.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(ea.y*=-1,ea.z*=-1),_.envMapRotation.value.setFromMatrix4(_R.makeRotationFromEuler(ea)),_.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=m.reflectivity,_.ior.value=m.ior,_.refractionRatio.value=m.refractionRatio),m.lightMap&&(_.lightMap.value=m.lightMap,_.lightMapIntensity.value=m.lightMapIntensity,t(m.lightMap,_.lightMapTransform)),m.aoMap&&(_.aoMap.value=m.aoMap,_.aoMapIntensity.value=m.aoMapIntensity,t(m.aoMap,_.aoMapTransform))}function a(_,m){_.diffuse.value.copy(m.color),_.opacity.value=m.opacity,m.map&&(_.map.value=m.map,t(m.map,_.mapTransform))}function o(_,m){_.dashSize.value=m.dashSize,_.totalSize.value=m.dashSize+m.gapSize,_.scale.value=m.scale}function c(_,m,v,y){_.diffuse.value.copy(m.color),_.opacity.value=m.opacity,_.size.value=m.size*v,_.scale.value=y*.5,m.map&&(_.map.value=m.map,t(m.map,_.uvTransform)),m.alphaMap&&(_.alphaMap.value=m.alphaMap,t(m.alphaMap,_.alphaMapTransform)),m.alphaTest>0&&(_.alphaTest.value=m.alphaTest)}function l(_,m){_.diffuse.value.copy(m.color),_.opacity.value=m.opacity,_.rotation.value=m.rotation,m.map&&(_.map.value=m.map,t(m.map,_.mapTransform)),m.alphaMap&&(_.alphaMap.value=m.alphaMap,t(m.alphaMap,_.alphaMapTransform)),m.alphaTest>0&&(_.alphaTest.value=m.alphaTest)}function h(_,m){_.specular.value.copy(m.specular),_.shininess.value=Math.max(m.shininess,1e-4)}function u(_,m){m.gradientMap&&(_.gradientMap.value=m.gradientMap)}function d(_,m){_.metalness.value=m.metalness,m.metalnessMap&&(_.metalnessMap.value=m.metalnessMap,t(m.metalnessMap,_.metalnessMapTransform)),_.roughness.value=m.roughness,m.roughnessMap&&(_.roughnessMap.value=m.roughnessMap,t(m.roughnessMap,_.roughnessMapTransform)),m.envMap&&(_.envMapIntensity.value=m.envMapIntensity)}function f(_,m,v){_.ior.value=m.ior,m.sheen>0&&(_.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),_.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(_.sheenColorMap.value=m.sheenColorMap,t(m.sheenColorMap,_.sheenColorMapTransform)),m.sheenRoughnessMap&&(_.sheenRoughnessMap.value=m.sheenRoughnessMap,t(m.sheenRoughnessMap,_.sheenRoughnessMapTransform))),m.clearcoat>0&&(_.clearcoat.value=m.clearcoat,_.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(_.clearcoatMap.value=m.clearcoatMap,t(m.clearcoatMap,_.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,t(m.clearcoatRoughnessMap,_.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(_.clearcoatNormalMap.value=m.clearcoatNormalMap,t(m.clearcoatNormalMap,_.clearcoatNormalMapTransform),_.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===yi&&_.clearcoatNormalScale.value.negate())),m.dispersion>0&&(_.dispersion.value=m.dispersion),m.iridescence>0&&(_.iridescence.value=m.iridescence,_.iridescenceIOR.value=m.iridescenceIOR,_.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(_.iridescenceMap.value=m.iridescenceMap,t(m.iridescenceMap,_.iridescenceMapTransform)),m.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=m.iridescenceThicknessMap,t(m.iridescenceThicknessMap,_.iridescenceThicknessMapTransform))),m.transmission>0&&(_.transmission.value=m.transmission,_.transmissionSamplerMap.value=v.texture,_.transmissionSamplerSize.value.set(v.width,v.height),m.transmissionMap&&(_.transmissionMap.value=m.transmissionMap,t(m.transmissionMap,_.transmissionMapTransform)),_.thickness.value=m.thickness,m.thicknessMap&&(_.thicknessMap.value=m.thicknessMap,t(m.thicknessMap,_.thicknessMapTransform)),_.attenuationDistance.value=m.attenuationDistance,_.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(_.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(_.anisotropyMap.value=m.anisotropyMap,t(m.anisotropyMap,_.anisotropyMapTransform))),_.specularIntensity.value=m.specularIntensity,_.specularColor.value.copy(m.specularColor),m.specularColorMap&&(_.specularColorMap.value=m.specularColorMap,t(m.specularColorMap,_.specularColorMapTransform)),m.specularIntensityMap&&(_.specularIntensityMap.value=m.specularIntensityMap,t(m.specularIntensityMap,_.specularIntensityMapTransform))}function p(_,m){m.matcap&&(_.matcap.value=m.matcap)}function g(_,m){const v=e.get(m).light;_.referencePosition.value.setFromMatrixPosition(v.matrixWorld),_.nearDistance.value=v.shadow.camera.near,_.farDistance.value=v.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function xR(r,e,t,n){let i={},s={},a=[];const o=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function c(v,y){const x=y.program;n.uniformBlockBinding(v,x)}function l(v,y){let x=i[v.id];x===void 0&&(p(v),x=h(v),i[v.id]=x,v.addEventListener("dispose",_));const w=y.program;n.updateUBOMapping(v,w);const E=e.render.frame;s[v.id]!==E&&(d(v),s[v.id]=E)}function h(v){const y=u();v.__bindingPointIndex=y;const x=r.createBuffer(),w=v.__size,E=v.usage;return r.bindBuffer(r.UNIFORM_BUFFER,x),r.bufferData(r.UNIFORM_BUFFER,w,E),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,y,x),x}function u(){for(let v=0;v<o;v++)if(a.indexOf(v)===-1)return a.push(v),v;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(v){const y=i[v.id],x=v.uniforms,w=v.__cache;r.bindBuffer(r.UNIFORM_BUFFER,y);for(let E=0,M=x.length;E<M;E++){const A=Array.isArray(x[E])?x[E]:[x[E]];for(let T=0,S=A.length;T<S;T++){const b=A[T];if(f(b,E,T,w)===!0){const U=b.__offset,L=Array.isArray(b.value)?b.value:[b.value];let N=0;for(let k=0;k<L.length;k++){const B=L[k],z=g(B);typeof B=="number"||typeof B=="boolean"?(b.__data[0]=B,r.bufferSubData(r.UNIFORM_BUFFER,U+N,b.__data)):B.isMatrix3?(b.__data[0]=B.elements[0],b.__data[1]=B.elements[1],b.__data[2]=B.elements[2],b.__data[3]=0,b.__data[4]=B.elements[3],b.__data[5]=B.elements[4],b.__data[6]=B.elements[5],b.__data[7]=0,b.__data[8]=B.elements[6],b.__data[9]=B.elements[7],b.__data[10]=B.elements[8],b.__data[11]=0):(B.toArray(b.__data,N),N+=z.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,U,b.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function f(v,y,x,w){const E=v.value,M=y+"_"+x;if(w[M]===void 0)return typeof E=="number"||typeof E=="boolean"?w[M]=E:w[M]=E.clone(),!0;{const A=w[M];if(typeof E=="number"||typeof E=="boolean"){if(A!==E)return w[M]=E,!0}else if(A.equals(E)===!1)return A.copy(E),!0}return!1}function p(v){const y=v.uniforms;let x=0;const w=16;for(let M=0,A=y.length;M<A;M++){const T=Array.isArray(y[M])?y[M]:[y[M]];for(let S=0,b=T.length;S<b;S++){const U=T[S],L=Array.isArray(U.value)?U.value:[U.value];for(let N=0,k=L.length;N<k;N++){const B=L[N],z=g(B),H=x%w,ee=H%z.boundary,de=H+ee;x+=ee,de!==0&&w-de<z.storage&&(x+=w-de),U.__data=new Float32Array(z.storage/Float32Array.BYTES_PER_ELEMENT),U.__offset=x,x+=z.storage}}}const E=x%w;return E>0&&(x+=w-E),v.__size=x,v.__cache={},this}function g(v){const y={boundary:0,storage:0};return typeof v=="number"||typeof v=="boolean"?(y.boundary=4,y.storage=4):v.isVector2?(y.boundary=8,y.storage=8):v.isVector3||v.isColor?(y.boundary=16,y.storage=12):v.isVector4?(y.boundary=16,y.storage=16):v.isMatrix3?(y.boundary=48,y.storage=48):v.isMatrix4?(y.boundary=64,y.storage=64):v.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",v),y}function _(v){const y=v.target;y.removeEventListener("dispose",_);const x=a.indexOf(y.__bindingPointIndex);a.splice(x,1),r.deleteBuffer(i[y.id]),delete i[y.id],delete s[y.id]}function m(){for(const v in i)r.deleteBuffer(i[v]);a=[],i={},s={}}return{bind:c,update:l,dispose:m}}let yR=class{constructor(e={}){const{canvas:t=Xw(),context:n=null,depth:i=!0,stencil:s=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=a;const p=new Uint32Array(4),g=new Int32Array(4);let _=null,m=null;const v=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Is,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const x=this;let w=!1;this._outputColorSpace=kn;let E=0,M=0,A=null,T=-1,S=null;const b=new En,U=new En;let L=null;const N=new wt(0);let k=0,B=t.width,z=t.height,H=1,ee=null,de=null;const ce=new En(0,0,B,z),Ce=new En(0,0,B,z);let me=!1;const j=new Um;let pe=!1,Z=!1;const ye=new bn,Pe=new bn,Ie=new te,Te=new En,Je={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let fe=!1;function xe(){return A===null?H:1}let F=n;function Ye(I,W){return t.getContext(I,W)}try{const I={alpha:!0,depth:i,stencil:s,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Em}`),t.addEventListener("webglcontextlost",Me,!1),t.addEventListener("webglcontextrestored",je,!1),t.addEventListener("webglcontextcreationerror",We,!1),F===null){const W="webgl2";if(F=Ye(W,I),F===null)throw Ye(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let Ee,O,P,se,he,R,C,q,Q,oe,K,G,le,J,Oe,ae,Ae,Qe,nt,qe,ot,ft,St,X;function Ge(){Ee=new PC(F),Ee.init(),ft=new dR(F,Ee),O=new SC(F,Ee,e,ft),P=new hR(F,Ee),O.reverseDepthBuffer&&d&&P.buffers.depth.setReversed(!0),se=new DC(F),he=new KA,R=new uR(F,Ee,P,he,O,ft,se),C=new TC(x),q=new RC(x),Q=new $1(F),St=new bC(F,Q),oe=new IC(F,Q,se,St),K=new NC(F,oe,Q,se),nt=new FC(F,O,R),ae=new wC(he),G=new ZA(x,C,q,Ee,O,St,ae),le=new vR(x,he),J=new QA,Oe=new sR(Ee),Qe=new yC(x,C,q,P,K,f,c),Ae=new cR(x,K,O),X=new xR(F,se,O,P),qe=new MC(F,Ee,se),ot=new LC(F,Ee,se),se.programs=G.programs,x.capabilities=O,x.extensions=Ee,x.properties=he,x.renderLists=J,x.shadowMap=Ae,x.state=P,x.info=se}Ge();const _e=new gR(x,F);this.xr=_e,this.getContext=function(){return F},this.getContextAttributes=function(){return F.getContextAttributes()},this.forceContextLoss=function(){const I=Ee.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=Ee.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return H},this.setPixelRatio=function(I){I!==void 0&&(H=I,this.setSize(B,z,!1))},this.getSize=function(I){return I.set(B,z)},this.setSize=function(I,W,ne=!0){if(_e.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}B=I,z=W,t.width=Math.floor(I*H),t.height=Math.floor(W*H),ne===!0&&(t.style.width=I+"px",t.style.height=W+"px"),this.setViewport(0,0,I,W)},this.getDrawingBufferSize=function(I){return I.set(B*H,z*H).floor()},this.setDrawingBufferSize=function(I,W,ne){B=I,z=W,H=ne,t.width=Math.floor(I*ne),t.height=Math.floor(W*ne),this.setViewport(0,0,I,W)},this.getCurrentViewport=function(I){return I.copy(b)},this.getViewport=function(I){return I.copy(ce)},this.setViewport=function(I,W,ne,ie){I.isVector4?ce.set(I.x,I.y,I.z,I.w):ce.set(I,W,ne,ie),P.viewport(b.copy(ce).multiplyScalar(H).round())},this.getScissor=function(I){return I.copy(Ce)},this.setScissor=function(I,W,ne,ie){I.isVector4?Ce.set(I.x,I.y,I.z,I.w):Ce.set(I,W,ne,ie),P.scissor(U.copy(Ce).multiplyScalar(H).round())},this.getScissorTest=function(){return me},this.setScissorTest=function(I){P.setScissorTest(me=I)},this.setOpaqueSort=function(I){ee=I},this.setTransparentSort=function(I){de=I},this.getClearColor=function(I){return I.copy(Qe.getClearColor())},this.setClearColor=function(){Qe.setClearColor(...arguments)},this.getClearAlpha=function(){return Qe.getClearAlpha()},this.setClearAlpha=function(){Qe.setClearAlpha(...arguments)},this.clear=function(I=!0,W=!0,ne=!0){let ie=0;if(I){let Y=!1;if(A!==null){const Re=A.texture.format;Y=Re===Dm||Re===Lm||Re===Im}if(Y){const Re=A.texture.type,Le=Re===ts||Re===pa||Re===Bc||Re===$c||Re===Rm||Re===Pm,Xe=Qe.getClearColor(),$e=Qe.getClearAlpha(),gt=Xe.r,mt=Xe.g,ut=Xe.b;Le?(p[0]=gt,p[1]=mt,p[2]=ut,p[3]=$e,F.clearBufferuiv(F.COLOR,0,p)):(g[0]=gt,g[1]=mt,g[2]=ut,g[3]=$e,F.clearBufferiv(F.COLOR,0,g))}else ie|=F.COLOR_BUFFER_BIT}W&&(ie|=F.DEPTH_BUFFER_BIT),ne&&(ie|=F.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),F.clear(ie)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Me,!1),t.removeEventListener("webglcontextrestored",je,!1),t.removeEventListener("webglcontextcreationerror",We,!1),Qe.dispose(),J.dispose(),Oe.dispose(),he.dispose(),C.dispose(),q.dispose(),K.dispose(),St.dispose(),X.dispose(),G.dispose(),_e.dispose(),_e.removeEventListener("sessionstart",Pl),_e.removeEventListener("sessionend",Il),$.stop()};function Me(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function je(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const I=se.autoReset,W=Ae.enabled,ne=Ae.autoUpdate,ie=Ae.needsUpdate,Y=Ae.type;Ge(),se.autoReset=I,Ae.enabled=W,Ae.autoUpdate=ne,Ae.needsUpdate=ie,Ae.type=Y}function We(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function _t(I){const W=I.target;W.removeEventListener("dispose",_t),en(W)}function en(I){Fn(I),he.remove(I)}function Fn(I){const W=he.get(I).programs;W!==void 0&&(W.forEach(function(ne){G.releaseProgram(ne)}),I.isShaderMaterial&&G.releaseShaderCache(I))}this.renderBufferDirect=function(I,W,ne,ie,Y,Re){W===null&&(W=Je);const Le=Y.isMesh&&Y.matrixWorld.determinant()<0,Xe=zt(I,W,ne,ie,Y);P.setMaterial(ie,Le);let $e=ne.index,gt=1;if(ie.wireframe===!0){if($e=oe.getWireframeAttribute(ne),$e===void 0)return;gt=2}const mt=ne.drawRange,ut=ne.attributes.position;let Ot=mt.start*gt,Wt=(mt.start+mt.count)*gt;Re!==null&&(Ot=Math.max(Ot,Re.start*gt),Wt=Math.min(Wt,(Re.start+Re.count)*gt)),$e!==null?(Ot=Math.max(Ot,0),Wt=Math.min(Wt,$e.count)):ut!=null&&(Ot=Math.max(Ot,0),Wt=Math.min(Wt,ut.count));const Sn=Wt-Ot;if(Sn<0||Sn===1/0)return;St.setup(Y,ie,Xe,ne,$e);let xn,Bt=qe;if($e!==null&&(xn=Q.get($e),Bt=ot,Bt.setIndex(xn)),Y.isMesh)ie.wireframe===!0?(P.setLineWidth(ie.wireframeLinewidth*xe()),Bt.setMode(F.LINES)):Bt.setMode(F.TRIANGLES);else if(Y.isLine){let dt=ie.linewidth;dt===void 0&&(dt=1),P.setLineWidth(dt*xe()),Y.isLineSegments?Bt.setMode(F.LINES):Y.isLineLoop?Bt.setMode(F.LINE_LOOP):Bt.setMode(F.LINE_STRIP)}else Y.isPoints?Bt.setMode(F.POINTS):Y.isSprite&&Bt.setMode(F.TRIANGLES);if(Y.isBatchedMesh)if(Y._multiDrawInstances!==null)ru("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Bt.renderMultiDrawInstances(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount,Y._multiDrawInstances);else if(Ee.get("WEBGL_multi_draw"))Bt.renderMultiDraw(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount);else{const dt=Y._multiDrawStarts,Un=Y._multiDrawCounts,qt=Y._multiDrawCount,Zi=$e?Q.get($e).bytesPerElement:1,Ta=he.get(ie).currentProgram.getUniforms();for(let Mi=0;Mi<qt;Mi++)Ta.setValue(F,"_gl_DrawID",Mi),Bt.render(dt[Mi]/Zi,Un[Mi])}else if(Y.isInstancedMesh)Bt.renderInstances(Ot,Sn,Y.count);else if(ne.isInstancedBufferGeometry){const dt=ne._maxInstanceCount!==void 0?ne._maxInstanceCount:1/0,Un=Math.min(ne.instanceCount,dt);Bt.renderInstances(Ot,Sn,Un)}else Bt.render(Ot,Sn)};function Ft(I,W,ne){I.transparent===!0&&I.side===qr&&I.forceSinglePass===!1?(I.side=yi,I.needsUpdate=!0,lt(I,W,ne),I.side=es,I.needsUpdate=!0,lt(I,W,ne),I.side=qr):lt(I,W,ne)}this.compile=function(I,W,ne=null){ne===null&&(ne=I),m=Oe.get(ne),m.init(W),y.push(m),ne.traverseVisible(function(Y){Y.isLight&&Y.layers.test(W.layers)&&(m.pushLight(Y),Y.castShadow&&m.pushShadow(Y))}),I!==ne&&I.traverseVisible(function(Y){Y.isLight&&Y.layers.test(W.layers)&&(m.pushLight(Y),Y.castShadow&&m.pushShadow(Y))}),m.setupLights();const ie=new Set;return I.traverse(function(Y){if(!(Y.isMesh||Y.isPoints||Y.isLine||Y.isSprite))return;const Re=Y.material;if(Re)if(Array.isArray(Re))for(let Le=0;Le<Re.length;Le++){const Xe=Re[Le];Ft(Xe,ne,Y),ie.add(Xe)}else Ft(Re,ne,Y),ie.add(Re)}),m=y.pop(),ie},this.compileAsync=function(I,W,ne=null){const ie=this.compile(I,W,ne);return new Promise(Y=>{function Re(){if(ie.forEach(function(Le){he.get(Le).currentProgram.isReady()&&ie.delete(Le)}),ie.size===0){Y(I);return}setTimeout(Re,10)}Ee.get("KHR_parallel_shader_compile")!==null?Re():setTimeout(Re,10)})};let fi=null;function Yi(I){fi&&fi(I)}function Pl(){$.stop()}function Il(){$.start()}const $=new Fy;$.setAnimationLoop(Yi),typeof self<"u"&&$.setContext(self),this.setAnimationLoop=function(I){fi=I,_e.setAnimationLoop(I),I===null?$.stop():$.start()},_e.addEventListener("sessionstart",Pl),_e.addEventListener("sessionend",Il),this.render=function(I,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;if(I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),_e.enabled===!0&&_e.isPresenting===!0&&(_e.cameraAutoUpdate===!0&&_e.updateCamera(W),W=_e.getCamera()),I.isScene===!0&&I.onBeforeRender(x,I,W,A),m=Oe.get(I,y.length),m.init(W),y.push(m),Pe.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),j.setFromProjectionMatrix(Pe),Z=this.localClippingEnabled,pe=ae.init(this.clippingPlanes,Z),_=J.get(I,v.length),_.init(),v.push(_),_e.enabled===!0&&_e.isPresenting===!0){const Re=x.xr.getDepthSensingMesh();Re!==null&&re(Re,W,-1/0,x.sortObjects)}re(I,W,0,x.sortObjects),_.finish(),x.sortObjects===!0&&_.sort(ee,de),fe=_e.enabled===!1||_e.isPresenting===!1||_e.hasDepthSensing()===!1,fe&&Qe.addToRenderList(_,I),this.info.render.frame++,pe===!0&&ae.beginShadows();const ne=m.state.shadowsArray;Ae.render(ne,I,W),pe===!0&&ae.endShadows(),this.info.autoReset===!0&&this.info.reset();const ie=_.opaque,Y=_.transmissive;if(m.setupLights(),W.isArrayCamera){const Re=W.cameras;if(Y.length>0)for(let Le=0,Xe=Re.length;Le<Xe;Le++){const $e=Re[Le];ge(ie,Y,I,$e)}fe&&Qe.render(I);for(let Le=0,Xe=Re.length;Le<Xe;Le++){const $e=Re[Le];be(_,I,$e,$e.viewport)}}else Y.length>0&&ge(ie,Y,I,W),fe&&Qe.render(I),be(_,I,W);A!==null&&M===0&&(R.updateMultisampleRenderTarget(A),R.updateRenderTargetMipmap(A)),I.isScene===!0&&I.onAfterRender(x,I,W),St.resetDefaultState(),T=-1,S=null,y.pop(),y.length>0?(m=y[y.length-1],pe===!0&&ae.setGlobalState(x.clippingPlanes,m.state.camera)):m=null,v.pop(),v.length>0?_=v[v.length-1]:_=null};function re(I,W,ne,ie){if(I.visible===!1)return;if(I.layers.test(W.layers)){if(I.isGroup)ne=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(W);else if(I.isLight)m.pushLight(I),I.castShadow&&m.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||j.intersectsSprite(I)){ie&&Te.setFromMatrixPosition(I.matrixWorld).applyMatrix4(Pe);const Le=K.update(I),Xe=I.material;Xe.visible&&_.push(I,Le,Xe,ne,Te.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||j.intersectsObject(I))){const Le=K.update(I),Xe=I.material;if(ie&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),Te.copy(I.boundingSphere.center)):(Le.boundingSphere===null&&Le.computeBoundingSphere(),Te.copy(Le.boundingSphere.center)),Te.applyMatrix4(I.matrixWorld).applyMatrix4(Pe)),Array.isArray(Xe)){const $e=Le.groups;for(let gt=0,mt=$e.length;gt<mt;gt++){const ut=$e[gt],Ot=Xe[ut.materialIndex];Ot&&Ot.visible&&_.push(I,Le,Ot,ne,Te.z,ut)}}else Xe.visible&&_.push(I,Le,Xe,ne,Te.z,null)}}const Re=I.children;for(let Le=0,Xe=Re.length;Le<Xe;Le++)re(Re[Le],W,ne,ie)}function be(I,W,ne,ie){const Y=I.opaque,Re=I.transmissive,Le=I.transparent;m.setupLightsView(ne),pe===!0&&ae.setGlobalState(x.clippingPlanes,ne),ie&&P.viewport(b.copy(ie)),Y.length>0&&Se(Y,W,ne),Re.length>0&&Se(Re,W,ne),Le.length>0&&Se(Le,W,ne),P.buffers.depth.setTest(!0),P.buffers.depth.setMask(!0),P.buffers.color.setMask(!0),P.setPolygonOffset(!1)}function ge(I,W,ne,ie){if((ne.isScene===!0?ne.overrideMaterial:null)!==null)return;m.state.transmissionRenderTarget[ie.id]===void 0&&(m.state.transmissionRenderTarget[ie.id]=new ma(1,1,{generateMipmaps:!0,type:Ee.has("EXT_color_buffer_half_float")||Ee.has("EXT_color_buffer_float")?hl:ts,minFilter:ha,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Rt.workingColorSpace}));const Re=m.state.transmissionRenderTarget[ie.id],Le=ie.viewport||b;Re.setSize(Le.z*x.transmissionResolutionScale,Le.w*x.transmissionResolutionScale);const Xe=x.getRenderTarget();x.setRenderTarget(Re),x.getClearColor(N),k=x.getClearAlpha(),k<1&&x.setClearColor(16777215,.5),x.clear(),fe&&Qe.render(ne);const $e=x.toneMapping;x.toneMapping=Is;const gt=ie.viewport;if(ie.viewport!==void 0&&(ie.viewport=void 0),m.setupLightsView(ie),pe===!0&&ae.setGlobalState(x.clippingPlanes,ie),Se(I,ne,ie),R.updateMultisampleRenderTarget(Re),R.updateRenderTargetMipmap(Re),Ee.has("WEBGL_multisampled_render_to_texture")===!1){let mt=!1;for(let ut=0,Ot=W.length;ut<Ot;ut++){const Wt=W[ut],Sn=Wt.object,xn=Wt.geometry,Bt=Wt.material,dt=Wt.group;if(Bt.side===qr&&Sn.layers.test(ie.layers)){const Un=Bt.side;Bt.side=yi,Bt.needsUpdate=!0,pt(Sn,ne,ie,xn,Bt,dt),Bt.side=Un,Bt.needsUpdate=!0,mt=!0}}mt===!0&&(R.updateMultisampleRenderTarget(Re),R.updateRenderTargetMipmap(Re))}x.setRenderTarget(Xe),x.setClearColor(N,k),gt!==void 0&&(ie.viewport=gt),x.toneMapping=$e}function Se(I,W,ne){const ie=W.isScene===!0?W.overrideMaterial:null;for(let Y=0,Re=I.length;Y<Re;Y++){const Le=I[Y],Xe=Le.object,$e=Le.geometry,gt=Le.group;let mt=Le.material;mt.allowOverride===!0&&ie!==null&&(mt=ie),Xe.layers.test(ne.layers)&&pt(Xe,W,ne,$e,mt,gt)}}function pt(I,W,ne,ie,Y,Re){I.onBeforeRender(x,W,ne,ie,Y,Re),I.modelViewMatrix.multiplyMatrices(ne.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),Y.onBeforeRender(x,W,ne,ie,I,Re),Y.transparent===!0&&Y.side===qr&&Y.forceSinglePass===!1?(Y.side=yi,Y.needsUpdate=!0,x.renderBufferDirect(ne,W,ie,Y,I,Re),Y.side=es,Y.needsUpdate=!0,x.renderBufferDirect(ne,W,ie,Y,I,Re),Y.side=qr):x.renderBufferDirect(ne,W,ie,Y,I,Re),I.onAfterRender(x,W,ne,ie,Y,Re)}function lt(I,W,ne){W.isScene!==!0&&(W=Je);const ie=he.get(I),Y=m.state.lights,Re=m.state.shadowsArray,Le=Y.state.version,Xe=G.getParameters(I,Y.state,Re,W,ne),$e=G.getProgramCacheKey(Xe);let gt=ie.programs;ie.environment=I.isMeshStandardMaterial?W.environment:null,ie.fog=W.fog,ie.envMap=(I.isMeshStandardMaterial?q:C).get(I.envMap||ie.environment),ie.envMapRotation=ie.environment!==null&&I.envMap===null?W.environmentRotation:I.envMapRotation,gt===void 0&&(I.addEventListener("dispose",_t),gt=new Map,ie.programs=gt);let mt=gt.get($e);if(mt!==void 0){if(ie.currentProgram===mt&&ie.lightsStateVersion===Le)return yt(I,Xe),mt}else Xe.uniforms=G.getUniforms(I),I.onBeforeCompile(Xe,x),mt=G.acquireProgram(Xe,$e),gt.set($e,mt),ie.uniforms=Xe.uniforms;const ut=ie.uniforms;return(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(ut.clippingPlanes=ae.uniform),yt(I,Xe),ie.needsLights=Lt(I),ie.lightsStateVersion=Le,ie.needsLights&&(ut.ambientLightColor.value=Y.state.ambient,ut.lightProbe.value=Y.state.probe,ut.directionalLights.value=Y.state.directional,ut.directionalLightShadows.value=Y.state.directionalShadow,ut.spotLights.value=Y.state.spot,ut.spotLightShadows.value=Y.state.spotShadow,ut.rectAreaLights.value=Y.state.rectArea,ut.ltc_1.value=Y.state.rectAreaLTC1,ut.ltc_2.value=Y.state.rectAreaLTC2,ut.pointLights.value=Y.state.point,ut.pointLightShadows.value=Y.state.pointShadow,ut.hemisphereLights.value=Y.state.hemi,ut.directionalShadowMap.value=Y.state.directionalShadowMap,ut.directionalShadowMatrix.value=Y.state.directionalShadowMatrix,ut.spotShadowMap.value=Y.state.spotShadowMap,ut.spotLightMatrix.value=Y.state.spotLightMatrix,ut.spotLightMap.value=Y.state.spotLightMap,ut.pointShadowMap.value=Y.state.pointShadowMap,ut.pointShadowMatrix.value=Y.state.pointShadowMatrix),ie.currentProgram=mt,ie.uniformsList=null,mt}function ht(I){if(I.uniformsList===null){const W=I.currentProgram.getUniforms();I.uniformsList=cu.seqWithValue(W.seq,I.uniforms)}return I.uniformsList}function yt(I,W){const ne=he.get(I);ne.outputColorSpace=W.outputColorSpace,ne.batching=W.batching,ne.batchingColor=W.batchingColor,ne.instancing=W.instancing,ne.instancingColor=W.instancingColor,ne.instancingMorph=W.instancingMorph,ne.skinning=W.skinning,ne.morphTargets=W.morphTargets,ne.morphNormals=W.morphNormals,ne.morphColors=W.morphColors,ne.morphTargetsCount=W.morphTargetsCount,ne.numClippingPlanes=W.numClippingPlanes,ne.numIntersection=W.numClipIntersection,ne.vertexAlphas=W.vertexAlphas,ne.vertexTangents=W.vertexTangents,ne.toneMapping=W.toneMapping}function zt(I,W,ne,ie,Y){W.isScene!==!0&&(W=Je),R.resetTextureUnits();const Re=W.fog,Le=ie.isMeshStandardMaterial?W.environment:null,Xe=A===null?x.outputColorSpace:A.isXRRenderTarget===!0?A.texture.colorSpace:Io,$e=(ie.isMeshStandardMaterial?q:C).get(ie.envMap||Le),gt=ie.vertexColors===!0&&!!ne.attributes.color&&ne.attributes.color.itemSize===4,mt=!!ne.attributes.tangent&&(!!ie.normalMap||ie.anisotropy>0),ut=!!ne.morphAttributes.position,Ot=!!ne.morphAttributes.normal,Wt=!!ne.morphAttributes.color;let Sn=Is;ie.toneMapped&&(A===null||A.isXRRenderTarget===!0)&&(Sn=x.toneMapping);const xn=ne.morphAttributes.position||ne.morphAttributes.normal||ne.morphAttributes.color,Bt=xn!==void 0?xn.length:0,dt=he.get(ie),Un=m.state.lights;if(pe===!0&&(Z===!0||I!==S)){const ni=I===S&&ie.id===T;ae.setState(ie,I,ni)}let qt=!1;ie.version===dt.__version?(dt.needsLights&&dt.lightsStateVersion!==Un.state.version||dt.outputColorSpace!==Xe||Y.isBatchedMesh&&dt.batching===!1||!Y.isBatchedMesh&&dt.batching===!0||Y.isBatchedMesh&&dt.batchingColor===!0&&Y.colorTexture===null||Y.isBatchedMesh&&dt.batchingColor===!1&&Y.colorTexture!==null||Y.isInstancedMesh&&dt.instancing===!1||!Y.isInstancedMesh&&dt.instancing===!0||Y.isSkinnedMesh&&dt.skinning===!1||!Y.isSkinnedMesh&&dt.skinning===!0||Y.isInstancedMesh&&dt.instancingColor===!0&&Y.instanceColor===null||Y.isInstancedMesh&&dt.instancingColor===!1&&Y.instanceColor!==null||Y.isInstancedMesh&&dt.instancingMorph===!0&&Y.morphTexture===null||Y.isInstancedMesh&&dt.instancingMorph===!1&&Y.morphTexture!==null||dt.envMap!==$e||ie.fog===!0&&dt.fog!==Re||dt.numClippingPlanes!==void 0&&(dt.numClippingPlanes!==ae.numPlanes||dt.numIntersection!==ae.numIntersection)||dt.vertexAlphas!==gt||dt.vertexTangents!==mt||dt.morphTargets!==ut||dt.morphNormals!==Ot||dt.morphColors!==Wt||dt.toneMapping!==Sn||dt.morphTargetsCount!==Bt)&&(qt=!0):(qt=!0,dt.__version=ie.version);let Zi=dt.currentProgram;qt===!0&&(Zi=lt(ie,W,Y));let Ta=!1,Mi=!1,ec=!1;const un=Zi.getUniforms(),Fi=dt.uniforms;if(P.useProgram(Zi.program)&&(Ta=!0,Mi=!0,ec=!0),ie.id!==T&&(T=ie.id,Mi=!0),Ta||S!==I){P.buffers.depth.getReversed()?(ye.copy(I.projectionMatrix),Zw(ye),Kw(ye),un.setValue(F,"projectionMatrix",ye)):un.setValue(F,"projectionMatrix",I.projectionMatrix),un.setValue(F,"viewMatrix",I.matrixWorldInverse);const pi=un.map.cameraPosition;pi!==void 0&&pi.setValue(F,Ie.setFromMatrixPosition(I.matrixWorld)),O.logarithmicDepthBuffer&&un.setValue(F,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),(ie.isMeshPhongMaterial||ie.isMeshToonMaterial||ie.isMeshLambertMaterial||ie.isMeshBasicMaterial||ie.isMeshStandardMaterial||ie.isShaderMaterial)&&un.setValue(F,"isOrthographic",I.isOrthographicCamera===!0),S!==I&&(S=I,Mi=!0,ec=!0)}if(Y.isSkinnedMesh){un.setOptional(F,Y,"bindMatrix"),un.setOptional(F,Y,"bindMatrixInverse");const ni=Y.skeleton;ni&&(ni.boneTexture===null&&ni.computeBoneTexture(),un.setValue(F,"boneTexture",ni.boneTexture,R))}Y.isBatchedMesh&&(un.setOptional(F,Y,"batchingTexture"),un.setValue(F,"batchingTexture",Y._matricesTexture,R),un.setOptional(F,Y,"batchingIdTexture"),un.setValue(F,"batchingIdTexture",Y._indirectTexture,R),un.setOptional(F,Y,"batchingColorTexture"),Y._colorsTexture!==null&&un.setValue(F,"batchingColorTexture",Y._colorsTexture,R));const Ni=ne.morphAttributes;if((Ni.position!==void 0||Ni.normal!==void 0||Ni.color!==void 0)&&nt.update(Y,ne,Zi),(Mi||dt.receiveShadow!==Y.receiveShadow)&&(dt.receiveShadow=Y.receiveShadow,un.setValue(F,"receiveShadow",Y.receiveShadow)),ie.isMeshGouraudMaterial&&ie.envMap!==null&&(Fi.envMap.value=$e,Fi.flipEnvMap.value=$e.isCubeTexture&&$e.isRenderTargetTexture===!1?-1:1),ie.isMeshStandardMaterial&&ie.envMap===null&&W.environment!==null&&(Fi.envMapIntensity.value=W.environmentIntensity),Mi&&(un.setValue(F,"toneMappingExposure",x.toneMappingExposure),dt.needsLights&&Tt(Fi,ec),Re&&ie.fog===!0&&le.refreshFogUniforms(Fi,Re),le.refreshMaterialUniforms(Fi,ie,H,z,m.state.transmissionRenderTarget[I.id]),cu.upload(F,ht(dt),Fi,R)),ie.isShaderMaterial&&ie.uniformsNeedUpdate===!0&&(cu.upload(F,ht(dt),Fi,R),ie.uniformsNeedUpdate=!1),ie.isSpriteMaterial&&un.setValue(F,"center",Y.center),un.setValue(F,"modelViewMatrix",Y.modelViewMatrix),un.setValue(F,"normalMatrix",Y.normalMatrix),un.setValue(F,"modelMatrix",Y.matrixWorld),ie.isShaderMaterial||ie.isRawShaderMaterial){const ni=ie.uniformsGroups;for(let pi=0,gd=ni.length;pi<gd;pi++){const Xs=ni[pi];X.update(Xs,Zi),X.bind(Xs,Zi)}}return Zi}function Tt(I,W){I.ambientLightColor.needsUpdate=W,I.lightProbe.needsUpdate=W,I.directionalLights.needsUpdate=W,I.directionalLightShadows.needsUpdate=W,I.pointLights.needsUpdate=W,I.pointLightShadows.needsUpdate=W,I.spotLights.needsUpdate=W,I.spotLightShadows.needsUpdate=W,I.rectAreaLights.needsUpdate=W,I.hemisphereLights.needsUpdate=W}function Lt(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(I,W,ne){const ie=he.get(I);ie.__autoAllocateDepthBuffer=I.resolveDepthBuffer===!1,ie.__autoAllocateDepthBuffer===!1&&(ie.__useRenderToTexture=!1),he.get(I.texture).__webglTexture=W,he.get(I.depthTexture).__webglTexture=ie.__autoAllocateDepthBuffer?void 0:ne,ie.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(I,W){const ne=he.get(I);ne.__webglFramebuffer=W,ne.__useDefaultFramebuffer=W===void 0};const hn=F.createFramebuffer();this.setRenderTarget=function(I,W=0,ne=0){A=I,E=W,M=ne;let ie=!0,Y=null,Re=!1,Le=!1;if(I){const $e=he.get(I);if($e.__useDefaultFramebuffer!==void 0)P.bindFramebuffer(F.FRAMEBUFFER,null),ie=!1;else if($e.__webglFramebuffer===void 0)R.setupRenderTarget(I);else if($e.__hasExternalTextures)R.rebindTextures(I,he.get(I.texture).__webglTexture,he.get(I.depthTexture).__webglTexture);else if(I.depthBuffer){const ut=I.depthTexture;if($e.__boundDepthTexture!==ut){if(ut!==null&&he.has(ut)&&(I.width!==ut.image.width||I.height!==ut.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");R.setupDepthRenderbuffer(I)}}const gt=I.texture;(gt.isData3DTexture||gt.isDataArrayTexture||gt.isCompressedArrayTexture)&&(Le=!0);const mt=he.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(Array.isArray(mt[W])?Y=mt[W][ne]:Y=mt[W],Re=!0):I.samples>0&&R.useMultisampledRTT(I)===!1?Y=he.get(I).__webglMultisampledFramebuffer:Array.isArray(mt)?Y=mt[ne]:Y=mt,b.copy(I.viewport),U.copy(I.scissor),L=I.scissorTest}else b.copy(ce).multiplyScalar(H).floor(),U.copy(Ce).multiplyScalar(H).floor(),L=me;if(ne!==0&&(Y=hn),P.bindFramebuffer(F.FRAMEBUFFER,Y)&&ie&&P.drawBuffers(I,Y),P.viewport(b),P.scissor(U),P.setScissorTest(L),Re){const $e=he.get(I.texture);F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_CUBE_MAP_POSITIVE_X+W,$e.__webglTexture,ne)}else if(Le){const $e=he.get(I.texture),gt=W;F.framebufferTextureLayer(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,$e.__webglTexture,ne,gt)}else if(I!==null&&ne!==0){const $e=he.get(I.texture);F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,$e.__webglTexture,ne)}T=-1},this.readRenderTargetPixels=function(I,W,ne,ie,Y,Re,Le){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Xe=he.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Le!==void 0&&(Xe=Xe[Le]),Xe){P.bindFramebuffer(F.FRAMEBUFFER,Xe);try{const $e=I.texture,gt=$e.format,mt=$e.type;if(!O.textureFormatReadable(gt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!O.textureTypeReadable(mt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=I.width-ie&&ne>=0&&ne<=I.height-Y&&F.readPixels(W,ne,ie,Y,ft.convert(gt),ft.convert(mt),Re)}finally{const $e=A!==null?he.get(A).__webglFramebuffer:null;P.bindFramebuffer(F.FRAMEBUFFER,$e)}}},this.readRenderTargetPixelsAsync=async function(I,W,ne,ie,Y,Re,Le){if(!(I&&I.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Xe=he.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Le!==void 0&&(Xe=Xe[Le]),Xe)if(W>=0&&W<=I.width-ie&&ne>=0&&ne<=I.height-Y){P.bindFramebuffer(F.FRAMEBUFFER,Xe);const $e=I.texture,gt=$e.format,mt=$e.type;if(!O.textureFormatReadable(gt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!O.textureTypeReadable(mt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const ut=F.createBuffer();F.bindBuffer(F.PIXEL_PACK_BUFFER,ut),F.bufferData(F.PIXEL_PACK_BUFFER,Re.byteLength,F.STREAM_READ),F.readPixels(W,ne,ie,Y,ft.convert(gt),ft.convert(mt),0);const Ot=A!==null?he.get(A).__webglFramebuffer:null;P.bindFramebuffer(F.FRAMEBUFFER,Ot);const Wt=F.fenceSync(F.SYNC_GPU_COMMANDS_COMPLETE,0);return F.flush(),await Yw(F,Wt,4),F.bindBuffer(F.PIXEL_PACK_BUFFER,ut),F.getBufferSubData(F.PIXEL_PACK_BUFFER,0,Re),F.deleteBuffer(ut),F.deleteSync(Wt),Re}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(I,W=null,ne=0){const ie=Math.pow(2,-ne),Y=Math.floor(I.image.width*ie),Re=Math.floor(I.image.height*ie),Le=W!==null?W.x:0,Xe=W!==null?W.y:0;R.setTexture2D(I,0),F.copyTexSubImage2D(F.TEXTURE_2D,ne,0,0,Le,Xe,Y,Re),P.unbindTexture()};const Cr=F.createFramebuffer(),Nt=F.createFramebuffer();this.copyTextureToTexture=function(I,W,ne=null,ie=null,Y=0,Re=null){Re===null&&(Y!==0?(ru("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Re=Y,Y=0):Re=0);let Le,Xe,$e,gt,mt,ut,Ot,Wt,Sn;const xn=I.isCompressedTexture?I.mipmaps[Re]:I.image;if(ne!==null)Le=ne.max.x-ne.min.x,Xe=ne.max.y-ne.min.y,$e=ne.isBox3?ne.max.z-ne.min.z:1,gt=ne.min.x,mt=ne.min.y,ut=ne.isBox3?ne.min.z:0;else{const Ni=Math.pow(2,-Y);Le=Math.floor(xn.width*Ni),Xe=Math.floor(xn.height*Ni),I.isDataArrayTexture?$e=xn.depth:I.isData3DTexture?$e=Math.floor(xn.depth*Ni):$e=1,gt=0,mt=0,ut=0}ie!==null?(Ot=ie.x,Wt=ie.y,Sn=ie.z):(Ot=0,Wt=0,Sn=0);const Bt=ft.convert(W.format),dt=ft.convert(W.type);let Un;W.isData3DTexture?(R.setTexture3D(W,0),Un=F.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(R.setTexture2DArray(W,0),Un=F.TEXTURE_2D_ARRAY):(R.setTexture2D(W,0),Un=F.TEXTURE_2D),F.pixelStorei(F.UNPACK_FLIP_Y_WEBGL,W.flipY),F.pixelStorei(F.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),F.pixelStorei(F.UNPACK_ALIGNMENT,W.unpackAlignment);const qt=F.getParameter(F.UNPACK_ROW_LENGTH),Zi=F.getParameter(F.UNPACK_IMAGE_HEIGHT),Ta=F.getParameter(F.UNPACK_SKIP_PIXELS),Mi=F.getParameter(F.UNPACK_SKIP_ROWS),ec=F.getParameter(F.UNPACK_SKIP_IMAGES);F.pixelStorei(F.UNPACK_ROW_LENGTH,xn.width),F.pixelStorei(F.UNPACK_IMAGE_HEIGHT,xn.height),F.pixelStorei(F.UNPACK_SKIP_PIXELS,gt),F.pixelStorei(F.UNPACK_SKIP_ROWS,mt),F.pixelStorei(F.UNPACK_SKIP_IMAGES,ut);const un=I.isDataArrayTexture||I.isData3DTexture,Fi=W.isDataArrayTexture||W.isData3DTexture;if(I.isDepthTexture){const Ni=he.get(I),ni=he.get(W),pi=he.get(Ni.__renderTarget),gd=he.get(ni.__renderTarget);P.bindFramebuffer(F.READ_FRAMEBUFFER,pi.__webglFramebuffer),P.bindFramebuffer(F.DRAW_FRAMEBUFFER,gd.__webglFramebuffer);for(let Xs=0;Xs<$e;Xs++)un&&(F.framebufferTextureLayer(F.READ_FRAMEBUFFER,F.COLOR_ATTACHMENT0,he.get(I).__webglTexture,Y,ut+Xs),F.framebufferTextureLayer(F.DRAW_FRAMEBUFFER,F.COLOR_ATTACHMENT0,he.get(W).__webglTexture,Re,Sn+Xs)),F.blitFramebuffer(gt,mt,Le,Xe,Ot,Wt,Le,Xe,F.DEPTH_BUFFER_BIT,F.NEAREST);P.bindFramebuffer(F.READ_FRAMEBUFFER,null),P.bindFramebuffer(F.DRAW_FRAMEBUFFER,null)}else if(Y!==0||I.isRenderTargetTexture||he.has(I)){const Ni=he.get(I),ni=he.get(W);P.bindFramebuffer(F.READ_FRAMEBUFFER,Cr),P.bindFramebuffer(F.DRAW_FRAMEBUFFER,Nt);for(let pi=0;pi<$e;pi++)un?F.framebufferTextureLayer(F.READ_FRAMEBUFFER,F.COLOR_ATTACHMENT0,Ni.__webglTexture,Y,ut+pi):F.framebufferTexture2D(F.READ_FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,Ni.__webglTexture,Y),Fi?F.framebufferTextureLayer(F.DRAW_FRAMEBUFFER,F.COLOR_ATTACHMENT0,ni.__webglTexture,Re,Sn+pi):F.framebufferTexture2D(F.DRAW_FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,ni.__webglTexture,Re),Y!==0?F.blitFramebuffer(gt,mt,Le,Xe,Ot,Wt,Le,Xe,F.COLOR_BUFFER_BIT,F.NEAREST):Fi?F.copyTexSubImage3D(Un,Re,Ot,Wt,Sn+pi,gt,mt,Le,Xe):F.copyTexSubImage2D(Un,Re,Ot,Wt,gt,mt,Le,Xe);P.bindFramebuffer(F.READ_FRAMEBUFFER,null),P.bindFramebuffer(F.DRAW_FRAMEBUFFER,null)}else Fi?I.isDataTexture||I.isData3DTexture?F.texSubImage3D(Un,Re,Ot,Wt,Sn,Le,Xe,$e,Bt,dt,xn.data):W.isCompressedArrayTexture?F.compressedTexSubImage3D(Un,Re,Ot,Wt,Sn,Le,Xe,$e,Bt,xn.data):F.texSubImage3D(Un,Re,Ot,Wt,Sn,Le,Xe,$e,Bt,dt,xn):I.isDataTexture?F.texSubImage2D(F.TEXTURE_2D,Re,Ot,Wt,Le,Xe,Bt,dt,xn.data):I.isCompressedTexture?F.compressedTexSubImage2D(F.TEXTURE_2D,Re,Ot,Wt,xn.width,xn.height,Bt,xn.data):F.texSubImage2D(F.TEXTURE_2D,Re,Ot,Wt,Le,Xe,Bt,dt,xn);F.pixelStorei(F.UNPACK_ROW_LENGTH,qt),F.pixelStorei(F.UNPACK_IMAGE_HEIGHT,Zi),F.pixelStorei(F.UNPACK_SKIP_PIXELS,Ta),F.pixelStorei(F.UNPACK_SKIP_ROWS,Mi),F.pixelStorei(F.UNPACK_SKIP_IMAGES,ec),Re===0&&W.generateMipmaps&&F.generateMipmap(Un),P.unbindTexture()},this.copyTextureToTexture3D=function(I,W,ne=null,ie=null,Y=0){return ru('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(I,W,ne,ie,Y)},this.initRenderTarget=function(I){he.get(I).__webglFramebuffer===void 0&&R.setupRenderTarget(I)},this.initTexture=function(I){I.isCubeTexture?R.setTextureCube(I,0):I.isData3DTexture?R.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?R.setTexture2DArray(I,0):R.setTexture2D(I,0),P.unbindTexture()},this.resetState=function(){E=0,M=0,A=null,P.reset(),St.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Xr}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=Rt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Rt._getUnpackColorSpace()}};const bR=/^[og]\s*(.+)?/,MR=/^mtllib /,SR=/^usemtl /,wR=/^usemap /,V_=/\s+/,H_=new te,Zd=new te,G_=new te,W_=new te,Ui=new te,ih=new wt;function TR(){const r={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===!1){this.object.name=e,this.object.fromDeclaration=t!==!1;return}const n=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:t!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(i,s){const a=this._finalize(!1);a&&(a.inherited||a.groupCount<=0)&&this.materials.splice(a.index,1);const o={index:this.materials.length,name:i||"",mtllib:Array.isArray(s)&&s.length>0?s[s.length-1]:"",smooth:a!==void 0?a.smooth:this.smooth,groupStart:a!==void 0?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(c){const l={index:typeof c=="number"?c:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return l.clone=this.clone.bind(l),l}};return this.materials.push(o),o},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(i){const s=this.currentMaterial();if(s&&s.groupEnd===-1&&(s.groupEnd=this.geometry.vertices.length/3,s.groupCount=s.groupEnd-s.groupStart,s.inherited=!1),i&&this.materials.length>1)for(let a=this.materials.length-1;a>=0;a--)this.materials[a].groupCount<=0&&this.materials.splice(a,1);return i&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),s}},n&&n.name&&typeof n.clone=="function"){const i=n.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const n=parseInt(e,10);return(n>=0?n-1:n+t/3)*3},parseNormalIndex:function(e,t){const n=parseInt(e,10);return(n>=0?n-1:n+t/3)*3},parseUVIndex:function(e,t){const n=parseInt(e,10);return(n>=0?n-1:n+t/2)*2},addVertex:function(e,t,n){const i=this.vertices,s=this.object.geometry.vertices;s.push(i[e+0],i[e+1],i[e+2]),s.push(i[t+0],i[t+1],i[t+2]),s.push(i[n+0],i[n+1],i[n+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,n){const i=this.normals,s=this.object.geometry.normals;s.push(i[e+0],i[e+1],i[e+2]),s.push(i[t+0],i[t+1],i[t+2]),s.push(i[n+0],i[n+1],i[n+2])},addFaceNormal:function(e,t,n){const i=this.vertices,s=this.object.geometry.normals;H_.fromArray(i,e),Zd.fromArray(i,t),G_.fromArray(i,n),Ui.subVectors(G_,Zd),W_.subVectors(H_,Zd),Ui.cross(W_),Ui.normalize(),s.push(Ui.x,Ui.y,Ui.z),s.push(Ui.x,Ui.y,Ui.z),s.push(Ui.x,Ui.y,Ui.z)},addColor:function(e,t,n){const i=this.colors,s=this.object.geometry.colors;i[e]!==void 0&&s.push(i[e+0],i[e+1],i[e+2]),i[t]!==void 0&&s.push(i[t+0],i[t+1],i[t+2]),i[n]!==void 0&&s.push(i[n+0],i[n+1],i[n+2])},addUV:function(e,t,n){const i=this.uvs,s=this.object.geometry.uvs;s.push(i[e+0],i[e+1]),s.push(i[t+0],i[t+1]),s.push(i[n+0],i[n+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,n,i,s,a,o,c,l){const h=this.vertices.length;let u=this.parseVertexIndex(e,h),d=this.parseVertexIndex(t,h),f=this.parseVertexIndex(n,h);if(this.addVertex(u,d,f),this.addColor(u,d,f),o!==void 0&&o!==""){const p=this.normals.length;u=this.parseNormalIndex(o,p),d=this.parseNormalIndex(c,p),f=this.parseNormalIndex(l,p),this.addNormal(u,d,f)}else this.addFaceNormal(u,d,f);if(i!==void 0&&i!==""){const p=this.uvs.length;u=this.parseUVIndex(i,p),d=this.parseUVIndex(s,p),f=this.parseUVIndex(a,p),this.addUV(u,d,f),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let n=0,i=e.length;n<i;n++){const s=this.parseVertexIndex(e[n],t);this.addVertexPoint(s),this.addColor(s)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const n=this.vertices.length,i=this.uvs.length;for(let s=0,a=e.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(e[s],n));for(let s=0,a=t.length;s<a;s++)this.addUVLine(this.parseUVIndex(t[s],i))}};return r.startObject("",!1),r}class ER extends Go{constructor(e){super(e),this.materials=null}load(e,t,n,i){const s=this,a=new Iy(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(s.parse(o))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}setMaterials(e){return this.materials=e,this}parse(e){const t=new TR;e.indexOf(`\r
`)!==-1&&(e=e.replace(/\r\n/g,`
`)),e.indexOf(`\\
`)!==-1&&(e=e.replace(/\\\n/g,""));const n=e.split(`
`);let i=[];for(let o=0,c=n.length;o<c;o++){const l=n[o].trimStart();if(l.length===0)continue;const h=l.charAt(0);if(h!=="#")if(h==="v"){const u=l.split(V_);switch(u[0]){case"v":t.vertices.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3])),u.length>=7?(ih.setRGB(parseFloat(u[4]),parseFloat(u[5]),parseFloat(u[6]),kn),t.colors.push(ih.r,ih.g,ih.b)):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]));break;case"vt":t.uvs.push(parseFloat(u[1]),parseFloat(u[2]));break}}else if(h==="f"){const d=l.slice(1).trim().split(V_),f=[];for(let g=0,_=d.length;g<_;g++){const m=d[g];if(m.length>0){const v=m.split("/");f.push(v)}}const p=f[0];for(let g=1,_=f.length-1;g<_;g++){const m=f[g],v=f[g+1];t.addFace(p[0],m[0],v[0],p[1],m[1],v[1],p[2],m[2],v[2])}}else if(h==="l"){const u=l.substring(1).trim().split(" ");let d=[];const f=[];if(l.indexOf("/")===-1)d=u;else for(let p=0,g=u.length;p<g;p++){const _=u[p].split("/");_[0]!==""&&d.push(_[0]),_[1]!==""&&f.push(_[1])}t.addLineGeometry(d,f)}else if(h==="p"){const d=l.slice(1).trim().split(" ");t.addPointGeometry(d)}else if((i=bR.exec(l))!==null){const u=(" "+i[0].slice(1).trim()).slice(1);t.startObject(u)}else if(SR.test(l))t.object.startMaterial(l.substring(7).trim(),t.materialLibraries);else if(MR.test(l))t.materialLibraries.push(l.substring(7).trim());else if(wR.test(l))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(h==="s"){if(i=l.split(" "),i.length>1){const d=i[1].trim().toLowerCase();t.object.smooth=d!=="0"&&d!=="off"}else t.object.smooth=!0;const u=t.object.currentMaterial();u&&(u.smooth=t.object.smooth)}else{if(l==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+l+'"')}}t.finalize();const s=new yc;if(s.materialLibraries=[].concat(t.materialLibraries),!(t.objects.length===1&&t.objects[0].geometry.vertices.length===0)===!0)for(let o=0,c=t.objects.length;o<c;o++){const l=t.objects[o],h=l.geometry,u=l.materials,d=h.type==="Line",f=h.type==="Points";let p=!1;if(h.vertices.length===0)continue;const g=new is;g.setAttribute("position",new ci(h.vertices,3)),h.normals.length>0&&g.setAttribute("normal",new ci(h.normals,3)),h.colors.length>0&&(p=!0,g.setAttribute("color",new ci(h.colors,3))),h.hasUVIndices===!0&&g.setAttribute("uv",new ci(h.uvs,2));const _=[];for(let v=0,y=u.length;v<y;v++){const x=u[v],w=x.name+"_"+x.smooth+"_"+p;let E=t.materials[w];if(this.materials!==null){if(E=this.materials.create(x.name),d&&E&&!(E instanceof ou)){const M=new ou;ns.prototype.copy.call(M,E),M.color.copy(E.color),E=M}else if(f&&E&&!(E instanceof bc)){const M=new bc({size:10,sizeAttenuation:!1});ns.prototype.copy.call(M,E),M.color.copy(E.color),M.map=E.map,E=M}}E===void 0&&(d?E=new ou:f?E=new bc({size:1,sizeAttenuation:!1}):E=new Ry,E.name=x.name,E.flatShading=!x.smooth,E.vertexColors=p,t.materials[w]=E),_.push(E)}let m;if(_.length>1){for(let v=0,y=u.length;v<y;v++){const x=u[v];g.addGroup(x.groupStart,x.groupCount,v)}d?m=new d_(g,_):f?m=new Vd(g,_):m=new Vi(g,_)}else d?m=new d_(g,_[0]):f?m=new Vd(g,_[0]):m=new Vi(g,_[0]);m.name=l.name,s.add(m)}else if(t.vertices.length>0){const o=new bc({size:1,sizeAttenuation:!1}),c=new is;c.setAttribute("position",new ci(t.vertices,3)),t.colors.length>0&&t.colors[0]!==void 0&&(c.setAttribute("color",new ci(t.colors,3)),o.vertexColors=!0);const l=new Vd(c,o);s.add(l)}return s}}class CR extends Go{constructor(e){super(e)}load(e,t,n,i){const s=this,a=this.path===""?O1.extractUrlBase(e):this.path,o=new Iy(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(c){try{t(s.parse(c,a))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}setMaterialOptions(e){return this.materialOptions=e,this}parse(e,t){const n=e.split(`
`);let i={};const s=/\s+/,a={};for(let c=0;c<n.length;c++){let l=n[c];if(l=l.trim(),l.length===0||l.charAt(0)==="#")continue;const h=l.indexOf(" ");let u=h>=0?l.substring(0,h):l;u=u.toLowerCase();let d=h>=0?l.substring(h+1):"";if(d=d.trim(),u==="newmtl")i={name:d},a[d]=i;else if(u==="ka"||u==="kd"||u==="ks"||u==="ke"){const f=d.split(s,3);i[u]=[parseFloat(f[0]),parseFloat(f[1]),parseFloat(f[2])]}else i[u]=d}const o=new AR(this.resourcePath||t,this.materialOptions);return o.setCrossOrigin(this.crossOrigin),o.setManager(this.manager),o.setMaterials(a),o}}class AR{constructor(e="",t={}){this.baseUrl=e,this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=this.options.side!==void 0?this.options.side:es,this.wrap=this.options.wrap!==void 0?this.options.wrap:gu}setCrossOrigin(e){return this.crossOrigin=e,this}setManager(e){this.manager=e}setMaterials(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(e){if(!this.options)return e;const t={};for(const n in e){const i=e[n],s={};t[n]=s;for(const a in i){let o=!0,c=i[a];const l=a.toLowerCase();switch(l){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(c=[c[0]/255,c[1]/255,c[2]/255]),this.options&&this.options.ignoreZeroRGBs&&c[0]===0&&c[1]===0&&c[2]===0&&(o=!1);break}o&&(s[l]=c)}}return t}preload(){for(const e in this.materialsInfo)this.create(e)}getIndex(e){return this.nameLookup[e]}getAsArray(){let e=0;for(const t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray}create(e){return this.materials[e]===void 0&&this.createMaterial_(e),this.materials[e]}createMaterial_(e){const t=this,n=this.materialsInfo[e],i={name:e,side:this.side};function s(o,c){return typeof c!="string"||c===""?"":/^https?:\/\//i.test(c)?c:o+c}function a(o,c){if(i[o])return;const l=t.getTextureParams(c,i),h=t.loadTexture(s(t.baseUrl,l.url));h.repeat.copy(l.scale),h.offset.copy(l.offset),h.wrapS=t.wrap,h.wrapT=t.wrap,(o==="map"||o==="emissiveMap")&&(h.colorSpace=kn),i[o]=h}for(const o in n){const c=n[o];let l;if(c!=="")switch(o.toLowerCase()){case"kd":i.color=Rt.toWorkingColorSpace(new wt().fromArray(c),kn);break;case"ks":i.specular=Rt.toWorkingColorSpace(new wt().fromArray(c),kn);break;case"ke":i.emissive=Rt.toWorkingColorSpace(new wt().fromArray(c),kn);break;case"map_kd":a("map",c);break;case"map_ks":a("specularMap",c);break;case"map_ke":a("emissiveMap",c);break;case"norm":a("normalMap",c);break;case"map_bump":case"bump":a("bumpMap",c);break;case"disp":a("displacementMap",c);break;case"map_d":a("alphaMap",c),i.transparent=!0;break;case"ns":i.shininess=parseFloat(c);break;case"d":l=parseFloat(c),l<1&&(i.opacity=l,i.transparent=!0);break;case"tr":l=parseFloat(c),this.options&&this.options.invertTrProperty&&(l=1-l),l>0&&(i.opacity=1-l,i.transparent=!0);break}}return this.materials[e]=new Ry(i),this.materials[e]}getTextureParams(e,t){const n={scale:new jt(1,1),offset:new jt(0,0)},i=e.split(/\s+/);let s;return s=i.indexOf("-bm"),s>=0&&(t.bumpScale=parseFloat(i[s+1]),i.splice(s,2)),s=i.indexOf("-mm"),s>=0&&(t.displacementBias=parseFloat(i[s+1]),t.displacementScale=parseFloat(i[s+2]),i.splice(s,3)),s=i.indexOf("-s"),s>=0&&(n.scale.set(parseFloat(i[s+1]),parseFloat(i[s+2])),i.splice(s,4)),s=i.indexOf("-o"),s>=0&&(n.offset.set(parseFloat(i[s+1]),parseFloat(i[s+2])),i.splice(s,4)),n.url=i.join(" ").trim(),n}loadTexture(e,t,n,i,s){const a=this.manager!==void 0?this.manager:Py;let o=a.getHandler(e);o===null&&(o=new I1(a)),o.setCrossOrigin&&o.setCrossOrigin(this.crossOrigin);const c=o.load(e,n,i,s);return t!==void 0&&(c.mapping=t),c}}/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var Gp=function(r,e){return Gp=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])},Gp(r,e)};function ur(r,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");Gp(r,e);function t(){this.constructor=r}r.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}function RR(r,e,t,n){function i(s){return s instanceof t?s:new t(function(a){a(s)})}return new(t||(t=Promise))(function(s,a){function o(h){try{l(n.next(h))}catch(u){a(u)}}function c(h){try{l(n.throw(h))}catch(u){a(u)}}function l(h){h.done?s(h.value):i(h.value).then(o,c)}l((n=n.apply(r,[])).next())})}function $y(r,e){var t={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},n,i,s,a;return a={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function o(l){return function(h){return c([l,h])}}function c(l){if(n)throw new TypeError("Generator is already executing.");for(;t;)try{if(n=1,i&&(s=l[0]&2?i.return:l[0]?i.throw||((s=i.return)&&s.call(i),0):i.next)&&!(s=s.call(i,l[1])).done)return s;switch(i=0,s&&(l=[l[0]&2,s.value]),l[0]){case 0:case 1:s=l;break;case 4:return t.label++,{value:l[1],done:!1};case 5:t.label++,i=l[1],l=[0];continue;case 7:l=t.ops.pop(),t.trys.pop();continue;default:if(s=t.trys,!(s=s.length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){t=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){t.label=l[1];break}if(l[0]===6&&t.label<s[1]){t.label=s[1],s=l;break}if(s&&t.label<s[2]){t.label=s[2],t.ops.push(l);break}s[2]&&t.ops.pop(),t.trys.pop();continue}l=e.call(r,t)}catch(h){l=[6,h],i=0}finally{n=s=0}if(l[0]&5)throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}}function yr(r){var e=typeof Symbol=="function"&&Symbol.iterator,t=e&&r[e],n=0;if(t)return t.call(r);if(r&&typeof r.length=="number")return{next:function(){return r&&n>=r.length&&(r=void 0),{value:r&&r[n++],done:!r}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function lr(r,e){var t=typeof Symbol=="function"&&r[Symbol.iterator];if(!t)return r;var n=t.call(r),i,s=[],a;try{for(;(e===void 0||e-- >0)&&!(i=n.next()).done;)s.push(i.value)}catch(o){a={error:o}}finally{try{i&&!i.done&&(t=n.return)&&t.call(n)}finally{if(a)throw a.error}}return s}function br(r,e){for(var t=0,n=e.length,i=r.length;t<n;t++,i++)r[i]=e[t];return r}function So(r){return this instanceof So?(this.v=r,this):new So(r)}function PR(r,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n=t.apply(r,e||[]),i,s=[];return i={},a("next"),a("throw"),a("return"),i[Symbol.asyncIterator]=function(){return this},i;function a(d){n[d]&&(i[d]=function(f){return new Promise(function(p,g){s.push([d,f,p,g])>1||o(d,f)})})}function o(d,f){try{c(n[d](f))}catch(p){u(s[0][3],p)}}function c(d){d.value instanceof So?Promise.resolve(d.value.v).then(l,h):u(s[0][2],d)}function l(d){o("next",d)}function h(d){o("throw",d)}function u(d,f){d(f),s.shift(),s.length&&o(s[0][0],s[0][1])}}function IR(r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=r[Symbol.asyncIterator],t;return e?e.call(r):(r=typeof yr=="function"?yr(r):r[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(s){t[s]=r[s]&&function(a){return new Promise(function(o,c){a=r[s](a),i(o,c,a.done,a.value)})}}function i(s,a,o,c){Promise.resolve(c).then(function(l){s({value:l,done:o})},a)}}function Ut(r){return typeof r=="function"}function qu(r){var e=function(n){Error.call(n),n.stack=new Error().stack},t=r(e);return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t}var Kd=qu(function(r){return function(t){r(this),this.message=t?t.length+` errors occurred during unsubscription:
`+t.map(function(n,i){return i+1+") "+n.toString()}).join(`
  `):"",this.name="UnsubscriptionError",this.errors=t}});function Hc(r,e){if(r){var t=r.indexOf(e);0<=t&&r.splice(t,1)}}var rs=function(){function r(e){this.initialTeardown=e,this.closed=!1,this._parentage=null,this._teardowns=null}return r.prototype.unsubscribe=function(){var e,t,n,i,s;if(!this.closed){this.closed=!0;var a=this._parentage;if(a)if(this._parentage=null,Array.isArray(a))try{for(var o=yr(a),c=o.next();!c.done;c=o.next()){var l=c.value;l.remove(this)}}catch(g){e={error:g}}finally{try{c&&!c.done&&(t=o.return)&&t.call(o)}finally{if(e)throw e.error}}else a.remove(this);var h=this.initialTeardown;if(Ut(h))try{h()}catch(g){s=g instanceof Kd?g.errors:[g]}var u=this._teardowns;if(u){this._teardowns=null;try{for(var d=yr(u),f=d.next();!f.done;f=d.next()){var p=f.value;try{q_(p)}catch(g){s=s??[],g instanceof Kd?s=br(br([],lr(s)),lr(g.errors)):s.push(g)}}}catch(g){n={error:g}}finally{try{f&&!f.done&&(i=d.return)&&i.call(d)}finally{if(n)throw n.error}}}if(s)throw new Kd(s)}},r.prototype.add=function(e){var t;if(e&&e!==this)if(this.closed)q_(e);else{if(e instanceof r){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._teardowns=(t=this._teardowns)!==null&&t!==void 0?t:[]).push(e)}},r.prototype._hasParent=function(e){var t=this._parentage;return t===e||Array.isArray(t)&&t.includes(e)},r.prototype._addParent=function(e){var t=this._parentage;this._parentage=Array.isArray(t)?(t.push(e),t):t?[t,e]:e},r.prototype._removeParent=function(e){var t=this._parentage;t===e?this._parentage=null:Array.isArray(t)&&Hc(t,e)},r.prototype.remove=function(e){var t=this._teardowns;t&&Hc(t,e),e instanceof r&&e._removeParent(this)},r.EMPTY=function(){var e=new r;return e.closed=!0,e}(),r}(),ky=rs.EMPTY;function zy(r){return r instanceof rs||r&&"closed"in r&&Ut(r.remove)&&Ut(r.add)&&Ut(r.unsubscribe)}function q_(r){Ut(r)?r():r.unsubscribe()}var LR={Promise:void 0},DR={setTimeout:function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return setTimeout.apply(void 0,br([],lr(r)))},clearTimeout:function(r){return clearTimeout(r)},delegate:void 0};function Vy(r){DR.setTimeout(function(){throw r})}function $s(){}function lu(r){r()}var $m=function(r){ur(e,r);function e(t){var n=r.call(this)||this;return n.isStopped=!1,t?(n.destination=t,zy(t)&&t.add(n)):n.destination=FR,n}return e.create=function(t,n,i){return new km(t,n,i)},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,r.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){try{this.destination.error(t)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e}(rs),km=function(r){ur(e,r);function e(t,n,i){var s=r.call(this)||this,a;if(Ut(t))a=t;else if(t){a=t.next,n=t.error,i=t.complete;var o;o=t,a=a==null?void 0:a.bind(o),n=n==null?void 0:n.bind(o),i=i==null?void 0:i.bind(o)}return s.destination={next:a?Jd(a):$s,error:Jd(n??Hy),complete:i?Jd(i):$s},s}return e}($m);function Jd(r,e){return function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];try{r.apply(void 0,br([],lr(t)))}catch(i){Vy(i)}}}function Hy(r){throw r}var FR={closed:!0,next:$s,error:Hy,complete:$s},ju=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}();function wr(r){return r}function NR(r){return r.length===0?wr:r.length===1?r[0]:function(t){return r.reduce(function(n,i){return i(n)},t)}}var Qt=function(){function r(e){e&&(this._subscribe=e)}return r.prototype.lift=function(e){var t=new r;return t.source=this,t.operator=e,t},r.prototype.subscribe=function(e,t,n){var i=this,s=UR(e)?e:new km(e,t,n);return lu(function(){var a=i,o=a.operator,c=a.source;s.add(o?o.call(s,c):c?i._subscribe(s):i._trySubscribe(s))}),s},r.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){e.error(t)}},r.prototype.forEach=function(e,t){var n=this;return t=j_(t),new t(function(i,s){var a;a=n.subscribe(function(o){try{e(o)}catch(c){s(c),a==null||a.unsubscribe()}},s,i)})},r.prototype._subscribe=function(e){var t;return(t=this.source)===null||t===void 0?void 0:t.subscribe(e)},r.prototype[ju]=function(){return this},r.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return NR(e)(this)},r.prototype.toPromise=function(e){var t=this;return e=j_(e),new e(function(n,i){var s;t.subscribe(function(a){return s=a},function(a){return i(a)},function(){return n(s)})})},r.create=function(e){return new r(e)},r}();function j_(r){var e;return(e=r??LR.Promise)!==null&&e!==void 0?e:Promise}function OR(r){return r&&Ut(r.next)&&Ut(r.error)&&Ut(r.complete)}function UR(r){return r&&r instanceof $m||OR(r)&&zy(r)}function Gy(r){return Ut(r==null?void 0:r.lift)}function Gt(r){return function(e){if(Gy(e))return e.lift(function(t){try{return r(t,this)}catch(n){this.error(n)}});throw new TypeError("Unable to lift unknown Observable type")}}var It=function(r){ur(e,r);function e(t,n,i,s,a){var o=r.call(this,t)||this;return o.onFinalize=a,o._next=n?function(c){try{n(c)}catch(l){t.error(l)}}:r.prototype._next,o._error=s?function(c){try{s(c)}catch(l){t.error(l)}finally{this.unsubscribe()}}:r.prototype._error,o._complete=i?function(){try{i()}catch(c){t.error(c)}finally{this.unsubscribe()}}:r.prototype._complete,o}return e.prototype.unsubscribe=function(){var t,n=this.closed;r.prototype.unsubscribe.call(this),!n&&((t=this.onFinalize)===null||t===void 0||t.call(this))},e}($m);function Ue(){return Gt(function(r,e){var t=null;r._refCount++;var n=new It(e,void 0,void 0,void 0,function(){if(!r||r._refCount<=0||0<--r._refCount){t=null;return}var i=r._connection,s=t;t=null,i&&(!s||i===s)&&i.unsubscribe(),e.unsubscribe()});r.subscribe(n),n.closed||(t=r.connect())})}var BR=function(r){ur(e,r);function e(t,n){var i=r.call(this)||this;return i.source=t,i.subjectFactory=n,i._subject=null,i._refCount=0,i._connection=null,Gy(t)&&(i.lift=t.lift),i}return e.prototype._subscribe=function(t){return this.getSubject().subscribe(t)},e.prototype.getSubject=function(){var t=this._subject;return(!t||t.isStopped)&&(this._subject=this.subjectFactory()),this._subject},e.prototype._teardown=function(){this._refCount=0;var t=this._connection;this._subject=this._connection=null,t==null||t.unsubscribe()},e.prototype.connect=function(){var t=this,n=this._connection;if(!n){n=this._connection=new rs;var i=this.getSubject();n.add(this.source.subscribe(new It(i,void 0,function(){t._teardown(),i.complete()},function(s){t._teardown(),i.error(s)},function(){return t._teardown()}))),n.closed&&(this._connection=null,n=rs.EMPTY)}return n},e.prototype.refCount=function(){return Ue()(this)},e}(Qt),$R=qu(function(r){return function(){r(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),De=function(r){ur(e,r);function e(){var t=r.call(this)||this;return t.closed=!1,t.observers=[],t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return e.prototype.lift=function(t){var n=new X_(this,this);return n.operator=t,n},e.prototype._throwIfClosed=function(){if(this.closed)throw new $R},e.prototype.next=function(t){var n=this;lu(function(){var i,s;if(n._throwIfClosed(),!n.isStopped){var a=n.observers.slice();try{for(var o=yr(a),c=o.next();!c.done;c=o.next()){var l=c.value;l.next(t)}}catch(h){i={error:h}}finally{try{c&&!c.done&&(s=o.return)&&s.call(o)}finally{if(i)throw i.error}}}})},e.prototype.error=function(t){var n=this;lu(function(){if(n._throwIfClosed(),!n.isStopped){n.hasError=n.isStopped=!0,n.thrownError=t;for(var i=n.observers;i.length;)i.shift().error(t)}})},e.prototype.complete=function(){var t=this;lu(function(){if(t._throwIfClosed(),!t.isStopped){t.isStopped=!0;for(var n=t.observers;n.length;)n.shift().complete()}})},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var t;return((t=this.observers)===null||t===void 0?void 0:t.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(t){return this._throwIfClosed(),r.prototype._trySubscribe.call(this,t)},e.prototype._subscribe=function(t){return this._throwIfClosed(),this._checkFinalizedStatuses(t),this._innerSubscribe(t)},e.prototype._innerSubscribe=function(t){var n=this,i=n.hasError,s=n.isStopped,a=n.observers;return i||s?ky:(a.push(t),new rs(function(){return Hc(a,t)}))},e.prototype._checkFinalizedStatuses=function(t){var n=this,i=n.hasError,s=n.thrownError,a=n.isStopped;i?t.error(s):a&&t.complete()},e.prototype.asObservable=function(){var t=new Qt;return t.source=this,t},e.create=function(t,n){return new X_(t,n)},e}(Qt),X_=function(r){ur(e,r);function e(t,n){var i=r.call(this)||this;return i.destination=t,i.source=n,i}return e.prototype.next=function(t){var n,i;(i=(n=this.destination)===null||n===void 0?void 0:n.next)===null||i===void 0||i.call(n,t)},e.prototype.error=function(t){var n,i;(i=(n=this.destination)===null||n===void 0?void 0:n.error)===null||i===void 0||i.call(n,t)},e.prototype.complete=function(){var t,n;(n=(t=this.destination)===null||t===void 0?void 0:t.complete)===null||n===void 0||n.call(t)},e.prototype._subscribe=function(t){var n,i;return(i=(n=this.source)===null||n===void 0?void 0:n.subscribe(t))!==null&&i!==void 0?i:ky},e}(De),ss=function(r){ur(e,r);function e(t){var n=r.call(this)||this;return n._value=t,n}return Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),e.prototype._subscribe=function(t){var n=r.prototype._subscribe.call(this,t);return!n.closed&&t.next(this._value),n},e.prototype.getValue=function(){var t=this,n=t.hasError,i=t.thrownError,s=t._value;if(n)throw i;return this._throwIfClosed(),s},e.prototype.next=function(t){r.prototype.next.call(this,this._value=t)},e}(De),zm={now:function(){return(zm.delegate||Date).now()},delegate:void 0},Wy=function(r){ur(e,r);function e(t,n,i){t===void 0&&(t=1/0),n===void 0&&(n=1/0),i===void 0&&(i=zm);var s=r.call(this)||this;return s._bufferSize=t,s._windowTime=n,s._timestampProvider=i,s._buffer=[],s._infiniteTimeWindow=!0,s._infiniteTimeWindow=n===1/0,s._bufferSize=Math.max(1,t),s._windowTime=Math.max(1,n),s}return e.prototype.next=function(t){var n=this,i=n.isStopped,s=n._buffer,a=n._infiniteTimeWindow,o=n._timestampProvider,c=n._windowTime;i||(s.push(t),!a&&s.push(o.now()+c)),this._trimBuffer(),r.prototype.next.call(this,t)},e.prototype._subscribe=function(t){this._throwIfClosed(),this._trimBuffer();for(var n=this._innerSubscribe(t),i=this,s=i._infiniteTimeWindow,a=i._buffer,o=a.slice(),c=0;c<o.length&&!t.closed;c+=s?1:2)t.next(o[c]);return this._checkFinalizedStatuses(t),n},e.prototype._trimBuffer=function(){var t=this,n=t._bufferSize,i=t._timestampProvider,s=t._buffer,a=t._infiniteTimeWindow,o=(a?1:2)*n;if(n<1/0&&o<s.length&&s.splice(0,s.length-o),!a){for(var c=i.now(),l=0,h=1;h<s.length&&s[h]<=c;h+=2)l=h;l&&s.splice(0,l+1)}},e}(De),kR=function(r){ur(e,r);function e(t,n){return r.call(this)||this}return e.prototype.schedule=function(t,n){return this},e}(rs),Wp={setInterval:function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=Wp.delegate;return((t==null?void 0:t.setInterval)||setInterval).apply(void 0,br([],lr(r)))},clearInterval:function(r){return clearInterval(r)},delegate:void 0},zR=function(r){ur(e,r);function e(t,n){var i=r.call(this,t,n)||this;return i.scheduler=t,i.work=n,i.pending=!1,i}return e.prototype.schedule=function(t,n){if(n===void 0&&(n=0),this.closed)return this;this.state=t;var i=this.id,s=this.scheduler;return i!=null&&(this.id=this.recycleAsyncId(s,i,n)),this.pending=!0,this.delay=n,this.id=this.id||this.requestAsyncId(s,this.id,n),this},e.prototype.requestAsyncId=function(t,n,i){return i===void 0&&(i=0),Wp.setInterval(t.flush.bind(t,this),i)},e.prototype.recycleAsyncId=function(t,n,i){if(i===void 0&&(i=0),i!=null&&this.delay===i&&this.pending===!1)return n;Wp.clearInterval(n)},e.prototype.execute=function(t,n){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var i=this._execute(t,n);if(i)return i;this.pending===!1&&this.id!=null&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},e.prototype._execute=function(t,n){var i=!1,s;try{this.work(t)}catch(a){i=!0,s=!!a&&a||new Error(a)}if(i)return this.unsubscribe(),s},e.prototype.unsubscribe=function(){if(!this.closed){var t=this,n=t.id,i=t.scheduler,s=i.actions;this.work=this.state=this.scheduler=null,this.pending=!1,Hc(s,this),n!=null&&(this.id=this.recycleAsyncId(i,n,null)),this.delay=null,r.prototype.unsubscribe.call(this)}},e}(kR),Y_=function(){function r(e,t){t===void 0&&(t=r.now),this.schedulerActionCtor=e,this.now=t}return r.prototype.schedule=function(e,t,n){return t===void 0&&(t=0),new this.schedulerActionCtor(this,e).schedule(n,t)},r.now=zm.now,r}(),VR=function(r){ur(e,r);function e(t,n){n===void 0&&(n=Y_.now);var i=r.call(this,t,n)||this;return i.actions=[],i._active=!1,i._scheduled=void 0,i}return e.prototype.flush=function(t){var n=this.actions;if(this._active){n.push(t);return}var i;this._active=!0;do if(i=t.execute(t.state,t.delay))break;while(t=n.shift());if(this._active=!1,i){for(;t=n.shift();)t.unsubscribe();throw i}},e}(Y_),Vm=new VR(zR),qy=Vm,ml=new Qt(function(r){return r.complete()});function rt(r){return r?HR(r):ml}function HR(r){return new Qt(function(e){return r.schedule(function(){return e.complete()})})}function Hm(r,e){return new Qt(function(t){var n=0;return e.schedule(function(){n===r.length?t.complete():(t.next(r[n++]),t.closed||this.schedule())})})}var Gm=function(r){return r&&typeof r.length=="number"&&typeof r!="function"};function jy(r){return Ut(r==null?void 0:r.then)}function GR(r,e){return new Qt(function(t){var n=new rs;return n.add(e.schedule(function(){var i=r[ju]();n.add(i.subscribe({next:function(s){n.add(e.schedule(function(){return t.next(s)}))},error:function(s){n.add(e.schedule(function(){return t.error(s)}))},complete:function(){n.add(e.schedule(function(){return t.complete()}))}}))})),n})}function WR(r,e){return new Qt(function(t){return e.schedule(function(){return r.then(function(n){t.add(e.schedule(function(){t.next(n),t.add(e.schedule(function(){return t.complete()}))}))},function(n){t.add(e.schedule(function(){return t.error(n)}))})})})}function qR(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var Xy=qR();function Yy(r,e,t,n){n===void 0&&(n=0);var i=e.schedule(function(){try{t.call(this)}catch(s){r.error(s)}},n);return r.add(i),i}function jR(r,e){return new Qt(function(t){var n;return t.add(e.schedule(function(){n=r[Xy](),Yy(t,e,function(){var i=n.next(),s=i.value,a=i.done;a?t.complete():(t.next(s),this.schedule())})})),function(){return Ut(n==null?void 0:n.return)&&n.return()}})}function Zy(r,e){if(!r)throw new Error("Iterable cannot be null");return new Qt(function(t){var n=new rs;return n.add(e.schedule(function(){var i=r[Symbol.asyncIterator]();n.add(e.schedule(function(){var s=this;i.next().then(function(a){a.done?t.complete():(t.next(a.value),s.schedule())})}))})),n})}function Ky(r){return Ut(r[ju])}function Jy(r){return Ut(r==null?void 0:r[Xy])}function Qy(r){return Symbol.asyncIterator&&Ut(r==null?void 0:r[Symbol.asyncIterator])}function eb(r){return new TypeError("You provided "+(r!==null&&typeof r=="object"?"an invalid object":"'"+r+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function tb(r){return PR(this,arguments,function(){var t,n,i,s;return $y(this,function(a){switch(a.label){case 0:t=r.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,So(t.read())];case 3:return n=a.sent(),i=n.value,s=n.done,s?[4,So(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return[4,So(i)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}})})}function nb(r){return Ut(r==null?void 0:r.getReader)}function XR(r,e){return Zy(tb(r),e)}function YR(r,e){if(r!=null){if(Ky(r))return GR(r,e);if(Gm(r))return Hm(r,e);if(jy(r))return WR(r,e);if(Qy(r))return Zy(r,e);if(Jy(r))return jR(r,e);if(nb(r))return XR(r,e)}throw eb(r)}function on(r,e){return e?YR(r,e):Ii(r)}function Ii(r){if(r instanceof Qt)return r;if(r!=null){if(Ky(r))return ZR(r);if(Gm(r))return ib(r);if(jy(r))return KR(r);if(Qy(r))return rb(r);if(Jy(r))return JR(r);if(nb(r))return QR(r)}throw eb(r)}function ZR(r){return new Qt(function(e){var t=r[ju]();if(Ut(t.subscribe))return t.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function ib(r){return new Qt(function(e){for(var t=0;t<r.length&&!e.closed;t++)e.next(r[t]);e.complete()})}function KR(r){return new Qt(function(e){r.then(function(t){e.closed||(e.next(t),e.complete())},function(t){return e.error(t)}).then(null,Vy)})}function JR(r){return new Qt(function(e){var t,n;try{for(var i=yr(r),s=i.next();!s.done;s=i.next()){var a=s.value;if(e.next(a),e.closed)return}}catch(o){t={error:o}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}e.complete()})}function rb(r){return new Qt(function(e){e2(r,e).catch(function(t){return e.error(t)})})}function QR(r){return rb(tb(r))}function e2(r,e){var t,n,i,s;return RR(this,void 0,void 0,function(){var a,o;return $y(this,function(c){switch(c.label){case 0:c.trys.push([0,5,6,11]),t=IR(r),c.label=1;case 1:return[4,t.next()];case 2:if(n=c.sent(),!!n.done)return[3,4];if(a=n.value,e.next(a),e.closed)return[2];c.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return o=c.sent(),i={error:o},[3,11];case 6:return c.trys.push([6,,9,10]),n&&!n.done&&(s=t.return)?[4,s.call(t)]:[3,8];case 7:c.sent(),c.label=8;case 8:return[3,10];case 9:if(i)throw i.error;return[7];case 10:return[7];case 11:return e.complete(),[2]}})})}function Xu(r,e){return e?Hm(r,e):ib(r)}function sb(r){return r&&Ut(r.schedule)}function Wm(r){return r[r.length-1]}function qm(r){return Ut(Wm(r))?r.pop():void 0}function gl(r){return sb(Wm(r))?r.pop():void 0}function t2(r,e){return typeof Wm(r)=="number"?r.pop():e}function Ze(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=gl(r);return t?Hm(r,t):Xu(r)}function hu(r,e){var t=Ut(r)?r:function(){return r},n=function(i){return i.error(t())};return new Qt(n)}var jm=qu(function(r){return function(){r(this),this.name="EmptyError",this.message="no elements in sequence"}});function ab(r){return r instanceof Date&&!isNaN(r)}var n2=qu(function(r){return function(t){t===void 0&&(t=null),r(this),this.message="Timeout has occurred",this.name="TimeoutError",this.info=t}});function qp(r,e){var t=ab(r)?{first:r}:{each:r},n=t.first,i=t.each,s=t.with,a=s===void 0?i2:s,o=t.scheduler,c=o===void 0?Vm:o,l=t.meta,h=l===void 0?null:l;if(n==null&&i==null)throw new TypeError("No timeout provided.");return Gt(function(u,d){var f,p,g=null,_=0,m=function(v){p=Yy(d,c,function(){f.unsubscribe(),Ii(a({meta:h,lastValue:g,seen:_})).subscribe(d)},v)};f=u.subscribe(new It(d,function(v){p==null||p.unsubscribe(),_++,d.next(g=v),i>0&&m(i)},void 0,void 0,function(){p!=null&&p.closed||p==null||p.unsubscribe(),g=null})),m(n!=null?typeof n=="number"?n:+n-c.now():i)})}function i2(r){throw new n2(r)}function V(r,e){return Gt(function(t,n){var i=0;t.subscribe(new It(n,function(s){n.next(r.call(e,s,i++))}))})}var r2=Array.isArray;function s2(r,e){return r2(e)?r.apply(void 0,br([],lr(e))):r(e)}function ob(r){return V(function(e){return s2(r,e)})}var a2=Array.isArray,o2=Object.getPrototypeOf,c2=Object.prototype,l2=Object.keys;function h2(r){if(r.length===1){var e=r[0];if(a2(e))return{args:e,keys:null};if(u2(e)){var t=l2(e);return{args:t.map(function(n){return e[n]}),keys:t}}}return{args:r,keys:null}}function u2(r){return r&&typeof r=="object"&&o2(r)===c2}function d2(r,e){return r.reduce(function(t,n,i){return t[n]=e[i],t},{})}function He(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=gl(r),n=qm(r),i=h2(r),s=i.args,a=i.keys;if(s.length===0)return on([],t);var o=new Qt(f2(s,t,a?function(c){return d2(a,c)}:wr));return n?o.pipe(ob(n)):o}function f2(r,e,t){return t===void 0&&(t=wr),function(n){Z_(e,function(){for(var i=r.length,s=new Array(i),a=i,o=i,c=function(h){Z_(e,function(){var u=on(r[h],e),d=!1;u.subscribe(new It(n,function(f){s[h]=f,d||(d=!0,o--),o||n.next(t(s.slice()))},function(){--a||n.complete()}))},n)},l=0;l<i;l++)c(l)},n)}}function Z_(r,e,t){r?t.add(r.schedule(e)):e()}function cb(r,e,t,n,i,s,a,o){var c=[],l=0,h=0,u=!1,d=function(){u&&!c.length&&!l&&e.complete()},f=function(g){return l<n?p(g):c.push(g)},p=function(g){s&&e.next(g),l++;var _=!1;Ii(t(g,h++)).subscribe(new It(e,function(m){s?f(m):e.next(m)},function(){_=!0},void 0,function(){if(_)try{l--;for(var m=function(){var v=c.shift();a?e.add(a.schedule(function(){return p(v)})):p(v)};c.length&&l<n;)m();d()}catch(v){e.error(v)}}))};return r.subscribe(new It(e,f,function(){u=!0,d()})),function(){}}function ct(r,e,t){return t===void 0&&(t=1/0),Ut(e)?ct(function(n,i){return V(function(s,a){return e(n,s,i,a)})(Ii(r(n,i)))},t):(typeof e=="number"&&(t=e),Gt(function(n,i){return cb(n,i,r,t)}))}function ua(r){return r===void 0&&(r=1/0),ct(wr,r)}function p2(){return ua(1)}function Wi(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return p2()(Xu(r,gl(r)))}var m2=["addListener","removeListener"],g2=["addEventListener","removeEventListener"],_2=["on","off"];function tn(r,e,t,n){if(Ut(t)&&(n=t,t=void 0),n)return tn(r,e,t).pipe(ob(n));var i=lr(y2(r)?g2.map(function(o){return function(c){return r[o](e,c,t)}}):v2(r)?m2.map(K_(r,e)):x2(r)?_2.map(K_(r,e)):[],2),s=i[0],a=i[1];if(!s&&Gm(r))return ct(function(o){return tn(o,e,t)})(Xu(r));if(!s)throw new TypeError("Invalid event target");return new Qt(function(o){var c=function(){for(var l=[],h=0;h<arguments.length;h++)l[h]=arguments[h];return o.next(1<l.length?l:l[0])};return s(c),function(){return a(c)}})}function K_(r,e){return function(t){return function(n){return r[t](e,n)}}}function v2(r){return Ut(r.addListener)&&Ut(r.removeListener)}function x2(r){return Ut(r.on)&&Ut(r.off)}function y2(r){return Ut(r.addEventListener)&&Ut(r.removeEventListener)}function Xm(r,e,t){r===void 0&&(r=0),t===void 0&&(t=qy);var n=-1;return e!=null&&(sb(e)?t=e:n=e),new Qt(function(i){var s=ab(r)?+r-t.now():r;s<0&&(s=0);var a=0;return t.schedule(function(){i.closed||(i.next(a++),0<=n?this.schedule(void 0,n):i.complete())},s)})}function xt(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=gl(r),n=t2(r,1/0),i=r;return i.length?i.length===1?Ii(i[0]):ua(n)(Xu(i,t)):ml}var b2=Array.isArray;function M2(r){return r.length===1&&b2(r[0])?r[0]:r}function Fe(r,e){return Gt(function(t,n){var i=0;t.subscribe(new It(n,function(s){return r.call(e,s,i++)&&n.next(s)}))})}function Gc(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=qm(r),n=M2(r);return n.length?new Qt(function(i){var s=n.map(function(){return[]}),a=n.map(function(){return!1});i.add(function(){s=a=null});for(var o=function(l){Ii(n[l]).subscribe(new It(i,function(h){if(s[l].push(h),s.every(function(d){return d.length})){var u=s.map(function(d){return d.shift()});i.next(t?t.apply(void 0,br([],lr(u))):u),s.some(function(d,f){return!d.length&&a[f]})&&i.complete()}},function(){a[l]=!0,!s[l].length&&i.complete()}))},c=0;!i.closed&&c<n.length;c++)o(c);return function(){s=a=null}}):ml}function S2(r){return Gt(function(e,t){var n=!1,i=null,s=null,a=!1,o=function(){if(s==null||s.unsubscribe(),s=null,n){n=!1;var l=i;i=null,t.next(l)}a&&t.complete()},c=function(){s=null,a&&t.complete()};e.subscribe(new It(t,function(l){n=!0,i=l,s||Ii(r(l)).subscribe(s=new It(t,o,c))},function(){a=!0,(!n||!s||s.closed)&&t.complete()}))})}function lb(r,e){return e===void 0&&(e=qy),S2(function(){return Xm(r,e)})}function Mu(r,e){return e===void 0&&(e=null),e=e??r,Gt(function(t,n){var i=[],s=0;t.subscribe(new It(n,function(a){var o,c,l,h,u=null;s++%e===0&&i.push([]);try{for(var d=yr(i),f=d.next();!f.done;f=d.next()){var p=f.value;p.push(a),r<=p.length&&(u=u??[],u.push(p))}}catch(m){o={error:m}}finally{try{f&&!f.done&&(c=d.return)&&c.call(d)}finally{if(o)throw o.error}}if(u)try{for(var g=yr(u),_=g.next();!_.done;_=g.next()){var p=_.value;Hc(i,p),n.next(p)}}catch(m){l={error:m}}finally{try{_&&!_.done&&(h=g.return)&&h.call(g)}finally{if(l)throw l.error}}},function(){var a,o;try{for(var c=yr(i),l=c.next();!l.done;l=c.next()){var h=l.value;n.next(h)}}catch(u){a={error:u}}finally{try{l&&!l.done&&(o=c.return)&&o.call(c)}finally{if(a)throw a.error}}n.complete()},void 0,function(){i=null}))})}function w2(r){return Gt(function(e,t){var n=null,i=null,s=function(){i==null||i.unsubscribe();var a=n;n=[],a&&t.next(a),Ii(r()).subscribe(i=new It(t,s,$s))};s(),e.subscribe(new It(t,function(a){return n==null?void 0:n.push(a)},function(){n&&t.next(n),t.complete()},void 0,function(){return n=i=null}))})}function $t(r){return Gt(function(e,t){var n=null,i=!1,s;n=e.subscribe(new It(t,void 0,void 0,function(a){s=Ii(r(a,$t(r)(e))),n?(n.unsubscribe(),n=null,s.subscribe(t)):i=!0})),i&&(n.unsubscribe(),n=null,s.subscribe(t))})}function hb(r,e,t,n,i){return function(s,a){var o=t,c=e,l=0;s.subscribe(new It(a,function(h){var u=l++;c=o?r(c,h,u):(o=!0,h),n&&a.next(c)},i&&function(){o&&a.next(c),a.complete()}))}}function J_(r,e){return Gt(hb(r,e,arguments.length>=2,!1,!0))}function Qd(r,e){return Ut(e)?ct(r,e,1):ct(r,1)}function T2(r){return new Qt(function(e){return r.subscribe(e)})}var E2={connector:function(){return new De}};function ub(r,e){e===void 0&&(e=E2);var t=e.connector;return Gt(function(n,i){var s=t();on(r(T2(s))).subscribe(i),i.add(n.subscribe(s))})}function Wc(r,e){return e===void 0&&(e=Vm),Gt(function(t,n){var i=null,s=null,a=null,o=function(){if(i){i.unsubscribe(),i=null;var l=s;s=null,n.next(l)}};function c(){var l=a+r,h=e.now();if(h<l){i=this.schedule(void 0,l-h),n.add(i);return}o()}t.subscribe(new It(n,function(l){s=l,a=e.now(),i||(i=e.schedule(c,r),n.add(i))},function(){o(),n.complete()},void 0,function(){s=i=null}))})}function db(r){return Gt(function(e,t){var n=!1;e.subscribe(new It(t,function(i){n=!0,t.next(i)},function(){n||t.next(r),t.complete()}))})}function Hi(r){return r<=0?function(){return ml}:Gt(function(e,t){var n=0;e.subscribe(new It(t,function(i){++n<=r&&(t.next(i),r<=n&&t.complete())}))})}function Be(r,e){return e===void 0&&(e=wr),r=r??C2,Gt(function(t,n){var i,s=!0;t.subscribe(new It(n,function(a){var o=e(a);(s||!r(i,o))&&(s=!1,i=o,n.next(a))}))})}function C2(r,e){return r===e}function fb(r){return r===void 0&&(r=A2),Gt(function(e,t){var n=!1;e.subscribe(new It(t,function(i){n=!0,t.next(i)},function(){return n?t.complete():t.error(r())}))})}function A2(){return new jm}function pb(r,e,t){return e===void 0&&(e=1/0),e=(e||0)<1?1/0:e,Gt(function(n,i){return cb(n,i,r,e,void 0,!0,t)})}function _i(r){return Gt(function(e,t){try{e.subscribe(t)}finally{t.add(r)}})}function Ve(r,e){var t=arguments.length>=2;return function(n){return n.pipe(r?Fe(function(i,s){return r(i,s,n)}):wr,Hi(1),t?db(e):fb(function(){return new jm}))}}function jp(r){return r<=0?function(){return ml}:Gt(function(e,t){var n=[];e.subscribe(new It(t,function(i){n.push(i),r<n.length&&n.shift()},function(){var i,s;try{for(var a=yr(n),o=a.next();!o.done;o=a.next()){var c=o.value;t.next(c)}}catch(l){i={error:l}}finally{try{o&&!o.done&&(s=a.return)&&s.call(a)}finally{if(i)throw i.error}}t.complete()},void 0,function(){n=null}))})}function Do(r,e){var t=arguments.length>=2;return function(n){return n.pipe(r?Fe(function(i,s){return r(i,s,n)}):wr,jp(1),t?db(e):fb(function(){return new jm}))}}function mb(r,e){var t=Ut(r)?r:function(){return r};return Ut(e)?ub(e,{connector:t}):function(n){return new BR(n,t)}}function Ri(){return Gt(function(r,e){var t,n=!1;r.subscribe(new It(e,function(i){var s=t;t=i,n&&e.next([s,i]),n=!0}))})}function R2(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=r.length;if(t===0)throw new Error("list of properties cannot be empty.");return V(function(n){for(var i=n,s=0;s<t;s++){var a=i==null?void 0:i[r[s]];if(typeof a<"u")i=a;else return}return i})}function Ci(r){return r?function(e){return ub(r)(e)}:function(e){return mb(new De)(e)}}function Ke(r,e,t,n){var i=Ut(t)?t:void 0;return function(s){return mb(new Wy(r,e,n),i)(s)}}function Xp(r){var e;e={count:r};var t=e.count,n=t===void 0?1/0:t,i=e.delay,s=e.resetOnSuccess,a=s===void 0?!1:s;return n<=0?wr:Gt(function(o,c){var l=0,h,u=function(){var d=!1;h=o.subscribe(new It(c,function(f){a&&(l=0),c.next(f)},void 0,function(f){if(l++<n){var p=function(){h?(h.unsubscribe(),h=null,u()):d=!0};if(i!=null){var g=typeof i=="number"?Xm(i):Ii(i(f,l)),_=new It(c,function(){_.unsubscribe(),p()},function(){c.complete()});g.subscribe(_)}else p()}else c.error(f)})),d&&(h.unsubscribe(),h=null,u())};u()})}function P2(r){return Gt(function(e,t){var n=!1,i=null;e.subscribe(new It(t,function(a){n=!0,i=a}));var s=function(){if(n){n=!1;var a=i;i=null,t.next(a)}};r.subscribe(new It(t,s,$s))})}function cn(r,e){return Gt(hb(r,e,arguments.length>=2,!0))}function vt(r){r===void 0&&(r={});var e=r.connector,t=e===void 0?function(){return new De}:e,n=r.resetOnError,i=n===void 0?!0:n,s=r.resetOnComplete,a=s===void 0?!0:s,o=r.resetOnRefCountZero,c=o===void 0?!0:o;return function(l){var h=null,u=null,d=null,f=0,p=!1,g=!1,_=function(){u==null||u.unsubscribe(),u=null},m=function(){_(),h=d=null,p=g=!1},v=function(){var y=h;m(),y==null||y.unsubscribe()};return Gt(function(y,x){f++,!g&&!p&&_();var w=d=d??t();x.add(function(){f--,f===0&&!g&&!p&&(u=ef(v,c))}),w.subscribe(x),h||(h=new km({next:function(E){return w.next(E)},error:function(E){g=!0,_(),u=ef(m,i,E),w.error(E)},complete:function(){p=!0,_(),u=ef(m,a),w.complete()}}),on(y).subscribe(h))})(l)}}function ef(r,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];return e===!0?(r(),null):e===!1?null:e.apply(void 0,br([],lr(t))).pipe(Hi(1)).subscribe(function(){return r()})}function In(r){return Fe(function(e,t){return r<=t})}function Yp(r){return Gt(function(e,t){var n=!1,i=0;e.subscribe(new It(t,function(s){return(n||(n=!r(s,i++)))&&t.next(s)}))})}function At(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=gl(r);return Gt(function(n,i){(t?Wi(r,n,t):Wi(r,n)).subscribe(i)})}function we(r,e){return Gt(function(t,n){var i=null,s=0,a=!1,o=function(){return a&&!i&&n.complete()};t.subscribe(new It(n,function(c){i==null||i.unsubscribe();var l=0,h=s++;Ii(r(c,h)).subscribe(i=new It(n,function(u){return n.next(e?e(c,u,h,l++):u)},function(){i=null,o()}))},function(){a=!0,o()}))})}function As(r){return Gt(function(e,t){Ii(r).subscribe(new It(t,function(){return t.complete()},$s)),!t.closed&&e.subscribe(t)})}function gb(r,e){return e===void 0&&(e=!1),Gt(function(t,n){var i=0;t.subscribe(new It(n,function(s){var a=r(s,i++);(a||e)&&n.next(s),!a&&n.complete()}))})}function an(r,e,t){var n=Ut(r)||e||t?{next:r,error:e,complete:t}:r;return n?Gt(function(i,s){var a;(a=n.subscribe)===null||a===void 0||a.call(n);var o=!0;i.subscribe(new It(s,function(c){var l;(l=n.next)===null||l===void 0||l.call(n,c),s.next(c)},function(){var c;o=!1,(c=n.complete)===null||c===void 0||c.call(n),s.complete()},function(c){var l;o=!1,(l=n.error)===null||l===void 0||l.call(n,c),s.error(c)},function(){var c,l;o&&((c=n.unsubscribe)===null||c===void 0||c.call(n)),(l=n.finalize)===null||l===void 0||l.call(n)}))}):wr}function at(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];var t=qm(r);return Gt(function(n,i){for(var s=r.length,a=new Array(s),o=r.map(function(){return!1}),c=!1,l=function(u){Ii(r[u]).subscribe(new It(i,function(d){a[u]=d,!c&&!o[u]&&(o[u]=!0,(c=o.every(wr))&&(o=null))},$s))},h=0;h<s;h++)l(h);n.subscribe(new It(i,function(u){if(c){var d=br([u],lr(a));i.next(t?t.apply(void 0,br([],lr(d))):d)}}))})}class I2{createFilter(e){return new Function("node","return "+this._compile(e)+";")}_compile(e){if(e==null||e.length<=1)return"true";const t=e[0];return"("+(t==="=="?this._compileComparisonOp("===",e[1],e[2],!1):t==="!="?this._compileComparisonOp("!==",e[1],e[2],!1):t===">"||t===">="||t==="<"||t==="<="?this._compileComparisonOp(t,e[1],e[2],!0):t==="in"?this._compileInOp(e[1],e.slice(2)):t==="!in"?this._compileNegation(this._compileInOp(e[1],e.slice(2))):t==="all"?this._compileLogicalOp(e.slice(1),"&&"):"true")+")"}_compare(e,t){return e<t?-1:e>t?1:0}_compileComparisonOp(e,t,n,i){const s=this._compilePropertyReference(t),a=JSON.stringify(n);return(i?"typeof "+s+"===typeof "+a+"&&":"")+s+e+a}_compileInOp(e,t){const n=this._compare,i=JSON.stringify(t.sort(n)),s=this._compilePropertyReference(e);return i+".indexOf("+s+")!==-1"}_compileLogicalOp(e,t){const n=this._compile.bind(this);return e.map(n).join(t)}_compileNegation(e){return"!("+e+")"}_compilePropertyReference(e){return"node["+JSON.stringify(e)+"]"}}/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const _b="134",L2=0,Q_=1,D2=2,vb=1,F2=2,Sc=3,Fo=0,An=1,si=2,xb=1,Ls=0,Pc=1,ev=2,tv=3,nv=4,N2=5,uo=100,O2=101,U2=102,iv=103,rv=104,B2=200,$2=201,k2=202,z2=203,yb=204,bb=205,V2=206,H2=207,G2=208,W2=209,q2=210,j2=0,X2=1,Y2=2,Zp=3,Z2=4,K2=5,J2=6,Q2=7,Yu=0,eP=1,tP=2,da=0,nP=1,iP=2,rP=3,sP=4,aP=5,Mb=300,_l=301,vl=302,Kp=303,Jp=304,Zu=306,Ym=307,Qp=1e3,Ai=1001,em=1002,Rn=1003,sv=1004,av=1005,Kn=1006,oP=1007,Ku=1008,ks=1009,cP=1010,lP=1011,Su=1012,hP=1013,uu=1014,Cs=1015,wo=1016,uP=1017,dP=1018,fP=1019,Ic=1020,pP=1021,fa=1022,ui=1023,mP=1024,gP=1025,_P=ui,To=1026,qc=1027,vP=1028,xP=1029,yP=1030,bP=1031,MP=1032,SP=1033,ov=33776,cv=33777,lv=33778,hv=33779,uv=35840,dv=35841,fv=35842,pv=35843,wP=36196,mv=37492,gv=37496,TP=37808,EP=37809,CP=37810,AP=37811,RP=37812,PP=37813,IP=37814,LP=37815,DP=37816,FP=37817,NP=37818,OP=37819,UP=37820,BP=37821,$P=36492,kP=37840,zP=37841,VP=37842,HP=37843,GP=37844,WP=37845,qP=37846,jP=37847,XP=37848,YP=37849,ZP=37850,KP=37851,JP=37852,QP=37853,eI=2200,tI=2201,nI=2202,wu=2300,Tu=2301,tf=2302,go=2400,_o=2401,Eu=2402,Zm=2500,Sb=2501,iI=0,Jn=3e3,xa=3001,Km=3007,Jm=3002,rI=3003,wb=3004,Tb=3005,Eb=3006,sI=3200,aI=3201,qo=0,oI=1,nf=7680,cI=519,jc=35044,Cu=35048,_v="300 es";class ya{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}}let rh=1234567;const Lc=Math.PI/180,Xc=180/Math.PI,Bn=[];for(let r=0;r<256;r++)Bn[r]=(r<16?"0":"")+r.toString(16);const lI=typeof crypto<"u"&&"randomUUID"in crypto;function or(){if(lI)return crypto.randomUUID().toUpperCase();const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Bn[r&255]+Bn[r>>8&255]+Bn[r>>16&255]+Bn[r>>24&255]+"-"+Bn[e&255]+Bn[e>>8&255]+"-"+Bn[e>>16&15|64]+Bn[e>>24&255]+"-"+Bn[t&63|128]+Bn[t>>8&255]+"-"+Bn[t>>16&255]+Bn[t>>24&255]+Bn[n&255]+Bn[n>>8&255]+Bn[n>>16&255]+Bn[n>>24&255]).toUpperCase()}function vi(r,e,t){return Math.max(e,Math.min(t,r))}function Qm(r,e){return(r%e+e)%e}function hI(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function uI(r,e,t){return r!==e?(t-r)/(e-r):0}function Dc(r,e,t){return(1-t)*r+t*e}function dI(r,e,t,n){return Dc(r,e,1-Math.exp(-t*n))}function fI(r,e=1){return e-Math.abs(Qm(r,e*2)-e)}function pI(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function mI(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function gI(r,e){return r+Math.floor(Math.random()*(e-r+1))}function _I(r,e){return r+Math.random()*(e-r)}function vI(r){return r*(.5-Math.random())}function xI(r){return r!==void 0&&(rh=r%2147483647),rh=rh*16807%2147483647,(rh-1)/2147483646}function yI(r){return r*Lc}function bI(r){return r*Xc}function tm(r){return(r&r-1)===0&&r!==0}function MI(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Cb(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function SI(r,e,t,n,i){const s=Math.cos,a=Math.sin,o=s(t/2),c=a(t/2),l=s((e+n)/2),h=a((e+n)/2),u=s((e-n)/2),d=a((e-n)/2),f=s((n-e)/2),p=a((n-e)/2);switch(i){case"XYX":r.set(o*h,c*u,c*d,o*l);break;case"YZY":r.set(c*d,o*h,c*u,o*l);break;case"ZXZ":r.set(c*u,c*d,o*h,o*l);break;case"XZX":r.set(o*h,c*p,c*f,o*l);break;case"YXY":r.set(c*f,o*h,c*p,o*l);break;case"ZYZ":r.set(c*p,c*f,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}var No=Object.freeze({__proto__:null,DEG2RAD:Lc,RAD2DEG:Xc,generateUUID:or,clamp:vi,euclideanModulo:Qm,mapLinear:hI,inverseLerp:uI,lerp:Dc,damp:dI,pingpong:fI,smoothstep:pI,smootherstep:mI,randInt:gI,randFloat:_I,randFloatSpread:vI,seededRandom:xI,degToRad:yI,radToDeg:bI,isPowerOfTwo:tm,ceilPowerOfTwo:MI,floorPowerOfTwo:Cb,setQuaternionFromProperEuler:SI});class Ne{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}Ne.prototype.isVector2=!0;class zn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,a,o,c,l){const h=this.elements;return h[0]=e,h[1]=i,h[2]=o,h[3]=t,h[4]=s,h[5]=c,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],o=n[3],c=n[6],l=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],g=i[0],_=i[3],m=i[6],v=i[1],y=i[4],x=i[7],w=i[2],E=i[5],M=i[8];return s[0]=a*g+o*v+c*w,s[3]=a*_+o*y+c*E,s[6]=a*m+o*x+c*M,s[1]=l*g+h*v+u*w,s[4]=l*_+h*y+u*E,s[7]=l*m+h*x+u*M,s[2]=d*g+f*v+p*w,s[5]=d*_+f*y+p*E,s[8]=d*m+f*x+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8];return t*a*h-t*o*l-n*s*h+n*o*c+i*s*l-i*a*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=h*a-o*l,d=o*c-h*s,f=l*s-a*c,p=t*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=u*g,e[1]=(i*l-h*n)*g,e[2]=(o*n-i*a)*g,e[3]=d*g,e[4]=(h*t-i*c)*g,e[5]=(i*s-o*t)*g,e[6]=f*g,e[7]=(n*c-l*t)*g,e[8]=(a*t-n*s)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,o){const c=Math.cos(s),l=Math.sin(s);return this.set(n*c,n*l,-n*(c*a+l*o)+a+e,-i*l,i*c,-i*(-l*a+c*o)+o+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],a=i[3],o=i[6],c=i[1],l=i[4],h=i[7];return i[0]=t*s+n*c,i[3]=t*a+n*l,i[6]=t*o+n*h,i[1]=-n*s+t*c,i[4]=-n*a+t*l,i[7]=-n*o+t*h,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}zn.prototype.isMatrix3=!0;function Ab(r){if(r.length===0)return-1/0;let e=r[0];for(let t=1,n=r.length;t<n;++t)r[t]>e&&(e=r[t]);return e}function Ju(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function vv(r,e=0){let t=3735928559^e,n=1103547991^e;for(let i=0,s;i<r.length;i++)s=r.charCodeAt(i),t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);return t=Math.imul(t^t>>>16,2246822507)^Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507)^Math.imul(t^t>>>13,3266489909),4294967296*(2097151&n)+(t>>>0)}let ka;class jo{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ka===void 0&&(ka=Ju("canvas")),ka.width=e.width,ka.height=e.height;const n=ka.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ka}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let wI=0;class Cn extends ya{constructor(e=Cn.DEFAULT_IMAGE,t=Cn.DEFAULT_MAPPING,n=Ai,i=Ai,s=Kn,a=Ku,o=ui,c=ks,l=1,h=Jn){super(),Object.defineProperty(this,"id",{value:wI++}),this.uuid=or(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new Ne(0,0),this.repeat=new Ne(1,1),this.center=new Ne(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new zn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=or()),!t&&e.images[i.uuid]===void 0){let s;if(Array.isArray(i)){s=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?s.push(rf(i[a].image)):s.push(rf(i[a]))}else s=rf(i);e.images[i.uuid]={uuid:i.uuid,url:s}}n.image=i.uuid}return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Mb)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Qp:e.x=e.x-Math.floor(e.x);break;case Ai:e.x=e.x<0?0:1;break;case em:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Qp:e.y=e.y-Math.floor(e.y);break;case Ai:e.y=e.y<0?0:1;break;case em:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&this.version++}}Cn.DEFAULT_IMAGE=void 0;Cn.DEFAULT_MAPPING=Mb;Cn.prototype.isTexture=!0;function rf(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?jo.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class Ht{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const c=e.elements,l=c[0],h=c[4],u=c[8],d=c[1],f=c[5],p=c[9],g=c[2],_=c[6],m=c[10];if(Math.abs(h-d)<.01&&Math.abs(u-g)<.01&&Math.abs(p-_)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+g)<.1&&Math.abs(p+_)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(l+1)/2,x=(f+1)/2,w=(m+1)/2,E=(h+d)/4,M=(u+g)/4,A=(p+_)/4;return y>x&&y>w?y<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(y),i=E/n,s=M/n):x>w?x<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(x),n=E/i,s=A/i):w<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(w),n=M/s,i=A/s),this.set(n,i,s,t),this}let v=Math.sqrt((_-p)*(_-p)+(u-g)*(u-g)+(d-h)*(d-h));return Math.abs(v)<.001&&(v=1),this.x=(_-p)/v,this.y=(u-g)/v,this.z=(d-h)/v,this.w=Math.acos((l+f+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Ht.prototype.isVector4=!0;class cr extends ya{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Ht(0,0,e,t),this.scissorTest=!1,this.viewport=new Ht(0,0,e,t),this.texture=new Cn(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Kn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}cr.prototype.isWebGLRenderTarget=!0;class TI extends cr{constructor(e,t,n){super(e,t);const i=this.texture;this.texture=[];for(let s=0;s<n;s++)this.texture[s]=i.clone()}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}TI.prototype.isWebGLMultipleRenderTargets=!0;class Rb extends cr{constructor(e,t,n){super(e,t,n),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}Rb.prototype.isWebGLMultisampleRenderTarget=!0;class Vn{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,a,o){let c=n[i+0],l=n[i+1],h=n[i+2],u=n[i+3];const d=s[a+0],f=s[a+1],p=s[a+2],g=s[a+3];if(o===0){e[t+0]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(o===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=g;return}if(u!==g||c!==d||l!==f||h!==p){let _=1-o;const m=c*d+l*f+h*p+u*g,v=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const w=Math.sqrt(y),E=Math.atan2(w,m*v);_=Math.sin(_*E)/w,o=Math.sin(o*E)/w}const x=o*v;if(c=c*_+d*x,l=l*_+f*x,h=h*_+p*x,u=u*_+g*x,_===1-o){const w=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=w,l*=w,h*=w,u*=w}}e[t]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,s,a){const o=n[i],c=n[i+1],l=n[i+2],h=n[i+3],u=s[a],d=s[a+1],f=s[a+2],p=s[a+3];return e[t]=o*p+h*u+c*f-l*d,e[t+1]=c*p+h*d+l*u-o*f,e[t+2]=l*p+h*f+o*d-c*u,e[t+3]=h*p-o*u-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,a=e._order,o=Math.cos,c=Math.sin,l=o(n/2),h=o(i/2),u=o(s/2),d=c(n/2),f=c(i/2),p=c(s/2);switch(a){case"XYZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"YZX":this._x=d*h*u+l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u-d*f*p;break;case"XZY":this._x=d*h*u-l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],a=t[1],o=t[5],c=t[9],l=t[2],h=t[6],u=t[10],d=n+o+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-c)*f,this._y=(s-l)*f,this._z=(a-i)*f}else if(n>o&&n>u){const f=2*Math.sqrt(1+n-o-u);this._w=(h-c)/f,this._x=.25*f,this._y=(i+a)/f,this._z=(s+l)/f}else if(o>u){const f=2*Math.sqrt(1+o-n-u);this._w=(s-l)/f,this._x=(i+a)/f,this._y=.25*f,this._z=(c+h)/f}else{const f=2*Math.sqrt(1+u-n-o);this._w=(a-i)/f,this._x=(s+l)/f,this._y=(c+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(vi(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,a=e._w,o=t._x,c=t._y,l=t._z,h=t._w;return this._x=n*h+a*o+i*l-s*c,this._y=i*h+a*c+s*o-n*l,this._z=s*h+a*l+n*c-i*o,this._w=a*h-n*o-i*c-s*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=s,this;const c=1-o*o;if(c<=Number.EPSILON){const f=1-t;return this._w=f*a+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(c),h=Math.atan2(l,o),u=Math.sin((1-t)*h)/l,d=Math.sin(t*h)/l;return this._w=a*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Vn.prototype.isQuaternion=!0;class D{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(xv.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(xv.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,a=e.y,o=e.z,c=e.w,l=c*t+a*i-o*n,h=c*n+o*t-s*i,u=c*i+s*n-a*t,d=-s*t-a*n-o*i;return this.x=l*c+d*-s+h*-o-u*-a,this.y=h*c+d*-a+u*-s-l*-o,this.z=u*c+d*-o+l*-a-h*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,a=t.x,o=t.y,c=t.z;return this.x=i*c-s*o,this.y=s*a-n*c,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return sf.copy(this).projectOnVector(e),this.sub(sf)}reflect(e){return this.sub(sf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(vi(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}D.prototype.isVector3=!0;const sf=new D,xv=new Vn;class Li{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,a=-1/0,o=-1/0;for(let c=0,l=e.length;c<l;c+=3){const h=e[c],u=e[c+1],d=e[c+2];h<t&&(t=h),u<n&&(n=u),d<i&&(i=d),h>s&&(s=h),u>a&&(a=u),d>o&&(o=d)}return this.min.set(t,n,i),this.max.set(s,a,o),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,a=-1/0,o=-1/0;for(let c=0,l=e.count;c<l;c++){const h=e.getX(c),u=e.getY(c),d=e.getZ(c);h<t&&(t=h),u<n&&(n=u),d<i&&(i=d),h>s&&(s=h),u>a&&(a=u),d>o&&(o=d)}return this.min.set(t,n,i),this.max.set(s,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=cc.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),af.copy(t.boundingBox),af.applyMatrix4(e.matrixWorld),this.union(af));const n=e.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,cc),cc.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(lc),sh.subVectors(this.max,lc),za.subVectors(e.a,lc),Va.subVectors(e.b,lc),Ha.subVectors(e.c,lc),ps.subVectors(Va,za),ms.subVectors(Ha,Va),ta.subVectors(za,Ha);let t=[0,-ps.z,ps.y,0,-ms.z,ms.y,0,-ta.z,ta.y,ps.z,0,-ps.x,ms.z,0,-ms.x,ta.z,0,-ta.x,-ps.y,ps.x,0,-ms.y,ms.x,0,-ta.y,ta.x,0];return!of(t,za,Va,Ha,sh)||(t=[1,0,0,0,1,0,0,0,1],!of(t,za,Va,Ha,sh))?!1:(ah.crossVectors(ps,ms),t=[ah.x,ah.y,ah.z],of(t,za,Va,Ha,sh))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return cc.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(cc).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Fr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Fr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Fr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Fr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Fr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Fr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Fr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Fr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Fr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Li.prototype.isBox3=!0;const Fr=[new D,new D,new D,new D,new D,new D,new D,new D],cc=new D,af=new Li,za=new D,Va=new D,Ha=new D,ps=new D,ms=new D,ta=new D,lc=new D,sh=new D,ah=new D,na=new D;function of(r,e,t,n,i){for(let s=0,a=r.length-3;s<=a;s+=3){na.fromArray(r,s);const o=i.x*Math.abs(na.x)+i.y*Math.abs(na.y)+i.z*Math.abs(na.z),c=e.dot(na),l=t.dot(na),h=n.dot(na);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>o)return!1}return!0}const EI=new Li,yv=new D,cf=new D,lf=new D;class Xo{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):EI.setFromPoints(e).getCenter(n);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){lf.subVectors(e,this.center);const t=lf.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(lf.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return cf.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(yv.copy(e.center).add(cf)),this.expandByPoint(yv.copy(e.center).sub(cf)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Nr=new D,hf=new D,oh=new D,gs=new D,uf=new D,ch=new D,df=new D;class ba{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Nr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Nr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Nr.copy(this.direction).multiplyScalar(t).add(this.origin),Nr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){hf.copy(e).add(t).multiplyScalar(.5),oh.copy(t).sub(e).normalize(),gs.copy(this.origin).sub(hf);const s=e.distanceTo(t)*.5,a=-this.direction.dot(oh),o=gs.dot(this.direction),c=-gs.dot(oh),l=gs.lengthSq(),h=Math.abs(1-a*a);let u,d,f,p;if(h>0)if(u=a*c-o,d=a*o-c,p=s*h,u>=0)if(d>=-p)if(d<=p){const g=1/h;u*=g,d*=g,f=u*(u+a*d+2*o)+d*(a*u+d+2*c)+l}else d=s,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;else d=-s,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;else d<=-p?(u=Math.max(0,-(-a*s+o)),d=u>0?-s:Math.min(Math.max(-s,-c),s),f=-u*u+d*(d+2*c)+l):d<=p?(u=0,d=Math.min(Math.max(-s,-c),s),f=d*(d+2*c)+l):(u=Math.max(0,-(a*s+o)),d=u>0?s:Math.min(Math.max(-s,-c),s),f=-u*u+d*(d+2*c)+l);else d=a>0?-s:s,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),i&&i.copy(oh).multiplyScalar(d).add(hf),f}intersectSphere(e,t){Nr.subVectors(e.center,this.origin);const n=Nr.dot(this.direction),i=Nr.dot(Nr)-n*n,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),o=n-a,c=n+a;return o<0&&c<0?null:o<0?this.at(c,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,a,o,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),h>=0?(s=(e.min.y-d.y)*h,a=(e.max.y-d.y)*h):(s=(e.max.y-d.y)*h,a=(e.min.y-d.y)*h),n>a||s>i||((s>n||n!==n)&&(n=s),(a<i||i!==i)&&(i=a),u>=0?(o=(e.min.z-d.z)*u,c=(e.max.z-d.z)*u):(o=(e.max.z-d.z)*u,c=(e.min.z-d.z)*u),n>c||o>i)||((o>n||n!==n)&&(n=o),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Nr)!==null}intersectTriangle(e,t,n,i,s){uf.subVectors(t,e),ch.subVectors(n,e),df.crossVectors(uf,ch);let a=this.direction.dot(df),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;gs.subVectors(this.origin,e);const c=o*this.direction.dot(ch.crossVectors(gs,ch));if(c<0)return null;const l=o*this.direction.dot(uf.cross(gs));if(l<0||c+l>a)return null;const h=-o*gs.dot(df);return h<0?null:this.at(h/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class et{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,a,o,c,l,h,u,d,f,p,g,_){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=i,m[1]=s,m[5]=a,m[9]=o,m[13]=c,m[2]=l,m[6]=h,m[10]=u,m[14]=d,m[3]=f,m[7]=p,m[11]=g,m[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new et().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ga.setFromMatrixColumn(e,0).length(),s=1/Ga.setFromMatrixColumn(e,1).length(),a=1/Ga.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,a=Math.cos(n),o=Math.sin(n),c=Math.cos(i),l=Math.sin(i),h=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const d=a*h,f=a*u,p=o*h,g=o*u;t[0]=c*h,t[4]=-c*u,t[8]=l,t[1]=f+p*l,t[5]=d-g*l,t[9]=-o*c,t[2]=g-d*l,t[6]=p+f*l,t[10]=a*c}else if(e.order==="YXZ"){const d=c*h,f=c*u,p=l*h,g=l*u;t[0]=d+g*o,t[4]=p*o-f,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-o,t[2]=f*o-p,t[6]=g+d*o,t[10]=a*c}else if(e.order==="ZXY"){const d=c*h,f=c*u,p=l*h,g=l*u;t[0]=d-g*o,t[4]=-a*u,t[8]=p+f*o,t[1]=f+p*o,t[5]=a*h,t[9]=g-d*o,t[2]=-a*l,t[6]=o,t[10]=a*c}else if(e.order==="ZYX"){const d=a*h,f=a*u,p=o*h,g=o*u;t[0]=c*h,t[4]=p*l-f,t[8]=d*l+g,t[1]=c*u,t[5]=g*l+d,t[9]=f*l-p,t[2]=-l,t[6]=o*c,t[10]=a*c}else if(e.order==="YZX"){const d=a*c,f=a*l,p=o*c,g=o*l;t[0]=c*h,t[4]=g-d*u,t[8]=p*u+f,t[1]=u,t[5]=a*h,t[9]=-o*h,t[2]=-l*h,t[6]=f*u+p,t[10]=d-g*u}else if(e.order==="XZY"){const d=a*c,f=a*l,p=o*c,g=o*l;t[0]=c*h,t[4]=-u,t[8]=l*h,t[1]=d*u+g,t[5]=a*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=o*h,t[10]=g*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(CI,e,AI)}lookAt(e,t,n){const i=this.elements;return Ti.subVectors(e,t),Ti.lengthSq()===0&&(Ti.z=1),Ti.normalize(),_s.crossVectors(n,Ti),_s.lengthSq()===0&&(Math.abs(n.z)===1?Ti.x+=1e-4:Ti.z+=1e-4,Ti.normalize(),_s.crossVectors(n,Ti)),_s.normalize(),lh.crossVectors(Ti,_s),i[0]=_s.x,i[4]=lh.x,i[8]=Ti.x,i[1]=_s.y,i[5]=lh.y,i[9]=Ti.y,i[2]=_s.z,i[6]=lh.z,i[10]=Ti.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],o=n[4],c=n[8],l=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],g=n[6],_=n[10],m=n[14],v=n[3],y=n[7],x=n[11],w=n[15],E=i[0],M=i[4],A=i[8],T=i[12],S=i[1],b=i[5],U=i[9],L=i[13],N=i[2],k=i[6],B=i[10],z=i[14],H=i[3],ee=i[7],de=i[11],ce=i[15];return s[0]=a*E+o*S+c*N+l*H,s[4]=a*M+o*b+c*k+l*ee,s[8]=a*A+o*U+c*B+l*de,s[12]=a*T+o*L+c*z+l*ce,s[1]=h*E+u*S+d*N+f*H,s[5]=h*M+u*b+d*k+f*ee,s[9]=h*A+u*U+d*B+f*de,s[13]=h*T+u*L+d*z+f*ce,s[2]=p*E+g*S+_*N+m*H,s[6]=p*M+g*b+_*k+m*ee,s[10]=p*A+g*U+_*B+m*de,s[14]=p*T+g*L+_*z+m*ce,s[3]=v*E+y*S+x*N+w*H,s[7]=v*M+y*b+x*k+w*ee,s[11]=v*A+y*U+x*B+w*de,s[15]=v*T+y*L+x*z+w*ce,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],a=e[1],o=e[5],c=e[9],l=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],g=e[7],_=e[11],m=e[15];return p*(+s*c*u-i*l*u-s*o*d+n*l*d+i*o*f-n*c*f)+g*(+t*c*f-t*l*d+s*a*d-i*a*f+i*l*h-s*c*h)+_*(+t*l*u-t*o*f-s*a*u+n*a*f+s*o*h-n*l*h)+m*(-i*o*h-t*c*u+t*o*d+i*a*u-n*a*d+n*c*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],g=e[13],_=e[14],m=e[15],v=u*_*l-g*d*l+g*c*f-o*_*f-u*c*m+o*d*m,y=p*d*l-h*_*l-p*c*f+a*_*f+h*c*m-a*d*m,x=h*g*l-p*u*l+p*o*f-a*g*f-h*o*m+a*u*m,w=p*u*c-h*g*c-p*o*d+a*g*d+h*o*_-a*u*_,E=t*v+n*y+i*x+s*w;if(E===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/E;return e[0]=v*M,e[1]=(g*d*s-u*_*s-g*i*f+n*_*f+u*i*m-n*d*m)*M,e[2]=(o*_*s-g*c*s+g*i*l-n*_*l-o*i*m+n*c*m)*M,e[3]=(u*c*s-o*d*s-u*i*l+n*d*l+o*i*f-n*c*f)*M,e[4]=y*M,e[5]=(h*_*s-p*d*s+p*i*f-t*_*f-h*i*m+t*d*m)*M,e[6]=(p*c*s-a*_*s-p*i*l+t*_*l+a*i*m-t*c*m)*M,e[7]=(a*d*s-h*c*s+h*i*l-t*d*l-a*i*f+t*c*f)*M,e[8]=x*M,e[9]=(p*u*s-h*g*s-p*n*f+t*g*f+h*n*m-t*u*m)*M,e[10]=(a*g*s-p*o*s+p*n*l-t*g*l-a*n*m+t*o*m)*M,e[11]=(h*o*s-a*u*s-h*n*l+t*u*l+a*n*f-t*o*f)*M,e[12]=w*M,e[13]=(h*g*i-p*u*i+p*n*d-t*g*d-h*n*_+t*u*_)*M,e[14]=(p*o*i-a*g*i-p*n*c+t*g*c+a*n*_-t*o*_)*M,e[15]=(a*u*i-h*o*i+h*n*c-t*u*c-a*n*d+t*o*d)*M,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,a=e.x,o=e.y,c=e.z,l=s*a,h=s*o;return this.set(l*a+n,l*o-i*c,l*c+i*o,0,l*o+i*c,h*o+n,h*c-i*a,0,l*c-i*o,h*c+i*a,s*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,a){return this.set(1,n,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,a=t._y,o=t._z,c=t._w,l=s+s,h=a+a,u=o+o,d=s*l,f=s*h,p=s*u,g=a*h,_=a*u,m=o*u,v=c*l,y=c*h,x=c*u,w=n.x,E=n.y,M=n.z;return i[0]=(1-(g+m))*w,i[1]=(f+x)*w,i[2]=(p-y)*w,i[3]=0,i[4]=(f-x)*E,i[5]=(1-(d+m))*E,i[6]=(_+v)*E,i[7]=0,i[8]=(p+y)*M,i[9]=(_-v)*M,i[10]=(1-(d+g))*M,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ga.set(i[0],i[1],i[2]).length();const a=Ga.set(i[4],i[5],i[6]).length(),o=Ga.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],er.copy(this);const l=1/s,h=1/a,u=1/o;return er.elements[0]*=l,er.elements[1]*=l,er.elements[2]*=l,er.elements[4]*=h,er.elements[5]*=h,er.elements[6]*=h,er.elements[8]*=u,er.elements[9]*=u,er.elements[10]*=u,t.setFromRotationMatrix(er),n.x=s,n.y=a,n.z=o,this}makePerspective(e,t,n,i,s,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,c=2*s/(t-e),l=2*s/(n-i),h=(t+e)/(t-e),u=(n+i)/(n-i),d=-(a+s)/(a-s),f=-2*a*s/(a-s);return o[0]=c,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=l,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,s,a){const o=this.elements,c=1/(t-e),l=1/(n-i),h=1/(a-s),u=(t+e)*c,d=(n+i)*l,f=(a+s)*h;return o[0]=2*c,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}et.prototype.isMatrix4=!0;const Ga=new D,er=new et,CI=new D(0,0,0),AI=new D(1,1,1),_s=new D,lh=new D,Ti=new D,bv=new et,Mv=new Vn;class Ma{constructor(e=0,t=0,n=0,i=Ma.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],a=i[4],o=i[8],c=i[1],l=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(vi(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-vi(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(vi(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-vi(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(vi(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-vi(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return bv.makeRotationFromQuaternion(e),this.setFromRotationMatrix(bv,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Mv.setFromEuler(this),this.setFromQuaternion(Mv,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new D(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Ma.prototype.isEuler=!0;Ma.DefaultOrder="XYZ";Ma.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Pb{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let RI=0;const Sv=new D,Wa=new Vn,Or=new et,hh=new D,hc=new D,PI=new D,II=new Vn,wv=new D(1,0,0),Tv=new D(0,1,0),Ev=new D(0,0,1),LI={type:"added"},Cv={type:"removed"};class Dt extends ya{constructor(){super(),Object.defineProperty(this,"id",{value:RI++}),this.uuid=or(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Dt.DefaultUp.clone();const e=new D,t=new Ma,n=new Vn,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new et},normalMatrix:{value:new zn}}),this.matrix=new et,this.matrixWorld=new et,this.matrixAutoUpdate=Dt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Pb,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Wa.setFromAxisAngle(e,t),this.quaternion.multiply(Wa),this}rotateOnWorldAxis(e,t){return Wa.setFromAxisAngle(e,t),this.quaternion.premultiply(Wa),this}rotateX(e){return this.rotateOnAxis(wv,e)}rotateY(e){return this.rotateOnAxis(Tv,e)}rotateZ(e){return this.rotateOnAxis(Ev,e)}translateOnAxis(e,t){return Sv.copy(e).applyQuaternion(this.quaternion),this.position.add(Sv.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(wv,e)}translateY(e){return this.translateOnAxis(Tv,e)}translateZ(e){return this.translateOnAxis(Ev,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Or.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?hh.copy(e):hh.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),hc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Or.lookAt(hc,hh,this.up):Or.lookAt(hh,hc,this.up),this.quaternion.setFromRotationMatrix(Or),i&&(Or.extractRotation(i.matrixWorld),Wa.setFromRotationMatrix(Or),this.quaternion.premultiply(Wa.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(LI)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Cv)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Cv)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Or.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Or.multiply(e.parent.matrixWorld)),e.applyMatrix4(Or),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(hc,e,PI),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(hc,II,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];s(e.shapes,u)}else s(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(s(e.materials,this.material[c]));i.material=o}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];i.animations.push(s(e.animations,c))}}if(t){const o=a(e.geometries),c=a(e.materials),l=a(e.textures),h=a(e.images),u=a(e.shapes),d=a(e.skeletons),f=a(e.animations);o.length>0&&(n.geometries=o),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f)}return n.object=i,n;function a(o){const c=[];for(const l in o){const h=o[l];delete h.metadata,c.push(h)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Dt.DefaultUp=new D(0,1,0);Dt.DefaultMatrixAutoUpdate=!0;Dt.prototype.isObject3D=!0;const tr=new D,Ur=new D,ff=new D,Br=new D,qa=new D,ja=new D,Av=new D,pf=new D,mf=new D,gf=new D;class Pn{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),tr.subVectors(e,t),i.cross(tr);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){tr.subVectors(i,t),Ur.subVectors(n,t),ff.subVectors(e,t);const a=tr.dot(tr),o=tr.dot(Ur),c=tr.dot(ff),l=Ur.dot(Ur),h=Ur.dot(ff),u=a*l-o*o;if(u===0)return s.set(-2,-1,-1);const d=1/u,f=(l*c-o*h)*d,p=(a*h-o*c)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Br),Br.x>=0&&Br.y>=0&&Br.x+Br.y<=1}static getUV(e,t,n,i,s,a,o,c){return this.getBarycoord(e,t,n,i,Br),c.set(0,0),c.addScaledVector(s,Br.x),c.addScaledVector(a,Br.y),c.addScaledVector(o,Br.z),c}static isFrontFacing(e,t,n,i){return tr.subVectors(n,t),Ur.subVectors(e,t),tr.cross(Ur).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return tr.subVectors(this.c,this.b),Ur.subVectors(this.a,this.b),tr.cross(Ur).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Pn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Pn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Pn.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Pn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Pn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let a,o;qa.subVectors(i,n),ja.subVectors(s,n),pf.subVectors(e,n);const c=qa.dot(pf),l=ja.dot(pf);if(c<=0&&l<=0)return t.copy(n);mf.subVectors(e,i);const h=qa.dot(mf),u=ja.dot(mf);if(h>=0&&u<=h)return t.copy(i);const d=c*u-h*l;if(d<=0&&c>=0&&h<=0)return a=c/(c-h),t.copy(n).addScaledVector(qa,a);gf.subVectors(e,s);const f=qa.dot(gf),p=ja.dot(gf);if(p>=0&&f<=p)return t.copy(s);const g=f*l-c*p;if(g<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(n).addScaledVector(ja,o);const _=h*p-f*u;if(_<=0&&u-h>=0&&f-p>=0)return Av.subVectors(s,i),o=(u-h)/(u-h+(f-p)),t.copy(i).addScaledVector(Av,o);const m=1/(_+g+d);return a=g*m,o=d*m,t.copy(n).addScaledVector(qa,a).addScaledVector(ja,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let DI=0;class ti extends ya{constructor(){super(),Object.defineProperty(this,"id",{value:DI++}),this.uuid=or(),this.name="",this.type="Material",this.fog=!0,this.blending=Pc,this.side=Fo,this.vertexColors=!1,this.opacity=1,this.format=ui,this.transparent=!1,this.blendSrc=yb,this.blendDst=bb,this.blendEquation=uo,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Zp,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=cI,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=nf,this.stencilZFail=nf,this.stencilZPass=nf,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===xb;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Pc&&(n.blending=this.blending),this.side!==Fo&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==ui&&(n.format=this.format),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const a=[];for(const o in s){const c=s[o];delete c.metadata,a.push(c)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}ti.prototype.isMaterial=!0;const Ib={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},nr={h:0,s:0,l:0},uh={h:0,s:0,l:0};function _f(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function vf(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function xf(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}class st{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=Qm(e,1),t=vi(t,0,1),n=vi(n,0,1),t===0)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,s=2*n-i;this.r=_f(s,i,e+1/3),this.g=_f(s,i,e),this.b=_f(s,i,e-1/3)}return this}setStyle(e){function t(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let i;const s=n[1],a=n[2];switch(s){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const o=parseFloat(i[1])/360,c=parseInt(i[2],10)/100,l=parseInt(i[3],10)/100;return t(i[4]),this.setHSL(o,c,l)}break}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=n[1],s=i.length;if(s===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=Ib[e.toLowerCase()];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=vf(e.r),this.g=vf(e.g),this.b=vf(e.b),this}copyLinearToSRGB(e){return this.r=xf(e.r),this.g=xf(e.g),this.b=xf(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const t=this.r,n=this.g,i=this.b,s=Math.max(t,n,i),a=Math.min(t,n,i);let o,c;const l=(a+s)/2;if(a===s)o=0,c=0;else{const h=s-a;switch(c=l<=.5?h/(s+a):h/(2-s-a),s){case t:o=(n-i)/h+(n<i?6:0);break;case n:o=(i-t)/h+2;break;case i:o=(t-n)/h+4;break}o/=6}return e.h=o,e.s=c,e.l=l,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,n){return this.getHSL(nr),nr.h+=e,nr.s+=t,nr.l+=n,this.setHSL(nr.h,nr.s,nr.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(nr),e.getHSL(uh);const n=Dc(nr.h,uh.h,t),i=Dc(nr.s,uh.s,t),s=Dc(nr.l,uh.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}st.NAMES=Ib;st.prototype.isColor=!0;st.prototype.r=1;st.prototype.g=1;st.prototype.b=1;class xl extends ti{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new st(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yu,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}xl.prototype.isMeshBasicMaterial=!0;const rn=new D,dh=new Ne;class Ct{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=jc,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new st),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new Ne),t[n++]=a.x,t[n++]=a.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new D),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new Ht),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)dh.fromBufferAttribute(this,t),dh.applyMatrix3(e),this.setXY(t,dh.x,dh.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyMatrix3(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)rn.x=this.getX(t),rn.y=this.getY(t),rn.z=this.getZ(t),rn.applyMatrix4(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)rn.x=this.getX(t),rn.y=this.getY(t),rn.z=this.getZ(t),rn.applyNormalMatrix(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)rn.x=this.getX(t),rn.y=this.getY(t),rn.z=this.getZ(t),rn.transformDirection(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==jc&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}Ct.prototype.isBufferAttribute=!0;class Lb extends Ct{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Db extends Ct{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class FI extends Ct{constructor(e,t,n){super(new Uint16Array(e),t,n)}}FI.prototype.isFloat16BufferAttribute=!0;class Mn extends Ct{constructor(e,t,n){super(new Float32Array(e),t,n)}}let NI=0;const Bi=new et,yf=new Dt,Xa=new D,Ei=new Li,uc=new Li,On=new D;class kt extends ya{constructor(){super(),Object.defineProperty(this,"id",{value:NI++}),this.uuid=or(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ab(e)>65535?Db:Lb)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new zn().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Bi.makeRotationFromQuaternion(e),this.applyMatrix4(Bi),this}rotateX(e){return Bi.makeRotationX(e),this.applyMatrix4(Bi),this}rotateY(e){return Bi.makeRotationY(e),this.applyMatrix4(Bi),this}rotateZ(e){return Bi.makeRotationZ(e),this.applyMatrix4(Bi),this}translate(e,t,n){return Bi.makeTranslation(e,t,n),this.applyMatrix4(Bi),this}scale(e,t,n){return Bi.makeScale(e,t,n),this.applyMatrix4(Bi),this}lookAt(e){return yf.lookAt(e),yf.updateMatrix(),this.applyMatrix4(yf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Xa).negate(),this.translate(Xa.x,Xa.y,Xa.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Mn(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Li);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Ei.setFromBufferAttribute(s),this.morphTargetsRelative?(On.addVectors(this.boundingBox.min,Ei.min),this.boundingBox.expandByPoint(On),On.addVectors(this.boundingBox.max,Ei.max),this.boundingBox.expandByPoint(On)):(this.boundingBox.expandByPoint(Ei.min),this.boundingBox.expandByPoint(Ei.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Xo);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(Ei.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];uc.setFromBufferAttribute(o),this.morphTargetsRelative?(On.addVectors(Ei.min,uc.min),Ei.expandByPoint(On),On.addVectors(Ei.max,uc.max),Ei.expandByPoint(On)):(Ei.expandByPoint(uc.min),Ei.expandByPoint(uc.max))}Ei.getCenter(n);let i=0;for(let s=0,a=e.count;s<a;s++)On.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(On));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],c=this.morphTargetsRelative;for(let l=0,h=o.count;l<h;l++)On.fromBufferAttribute(o,l),c&&(Xa.fromBufferAttribute(e,l),On.add(Xa)),i=Math.max(i,n.distanceToSquared(On))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,a=t.uv.array,o=i.length/3;t.tangent===void 0&&this.setAttribute("tangent",new Ct(new Float32Array(4*o),4));const c=t.tangent.array,l=[],h=[];for(let S=0;S<o;S++)l[S]=new D,h[S]=new D;const u=new D,d=new D,f=new D,p=new Ne,g=new Ne,_=new Ne,m=new D,v=new D;function y(S,b,U){u.fromArray(i,S*3),d.fromArray(i,b*3),f.fromArray(i,U*3),p.fromArray(a,S*2),g.fromArray(a,b*2),_.fromArray(a,U*2),d.sub(u),f.sub(u),g.sub(p),_.sub(p);const L=1/(g.x*_.y-_.x*g.y);isFinite(L)&&(m.copy(d).multiplyScalar(_.y).addScaledVector(f,-g.y).multiplyScalar(L),v.copy(f).multiplyScalar(g.x).addScaledVector(d,-_.x).multiplyScalar(L),l[S].add(m),l[b].add(m),l[U].add(m),h[S].add(v),h[b].add(v),h[U].add(v))}let x=this.groups;x.length===0&&(x=[{start:0,count:n.length}]);for(let S=0,b=x.length;S<b;++S){const U=x[S],L=U.start,N=U.count;for(let k=L,B=L+N;k<B;k+=3)y(n[k+0],n[k+1],n[k+2])}const w=new D,E=new D,M=new D,A=new D;function T(S){M.fromArray(s,S*3),A.copy(M);const b=l[S];w.copy(b),w.sub(M.multiplyScalar(M.dot(b))).normalize(),E.crossVectors(A,b);const L=E.dot(h[S])<0?-1:1;c[S*4]=w.x,c[S*4+1]=w.y,c[S*4+2]=w.z,c[S*4+3]=L}for(let S=0,b=x.length;S<b;++S){const U=x[S],L=U.start,N=U.count;for(let k=L,B=L+N;k<B;k+=3)T(n[k+0]),T(n[k+1]),T(n[k+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ct(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new D,s=new D,a=new D,o=new D,c=new D,l=new D,h=new D,u=new D;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),g=e.getX(d+1),_=e.getX(d+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,g),a.fromBufferAttribute(t,_),h.subVectors(a,s),u.subVectors(i,s),h.cross(u),o.fromBufferAttribute(n,p),c.fromBufferAttribute(n,g),l.fromBufferAttribute(n,_),o.add(h),c.add(h),l.add(h),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(g,c.x,c.y,c.z),n.setXYZ(_,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),h.subVectors(a,s),u.subVectors(i,s),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const a=n[i].array,o=e.attributes[i],c=o.array,l=o.itemSize*t,h=Math.min(c.length,a.length-l);for(let u=0,d=l;u<h;u++,d++)a[d]=c[u]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)On.fromBufferAttribute(e,t),On.normalize(),e.setXYZ(t,On.x,On.y,On.z)}toNonIndexed(){function e(o,c){const l=o.array,h=o.itemSize,u=o.normalized,d=new l.constructor(c.length*h);let f=0,p=0;for(let g=0,_=c.length;g<_;g++){o.isInterleavedBufferAttribute?f=c[g]*o.data.stride+o.offset:f=c[g]*h;for(let m=0;m<h;m++)d[p++]=l[f++]}return new Ct(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new kt,n=this.index.array,i=this.attributes;for(const o in i){const c=i[o],l=e(c,n);t.setAttribute(o,l)}const s=this.morphAttributes;for(const o in s){const c=[],l=s[o];for(let h=0,u=l.length;h<u;h++){const d=l[h],f=e(d,n);c.push(f)}t.morphAttributes[o]=c}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const l=a[o];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let s=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];h.push(f.toJSON(e.data))}h.length>0&&(i[c]=h,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const l in i){const h=i[l];this.setAttribute(l,h.clone(t))}const s=e.morphAttributes;for(const l in s){const h=[],u=s[l];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[l]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let l=0,h=a.length;l<h;l++){const u=a[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}kt.prototype.isBufferGeometry=!0;const Rv=new et,Ya=new ba,bf=new Xo,vs=new D,xs=new D,ys=new D,Mf=new D,Sf=new D,wf=new D,fh=new D,ph=new D,mh=new D,gh=new Ne,_h=new Ne,vh=new Ne,Tf=new D,xh=new D;class sn extends Dt{constructor(e=new kt,t=new xl){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),bf.copy(n.boundingSphere),bf.applyMatrix4(s),e.ray.intersectsSphere(bf)===!1)||(Rv.copy(s).invert(),Ya.copy(e.ray).applyMatrix4(Rv),n.boundingBox!==null&&Ya.intersectsBox(n.boundingBox)===!1))return;let a;if(n.isBufferGeometry){const o=n.index,c=n.attributes.position,l=n.morphAttributes.position,h=n.morphTargetsRelative,u=n.attributes.uv,d=n.attributes.uv2,f=n.groups,p=n.drawRange;if(o!==null)if(Array.isArray(i))for(let g=0,_=f.length;g<_;g++){const m=f[g],v=i[m.materialIndex],y=Math.max(m.start,p.start),x=Math.min(o.count,Math.min(m.start+m.count,p.start+p.count));for(let w=y,E=x;w<E;w+=3){const M=o.getX(w),A=o.getX(w+1),T=o.getX(w+2);a=yh(this,v,e,Ya,c,l,h,u,d,M,A,T),a&&(a.faceIndex=Math.floor(w/3),a.face.materialIndex=m.materialIndex,t.push(a))}}else{const g=Math.max(0,p.start),_=Math.min(o.count,p.start+p.count);for(let m=g,v=_;m<v;m+=3){const y=o.getX(m),x=o.getX(m+1),w=o.getX(m+2);a=yh(this,i,e,Ya,c,l,h,u,d,y,x,w),a&&(a.faceIndex=Math.floor(m/3),t.push(a))}}else if(c!==void 0)if(Array.isArray(i))for(let g=0,_=f.length;g<_;g++){const m=f[g],v=i[m.materialIndex],y=Math.max(m.start,p.start),x=Math.min(c.count,Math.min(m.start+m.count,p.start+p.count));for(let w=y,E=x;w<E;w+=3){const M=w,A=w+1,T=w+2;a=yh(this,v,e,Ya,c,l,h,u,d,M,A,T),a&&(a.faceIndex=Math.floor(w/3),a.face.materialIndex=m.materialIndex,t.push(a))}}else{const g=Math.max(0,p.start),_=Math.min(c.count,p.start+p.count);for(let m=g,v=_;m<v;m+=3){const y=m,x=m+1,w=m+2;a=yh(this,i,e,Ya,c,l,h,u,d,y,x,w),a&&(a.faceIndex=Math.floor(m/3),t.push(a))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}sn.prototype.isMesh=!0;function OI(r,e,t,n,i,s,a,o){let c;if(e.side===An?c=n.intersectTriangle(a,s,i,!0,o):c=n.intersectTriangle(i,s,a,e.side!==si,o),c===null)return null;xh.copy(o),xh.applyMatrix4(r.matrixWorld);const l=t.ray.origin.distanceTo(xh);return l<t.near||l>t.far?null:{distance:l,point:xh.clone(),object:r}}function yh(r,e,t,n,i,s,a,o,c,l,h,u){vs.fromBufferAttribute(i,l),xs.fromBufferAttribute(i,h),ys.fromBufferAttribute(i,u);const d=r.morphTargetInfluences;if(s&&d){fh.set(0,0,0),ph.set(0,0,0),mh.set(0,0,0);for(let p=0,g=s.length;p<g;p++){const _=d[p],m=s[p];_!==0&&(Mf.fromBufferAttribute(m,l),Sf.fromBufferAttribute(m,h),wf.fromBufferAttribute(m,u),a?(fh.addScaledVector(Mf,_),ph.addScaledVector(Sf,_),mh.addScaledVector(wf,_)):(fh.addScaledVector(Mf.sub(vs),_),ph.addScaledVector(Sf.sub(xs),_),mh.addScaledVector(wf.sub(ys),_)))}vs.add(fh),xs.add(ph),ys.add(mh)}r.isSkinnedMesh&&(r.boneTransform(l,vs),r.boneTransform(h,xs),r.boneTransform(u,ys));const f=OI(r,e,t,n,vs,xs,ys,Tf);if(f){o&&(gh.fromBufferAttribute(o,l),_h.fromBufferAttribute(o,h),vh.fromBufferAttribute(o,u),f.uv=Pn.getUV(Tf,vs,xs,ys,gh,_h,vh,new Ne)),c&&(gh.fromBufferAttribute(c,l),_h.fromBufferAttribute(c,h),vh.fromBufferAttribute(c,u),f.uv2=Pn.getUV(Tf,vs,xs,ys,gh,_h,vh,new Ne));const p={a:l,b:h,c:u,normal:new D,materialIndex:0};Pn.getNormal(vs,xs,ys,p.normal),f.face=p}return f}class yl extends kt{constructor(e=1,t=1,n=1,i=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:a};const o=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const c=[],l=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,a,s,0),p("z","y","x",1,-1,n,t,-e,a,s,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(c),this.setAttribute("position",new Mn(l,3)),this.setAttribute("normal",new Mn(h,3)),this.setAttribute("uv",new Mn(u,2));function p(g,_,m,v,y,x,w,E,M,A,T){const S=x/M,b=w/A,U=x/2,L=w/2,N=E/2,k=M+1,B=A+1;let z=0,H=0;const ee=new D;for(let de=0;de<B;de++){const ce=de*b-L;for(let Ce=0;Ce<k;Ce++){const me=Ce*S-U;ee[g]=me*v,ee[_]=ce*y,ee[m]=N,l.push(ee.x,ee.y,ee.z),ee[g]=0,ee[_]=0,ee[m]=E>0?1:-1,h.push(ee.x,ee.y,ee.z),u.push(Ce/M),u.push(1-de/A),z+=1}}for(let de=0;de<A;de++)for(let ce=0;ce<M;ce++){const Ce=d+ce+k*de,me=d+ce+k*(de+1),j=d+(ce+1)+k*(de+1),pe=d+(ce+1)+k*de;c.push(Ce,me,pe),c.push(me,j,pe),H+=6}o.addGroup(f,H,T),f+=H,d+=z}}static fromJSON(e){return new yl(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Oo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Yn(r){const e={};for(let t=0;t<r.length;t++){const n=Oo(r[t]);for(const i in n)e[i]=n[i]}return e}const UI={clone:Oo,merge:Yn};var BI=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,$I=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ai extends ti{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=BI,this.fragmentShader=$I,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Oo(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}ai.prototype.isShaderMaterial=!0;class bl extends Dt{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new et,this.projectionMatrix=new et,this.projectionMatrixInverse=new et}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}bl.prototype.isCamera=!0;class li extends bl{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Xc*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Lc*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Xc*2*Math.atan(Math.tan(Lc*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Lc*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,l=a.fullHeight;s+=a.offsetX*i/c,t-=a.offsetY*n/l,i*=a.width/c,n*=a.height/l}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}li.prototype.isPerspectiveCamera=!0;const Za=90,Ka=1;class eg extends Dt{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new li(Za,Ka,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new D(1,0,0)),this.add(i);const s=new li(Za,Ka,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new D(-1,0,0)),this.add(s);const a=new li(Za,Ka,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new D(0,1,0)),this.add(a);const o=new li(Za,Ka,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new D(0,-1,0)),this.add(o);const c=new li(Za,Ka,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new D(0,0,1)),this.add(c);const l=new li(Za,Ka,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new D(0,0,-1)),this.add(l)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,a,o,c,l]=this.children,h=e.xr.enabled,u=e.getRenderTarget();e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(u),e.xr.enabled=h}}class Qu extends Cn{constructor(e,t,n,i,s,a,o,c,l,h){e=e!==void 0?e:[],t=t!==void 0?t:_l,super(e,t,n,i,s,a,o,c,l,h),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Qu.prototype.isCubeTexture=!0;class Fb extends cr{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new Qu(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Kn,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=ui,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new yl(5,5,5),s=new ai({name:"CubemapFromEquirect",uniforms:Oo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:An,blending:Ls});s.uniforms.tEquirect.value=t;const a=new sn(i,s),o=t.minFilter;return t.minFilter===Ku&&(t.minFilter=Kn),new eg(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(s)}}Fb.prototype.isWebGLCubeRenderTarget=!0;const Ef=new D,kI=new D,zI=new zn;class Gr{constructor(e=new D(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Ef.subVectors(n,t).cross(kI.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Ef),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||zI.getNormalMatrix(e),i=this.coplanarPoint(Ef).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}Gr.prototype.isPlane=!0;const Ja=new Xo,bh=new D;class ed{constructor(e=new Gr,t=new Gr,n=new Gr,i=new Gr,s=new Gr,a=new Gr){this.planes=[e,t,n,i,s,a]}set(e,t,n,i,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],a=n[2],o=n[3],c=n[4],l=n[5],h=n[6],u=n[7],d=n[8],f=n[9],p=n[10],g=n[11],_=n[12],m=n[13],v=n[14],y=n[15];return t[0].setComponents(o-i,u-c,g-d,y-_).normalize(),t[1].setComponents(o+i,u+c,g+d,y+_).normalize(),t[2].setComponents(o+s,u+l,g+f,y+m).normalize(),t[3].setComponents(o-s,u-l,g-f,y-m).normalize(),t[4].setComponents(o-a,u-h,g-p,y-v).normalize(),t[5].setComponents(o+a,u+h,g+p,y+v).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Ja.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Ja)}intersectsSprite(e){return Ja.center.set(0,0,0),Ja.radius=.7071067811865476,Ja.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ja)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(bh.x=i.normal.x>0?e.max.x:e.min.x,bh.y=i.normal.y>0?e.max.y:e.min.y,bh.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(bh)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Nb(){let r=null,e=!1,t=null,n=null;function i(s,a){t(s,a),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function VI(r,e){const t=e.isWebGL2,n=new WeakMap;function i(l,h){const u=l.array,d=l.usage,f=r.createBuffer();r.bindBuffer(h,f),r.bufferData(h,u,d),l.onUploadCallback();let p=5126;return u instanceof Float32Array?p=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?l.isFloat16BufferAttribute?t?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:u instanceof Int16Array?p=5122:u instanceof Uint32Array?p=5125:u instanceof Int32Array?p=5124:u instanceof Int8Array?p=5120:(u instanceof Uint8Array||u instanceof Uint8ClampedArray)&&(p=5121),{buffer:f,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version}}function s(l,h,u){const d=h.array,f=h.updateRange;r.bindBuffer(u,l),f.count===-1?r.bufferSubData(u,0,d):(t?r.bufferSubData(u,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):r.bufferSubData(u,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}function a(l){return l.isInterleavedBufferAttribute&&(l=l.data),n.get(l)}function o(l){l.isInterleavedBufferAttribute&&(l=l.data);const h=n.get(l);h&&(r.deleteBuffer(h.buffer),n.delete(l))}function c(l,h){if(l.isGLBufferAttribute){const d=n.get(l);(!d||d.version<l.version)&&n.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const u=n.get(l);u===void 0?n.set(l,i(l,h)):u.version<l.version&&(s(u.buffer,l,h),u.version=l.version)}return{get:a,remove:o,update:c}}class td extends kt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,a=t/2,o=Math.floor(n),c=Math.floor(i),l=o+1,h=c+1,u=e/o,d=t/c,f=[],p=[],g=[],_=[];for(let m=0;m<h;m++){const v=m*d-a;for(let y=0;y<l;y++){const x=y*u-s;p.push(x,-v,0),g.push(0,0,1),_.push(y/o),_.push(1-m/c)}}for(let m=0;m<c;m++)for(let v=0;v<o;v++){const y=v+l*m,x=v+l*(m+1),w=v+1+l*(m+1),E=v+1+l*m;f.push(y,x,E),f.push(x,w,E)}this.setIndex(f),this.setAttribute("position",new Mn(p,3)),this.setAttribute("normal",new Mn(g,3)),this.setAttribute("uv",new Mn(_,2))}static fromJSON(e){return new td(e.width,e.height,e.widthSegments,e.heightSegments)}}var HI=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,GI=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,WI=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,qI=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,jI=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,XI=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,YI="vec3 transformed = vec3( position );",ZI=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,KI=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,JI=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,QI=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,eL=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,tL=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,nL=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,iL=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,rL=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,sL=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,aL=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,oL=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,cL=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,lL=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,hL=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,uL=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,dL=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,fL=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,pL="gl_FragColor = linearToOutputTexel( gl_FragColor );",mL=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,gL=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
		envColor = envMapTexelToLinear( envColor );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,_L=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,vL=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,xL=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,yL=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,bL=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,ML=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,SL=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,wL=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,TL=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,EL=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,CL=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,AL=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,RL=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,PL=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,IL=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,LL=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,DL=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,FL=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,NL=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,OL=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,UL=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,BL=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,$L=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,kL=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,zL=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,VL=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,HL=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,GL=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,WL=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,qL=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,jL=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,XL=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,YL=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,ZL=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,KL=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,JL=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,QL=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,eD=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,tD=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,nD=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,iD=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,rD=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,sD=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,aD=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,oD=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,cD=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,lD=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,hD=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,uD=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dD=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,fD=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,pD=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,mD=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,gD=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,_D=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,vD=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,xD=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,yD=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,bD=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,MD=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,SD=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,wD=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,TD=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,ED=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,CD=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,AD=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,RD=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( float roughness, float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,PD=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,ID=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,LD=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,DD=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,FD=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,ND=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,OD=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const UD=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,BD=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,$D=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,kD=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,zD=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,VD=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,HD=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,GD=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,WD=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,qD=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,jD=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,XD=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,YD=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,ZD=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,KD=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,JD=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,QD=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,e3=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,t3=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,n3=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,i3=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,r3=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,s3=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,a3=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,o3=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,c3=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,l3=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,h3=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,u3=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,d3=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,f3=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,p3=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Et={alphamap_fragment:HI,alphamap_pars_fragment:GI,alphatest_fragment:WI,alphatest_pars_fragment:qI,aomap_fragment:jI,aomap_pars_fragment:XI,begin_vertex:YI,beginnormal_vertex:ZI,bsdfs:KI,bumpmap_pars_fragment:JI,clipping_planes_fragment:QI,clipping_planes_pars_fragment:eL,clipping_planes_pars_vertex:tL,clipping_planes_vertex:nL,color_fragment:iL,color_pars_fragment:rL,color_pars_vertex:sL,color_vertex:aL,common:oL,cube_uv_reflection_fragment:cL,defaultnormal_vertex:lL,displacementmap_pars_vertex:hL,displacementmap_vertex:uL,emissivemap_fragment:dL,emissivemap_pars_fragment:fL,encodings_fragment:pL,encodings_pars_fragment:mL,envmap_fragment:gL,envmap_common_pars_fragment:_L,envmap_pars_fragment:vL,envmap_pars_vertex:xL,envmap_physical_pars_fragment:PL,envmap_vertex:yL,fog_vertex:bL,fog_pars_vertex:ML,fog_fragment:SL,fog_pars_fragment:wL,gradientmap_pars_fragment:TL,lightmap_fragment:EL,lightmap_pars_fragment:CL,lights_lambert_vertex:AL,lights_pars_begin:RL,lights_toon_fragment:IL,lights_toon_pars_fragment:LL,lights_phong_fragment:DL,lights_phong_pars_fragment:FL,lights_physical_fragment:NL,lights_physical_pars_fragment:OL,lights_fragment_begin:UL,lights_fragment_maps:BL,lights_fragment_end:$L,logdepthbuf_fragment:kL,logdepthbuf_pars_fragment:zL,logdepthbuf_pars_vertex:VL,logdepthbuf_vertex:HL,map_fragment:GL,map_pars_fragment:WL,map_particle_fragment:qL,map_particle_pars_fragment:jL,metalnessmap_fragment:XL,metalnessmap_pars_fragment:YL,morphnormal_vertex:ZL,morphtarget_pars_vertex:KL,morphtarget_vertex:JL,normal_fragment_begin:QL,normal_fragment_maps:eD,normal_pars_fragment:tD,normal_pars_vertex:nD,normal_vertex:iD,normalmap_pars_fragment:rD,clearcoat_normal_fragment_begin:sD,clearcoat_normal_fragment_maps:aD,clearcoat_pars_fragment:oD,output_fragment:cD,packing:lD,premultiplied_alpha_fragment:hD,project_vertex:uD,dithering_fragment:dD,dithering_pars_fragment:fD,roughnessmap_fragment:pD,roughnessmap_pars_fragment:mD,shadowmap_pars_fragment:gD,shadowmap_pars_vertex:_D,shadowmap_vertex:vD,shadowmask_pars_fragment:xD,skinbase_vertex:yD,skinning_pars_vertex:bD,skinning_vertex:MD,skinnormal_vertex:SD,specularmap_fragment:wD,specularmap_pars_fragment:TD,tonemapping_fragment:ED,tonemapping_pars_fragment:CD,transmission_fragment:AD,transmission_pars_fragment:RD,uv_pars_fragment:PD,uv_pars_vertex:ID,uv_vertex:LD,uv2_pars_fragment:DD,uv2_pars_vertex:FD,uv2_vertex:ND,worldpos_vertex:OD,background_vert:UD,background_frag:BD,cube_vert:$D,cube_frag:kD,depth_vert:zD,depth_frag:VD,distanceRGBA_vert:HD,distanceRGBA_frag:GD,equirect_vert:WD,equirect_frag:qD,linedashed_vert:jD,linedashed_frag:XD,meshbasic_vert:YD,meshbasic_frag:ZD,meshlambert_vert:KD,meshlambert_frag:JD,meshmatcap_vert:QD,meshmatcap_frag:e3,meshnormal_vert:t3,meshnormal_frag:n3,meshphong_vert:i3,meshphong_frag:r3,meshphysical_vert:s3,meshphysical_frag:a3,meshtoon_vert:o3,meshtoon_frag:c3,points_vert:l3,points_frag:h3,shadow_vert:u3,shadow_frag:d3,sprite_vert:f3,sprite_frag:p3},ze={common:{diffuse:{value:new st(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new zn},uv2Transform:{value:new zn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ne(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new st(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new st(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new zn}},sprite:{diffuse:{value:new st(16777215)},opacity:{value:1},center:{value:new Ne(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new zn}}},gr={basic:{uniforms:Yn([ze.common,ze.specularmap,ze.envmap,ze.aomap,ze.lightmap,ze.fog]),vertexShader:Et.meshbasic_vert,fragmentShader:Et.meshbasic_frag},lambert:{uniforms:Yn([ze.common,ze.specularmap,ze.envmap,ze.aomap,ze.lightmap,ze.emissivemap,ze.fog,ze.lights,{emissive:{value:new st(0)}}]),vertexShader:Et.meshlambert_vert,fragmentShader:Et.meshlambert_frag},phong:{uniforms:Yn([ze.common,ze.specularmap,ze.envmap,ze.aomap,ze.lightmap,ze.emissivemap,ze.bumpmap,ze.normalmap,ze.displacementmap,ze.fog,ze.lights,{emissive:{value:new st(0)},specular:{value:new st(1118481)},shininess:{value:30}}]),vertexShader:Et.meshphong_vert,fragmentShader:Et.meshphong_frag},standard:{uniforms:Yn([ze.common,ze.envmap,ze.aomap,ze.lightmap,ze.emissivemap,ze.bumpmap,ze.normalmap,ze.displacementmap,ze.roughnessmap,ze.metalnessmap,ze.fog,ze.lights,{emissive:{value:new st(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Et.meshphysical_vert,fragmentShader:Et.meshphysical_frag},toon:{uniforms:Yn([ze.common,ze.aomap,ze.lightmap,ze.emissivemap,ze.bumpmap,ze.normalmap,ze.displacementmap,ze.gradientmap,ze.fog,ze.lights,{emissive:{value:new st(0)}}]),vertexShader:Et.meshtoon_vert,fragmentShader:Et.meshtoon_frag},matcap:{uniforms:Yn([ze.common,ze.bumpmap,ze.normalmap,ze.displacementmap,ze.fog,{matcap:{value:null}}]),vertexShader:Et.meshmatcap_vert,fragmentShader:Et.meshmatcap_frag},points:{uniforms:Yn([ze.points,ze.fog]),vertexShader:Et.points_vert,fragmentShader:Et.points_frag},dashed:{uniforms:Yn([ze.common,ze.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Et.linedashed_vert,fragmentShader:Et.linedashed_frag},depth:{uniforms:Yn([ze.common,ze.displacementmap]),vertexShader:Et.depth_vert,fragmentShader:Et.depth_frag},normal:{uniforms:Yn([ze.common,ze.bumpmap,ze.normalmap,ze.displacementmap,{opacity:{value:1}}]),vertexShader:Et.meshnormal_vert,fragmentShader:Et.meshnormal_frag},sprite:{uniforms:Yn([ze.sprite,ze.fog]),vertexShader:Et.sprite_vert,fragmentShader:Et.sprite_frag},background:{uniforms:{uvTransform:{value:new zn},t2D:{value:null}},vertexShader:Et.background_vert,fragmentShader:Et.background_frag},cube:{uniforms:Yn([ze.envmap,{opacity:{value:1}}]),vertexShader:Et.cube_vert,fragmentShader:Et.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Et.equirect_vert,fragmentShader:Et.equirect_frag},distanceRGBA:{uniforms:Yn([ze.common,ze.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Et.distanceRGBA_vert,fragmentShader:Et.distanceRGBA_frag},shadow:{uniforms:Yn([ze.lights,ze.fog,{color:{value:new st(0)},opacity:{value:1}}]),vertexShader:Et.shadow_vert,fragmentShader:Et.shadow_frag}};gr.physical={uniforms:Yn([gr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ne(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new st(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Ne},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new st(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new st(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Et.meshphysical_vert,fragmentShader:Et.meshphysical_frag};function m3(r,e,t,n,i){const s=new st(0);let a=0,o,c,l=null,h=0,u=null;function d(p,g){let _=!1,m=g.isScene===!0?g.background:null;m&&m.isTexture&&(m=e.get(m));const v=r.xr,y=v.getSession&&v.getSession();y&&y.environmentBlendMode==="additive"&&(m=null),m===null?f(s,a):m&&m.isColor&&(f(m,1),_=!0),(r.autoClear||_)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),m&&(m.isCubeTexture||m.mapping===Zu)?(c===void 0&&(c=new sn(new yl(1,1,1),new ai({name:"BackgroundCubeMaterial",uniforms:Oo(gr.cube.uniforms),vertexShader:gr.cube.vertexShader,fragmentShader:gr.cube.fragmentShader,side:An,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(x,w,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=m,c.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m.isRenderTargetTexture===!1?-1:1,(l!==m||h!==m.version||u!==r.toneMapping)&&(c.material.needsUpdate=!0,l=m,h=m.version,u=r.toneMapping),p.unshift(c,c.geometry,c.material,0,0,null)):m&&m.isTexture&&(o===void 0&&(o=new sn(new td(2,2),new ai({name:"BackgroundMaterial",uniforms:Oo(gr.background.uniforms),vertexShader:gr.background.vertexShader,fragmentShader:gr.background.fragmentShader,side:Fo,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),(l!==m||h!==m.version||u!==r.toneMapping)&&(o.material.needsUpdate=!0,l=m,h=m.version,u=r.toneMapping),p.unshift(o,o.geometry,o.material,0,0,null))}function f(p,g){t.buffers.color.setClear(p.r,p.g,p.b,g,i)}return{getClearColor:function(){return s},setClearColor:function(p,g=1){s.set(p),a=g,f(s,a)},getClearAlpha:function(){return a},setClearAlpha:function(p){a=p,f(s,a)},render:d}}function g3(r,e,t,n){const i=r.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||s!==null,o={},c=g(null);let l=c;function h(L,N,k,B,z){let H=!1;if(a){const ee=p(B,k,N);l!==ee&&(l=ee,d(l.object)),H=_(B,z),H&&m(B,z)}else{const ee=N.wireframe===!0;(l.geometry!==B.id||l.program!==k.id||l.wireframe!==ee)&&(l.geometry=B.id,l.program=k.id,l.wireframe=ee,H=!0)}L.isInstancedMesh===!0&&(H=!0),z!==null&&t.update(z,34963),H&&(M(L,N,k,B),z!==null&&r.bindBuffer(34963,t.get(z).buffer))}function u(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function d(L){return n.isWebGL2?r.bindVertexArray(L):s.bindVertexArrayOES(L)}function f(L){return n.isWebGL2?r.deleteVertexArray(L):s.deleteVertexArrayOES(L)}function p(L,N,k){const B=k.wireframe===!0;let z=o[L.id];z===void 0&&(z={},o[L.id]=z);let H=z[N.id];H===void 0&&(H={},z[N.id]=H);let ee=H[B];return ee===void 0&&(ee=g(u()),H[B]=ee),ee}function g(L){const N=[],k=[],B=[];for(let z=0;z<i;z++)N[z]=0,k[z]=0,B[z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:k,attributeDivisors:B,object:L,attributes:{},index:null}}function _(L,N){const k=l.attributes,B=L.attributes;let z=0;for(const H in B){const ee=k[H],de=B[H];if(ee===void 0||ee.attribute!==de||ee.data!==de.data)return!0;z++}return l.attributesNum!==z||l.index!==N}function m(L,N){const k={},B=L.attributes;let z=0;for(const H in B){const ee=B[H],de={};de.attribute=ee,ee.data&&(de.data=ee.data),k[H]=de,z++}l.attributes=k,l.attributesNum=z,l.index=N}function v(){const L=l.newAttributes;for(let N=0,k=L.length;N<k;N++)L[N]=0}function y(L){x(L,0)}function x(L,N){const k=l.newAttributes,B=l.enabledAttributes,z=l.attributeDivisors;k[L]=1,B[L]===0&&(r.enableVertexAttribArray(L),B[L]=1),z[L]!==N&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](L,N),z[L]=N)}function w(){const L=l.newAttributes,N=l.enabledAttributes;for(let k=0,B=N.length;k<B;k++)N[k]!==L[k]&&(r.disableVertexAttribArray(k),N[k]=0)}function E(L,N,k,B,z,H){n.isWebGL2===!0&&(k===5124||k===5125)?r.vertexAttribIPointer(L,N,k,z,H):r.vertexAttribPointer(L,N,k,B,z,H)}function M(L,N,k,B){if(n.isWebGL2===!1&&(L.isInstancedMesh||B.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;v();const z=B.attributes,H=k.getAttributes(),ee=N.defaultAttributeValues;for(const de in H){const ce=H[de];if(ce.location>=0){let Ce=z[de];if(Ce===void 0&&(de==="instanceMatrix"&&L.instanceMatrix&&(Ce=L.instanceMatrix),de==="instanceColor"&&L.instanceColor&&(Ce=L.instanceColor)),Ce!==void 0){const me=Ce.normalized,j=Ce.itemSize,pe=t.get(Ce);if(pe===void 0)continue;const Z=pe.buffer,ye=pe.type,Pe=pe.bytesPerElement;if(Ce.isInterleavedBufferAttribute){const Ie=Ce.data,Te=Ie.stride,Je=Ce.offset;if(Ie&&Ie.isInstancedInterleavedBuffer){for(let fe=0;fe<ce.locationSize;fe++)x(ce.location+fe,Ie.meshPerAttribute);L.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=Ie.meshPerAttribute*Ie.count)}else for(let fe=0;fe<ce.locationSize;fe++)y(ce.location+fe);r.bindBuffer(34962,Z);for(let fe=0;fe<ce.locationSize;fe++)E(ce.location+fe,j/ce.locationSize,ye,me,Te*Pe,(Je+j/ce.locationSize*fe)*Pe)}else{if(Ce.isInstancedBufferAttribute){for(let Ie=0;Ie<ce.locationSize;Ie++)x(ce.location+Ie,Ce.meshPerAttribute);L.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=Ce.meshPerAttribute*Ce.count)}else for(let Ie=0;Ie<ce.locationSize;Ie++)y(ce.location+Ie);r.bindBuffer(34962,Z);for(let Ie=0;Ie<ce.locationSize;Ie++)E(ce.location+Ie,j/ce.locationSize,ye,me,j*Pe,j/ce.locationSize*Ie*Pe)}}else if(ee!==void 0){const me=ee[de];if(me!==void 0)switch(me.length){case 2:r.vertexAttrib2fv(ce.location,me);break;case 3:r.vertexAttrib3fv(ce.location,me);break;case 4:r.vertexAttrib4fv(ce.location,me);break;default:r.vertexAttrib1fv(ce.location,me)}}}}w()}function A(){b();for(const L in o){const N=o[L];for(const k in N){const B=N[k];for(const z in B)f(B[z].object),delete B[z];delete N[k]}delete o[L]}}function T(L){if(o[L.id]===void 0)return;const N=o[L.id];for(const k in N){const B=N[k];for(const z in B)f(B[z].object),delete B[z];delete N[k]}delete o[L.id]}function S(L){for(const N in o){const k=o[N];if(k[L.id]===void 0)continue;const B=k[L.id];for(const z in B)f(B[z].object),delete B[z];delete k[L.id]}}function b(){U(),l!==c&&(l=c,d(l.object))}function U(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:h,reset:b,resetDefaultState:U,dispose:A,releaseStatesOfGeometry:T,releaseStatesOfProgram:S,initAttributes:v,enableAttribute:y,disableUnusedAttributes:w}}function _3(r,e,t,n){const i=n.isWebGL2;let s;function a(l){s=l}function o(l,h){r.drawArrays(s,l,h),t.update(h,s,1)}function c(l,h,u){if(u===0)return;let d,f;if(i)d=r,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](s,l,h,u),t.update(h,s,u)}this.setMode=a,this.render=o,this.renderInstances=c}function v3(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(M){if(M==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";M="mediump"}return M==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&r instanceof WebGL2ComputeRenderingContext;let o=t.precision!==void 0?t.precision:"highp";const c=s(o);c!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",c,"instead."),o=c);const l=a||e.has("WEBGL_draw_buffers"),h=t.logarithmicDepthBuffer===!0,u=r.getParameter(34930),d=r.getParameter(35660),f=r.getParameter(3379),p=r.getParameter(34076),g=r.getParameter(34921),_=r.getParameter(36347),m=r.getParameter(36348),v=r.getParameter(36349),y=d>0,x=a||e.has("OES_texture_float"),w=y&&x,E=a?r.getParameter(36183):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:i,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:_,maxVaryings:m,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:w,maxSamples:E}}function x3(r){const e=this;let t=null,n=0,i=!1,s=!1;const a=new Gr,o=new zn,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d,f){const p=u.length!==0||d||n!==0||i;return i=d,t=h(u,f,0),n=u.length,p},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,l()},this.setState=function(u,d,f){const p=u.clippingPlanes,g=u.clipIntersection,_=u.clipShadows,m=r.get(u);if(!i||p===null||p.length===0||s&&!_)s?h(null):l();else{const v=s?0:n,y=v*4;let x=m.clippingState||null;c.value=x,x=h(p,d,y,f);for(let w=0;w!==y;++w)x[w]=t[w];m.clippingState=x,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=v}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,d,f,p){const g=u!==null?u.length:0;let _=null;if(g!==0){if(_=c.value,p!==!0||_===null){const m=f+g*4,v=d.matrixWorldInverse;o.getNormalMatrix(v),(_===null||_.length<m)&&(_=new Float32Array(m));for(let y=0,x=f;y!==g;++y,x+=4)a.copy(u[y]).applyMatrix4(v,o),a.normal.toArray(_,x),_[x+3]=a.constant}c.value=_,c.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,_}}function y3(r){let e=new WeakMap;function t(a,o){return o===Kp?a.mapping=_l:o===Jp&&(a.mapping=vl),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===Kp||o===Jp)if(e.has(a)){const c=e.get(a).texture;return t(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const l=r.getRenderTarget(),h=new Fb(c.height/2);return h.fromEquirectangularTexture(r,a),e.set(a,h),r.setRenderTarget(l),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const c=e.get(o);c!==void 0&&(e.delete(o),c.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class nd extends bl{constructor(e=-1,t=1,n=1,i=-1,s=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,a=n+e,o=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=l*this.view.offsetX,a=s+l*this.view.width,o-=h*this.view.offsetY,c=o-h*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}nd.prototype.isOrthographicCamera=!0;class id extends ai{constructor(e){super(e),this.type="RawShaderMaterial"}}id.prototype.isRawShaderMaterial=!0;const Eo=4,Ds=8,fr=Math.pow(2,Ds),Ob=[.125,.215,.35,.446,.526,.582],Ub=Ds-Eo+1+Ob.length,Qa=20,zs={[Jn]:0,[xa]:1,[Jm]:2,[wb]:3,[Tb]:4,[Eb]:5,[Km]:6},Cf=new nd,{_lodPlanes:dc,_sizeLods:Pv,_sigmas:Mh}=S3(),Iv=new st;let Af=null;const aa=(1+Math.sqrt(5))/2,eo=1/aa,Lv=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,aa,eo),new D(0,aa,-eo),new D(eo,0,aa),new D(-eo,0,aa),new D(aa,eo,0),new D(-aa,eo,0)];class b3{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=w3(Qa),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Af=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=Nv(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=Fv(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<dc.length;e++)dc[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Af),e.scissorTest=!1,Sh(e,0,0,e.width,e.height)}_fromTexture(e){Af=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:Rn,minFilter:Rn,generateMipmaps:!1,type:ks,format:_P,encoding:M3(e)?e.encoding:Jm,depthBuffer:!1},n=Dv(t);return n.depthBuffer=!e,this._pingPongRenderTarget=Dv(t),n}_compileMaterial(e){const t=new sn(dc[0],e);this._renderer.compile(t,Cf)}_sceneToCubeUV(e,t,n,i){const o=new li(90,1,t,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.outputEncoding,f=h.toneMapping;h.getClearColor(Iv),h.toneMapping=da,h.outputEncoding=Jn,h.autoClear=!1;const p=new xl({name:"PMREM.Background",side:An,depthWrite:!1,depthTest:!1}),g=new sn(new yl,p);let _=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,_=!0):(p.color.copy(Iv),_=!0);for(let v=0;v<6;v++){const y=v%3;y==0?(o.up.set(0,c[v],0),o.lookAt(l[v],0,0)):y==1?(o.up.set(0,0,c[v]),o.lookAt(0,l[v],0)):(o.up.set(0,c[v],0),o.lookAt(0,0,l[v])),Sh(i,y*fr,v>2?fr:0,fr,fr),h.setRenderTarget(i),_&&h.render(g,o),h.render(e,o)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=f,h.outputEncoding=d,h.autoClear=u,e.background=m}_setEncoding(e,t){this._renderer.capabilities.isWebGL2===!0&&t.format===ui&&t.type===ks&&t.encoding===xa?e.value=zs[Jn]:e.value=zs[t.encoding]}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===_l||e.mapping===vl;i?this._cubemapShader==null&&(this._cubemapShader=Nv()):this._equirectShader==null&&(this._equirectShader=Fv());const s=i?this._cubemapShader:this._equirectShader,a=new sn(dc[0],s),o=s.uniforms;o.envMap.value=e,i||o.texelSize.value.set(1/e.image.width,1/e.image.height),this._setEncoding(o.inputEncoding,e),this._setEncoding(o.outputEncoding,t.texture),Sh(t,0,0,3*fr,2*fr),n.setRenderTarget(t),n.render(a,Cf)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<Ub;i++){const s=Math.sqrt(Mh[i]*Mh[i]-Mh[i-1]*Mh[i-1]),a=Lv[(i-1)%Lv.length];this._blur(e,i-1,i,s,a)}t.autoClear=n}_blur(e,t,n,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",s),this._halfBlur(a,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,a,o){const c=this._renderer,l=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new sn(dc[i],l),d=l.uniforms,f=Pv[n]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Qa-1),g=s/p,_=isFinite(s)?1+Math.floor(h*g):Qa;_>Qa&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${Qa}`);const m=[];let v=0;for(let E=0;E<Qa;++E){const M=E/g,A=Math.exp(-M*M/2);m.push(A),E==0?v+=A:E<_&&(v+=2*A)}for(let E=0;E<m.length;E++)m[E]=m[E]/v;d.envMap.value=e.texture,d.samples.value=_,d.weights.value=m,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o),d.dTheta.value=p,d.mipInt.value=Ds-n,this._setEncoding(d.inputEncoding,e.texture),this._setEncoding(d.outputEncoding,e.texture);const y=Pv[i],x=3*Math.max(0,fr-2*y),w=(i===0?0:2*fr)+2*y*(i>Ds-Eo?i-Ds+Eo:0);Sh(t,x,w,3*y,2*y),c.setRenderTarget(t),c.render(u,Cf)}}function M3(r){return r===void 0||r.type!==ks?!1:r.encoding===Jn||r.encoding===xa||r.encoding===Km}function S3(){const r=[],e=[],t=[];let n=Ds;for(let i=0;i<Ub;i++){const s=Math.pow(2,n);e.push(s);let a=1/s;i>Ds-Eo?a=Ob[i-Ds+Eo-1]:i==0&&(a=0),t.push(a);const o=1/(s-1),c=-o/2,l=1+o/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,d=6,f=3,p=2,g=1,_=new Float32Array(f*d*u),m=new Float32Array(p*d*u),v=new Float32Array(g*d*u);for(let x=0;x<u;x++){const w=x%3*2/3-1,E=x>2?0:-1,M=[w,E,0,w+2/3,E,0,w+2/3,E+1,0,w,E,0,w+2/3,E+1,0,w,E+1,0];_.set(M,f*d*x),m.set(h,p*d*x);const A=[x,x,x,x,x,x];v.set(A,g*d*x)}const y=new kt;y.setAttribute("position",new Ct(_,f)),y.setAttribute("uv",new Ct(m,p)),y.setAttribute("faceIndex",new Ct(v,g)),r.push(y),n>Eo&&n--}return{_lodPlanes:r,_sizeLods:e,_sigmas:t}}function Dv(r){const e=new cr(3*fr,3*fr,r);return e.texture.mapping=Zu,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Sh(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function w3(r){const e=new Float32Array(r),t=new D(0,1,0);return new id({name:"SphericalGaussianBlur",defines:{n:r},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t},inputEncoding:{value:zs[Jn]},outputEncoding:{value:zs[Jn]}},vertexShader:tg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${ng()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Ls,depthTest:!1,depthWrite:!1})}function Fv(){const r=new Ne(1,1);return new id({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:r},inputEncoding:{value:zs[Jn]},outputEncoding:{value:zs[Jn]}},vertexShader:tg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${ng()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Ls,depthTest:!1,depthWrite:!1})}function Nv(){return new id({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:zs[Jn]},outputEncoding:{value:zs[Jn]}},vertexShader:tg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${ng()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Ls,depthTest:!1,depthWrite:!1})}function tg(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ng(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function T3(r){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const c=o.mapping,l=c===Kp||c===Jp,h=c===_l||c===vl;if(l||h){if(e.has(o))return e.get(o).texture;{const u=o.image;if(l&&u&&u.height>0||h&&u&&i(u)){const d=r.getRenderTarget();t===null&&(t=new b3(r));const f=l?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,f),r.setRenderTarget(d),o.addEventListener("dispose",s),f.texture}else return null}}}return o}function i(o){let c=0;const l=6;for(let h=0;h<l;h++)o[h]!==void 0&&c++;return c===l}function s(o){const c=o.target;c.removeEventListener("dispose",s);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function E3(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function C3(r,e,t,n){const i={},s=new WeakMap;function a(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",a),delete i[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function o(u,d){return i[d.id]===!0||(d.addEventListener("dispose",a),i[d.id]=!0,t.memory.geometries++),d}function c(u){const d=u.attributes;for(const p in d)e.update(d[p],34962);const f=u.morphAttributes;for(const p in f){const g=f[p];for(let _=0,m=g.length;_<m;_++)e.update(g[_],34962)}}function l(u){const d=[],f=u.index,p=u.attributes.position;let g=0;if(f!==null){const v=f.array;g=f.version;for(let y=0,x=v.length;y<x;y+=3){const w=v[y+0],E=v[y+1],M=v[y+2];d.push(w,E,E,M,M,w)}}else{const v=p.array;g=p.version;for(let y=0,x=v.length/3-1;y<x;y+=3){const w=y+0,E=y+1,M=y+2;d.push(w,E,E,M,M,w)}}const _=new(Ab(d)>65535?Db:Lb)(d,1);_.version=g;const m=s.get(u);m&&e.remove(m),s.set(u,_)}function h(u){const d=s.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&l(u)}else l(u);return s.get(u)}return{get:o,update:c,getWireframeAttribute:h}}function A3(r,e,t,n){const i=n.isWebGL2;let s;function a(d){s=d}let o,c;function l(d){o=d.type,c=d.bytesPerElement}function h(d,f){r.drawElements(s,f,o,d*c),t.update(f,s,1)}function u(d,f,p){if(p===0)return;let g,_;if(i)g=r,_="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),_="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[_](s,f,o,d*c,p),t.update(f,s,p)}this.setMode=a,this.setIndex=l,this.render=h,this.renderInstances=u}function R3(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,o){switch(t.calls++,a){case 4:t.triangles+=o*(s/3);break;case 1:t.lines+=o*(s/2);break;case 3:t.lines+=o*(s-1);break;case 2:t.lines+=o*s;break;case 0:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}class ig extends Cn{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=Rn,this.minFilter=Rn,this.wrapR=Ai,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ig.prototype.isDataTexture2DArray=!0;function P3(r,e){return r[0]-e[0]}function I3(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Ov(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function L3(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,a=new D,o=[];for(let l=0;l<8;l++)o[l]=[l,0];function c(l,h,u,d){const f=l.morphTargetInfluences;if(e.isWebGL2===!0){const p=h.morphAttributes.position.length;let g=s.get(h);if(g===void 0||g.count!==p){g!==void 0&&g.texture.dispose();const v=h.morphAttributes.normal!==void 0,y=h.morphAttributes.position,x=h.morphAttributes.normal||[],w=h.attributes.position.count,E=v===!0?2:1;let M=w*E,A=1;M>e.maxTextureSize&&(A=Math.ceil(M/e.maxTextureSize),M=e.maxTextureSize);const T=new Float32Array(M*A*4*p),S=new ig(T,M,A,p);S.format=ui,S.type=Cs;const b=E*4;for(let U=0;U<p;U++){const L=y[U],N=x[U],k=M*A*4*U;for(let B=0;B<L.count;B++){a.fromBufferAttribute(L,B),L.normalized===!0&&Ov(a,L);const z=B*b;T[k+z+0]=a.x,T[k+z+1]=a.y,T[k+z+2]=a.z,T[k+z+3]=0,v===!0&&(a.fromBufferAttribute(N,B),N.normalized===!0&&Ov(a,N),T[k+z+4]=a.x,T[k+z+5]=a.y,T[k+z+6]=a.z,T[k+z+7]=0)}}g={count:p,texture:S,size:new Ne(M,A)},s.set(h,g)}let _=0;for(let v=0;v<f.length;v++)_+=f[v];const m=h.morphTargetsRelative?1:1-_;d.getUniforms().setValue(r,"morphTargetBaseInfluence",m),d.getUniforms().setValue(r,"morphTargetInfluences",f),d.getUniforms().setValue(r,"morphTargetsTexture",g.texture,t),d.getUniforms().setValue(r,"morphTargetsTextureSize",g.size)}else{const p=f===void 0?0:f.length;let g=n[h.id];if(g===void 0||g.length!==p){g=[];for(let x=0;x<p;x++)g[x]=[x,0];n[h.id]=g}for(let x=0;x<p;x++){const w=g[x];w[0]=x,w[1]=f[x]}g.sort(I3);for(let x=0;x<8;x++)x<p&&g[x][1]?(o[x][0]=g[x][0],o[x][1]=g[x][1]):(o[x][0]=Number.MAX_SAFE_INTEGER,o[x][1]=0);o.sort(P3);const _=h.morphAttributes.position,m=h.morphAttributes.normal;let v=0;for(let x=0;x<8;x++){const w=o[x],E=w[0],M=w[1];E!==Number.MAX_SAFE_INTEGER&&M?(_&&h.getAttribute("morphTarget"+x)!==_[E]&&h.setAttribute("morphTarget"+x,_[E]),m&&h.getAttribute("morphNormal"+x)!==m[E]&&h.setAttribute("morphNormal"+x,m[E]),i[x]=M,v+=M):(_&&h.hasAttribute("morphTarget"+x)===!0&&h.deleteAttribute("morphTarget"+x),m&&h.hasAttribute("morphNormal"+x)===!0&&h.deleteAttribute("morphNormal"+x),i[x]=0)}const y=h.morphTargetsRelative?1:1-v;d.getUniforms().setValue(r,"morphTargetBaseInfluence",y),d.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:c}}function D3(r,e,t,n){let i=new WeakMap;function s(c){const l=n.render.frame,h=c.geometry,u=e.get(c,h);return i.get(u)!==l&&(e.update(u),i.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),t.update(c.instanceMatrix,34962),c.instanceColor!==null&&t.update(c.instanceColor,34962)),u}function a(){i=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:s,dispose:a}}class Bb extends Cn{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=Rn,this.minFilter=Rn,this.wrapR=Ai,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Bb.prototype.isDataTexture3D=!0;const $b=new Cn,F3=new ig,N3=new Bb,kb=new Qu,Uv=[],Bv=[],$v=new Float32Array(16),kv=new Float32Array(9),zv=new Float32Array(4);function Yo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Uv[i];if(s===void 0&&(s=new Float32Array(i),Uv[i]=s),e!==0){n.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,r[a].toArray(s,o)}return s}function di(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Qn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function zb(r,e){let t=Bv[e];t===void 0&&(t=new Int32Array(e),Bv[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function O3(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function U3(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(di(t,e))return;r.uniform2fv(this.addr,e),Qn(t,e)}}function B3(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(di(t,e))return;r.uniform3fv(this.addr,e),Qn(t,e)}}function $3(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(di(t,e))return;r.uniform4fv(this.addr,e),Qn(t,e)}}function k3(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(di(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Qn(t,e)}else{if(di(t,n))return;zv.set(n),r.uniformMatrix2fv(this.addr,!1,zv),Qn(t,n)}}function z3(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(di(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Qn(t,e)}else{if(di(t,n))return;kv.set(n),r.uniformMatrix3fv(this.addr,!1,kv),Qn(t,n)}}function V3(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(di(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Qn(t,e)}else{if(di(t,n))return;$v.set(n),r.uniformMatrix4fv(this.addr,!1,$v),Qn(t,n)}}function H3(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function G3(r,e){const t=this.cache;di(t,e)||(r.uniform2iv(this.addr,e),Qn(t,e))}function W3(r,e){const t=this.cache;di(t,e)||(r.uniform3iv(this.addr,e),Qn(t,e))}function q3(r,e){const t=this.cache;di(t,e)||(r.uniform4iv(this.addr,e),Qn(t,e))}function j3(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function X3(r,e){const t=this.cache;di(t,e)||(r.uniform2uiv(this.addr,e),Qn(t,e))}function Y3(r,e){const t=this.cache;di(t,e)||(r.uniform3uiv(this.addr,e),Qn(t,e))}function Z3(r,e){const t=this.cache;di(t,e)||(r.uniform4uiv(this.addr,e),Qn(t,e))}function K3(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.safeSetTexture2D(e||$b,i)}function J3(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||N3,i)}function Q3(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.safeSetTextureCube(e||kb,i)}function eF(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||F3,i)}function tF(r){switch(r){case 5126:return O3;case 35664:return U3;case 35665:return B3;case 35666:return $3;case 35674:return k3;case 35675:return z3;case 35676:return V3;case 5124:case 35670:return H3;case 35667:case 35671:return G3;case 35668:case 35672:return W3;case 35669:case 35673:return q3;case 5125:return j3;case 36294:return X3;case 36295:return Y3;case 36296:return Z3;case 35678:case 36198:case 36298:case 36306:case 35682:return K3;case 35679:case 36299:case 36307:return J3;case 35680:case 36300:case 36308:case 36293:return Q3;case 36289:case 36303:case 36311:case 36292:return eF}}function nF(r,e){r.uniform1fv(this.addr,e)}function iF(r,e){const t=Yo(e,this.size,2);r.uniform2fv(this.addr,t)}function rF(r,e){const t=Yo(e,this.size,3);r.uniform3fv(this.addr,t)}function sF(r,e){const t=Yo(e,this.size,4);r.uniform4fv(this.addr,t)}function aF(r,e){const t=Yo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function oF(r,e){const t=Yo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function cF(r,e){const t=Yo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function lF(r,e){r.uniform1iv(this.addr,e)}function hF(r,e){r.uniform2iv(this.addr,e)}function uF(r,e){r.uniform3iv(this.addr,e)}function dF(r,e){r.uniform4iv(this.addr,e)}function fF(r,e){r.uniform1uiv(this.addr,e)}function pF(r,e){r.uniform2uiv(this.addr,e)}function mF(r,e){r.uniform3uiv(this.addr,e)}function gF(r,e){r.uniform4uiv(this.addr,e)}function _F(r,e,t){const n=e.length,i=zb(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.safeSetTexture2D(e[s]||$b,i[s])}function vF(r,e,t){const n=e.length,i=zb(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.safeSetTextureCube(e[s]||kb,i[s])}function xF(r){switch(r){case 5126:return nF;case 35664:return iF;case 35665:return rF;case 35666:return sF;case 35674:return aF;case 35675:return oF;case 35676:return cF;case 5124:case 35670:return lF;case 35667:case 35671:return hF;case 35668:case 35672:return uF;case 35669:case 35673:return dF;case 5125:return fF;case 36294:return pF;case 36295:return mF;case 36296:return gF;case 35678:case 36198:case 36298:case 36306:case 35682:return _F;case 35680:case 36300:case 36308:case 36293:return vF}}function yF(r,e,t){this.id=r,this.addr=t,this.cache=[],this.setValue=tF(e.type)}function Vb(r,e,t){this.id=r,this.addr=t,this.cache=[],this.size=e.size,this.setValue=xF(e.type)}Vb.prototype.updateCache=function(r){const e=this.cache;r instanceof Float32Array&&e.length!==r.length&&(this.cache=new Float32Array(r.length)),Qn(e,r)};function Hb(r){this.id=r,this.seq=[],this.map={}}Hb.prototype.setValue=function(r,e,t){const n=this.seq;for(let i=0,s=n.length;i!==s;++i){const a=n[i];a.setValue(r,e[a.id],t)}};const Rf=/(\w+)(\])?(\[|\.)?/g;function Vv(r,e){r.seq.push(e),r.map[e.id]=e}function bF(r,e,t){const n=r.name,i=n.length;for(Rf.lastIndex=0;;){const s=Rf.exec(n),a=Rf.lastIndex;let o=s[1];const c=s[2]==="]",l=s[3];if(c&&(o=o|0),l===void 0||l==="["&&a+2===i){Vv(t,l===void 0?new yF(o,r,e):new Vb(o,r,e));break}else{let u=t.map[o];u===void 0&&(u=new Hb(o),Vv(t,u)),t=u}}}function Fs(r,e){this.seq=[],this.map={};const t=r.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=r.getActiveUniform(e,n),s=r.getUniformLocation(e,i.name);bF(i,s,this)}}Fs.prototype.setValue=function(r,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(r,t,n)};Fs.prototype.setOptional=function(r,e,t){const n=e[t];n!==void 0&&this.setValue(r,t,n)};Fs.upload=function(r,e,t,n){for(let i=0,s=e.length;i!==s;++i){const a=e[i],o=t[a.id];o.needsUpdate!==!1&&a.setValue(r,o.value,n)}};Fs.seqWithValue=function(r,e){const t=[];for(let n=0,i=r.length;n!==i;++n){const s=r[n];s.id in e&&t.push(s)}return t};function Hv(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let MF=0;function SF(r){const e=r.split(`
`);for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join(`
`)}function Gb(r){switch(r){case Jn:return["Linear","( value )"];case xa:return["sRGB","( value )"];case Jm:return["RGBE","( value )"];case wb:return["RGBM","( value, 7.0 )"];case Tb:return["RGBM","( value, 16.0 )"];case Eb:return["RGBD","( value, 256.0 )"];case Km:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case rI:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Gv(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();return n&&i===""?"":t.toUpperCase()+`

`+i+`

`+SF(r.getShaderSource(e))}function ia(r,e){const t=Gb(e);return"vec4 "+r+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function wF(r,e){const t=Gb(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function TF(r,e){let t;switch(e){case nP:t="Linear";break;case iP:t="Reinhard";break;case rP:t="OptimizedCineon";break;case sP:t="ACESFilmic";break;case aP:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function EF(r){return[r.extensionDerivatives||r.envMapCubeUV||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(wc).join(`
`)}function CF(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function AF(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),a=s.name;let o=1;s.type===35674&&(o=2),s.type===35675&&(o=3),s.type===35676&&(o=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:o}}return t}function wc(r){return r!==""}function Wv(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function qv(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const RF=/^[ \t]*#include +<([\w\d./]+)>/gm;function nm(r){return r.replace(RF,PF)}function PF(r,e){const t=Et[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return nm(t)}const IF=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,LF=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function jv(r){return r.replace(LF,Wb).replace(IF,DF)}function DF(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Wb(r,e,t,n)}function Wb(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Xv(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function FF(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===vb?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===F2?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Sc&&(e="SHADOWMAP_TYPE_VSM"),e}function NF(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case _l:case vl:e="ENVMAP_TYPE_CUBE";break;case Zu:case Ym:e="ENVMAP_TYPE_CUBE_UV";break}return e}function OF(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case vl:case Ym:e="ENVMAP_MODE_REFRACTION";break}return e}function UF(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Yu:e="ENVMAP_BLENDING_MULTIPLY";break;case eP:e="ENVMAP_BLENDING_MIX";break;case tP:e="ENVMAP_BLENDING_ADD";break}return e}function BF(r,e,t,n){const i=r.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const c=FF(t),l=NF(t),h=OF(t),u=UF(t),d=r.gammaFactor>0?r.gammaFactor:1,f=t.isWebGL2?"":EF(t),p=CF(s),g=i.createProgram();let _,m,v=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(_=[p].filter(wc).join(`
`),_.length>0&&(_+=`
`),m=[f,p].filter(wc).join(`
`),m.length>0&&(m+=`
`)):(_=[Xv(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(wc).join(`
`),m=[f,Xv(t),"#define SHADER_NAME "+t.shaderName,p,"#define GAMMA_FACTOR "+d,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==da?"#define TONE_MAPPING":"",t.toneMapping!==da?Et.tonemapping_pars_fragment:"",t.toneMapping!==da?TF("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.format===fa?"#define OPAQUE":"",Et.encodings_pars_fragment,t.map?ia("mapTexelToLinear",t.mapEncoding):"",t.matcap?ia("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?ia("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?ia("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.specularColorMap?ia("specularColorMapTexelToLinear",t.specularColorMapEncoding):"",t.sheenColorMap?ia("sheenColorMapTexelToLinear",t.sheenColorMapEncoding):"",t.lightMap?ia("lightMapTexelToLinear",t.lightMapEncoding):"",wF("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(wc).join(`
`)),a=nm(a),a=Wv(a,t),a=qv(a,t),o=nm(o),o=Wv(o,t),o=qv(o,t),a=jv(a),o=jv(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,_=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,m=["#define varying in",t.glslVersion===_v?"":"out highp vec4 pc_fragColor;",t.glslVersion===_v?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const y=v+_+a,x=v+m+o,w=Hv(i,35633,y),E=Hv(i,35632,x);if(i.attachShader(g,w),i.attachShader(g,E),t.index0AttributeName!==void 0?i.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),r.debug.checkShaderErrors){const T=i.getProgramInfoLog(g).trim(),S=i.getShaderInfoLog(w).trim(),b=i.getShaderInfoLog(E).trim();let U=!0,L=!0;if(i.getProgramParameter(g,35714)===!1){U=!1;const N=Gv(i,w,"vertex"),k=Gv(i,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+`

Program Info Log: `+T+`
`+N+`
`+k)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(S===""||b==="")&&(L=!1);L&&(this.diagnostics={runnable:U,programLog:T,vertexShader:{log:S,prefix:_},fragmentShader:{log:b,prefix:m}})}i.deleteShader(w),i.deleteShader(E);let M;this.getUniforms=function(){return M===void 0&&(M=new Fs(i,g)),M};let A;return this.getAttributes=function(){return A===void 0&&(A=AF(i,g)),A},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=MF++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=E,this}function $F(r,e,t,n,i,s,a){const o=[],c=i.isWebGL2,l=i.logarithmicDepthBuffer,h=i.floatVertexTextures,u=i.maxVertexUniforms,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},g=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap",,"roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","morphTargetsCount","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","specularIntensityMap","specularColorMap","specularColorMapEncoding","transmission","transmissionMap","thicknessMap","sheen","sheenColorMap","sheenColorMapEncoding","sheenRoughnessMap"];function _(M){const T=M.skeleton.bones;if(h)return 1024;{const b=Math.floor((u-20)/4),U=Math.min(b,T.length);return U<T.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+T.length+" bones. This GPU supports "+U+"."),0):U}}function m(M){let A;return M&&M.isTexture?A=M.encoding:M&&M.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),A=M.texture.encoding):A=Jn,c&&M&&M.isTexture&&M.format===ui&&M.type===ks&&M.encoding===xa&&(A=Jn),A}function v(M,A,T,S,b){const U=S.fog,L=M.isMeshStandardMaterial?S.environment:null,N=(M.isMeshStandardMaterial?t:e).get(M.envMap||L),k=p[M.type],B=b.isSkinnedMesh?_(b):0;M.precision!==null&&(f=i.getMaxPrecision(M.precision),f!==M.precision&&console.warn("THREE.WebGLProgram.getParameters:",M.precision,"not supported, using",f,"instead."));let z,H;if(k){const me=gr[k];z=me.vertexShader,H=me.fragmentShader}else z=M.vertexShader,H=M.fragmentShader;const ee=r.getRenderTarget(),de=M.alphaTest>0,ce=M.clearcoat>0;return{isWebGL2:c,shaderID:k,shaderName:M.type,vertexShader:z,fragmentShader:H,defines:M.defines,isRawShaderMaterial:M.isRawShaderMaterial===!0,glslVersion:M.glslVersion,precision:f,instancing:b.isInstancedMesh===!0,instancingColor:b.isInstancedMesh===!0&&b.instanceColor!==null,supportsVertexTextures:d,outputEncoding:ee!==null?m(ee.texture):r.outputEncoding,map:!!M.map,mapEncoding:m(M.map),matcap:!!M.matcap,matcapEncoding:m(M.matcap),envMap:!!N,envMapMode:N&&N.mapping,envMapEncoding:m(N),envMapCubeUV:!!N&&(N.mapping===Zu||N.mapping===Ym),lightMap:!!M.lightMap,lightMapEncoding:m(M.lightMap),aoMap:!!M.aoMap,emissiveMap:!!M.emissiveMap,emissiveMapEncoding:m(M.emissiveMap),bumpMap:!!M.bumpMap,normalMap:!!M.normalMap,objectSpaceNormalMap:M.normalMapType===oI,tangentSpaceNormalMap:M.normalMapType===qo,clearcoat:ce,clearcoatMap:ce&&!!M.clearcoatMap,clearcoatRoughnessMap:ce&&!!M.clearcoatRoughnessMap,clearcoatNormalMap:ce&&!!M.clearcoatNormalMap,displacementMap:!!M.displacementMap,roughnessMap:!!M.roughnessMap,metalnessMap:!!M.metalnessMap,specularMap:!!M.specularMap,specularIntensityMap:!!M.specularIntensityMap,specularColorMap:!!M.specularColorMap,specularColorMapEncoding:m(M.specularColorMap),alphaMap:!!M.alphaMap,alphaTest:de,gradientMap:!!M.gradientMap,sheen:M.sheen>0,sheenColorMap:!!M.sheenColorMap,sheenColorMapEncoding:m(M.sheenColorMap),sheenRoughnessMap:!!M.sheenRoughnessMap,transmission:M.transmission>0,transmissionMap:!!M.transmissionMap,thicknessMap:!!M.thicknessMap,combine:M.combine,vertexTangents:!!M.normalMap&&!!b.geometry&&!!b.geometry.attributes.tangent,vertexColors:M.vertexColors,vertexAlphas:M.vertexColors===!0&&!!b.geometry&&!!b.geometry.attributes.color&&b.geometry.attributes.color.itemSize===4,vertexUvs:!!M.map||!!M.bumpMap||!!M.normalMap||!!M.specularMap||!!M.alphaMap||!!M.emissiveMap||!!M.roughnessMap||!!M.metalnessMap||!!M.clearcoatMap||!!M.clearcoatRoughnessMap||!!M.clearcoatNormalMap||!!M.displacementMap||!!M.transmissionMap||!!M.thicknessMap||!!M.specularIntensityMap||!!M.specularColorMap||!!M.sheenColorMap||M.sheenRoughnessMap,uvsVertexOnly:!(M.map||M.bumpMap||M.normalMap||M.specularMap||M.alphaMap||M.emissiveMap||M.roughnessMap||M.metalnessMap||M.clearcoatNormalMap||M.transmission>0||M.transmissionMap||M.thicknessMap||M.specularIntensityMap||M.specularColorMap||!!M.sheen>0||M.sheenColorMap||M.sheenRoughnessMap)&&!!M.displacementMap,fog:!!U,useFog:M.fog,fogExp2:U&&U.isFogExp2,flatShading:!!M.flatShading,sizeAttenuation:M.sizeAttenuation,logarithmicDepthBuffer:l,skinning:b.isSkinnedMesh===!0&&B>0,maxBones:B,useVertexTexture:h,morphTargets:!!b.geometry&&!!b.geometry.morphAttributes.position,morphNormals:!!b.geometry&&!!b.geometry.morphAttributes.normal,morphTargetsCount:b.geometry&&b.geometry.morphAttributes.position?b.geometry.morphAttributes.position.length:0,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,format:M.format,dithering:M.dithering,shadowMapEnabled:r.shadowMap.enabled&&T.length>0,shadowMapType:r.shadowMap.type,toneMapping:M.toneMapped?r.toneMapping:da,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:M.premultipliedAlpha,doubleSided:M.side===si,flipSided:M.side===An,depthPacking:M.depthPacking!==void 0?M.depthPacking:!1,index0AttributeName:M.index0AttributeName,extensionDerivatives:M.extensions&&M.extensions.derivatives,extensionFragDepth:M.extensions&&M.extensions.fragDepth,extensionDrawBuffers:M.extensions&&M.extensions.drawBuffers,extensionShaderTextureLOD:M.extensions&&M.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||n.has("EXT_shader_texture_lod"),customProgramCacheKey:M.customProgramCacheKey()}}function y(M){const A=[];if(M.shaderID?A.push(M.shaderID):(A.push(vv(M.fragmentShader)),A.push(vv(M.vertexShader))),M.defines!==void 0)for(const T in M.defines)A.push(T),A.push(M.defines[T]);if(M.isRawShaderMaterial===!1){for(let T=0;T<g.length;T++)A.push(M[g[T]]);A.push(r.outputEncoding),A.push(r.gammaFactor)}return A.push(M.customProgramCacheKey),A.join()}function x(M){const A=p[M.type];let T;if(A){const S=gr[A];T=UI.clone(S.uniforms)}else T=M.uniforms;return T}function w(M,A){let T;for(let S=0,b=o.length;S<b;S++){const U=o[S];if(U.cacheKey===A){T=U,++T.usedTimes;break}}return T===void 0&&(T=new BF(r,A,M,s),o.push(T)),T}function E(M){if(--M.usedTimes===0){const A=o.indexOf(M);o[A]=o[o.length-1],o.pop(),M.destroy()}}return{getParameters:v,getProgramCacheKey:y,getUniforms:x,acquireProgram:w,releaseProgram:E,programs:o}}function kF(){let r=new WeakMap;function e(s){let a=r.get(s);return a===void 0&&(a={},r.set(s,a)),a}function t(s){r.delete(s)}function n(s,a,o){r.get(s)[a]=o}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function zF(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.program!==e.program?r.program.id-e.program.id:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Yv(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Zv(r){const e=[];let t=0;const n=[],i=[],s=[],a={id:-1};function o(){t=0,n.length=0,i.length=0,s.length=0}function c(f,p,g,_,m,v){let y=e[t];const x=r.get(g);return y===void 0?(y={id:f.id,object:f,geometry:p,material:g,program:x.program||a,groupOrder:_,renderOrder:f.renderOrder,z:m,group:v},e[t]=y):(y.id=f.id,y.object=f,y.geometry=p,y.material=g,y.program=x.program||a,y.groupOrder=_,y.renderOrder=f.renderOrder,y.z=m,y.group=v),t++,y}function l(f,p,g,_,m,v){const y=c(f,p,g,_,m,v);g.transmission>0?i.push(y):g.transparent===!0?s.push(y):n.push(y)}function h(f,p,g,_,m,v){const y=c(f,p,g,_,m,v);g.transmission>0?i.unshift(y):g.transparent===!0?s.unshift(y):n.unshift(y)}function u(f,p){n.length>1&&n.sort(f||zF),i.length>1&&i.sort(p||Yv),s.length>1&&s.sort(p||Yv)}function d(){for(let f=t,p=e.length;f<p;f++){const g=e[f];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.program=null,g.group=null}}return{opaque:n,transmissive:i,transparent:s,init:o,push:l,unshift:h,finish:d,sort:u}}function VF(r){let e=new WeakMap;function t(i,s){let a;return e.has(i)===!1?(a=new Zv(r),e.set(i,[a])):s>=e.get(i).length?(a=new Zv(r),e.get(i).push(a)):a=e.get(i)[s],a}function n(){e=new WeakMap}return{get:t,dispose:n}}function HF(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new st};break;case"SpotLight":t={position:new D,direction:new D,color:new st,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new st,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new st,groundColor:new st};break;case"RectAreaLight":t={color:new st,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function GF(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ne};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ne};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ne,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let WF=0;function qF(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function jF(r,e){const t=new HF,n=GF(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let h=0;h<9;h++)i.probe.push(new D);const s=new D,a=new et,o=new et;function c(h,u){let d=0,f=0,p=0;for(let T=0;T<9;T++)i.probe[T].set(0,0,0);let g=0,_=0,m=0,v=0,y=0,x=0,w=0,E=0;h.sort(qF);const M=u!==!0?Math.PI:1;for(let T=0,S=h.length;T<S;T++){const b=h[T],U=b.color,L=b.intensity,N=b.distance,k=b.shadow&&b.shadow.map?b.shadow.map.texture:null;if(b.isAmbientLight)d+=U.r*L*M,f+=U.g*L*M,p+=U.b*L*M;else if(b.isLightProbe)for(let B=0;B<9;B++)i.probe[B].addScaledVector(b.sh.coefficients[B],L);else if(b.isDirectionalLight){const B=t.get(b);if(B.color.copy(b.color).multiplyScalar(b.intensity*M),b.castShadow){const z=b.shadow,H=n.get(b);H.shadowBias=z.bias,H.shadowNormalBias=z.normalBias,H.shadowRadius=z.radius,H.shadowMapSize=z.mapSize,i.directionalShadow[g]=H,i.directionalShadowMap[g]=k,i.directionalShadowMatrix[g]=b.shadow.matrix,x++}i.directional[g]=B,g++}else if(b.isSpotLight){const B=t.get(b);if(B.position.setFromMatrixPosition(b.matrixWorld),B.color.copy(U).multiplyScalar(L*M),B.distance=N,B.coneCos=Math.cos(b.angle),B.penumbraCos=Math.cos(b.angle*(1-b.penumbra)),B.decay=b.decay,b.castShadow){const z=b.shadow,H=n.get(b);H.shadowBias=z.bias,H.shadowNormalBias=z.normalBias,H.shadowRadius=z.radius,H.shadowMapSize=z.mapSize,i.spotShadow[m]=H,i.spotShadowMap[m]=k,i.spotShadowMatrix[m]=b.shadow.matrix,E++}i.spot[m]=B,m++}else if(b.isRectAreaLight){const B=t.get(b);B.color.copy(U).multiplyScalar(L),B.halfWidth.set(b.width*.5,0,0),B.halfHeight.set(0,b.height*.5,0),i.rectArea[v]=B,v++}else if(b.isPointLight){const B=t.get(b);if(B.color.copy(b.color).multiplyScalar(b.intensity*M),B.distance=b.distance,B.decay=b.decay,b.castShadow){const z=b.shadow,H=n.get(b);H.shadowBias=z.bias,H.shadowNormalBias=z.normalBias,H.shadowRadius=z.radius,H.shadowMapSize=z.mapSize,H.shadowCameraNear=z.camera.near,H.shadowCameraFar=z.camera.far,i.pointShadow[_]=H,i.pointShadowMap[_]=k,i.pointShadowMatrix[_]=b.shadow.matrix,w++}i.point[_]=B,_++}else if(b.isHemisphereLight){const B=t.get(b);B.skyColor.copy(b.color).multiplyScalar(L*M),B.groundColor.copy(b.groundColor).multiplyScalar(L*M),i.hemi[y]=B,y++}}v>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ze.LTC_FLOAT_1,i.rectAreaLTC2=ze.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=ze.LTC_HALF_1,i.rectAreaLTC2=ze.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=p;const A=i.hash;(A.directionalLength!==g||A.pointLength!==_||A.spotLength!==m||A.rectAreaLength!==v||A.hemiLength!==y||A.numDirectionalShadows!==x||A.numPointShadows!==w||A.numSpotShadows!==E)&&(i.directional.length=g,i.spot.length=m,i.rectArea.length=v,i.point.length=_,i.hemi.length=y,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=E,i.spotShadowMap.length=E,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=w,i.spotShadowMatrix.length=E,A.directionalLength=g,A.pointLength=_,A.spotLength=m,A.rectAreaLength=v,A.hemiLength=y,A.numDirectionalShadows=x,A.numPointShadows=w,A.numSpotShadows=E,i.version=WF++)}function l(h,u){let d=0,f=0,p=0,g=0,_=0;const m=u.matrixWorldInverse;for(let v=0,y=h.length;v<y;v++){const x=h[v];if(x.isDirectionalLight){const w=i.directional[d];w.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(m),d++}else if(x.isSpotLight){const w=i.spot[p];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(m),w.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(m),p++}else if(x.isRectAreaLight){const w=i.rectArea[g];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(m),o.identity(),a.copy(x.matrixWorld),a.premultiply(m),o.extractRotation(a),w.halfWidth.set(x.width*.5,0,0),w.halfHeight.set(0,x.height*.5,0),w.halfWidth.applyMatrix4(o),w.halfHeight.applyMatrix4(o),g++}else if(x.isPointLight){const w=i.point[f];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(m),f++}else if(x.isHemisphereLight){const w=i.hemi[_];w.direction.setFromMatrixPosition(x.matrixWorld),w.direction.transformDirection(m),w.direction.normalize(),_++}}}return{setup:c,setupView:l,state:i}}function Kv(r,e){const t=new jF(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function a(u){n.push(u)}function o(u){i.push(u)}function c(u){t.setup(n,u)}function l(u){t.setupView(n,u)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:c,setupLightsView:l,pushLight:a,pushShadow:o}}function XF(r,e){let t=new WeakMap;function n(s,a=0){let o;return t.has(s)===!1?(o=new Kv(r,e),t.set(s,[o])):a>=t.get(s).length?(o=new Kv(r,e),t.get(s).push(o)):o=t.get(s)[a],o}function i(){t=new WeakMap}return{get:n,dispose:i}}class qb extends ti{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=sI,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}qb.prototype.isMeshDepthMaterial=!0;class jb extends ti{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new D,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}jb.prototype.isMeshDistanceMaterial=!0;const YF=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,ZF=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Xb(r,e,t){let n=new ed;const i=new Ne,s=new Ne,a=new Ht,o=new qb({depthPacking:aI}),c=new jb,l={},h=t.maxTextureSize,u={0:An,1:Fo,2:si},d=new ai({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ne},radius:{value:4}},vertexShader:YF,fragmentShader:ZF}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new kt;p.setAttribute("position",new Ct(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new sn(p,d),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=vb,this.render=function(x,w,E){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||x.length===0)return;const M=r.getRenderTarget(),A=r.getActiveCubeFace(),T=r.getActiveMipmapLevel(),S=r.state;S.setBlending(Ls),S.buffers.color.setClear(1,1,1,1),S.buffers.depth.setTest(!0),S.setScissorTest(!1);for(let b=0,U=x.length;b<U;b++){const L=x[b],N=L.shadow;if(N===void 0){console.warn("THREE.WebGLShadowMap:",L,"has no shadow.");continue}if(N.autoUpdate===!1&&N.needsUpdate===!1)continue;i.copy(N.mapSize);const k=N.getFrameExtents();if(i.multiply(k),s.copy(N.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(s.x=Math.floor(h/k.x),i.x=s.x*k.x,N.mapSize.x=s.x),i.y>h&&(s.y=Math.floor(h/k.y),i.y=s.y*k.y,N.mapSize.y=s.y)),N.map===null&&!N.isPointLightShadow&&this.type===Sc){const z={minFilter:Kn,magFilter:Kn,format:ui};N.map=new cr(i.x,i.y,z),N.map.texture.name=L.name+".shadowMap",N.mapPass=new cr(i.x,i.y,z),N.camera.updateProjectionMatrix()}if(N.map===null){const z={minFilter:Rn,magFilter:Rn,format:ui};N.map=new cr(i.x,i.y,z),N.map.texture.name=L.name+".shadowMap",N.camera.updateProjectionMatrix()}r.setRenderTarget(N.map),r.clear();const B=N.getViewportCount();for(let z=0;z<B;z++){const H=N.getViewport(z);a.set(s.x*H.x,s.y*H.y,s.x*H.z,s.y*H.w),S.viewport(a),N.updateMatrices(L,z),n=N.getFrustum(),y(w,E,N.camera,L,this.type)}!N.isPointLightShadow&&this.type===Sc&&m(N,E),N.needsUpdate=!1}_.needsUpdate=!1,r.setRenderTarget(M,A,T)};function m(x,w){const E=e.update(g);d.defines.VSM_SAMPLES!==x.blurSamples&&(d.defines.VSM_SAMPLES=x.blurSamples,f.defines.VSM_SAMPLES=x.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),d.uniforms.shadow_pass.value=x.map.texture,d.uniforms.resolution.value=x.mapSize,d.uniforms.radius.value=x.radius,r.setRenderTarget(x.mapPass),r.clear(),r.renderBufferDirect(w,null,E,d,g,null),f.uniforms.shadow_pass.value=x.mapPass.texture,f.uniforms.resolution.value=x.mapSize,f.uniforms.radius.value=x.radius,r.setRenderTarget(x.map),r.clear(),r.renderBufferDirect(w,null,E,f,g,null)}function v(x,w,E,M,A,T,S){let b=null;const U=M.isPointLight===!0?x.customDistanceMaterial:x.customDepthMaterial;if(U!==void 0?b=U:b=M.isPointLight===!0?c:o,r.localClippingEnabled&&E.clipShadows===!0&&E.clippingPlanes.length!==0||E.displacementMap&&E.displacementScale!==0||E.alphaMap&&E.alphaTest>0){const L=b.uuid,N=E.uuid;let k=l[L];k===void 0&&(k={},l[L]=k);let B=k[N];B===void 0&&(B=b.clone(),k[N]=B),b=B}return b.visible=E.visible,b.wireframe=E.wireframe,S===Sc?b.side=E.shadowSide!==null?E.shadowSide:E.side:b.side=E.shadowSide!==null?E.shadowSide:u[E.side],b.alphaMap=E.alphaMap,b.alphaTest=E.alphaTest,b.clipShadows=E.clipShadows,b.clippingPlanes=E.clippingPlanes,b.clipIntersection=E.clipIntersection,b.displacementMap=E.displacementMap,b.displacementScale=E.displacementScale,b.displacementBias=E.displacementBias,b.wireframeLinewidth=E.wireframeLinewidth,b.linewidth=E.linewidth,M.isPointLight===!0&&b.isMeshDistanceMaterial===!0&&(b.referencePosition.setFromMatrixPosition(M.matrixWorld),b.nearDistance=A,b.farDistance=T),b}function y(x,w,E,M,A){if(x.visible===!1)return;if(x.layers.test(w.layers)&&(x.isMesh||x.isLine||x.isPoints)&&(x.castShadow||x.receiveShadow&&A===Sc)&&(!x.frustumCulled||n.intersectsObject(x))){x.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,x.matrixWorld);const b=e.update(x),U=x.material;if(Array.isArray(U)){const L=b.groups;for(let N=0,k=L.length;N<k;N++){const B=L[N],z=U[B.materialIndex];if(z&&z.visible){const H=v(x,b,z,M,E.near,E.far,A);r.renderBufferDirect(E,null,b,H,x,B)}}}else if(U.visible){const L=v(x,b,U,M,E.near,E.far,A);r.renderBufferDirect(E,null,b,L,x,null)}}const S=x.children;for(let b=0,U=S.length;b<U;b++)y(S[b],w,E,M,A)}}function KF(r,e,t){const n=t.isWebGL2;function i(){let G=!1;const le=new Ht;let J=null;const Oe=new Ht(0,0,0,0);return{setMask:function(ae){J!==ae&&!G&&(r.colorMask(ae,ae,ae,ae),J=ae)},setLocked:function(ae){G=ae},setClear:function(ae,Ae,Qe,nt,qe){qe===!0&&(ae*=nt,Ae*=nt,Qe*=nt),le.set(ae,Ae,Qe,nt),Oe.equals(le)===!1&&(r.clearColor(ae,Ae,Qe,nt),Oe.copy(le))},reset:function(){G=!1,J=null,Oe.set(-1,0,0,0)}}}function s(){let G=!1,le=null,J=null,Oe=null;return{setTest:function(ae){ae?j(2929):pe(2929)},setMask:function(ae){le!==ae&&!G&&(r.depthMask(ae),le=ae)},setFunc:function(ae){if(J!==ae){if(ae)switch(ae){case j2:r.depthFunc(512);break;case X2:r.depthFunc(519);break;case Y2:r.depthFunc(513);break;case Zp:r.depthFunc(515);break;case Z2:r.depthFunc(514);break;case K2:r.depthFunc(518);break;case J2:r.depthFunc(516);break;case Q2:r.depthFunc(517);break;default:r.depthFunc(515)}else r.depthFunc(515);J=ae}},setLocked:function(ae){G=ae},setClear:function(ae){Oe!==ae&&(r.clearDepth(ae),Oe=ae)},reset:function(){G=!1,le=null,J=null,Oe=null}}}function a(){let G=!1,le=null,J=null,Oe=null,ae=null,Ae=null,Qe=null,nt=null,qe=null;return{setTest:function(ot){G||(ot?j(2960):pe(2960))},setMask:function(ot){le!==ot&&!G&&(r.stencilMask(ot),le=ot)},setFunc:function(ot,ft,St){(J!==ot||Oe!==ft||ae!==St)&&(r.stencilFunc(ot,ft,St),J=ot,Oe=ft,ae=St)},setOp:function(ot,ft,St){(Ae!==ot||Qe!==ft||nt!==St)&&(r.stencilOp(ot,ft,St),Ae=ot,Qe=ft,nt=St)},setLocked:function(ot){G=ot},setClear:function(ot){qe!==ot&&(r.clearStencil(ot),qe=ot)},reset:function(){G=!1,le=null,J=null,Oe=null,ae=null,Ae=null,Qe=null,nt=null,qe=null}}}const o=new i,c=new s,l=new a;let h={},u=null,d={},f=null,p=!1,g=null,_=null,m=null,v=null,y=null,x=null,w=null,E=!1,M=null,A=null,T=null,S=null,b=null;const U=r.getParameter(35661);let L=!1,N=0;const k=r.getParameter(7938);k.indexOf("WebGL")!==-1?(N=parseFloat(/^WebGL (\d)/.exec(k)[1]),L=N>=1):k.indexOf("OpenGL ES")!==-1&&(N=parseFloat(/^OpenGL ES (\d)/.exec(k)[1]),L=N>=2);let B=null,z={};const H=r.getParameter(3088),ee=r.getParameter(2978),de=new Ht().fromArray(H),ce=new Ht().fromArray(ee);function Ce(G,le,J){const Oe=new Uint8Array(4),ae=r.createTexture();r.bindTexture(G,ae),r.texParameteri(G,10241,9728),r.texParameteri(G,10240,9728);for(let Ae=0;Ae<J;Ae++)r.texImage2D(le+Ae,0,6408,1,1,0,6408,5121,Oe);return ae}const me={};me[3553]=Ce(3553,3553,1),me[34067]=Ce(34067,34069,6),o.setClear(0,0,0,1),c.setClear(1),l.setClear(0),j(2929),c.setFunc(Zp),xe(!1),F(Q_),j(2884),Je(Ls);function j(G){h[G]!==!0&&(r.enable(G),h[G]=!0)}function pe(G){h[G]!==!1&&(r.disable(G),h[G]=!1)}function Z(G){G!==u&&(r.bindFramebuffer(36160,G),u=G)}function ye(G,le){return le===null&&u!==null&&(le=u),d[G]!==le?(r.bindFramebuffer(G,le),d[G]=le,n&&(G===36009&&(d[36160]=le),G===36160&&(d[36009]=le)),!0):!1}function Pe(G){return f!==G?(r.useProgram(G),f=G,!0):!1}const Ie={[uo]:32774,[O2]:32778,[U2]:32779};if(n)Ie[iv]=32775,Ie[rv]=32776;else{const G=e.get("EXT_blend_minmax");G!==null&&(Ie[iv]=G.MIN_EXT,Ie[rv]=G.MAX_EXT)}const Te={[B2]:0,[$2]:1,[k2]:768,[yb]:770,[q2]:776,[G2]:774,[V2]:772,[z2]:769,[bb]:771,[W2]:775,[H2]:773};function Je(G,le,J,Oe,ae,Ae,Qe,nt){if(G===Ls){p===!0&&(pe(3042),p=!1);return}if(p===!1&&(j(3042),p=!0),G!==N2){if(G!==g||nt!==E){if((_!==uo||y!==uo)&&(r.blendEquation(32774),_=uo,y=uo),nt)switch(G){case Pc:r.blendFuncSeparate(1,771,1,771);break;case ev:r.blendFunc(1,1);break;case tv:r.blendFuncSeparate(0,0,769,771);break;case nv:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Pc:r.blendFuncSeparate(770,771,1,771);break;case ev:r.blendFunc(770,1);break;case tv:r.blendFunc(0,769);break;case nv:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}m=null,v=null,x=null,w=null,g=G,E=nt}return}ae=ae||le,Ae=Ae||J,Qe=Qe||Oe,(le!==_||ae!==y)&&(r.blendEquationSeparate(Ie[le],Ie[ae]),_=le,y=ae),(J!==m||Oe!==v||Ae!==x||Qe!==w)&&(r.blendFuncSeparate(Te[J],Te[Oe],Te[Ae],Te[Qe]),m=J,v=Oe,x=Ae,w=Qe),g=G,E=null}function fe(G,le){G.side===si?pe(2884):j(2884);let J=G.side===An;le&&(J=!J),xe(J),G.blending===Pc&&G.transparent===!1?Je(Ls):Je(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.premultipliedAlpha),c.setFunc(G.depthFunc),c.setTest(G.depthTest),c.setMask(G.depthWrite),o.setMask(G.colorWrite);const Oe=G.stencilWrite;l.setTest(Oe),Oe&&(l.setMask(G.stencilWriteMask),l.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),l.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),Ee(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?j(32926):pe(32926)}function xe(G){M!==G&&(G?r.frontFace(2304):r.frontFace(2305),M=G)}function F(G){G!==L2?(j(2884),G!==A&&(G===Q_?r.cullFace(1029):G===D2?r.cullFace(1028):r.cullFace(1032))):pe(2884),A=G}function Ye(G){G!==T&&(L&&r.lineWidth(G),T=G)}function Ee(G,le,J){G?(j(32823),(S!==le||b!==J)&&(r.polygonOffset(le,J),S=le,b=J)):pe(32823)}function O(G){G?j(3089):pe(3089)}function P(G){G===void 0&&(G=33984+U-1),B!==G&&(r.activeTexture(G),B=G)}function se(G,le){B===null&&P();let J=z[B];J===void 0&&(J={type:void 0,texture:void 0},z[B]=J),(J.type!==G||J.texture!==le)&&(r.bindTexture(G,le||me[G]),J.type=G,J.texture=le)}function he(){const G=z[B];G!==void 0&&G.type!==void 0&&(r.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function R(){try{r.compressedTexImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function C(){try{r.texImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function q(){try{r.texImage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Q(G){de.equals(G)===!1&&(r.scissor(G.x,G.y,G.z,G.w),de.copy(G))}function oe(G){ce.equals(G)===!1&&(r.viewport(G.x,G.y,G.z,G.w),ce.copy(G))}function K(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},B=null,z={},u=null,d={},f=null,p=!1,g=null,_=null,m=null,v=null,y=null,x=null,w=null,E=!1,M=null,A=null,T=null,S=null,b=null,de.set(0,0,r.canvas.width,r.canvas.height),ce.set(0,0,r.canvas.width,r.canvas.height),o.reset(),c.reset(),l.reset()}return{buffers:{color:o,depth:c,stencil:l},enable:j,disable:pe,bindFramebuffer:ye,bindXRFramebuffer:Z,useProgram:Pe,setBlending:Je,setMaterial:fe,setFlipSided:xe,setCullFace:F,setLineWidth:Ye,setPolygonOffset:Ee,setScissorTest:O,activeTexture:P,bindTexture:se,unbindTexture:he,compressedTexImage2D:R,texImage2D:C,texImage3D:q,scissor:Q,viewport:oe,reset:K}}function JF(r,e,t,n,i,s,a){const o=i.isWebGL2,c=i.maxTextures,l=i.maxCubemapSize,h=i.maxTextureSize,u=i.maxSamples,d=new WeakMap;let f,p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(O,P){return p?new OffscreenCanvas(O,P):Ju("canvas")}function _(O,P,se,he){let R=1;if((O.width>he||O.height>he)&&(R=he/Math.max(O.width,O.height)),R<1||P===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const C=P?Cb:Math.floor,q=C(R*O.width),Q=C(R*O.height);f===void 0&&(f=g(q,Q));const oe=se?g(q,Q):f;return oe.width=q,oe.height=Q,oe.getContext("2d").drawImage(O,0,0,q,Q),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+q+"x"+Q+")."),oe}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function m(O){return tm(O.width)&&tm(O.height)}function v(O){return o?!1:O.wrapS!==Ai||O.wrapT!==Ai||O.minFilter!==Rn&&O.minFilter!==Kn}function y(O,P){return O.generateMipmaps&&P&&O.minFilter!==Rn&&O.minFilter!==Kn}function x(O,P,se,he,R=1){r.generateMipmap(O);const C=n.get(P);C.__maxMipLevel=Math.log2(Math.max(se,he,R))}function w(O,P,se,he){if(o===!1)return P;if(O!==null){if(r[O]!==void 0)return r[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let R=P;return P===6403&&(se===5126&&(R=33326),se===5131&&(R=33325),se===5121&&(R=33321)),P===6407&&(se===5126&&(R=34837),se===5131&&(R=34843),se===5121&&(R=32849)),P===6408&&(se===5126&&(R=34836),se===5131&&(R=34842),se===5121&&(R=he===xa?35907:32856)),(R===33325||R===33326||R===34842||R===34836)&&e.get("EXT_color_buffer_float"),R}function E(O){return O===Rn||O===sv||O===av?9728:9729}function M(O){const P=O.target;P.removeEventListener("dispose",M),T(P),P.isVideoTexture&&d.delete(P),a.memory.textures--}function A(O){const P=O.target;P.removeEventListener("dispose",A),S(P)}function T(O){const P=n.get(O);P.__webglInit!==void 0&&(r.deleteTexture(P.__webglTexture),n.remove(O))}function S(O){const P=O.texture,se=n.get(O),he=n.get(P);if(O){if(he.__webglTexture!==void 0&&(r.deleteTexture(he.__webglTexture),a.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let R=0;R<6;R++)r.deleteFramebuffer(se.__webglFramebuffer[R]),se.__webglDepthbuffer&&r.deleteRenderbuffer(se.__webglDepthbuffer[R]);else r.deleteFramebuffer(se.__webglFramebuffer),se.__webglDepthbuffer&&r.deleteRenderbuffer(se.__webglDepthbuffer),se.__webglMultisampledFramebuffer&&r.deleteFramebuffer(se.__webglMultisampledFramebuffer),se.__webglColorRenderbuffer&&r.deleteRenderbuffer(se.__webglColorRenderbuffer),se.__webglDepthRenderbuffer&&r.deleteRenderbuffer(se.__webglDepthRenderbuffer);if(O.isWebGLMultipleRenderTargets)for(let R=0,C=P.length;R<C;R++){const q=n.get(P[R]);q.__webglTexture&&(r.deleteTexture(q.__webglTexture),a.memory.textures--),n.remove(P[R])}n.remove(P),n.remove(O)}}let b=0;function U(){b=0}function L(){const O=b;return O>=c&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+c),b+=1,O}function N(O,P){const se=n.get(O);if(O.isVideoTexture&&fe(O),O.version>0&&se.__version!==O.version){const he=O.image;if(he===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(he.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ce(se,O,P);return}}t.activeTexture(33984+P),t.bindTexture(3553,se.__webglTexture)}function k(O,P){const se=n.get(O);if(O.version>0&&se.__version!==O.version){Ce(se,O,P);return}t.activeTexture(33984+P),t.bindTexture(35866,se.__webglTexture)}function B(O,P){const se=n.get(O);if(O.version>0&&se.__version!==O.version){Ce(se,O,P);return}t.activeTexture(33984+P),t.bindTexture(32879,se.__webglTexture)}function z(O,P){const se=n.get(O);if(O.version>0&&se.__version!==O.version){me(se,O,P);return}t.activeTexture(33984+P),t.bindTexture(34067,se.__webglTexture)}const H={[Qp]:10497,[Ai]:33071,[em]:33648},ee={[Rn]:9728,[sv]:9984,[av]:9986,[Kn]:9729,[oP]:9985,[Ku]:9987};function de(O,P,se){if(se?(r.texParameteri(O,10242,H[P.wrapS]),r.texParameteri(O,10243,H[P.wrapT]),(O===32879||O===35866)&&r.texParameteri(O,32882,H[P.wrapR]),r.texParameteri(O,10240,ee[P.magFilter]),r.texParameteri(O,10241,ee[P.minFilter])):(r.texParameteri(O,10242,33071),r.texParameteri(O,10243,33071),(O===32879||O===35866)&&r.texParameteri(O,32882,33071),(P.wrapS!==Ai||P.wrapT!==Ai)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(O,10240,E(P.magFilter)),r.texParameteri(O,10241,E(P.minFilter)),P.minFilter!==Rn&&P.minFilter!==Kn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const he=e.get("EXT_texture_filter_anisotropic");if(P.type===Cs&&e.has("OES_texture_float_linear")===!1||o===!1&&P.type===wo&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(r.texParameterf(O,he.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function ce(O,P){O.__webglInit===void 0&&(O.__webglInit=!0,P.addEventListener("dispose",M),O.__webglTexture=r.createTexture(),a.memory.textures++)}function Ce(O,P,se){let he=3553;P.isDataTexture2DArray&&(he=35866),P.isDataTexture3D&&(he=32879),ce(O,P),t.activeTexture(33984+se),t.bindTexture(he,O.__webglTexture),r.pixelStorei(37440,P.flipY),r.pixelStorei(37441,P.premultiplyAlpha),r.pixelStorei(3317,P.unpackAlignment),r.pixelStorei(37443,0);const R=v(P)&&m(P.image)===!1,C=_(P.image,R,!1,h),q=m(C)||o,Q=s.convert(P.format);let oe=s.convert(P.type),K=w(P.internalFormat,Q,oe,P.encoding);de(he,P,q);let G;const le=P.mipmaps;if(P.isDepthTexture)K=6402,o?P.type===Cs?K=36012:P.type===uu?K=33190:P.type===Ic?K=35056:K=33189:P.type===Cs&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===To&&K===6402&&P.type!==Su&&P.type!==uu&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=Su,oe=s.convert(P.type)),P.format===qc&&K===6402&&(K=34041,P.type!==Ic&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=Ic,oe=s.convert(P.type))),t.texImage2D(3553,0,K,C.width,C.height,0,Q,oe,null);else if(P.isDataTexture)if(le.length>0&&q){for(let J=0,Oe=le.length;J<Oe;J++)G=le[J],t.texImage2D(3553,J,K,G.width,G.height,0,Q,oe,G.data);P.generateMipmaps=!1,O.__maxMipLevel=le.length-1}else t.texImage2D(3553,0,K,C.width,C.height,0,Q,oe,C.data),O.__maxMipLevel=0;else if(P.isCompressedTexture){for(let J=0,Oe=le.length;J<Oe;J++)G=le[J],P.format!==ui&&P.format!==fa?Q!==null?t.compressedTexImage2D(3553,J,K,G.width,G.height,0,G.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texImage2D(3553,J,K,G.width,G.height,0,Q,oe,G.data);O.__maxMipLevel=le.length-1}else if(P.isDataTexture2DArray)t.texImage3D(35866,0,K,C.width,C.height,C.depth,0,Q,oe,C.data),O.__maxMipLevel=0;else if(P.isDataTexture3D)t.texImage3D(32879,0,K,C.width,C.height,C.depth,0,Q,oe,C.data),O.__maxMipLevel=0;else if(le.length>0&&q){for(let J=0,Oe=le.length;J<Oe;J++)G=le[J],t.texImage2D(3553,J,K,Q,oe,G);P.generateMipmaps=!1,O.__maxMipLevel=le.length-1}else t.texImage2D(3553,0,K,Q,oe,C),O.__maxMipLevel=0;y(P,q)&&x(he,P,C.width,C.height),O.__version=P.version,P.onUpdate&&P.onUpdate(P)}function me(O,P,se){if(P.image.length!==6)return;ce(O,P),t.activeTexture(33984+se),t.bindTexture(34067,O.__webglTexture),r.pixelStorei(37440,P.flipY),r.pixelStorei(37441,P.premultiplyAlpha),r.pixelStorei(3317,P.unpackAlignment),r.pixelStorei(37443,0);const he=P&&(P.isCompressedTexture||P.image[0].isCompressedTexture),R=P.image[0]&&P.image[0].isDataTexture,C=[];for(let J=0;J<6;J++)!he&&!R?C[J]=_(P.image[J],!1,!0,l):C[J]=R?P.image[J].image:P.image[J];const q=C[0],Q=m(q)||o,oe=s.convert(P.format),K=s.convert(P.type),G=w(P.internalFormat,oe,K,P.encoding);de(34067,P,Q);let le;if(he){for(let J=0;J<6;J++){le=C[J].mipmaps;for(let Oe=0;Oe<le.length;Oe++){const ae=le[Oe];P.format!==ui&&P.format!==fa?oe!==null?t.compressedTexImage2D(34069+J,Oe,G,ae.width,ae.height,0,ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):t.texImage2D(34069+J,Oe,G,ae.width,ae.height,0,oe,K,ae.data)}}O.__maxMipLevel=le.length-1}else{le=P.mipmaps;for(let J=0;J<6;J++)if(R){t.texImage2D(34069+J,0,G,C[J].width,C[J].height,0,oe,K,C[J].data);for(let Oe=0;Oe<le.length;Oe++){const Ae=le[Oe].image[J].image;t.texImage2D(34069+J,Oe+1,G,Ae.width,Ae.height,0,oe,K,Ae.data)}}else{t.texImage2D(34069+J,0,G,oe,K,C[J]);for(let Oe=0;Oe<le.length;Oe++){const ae=le[Oe];t.texImage2D(34069+J,Oe+1,G,oe,K,ae.image[J])}}O.__maxMipLevel=le.length}y(P,Q)&&x(34067,P,q.width,q.height),O.__version=P.version,P.onUpdate&&P.onUpdate(P)}function j(O,P,se,he,R){const C=s.convert(se.format),q=s.convert(se.type),Q=w(se.internalFormat,C,q,se.encoding);R===32879||R===35866?t.texImage3D(R,0,Q,P.width,P.height,P.depth,0,C,q,null):t.texImage2D(R,0,Q,P.width,P.height,0,C,q,null),t.bindFramebuffer(36160,O),r.framebufferTexture2D(36160,he,R,n.get(se).__webglTexture,0),t.bindFramebuffer(36160,null)}function pe(O,P,se){if(r.bindRenderbuffer(36161,O),P.depthBuffer&&!P.stencilBuffer){let he=33189;if(se){const R=P.depthTexture;R&&R.isDepthTexture&&(R.type===Cs?he=36012:R.type===uu&&(he=33190));const C=Je(P);r.renderbufferStorageMultisample(36161,C,he,P.width,P.height)}else r.renderbufferStorage(36161,he,P.width,P.height);r.framebufferRenderbuffer(36160,36096,36161,O)}else if(P.depthBuffer&&P.stencilBuffer){if(se){const he=Je(P);r.renderbufferStorageMultisample(36161,he,35056,P.width,P.height)}else r.renderbufferStorage(36161,34041,P.width,P.height);r.framebufferRenderbuffer(36160,33306,36161,O)}else{const he=P.isWebGLMultipleRenderTargets===!0?P.texture[0]:P.texture,R=s.convert(he.format),C=s.convert(he.type),q=w(he.internalFormat,R,C,he.encoding);if(se){const Q=Je(P);r.renderbufferStorageMultisample(36161,Q,q,P.width,P.height)}else r.renderbufferStorage(36161,q,P.width,P.height)}r.bindRenderbuffer(36161,null)}function Z(O,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,O),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),N(P.depthTexture,0);const he=n.get(P.depthTexture).__webglTexture;if(P.depthTexture.format===To)r.framebufferTexture2D(36160,36096,3553,he,0);else if(P.depthTexture.format===qc)r.framebufferTexture2D(36160,33306,3553,he,0);else throw new Error("Unknown depthTexture format")}function ye(O){const P=n.get(O),se=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture){if(se)throw new Error("target.depthTexture not supported in Cube render targets");Z(P.__webglFramebuffer,O)}else if(se){P.__webglDepthbuffer=[];for(let he=0;he<6;he++)t.bindFramebuffer(36160,P.__webglFramebuffer[he]),P.__webglDepthbuffer[he]=r.createRenderbuffer(),pe(P.__webglDepthbuffer[he],O,!1)}else t.bindFramebuffer(36160,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),pe(P.__webglDepthbuffer,O,!1);t.bindFramebuffer(36160,null)}function Pe(O){const P=O.texture,se=n.get(O),he=n.get(P);O.addEventListener("dispose",A),O.isWebGLMultipleRenderTargets!==!0&&(he.__webglTexture=r.createTexture(),he.__version=P.version,a.memory.textures++);const R=O.isWebGLCubeRenderTarget===!0,C=O.isWebGLMultipleRenderTargets===!0,q=O.isWebGLMultisampleRenderTarget===!0,Q=P.isDataTexture3D||P.isDataTexture2DArray,oe=m(O)||o;if(o&&P.format===fa&&(P.type===Cs||P.type===wo)&&(P.format=ui,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),R){se.__webglFramebuffer=[];for(let K=0;K<6;K++)se.__webglFramebuffer[K]=r.createFramebuffer()}else if(se.__webglFramebuffer=r.createFramebuffer(),C)if(i.drawBuffers){const K=O.texture;for(let G=0,le=K.length;G<le;G++){const J=n.get(K[G]);J.__webglTexture===void 0&&(J.__webglTexture=r.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(q)if(o){se.__webglMultisampledFramebuffer=r.createFramebuffer(),se.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(36161,se.__webglColorRenderbuffer);const K=s.convert(P.format),G=s.convert(P.type),le=w(P.internalFormat,K,G,P.encoding),J=Je(O);r.renderbufferStorageMultisample(36161,J,le,O.width,O.height),t.bindFramebuffer(36160,se.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064,36161,se.__webglColorRenderbuffer),r.bindRenderbuffer(36161,null),O.depthBuffer&&(se.__webglDepthRenderbuffer=r.createRenderbuffer(),pe(se.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(R){t.bindTexture(34067,he.__webglTexture),de(34067,P,oe);for(let K=0;K<6;K++)j(se.__webglFramebuffer[K],O,P,36064,34069+K);y(P,oe)&&x(34067,P,O.width,O.height),t.unbindTexture()}else if(C){const K=O.texture;for(let G=0,le=K.length;G<le;G++){const J=K[G],Oe=n.get(J);t.bindTexture(3553,Oe.__webglTexture),de(3553,J,oe),j(se.__webglFramebuffer,O,J,36064+G,3553),y(J,oe)&&x(3553,J,O.width,O.height)}t.unbindTexture()}else{let K=3553;Q&&(o?K=P.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),t.bindTexture(K,he.__webglTexture),de(K,P,oe),j(se.__webglFramebuffer,O,P,36064,K),y(P,oe)&&x(K,P,O.width,O.height,O.depth),t.unbindTexture()}O.depthBuffer&&ye(O)}function Ie(O){const P=m(O)||o,se=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let he=0,R=se.length;he<R;he++){const C=se[he];if(y(C,P)){const q=O.isWebGLCubeRenderTarget?34067:3553,Q=n.get(C).__webglTexture;t.bindTexture(q,Q),x(q,C,O.width,O.height),t.unbindTexture()}}}function Te(O){if(O.isWebGLMultisampleRenderTarget)if(o){const P=O.width,se=O.height;let he=16384;O.depthBuffer&&(he|=256),O.stencilBuffer&&(he|=1024);const R=n.get(O);t.bindFramebuffer(36008,R.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,R.__webglFramebuffer),r.blitFramebuffer(0,0,P,se,0,0,P,se,he,9728),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,R.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Je(O){return o&&O.isWebGLMultisampleRenderTarget?Math.min(u,O.samples):0}function fe(O){const P=a.render.frame;d.get(O)!==P&&(d.set(O,P),O.update())}let xe=!1,F=!1;function Ye(O,P){O&&O.isWebGLRenderTarget&&(xe===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),xe=!0),O=O.texture),N(O,P)}function Ee(O,P){O&&O.isWebGLCubeRenderTarget&&(F===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),F=!0),O=O.texture),z(O,P)}this.allocateTextureUnit=L,this.resetTextureUnits=U,this.setTexture2D=N,this.setTexture2DArray=k,this.setTexture3D=B,this.setTextureCube=z,this.setupRenderTarget=Pe,this.updateRenderTargetMipmap=Ie,this.updateMultisampleRenderTarget=Te,this.safeSetTexture2D=Ye,this.safeSetTextureCube=Ee}function QF(r,e,t){const n=t.isWebGL2;function i(s){let a;if(s===ks)return 5121;if(s===uP)return 32819;if(s===dP)return 32820;if(s===fP)return 33635;if(s===cP)return 5120;if(s===lP)return 5122;if(s===Su)return 5123;if(s===hP)return 5124;if(s===uu)return 5125;if(s===Cs)return 5126;if(s===wo)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===pP)return 6406;if(s===fa)return 6407;if(s===ui)return 6408;if(s===mP)return 6409;if(s===gP)return 6410;if(s===To)return 6402;if(s===qc)return 34041;if(s===vP)return 6403;if(s===xP)return 36244;if(s===yP)return 33319;if(s===bP)return 33320;if(s===MP)return 36248;if(s===SP)return 36249;if(s===ov||s===cv||s===lv||s===hv)if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===ov)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===cv)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===lv)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===hv)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===uv||s===dv||s===fv||s===pv)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===uv)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===dv)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===fv)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===pv)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===wP)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===mv||s===gv)&&(a=e.get("WEBGL_compressed_texture_etc"),a!==null)){if(s===mv)return a.COMPRESSED_RGB8_ETC2;if(s===gv)return a.COMPRESSED_RGBA8_ETC2_EAC}if(s===TP||s===EP||s===CP||s===AP||s===RP||s===PP||s===IP||s===LP||s===DP||s===FP||s===NP||s===OP||s===UP||s===BP||s===kP||s===zP||s===VP||s===HP||s===GP||s===WP||s===qP||s===jP||s===XP||s===YP||s===ZP||s===KP||s===JP||s===QP)return a=e.get("WEBGL_compressed_texture_astc"),a!==null?s:null;if(s===$P)return a=e.get("EXT_texture_compression_bptc"),a!==null?s:null;if(s===Ic)return n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class Yb extends li{constructor(e=[]){super(),this.cameras=e}}Yb.prototype.isArrayCamera=!0;class Tc extends Dt{constructor(){super(),this.type="Group"}}Tc.prototype.isGroup=!0;const eN={type:"move"};class Pf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Tc,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Tc,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Tc,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,a=null;const o=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(o!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(eN))),l&&e.hand){a=!0;for(const g of e.hand.values()){const _=t.getJointPose(g,n);if(l.joints[g.jointName]===void 0){const v=new Tc;v.matrixAutoUpdate=!1,v.visible=!1,l.joints[g.jointName]=v,l.add(v)}const m=l.joints[g.jointName];_!==null&&(m.matrix.fromArray(_.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=_.radius),m.visible=_!==null}const h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;l.inputState.pinching&&d>f+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(c.matrix.fromArray(s.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),s.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(s.linearVelocity)):c.hasLinearVelocity=!1,s.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(s.angularVelocity)):c.hasAngularVelocity=!1));return o!==null&&(o.visible=i!==null),c!==null&&(c.visible=s!==null),l!==null&&(l.visible=a!==null),this}}class tN extends ya{constructor(e,t){super();const n=this,i=e.state;let s=null,a=1,o=null,c="local-floor",l=null,h=null,u=null,d=null,f=null,p=!1,g=null,_=null,m=null,v=null,y=null,x=null;const w=[],E=new Map,M=new li;M.layers.enable(1),M.viewport=new Ht;const A=new li;A.layers.enable(2),A.viewport=new Ht;const T=[M,A],S=new Yb;S.layers.enable(1),S.layers.enable(2);let b=null,U=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(me){let j=w[me];return j===void 0&&(j=new Pf,w[me]=j),j.getTargetRaySpace()},this.getControllerGrip=function(me){let j=w[me];return j===void 0&&(j=new Pf,w[me]=j),j.getGripSpace()},this.getHand=function(me){let j=w[me];return j===void 0&&(j=new Pf,w[me]=j),j.getHandSpace()};function L(me){const j=E.get(me.inputSource);j&&j.dispatchEvent({type:me.type,data:me.inputSource})}function N(){E.forEach(function(me,j){me.disconnect(j)}),E.clear(),b=null,U=null,i.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),u&&t.deleteFramebuffer(u),g&&t.deleteFramebuffer(g),_&&t.deleteRenderbuffer(_),m&&t.deleteRenderbuffer(m),u=null,g=null,_=null,m=null,f=null,d=null,h=null,s=null,Ce.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(me){a=me,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(me){c=me,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h},this.getFrame=function(){return v},this.getSession=function(){return s},this.setSession=async function(me){if(s=me,s!==null){s.addEventListener("select",L),s.addEventListener("selectstart",L),s.addEventListener("selectend",L),s.addEventListener("squeeze",L),s.addEventListener("squeezestart",L),s.addEventListener("squeezeend",L),s.addEventListener("end",N),s.addEventListener("inputsourceschange",k);const j=t.getContextAttributes();if(j.xrCompatible!==!0&&await t.makeXRCompatible(),s.renderState.layers===void 0){const pe={antialias:j.antialias,alpha:j.alpha,depth:j.depth,stencil:j.stencil,framebufferScaleFactor:a};f=new XRWebGLLayer(s,t,pe),s.updateRenderState({baseLayer:f})}else if(t instanceof WebGLRenderingContext){const pe={antialias:!0,alpha:j.alpha,depth:j.depth,stencil:j.stencil,framebufferScaleFactor:a};f=new XRWebGLLayer(s,t,pe),s.updateRenderState({layers:[f]})}else{p=j.antialias;let pe=null;j.depth&&(x=256,j.stencil&&(x|=1024),y=j.stencil?33306:36096,pe=j.stencil?35056:33190);const Z={colorFormat:j.alpha?32856:32849,depthFormat:pe,scaleFactor:a};h=new XRWebGLBinding(s,t),d=h.createProjectionLayer(Z),u=t.createFramebuffer(),s.updateRenderState({layers:[d]}),p&&(g=t.createFramebuffer(),_=t.createRenderbuffer(),t.bindRenderbuffer(36161,_),t.renderbufferStorageMultisample(36161,4,32856,d.textureWidth,d.textureHeight),i.bindFramebuffer(36160,g),t.framebufferRenderbuffer(36160,36064,36161,_),t.bindRenderbuffer(36161,null),pe!==null&&(m=t.createRenderbuffer(),t.bindRenderbuffer(36161,m),t.renderbufferStorageMultisample(36161,4,pe,d.textureWidth,d.textureHeight),t.framebufferRenderbuffer(36160,y,36161,m),t.bindRenderbuffer(36161,null)),i.bindFramebuffer(36160,null))}o=await s.requestReferenceSpace(c),Ce.setContext(s),Ce.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function k(me){const j=s.inputSources;for(let pe=0;pe<w.length;pe++)E.set(j[pe],w[pe]);for(let pe=0;pe<me.removed.length;pe++){const Z=me.removed[pe],ye=E.get(Z);ye&&(ye.dispatchEvent({type:"disconnected",data:Z}),E.delete(Z))}for(let pe=0;pe<me.added.length;pe++){const Z=me.added[pe],ye=E.get(Z);ye&&ye.dispatchEvent({type:"connected",data:Z})}}const B=new D,z=new D;function H(me,j,pe){B.setFromMatrixPosition(j.matrixWorld),z.setFromMatrixPosition(pe.matrixWorld);const Z=B.distanceTo(z),ye=j.projectionMatrix.elements,Pe=pe.projectionMatrix.elements,Ie=ye[14]/(ye[10]-1),Te=ye[14]/(ye[10]+1),Je=(ye[9]+1)/ye[5],fe=(ye[9]-1)/ye[5],xe=(ye[8]-1)/ye[0],F=(Pe[8]+1)/Pe[0],Ye=Ie*xe,Ee=Ie*F,O=Z/(-xe+F),P=O*-xe;j.matrixWorld.decompose(me.position,me.quaternion,me.scale),me.translateX(P),me.translateZ(O),me.matrixWorld.compose(me.position,me.quaternion,me.scale),me.matrixWorldInverse.copy(me.matrixWorld).invert();const se=Ie+O,he=Te+O,R=Ye-P,C=Ee+(Z-P),q=Je*Te/he*se,Q=fe*Te/he*se;me.projectionMatrix.makePerspective(R,C,q,Q,se,he)}function ee(me,j){j===null?me.matrixWorld.copy(me.matrix):me.matrixWorld.multiplyMatrices(j.matrixWorld,me.matrix),me.matrixWorldInverse.copy(me.matrixWorld).invert()}this.updateCamera=function(me){if(s===null)return;S.near=A.near=M.near=me.near,S.far=A.far=M.far=me.far,(b!==S.near||U!==S.far)&&(s.updateRenderState({depthNear:S.near,depthFar:S.far}),b=S.near,U=S.far);const j=me.parent,pe=S.cameras;ee(S,j);for(let ye=0;ye<pe.length;ye++)ee(pe[ye],j);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),me.position.copy(S.position),me.quaternion.copy(S.quaternion),me.scale.copy(S.scale),me.matrix.copy(S.matrix),me.matrixWorld.copy(S.matrixWorld);const Z=me.children;for(let ye=0,Pe=Z.length;ye<Pe;ye++)Z[ye].updateMatrixWorld(!0);pe.length===2?H(S,M,A):S.projectionMatrix.copy(M.projectionMatrix)},this.getCamera=function(){return S},this.getFoveation=function(){if(d!==null)return d.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(me){d!==null&&(d.fixedFoveation=me),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=me)};let de=null;function ce(me,j){if(l=j.getViewerPose(o),v=j,l!==null){const Z=l.views;f!==null&&i.bindXRFramebuffer(f.framebuffer);let ye=!1;Z.length!==S.cameras.length&&(S.cameras.length=0,ye=!0);for(let Pe=0;Pe<Z.length;Pe++){const Ie=Z[Pe];let Te=null;if(f!==null)Te=f.getViewport(Ie);else{const fe=h.getViewSubImage(d,Ie);i.bindXRFramebuffer(u),fe.depthStencilTexture!==void 0&&t.framebufferTexture2D(36160,y,3553,fe.depthStencilTexture,0),t.framebufferTexture2D(36160,36064,3553,fe.colorTexture,0),Te=fe.viewport}const Je=T[Pe];Je.matrix.fromArray(Ie.transform.matrix),Je.projectionMatrix.fromArray(Ie.projectionMatrix),Je.viewport.set(Te.x,Te.y,Te.width,Te.height),Pe===0&&S.matrix.copy(Je.matrix),ye===!0&&S.cameras.push(Je)}p&&(i.bindXRFramebuffer(g),x!==null&&t.clear(x))}const pe=s.inputSources;for(let Z=0;Z<w.length;Z++){const ye=w[Z],Pe=pe[Z];ye.update(Pe,j,o)}if(de&&de(me,j),p){const Z=d.textureWidth,ye=d.textureHeight;i.bindFramebuffer(36008,g),i.bindFramebuffer(36009,u),t.invalidateFramebuffer(36008,[y]),t.invalidateFramebuffer(36009,[y]),t.blitFramebuffer(0,0,Z,ye,0,0,Z,ye,16384,9728),t.invalidateFramebuffer(36008,[36064]),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,null),i.bindFramebuffer(36160,g)}v=null}const Ce=new Nb;Ce.setAnimationLoop(ce),this.setAnimationLoop=function(me){de=me},this.dispose=function(){}}}function nN(r){function e(m,v){m.fogColor.value.copy(v.color),v.isFog?(m.fogNear.value=v.near,m.fogFar.value=v.far):v.isFogExp2&&(m.fogDensity.value=v.density)}function t(m,v,y,x,w){v.isMeshBasicMaterial?n(m,v):v.isMeshLambertMaterial?(n(m,v),c(m,v)):v.isMeshToonMaterial?(n(m,v),h(m,v)):v.isMeshPhongMaterial?(n(m,v),l(m,v)):v.isMeshStandardMaterial?(n(m,v),v.isMeshPhysicalMaterial?d(m,v,w):u(m,v)):v.isMeshMatcapMaterial?(n(m,v),f(m,v)):v.isMeshDepthMaterial?(n(m,v),p(m,v)):v.isMeshDistanceMaterial?(n(m,v),g(m,v)):v.isMeshNormalMaterial?(n(m,v),_(m,v)):v.isLineBasicMaterial?(i(m,v),v.isLineDashedMaterial&&s(m,v)):v.isPointsMaterial?a(m,v,y,x):v.isSpriteMaterial?o(m,v):v.isShadowMaterial?(m.color.value.copy(v.color),m.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function n(m,v){m.opacity.value=v.opacity,v.color&&m.diffuse.value.copy(v.color),v.emissive&&m.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(m.map.value=v.map),v.alphaMap&&(m.alphaMap.value=v.alphaMap),v.specularMap&&(m.specularMap.value=v.specularMap),v.alphaTest>0&&(m.alphaTest.value=v.alphaTest);const y=r.get(v).envMap;if(y){m.envMap.value=y,m.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=v.reflectivity,m.ior.value=v.ior,m.refractionRatio.value=v.refractionRatio;const E=r.get(y).__maxMipLevel;E!==void 0&&(m.maxMipLevel.value=E)}v.lightMap&&(m.lightMap.value=v.lightMap,m.lightMapIntensity.value=v.lightMapIntensity),v.aoMap&&(m.aoMap.value=v.aoMap,m.aoMapIntensity.value=v.aoMapIntensity);let x;v.map?x=v.map:v.specularMap?x=v.specularMap:v.displacementMap?x=v.displacementMap:v.normalMap?x=v.normalMap:v.bumpMap?x=v.bumpMap:v.roughnessMap?x=v.roughnessMap:v.metalnessMap?x=v.metalnessMap:v.alphaMap?x=v.alphaMap:v.emissiveMap?x=v.emissiveMap:v.clearcoatMap?x=v.clearcoatMap:v.clearcoatNormalMap?x=v.clearcoatNormalMap:v.clearcoatRoughnessMap?x=v.clearcoatRoughnessMap:v.specularIntensityMap?x=v.specularIntensityMap:v.specularColorMap?x=v.specularColorMap:v.transmissionMap?x=v.transmissionMap:v.thicknessMap?x=v.thicknessMap:v.sheenColorMap?x=v.sheenColorMap:v.sheenRoughnessMap&&(x=v.sheenRoughnessMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),m.uvTransform.value.copy(x.matrix));let w;v.aoMap?w=v.aoMap:v.lightMap&&(w=v.lightMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),m.uv2Transform.value.copy(w.matrix))}function i(m,v){m.diffuse.value.copy(v.color),m.opacity.value=v.opacity}function s(m,v){m.dashSize.value=v.dashSize,m.totalSize.value=v.dashSize+v.gapSize,m.scale.value=v.scale}function a(m,v,y,x){m.diffuse.value.copy(v.color),m.opacity.value=v.opacity,m.size.value=v.size*y,m.scale.value=x*.5,v.map&&(m.map.value=v.map),v.alphaMap&&(m.alphaMap.value=v.alphaMap),v.alphaTest>0&&(m.alphaTest.value=v.alphaTest);let w;v.map?w=v.map:v.alphaMap&&(w=v.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),m.uvTransform.value.copy(w.matrix))}function o(m,v){m.diffuse.value.copy(v.color),m.opacity.value=v.opacity,m.rotation.value=v.rotation,v.map&&(m.map.value=v.map),v.alphaMap&&(m.alphaMap.value=v.alphaMap),v.alphaTest>0&&(m.alphaTest.value=v.alphaTest);let y;v.map?y=v.map:v.alphaMap&&(y=v.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),m.uvTransform.value.copy(y.matrix))}function c(m,v){v.emissiveMap&&(m.emissiveMap.value=v.emissiveMap)}function l(m,v){m.specular.value.copy(v.specular),m.shininess.value=Math.max(v.shininess,1e-4),v.emissiveMap&&(m.emissiveMap.value=v.emissiveMap),v.bumpMap&&(m.bumpMap.value=v.bumpMap,m.bumpScale.value=v.bumpScale,v.side===An&&(m.bumpScale.value*=-1)),v.normalMap&&(m.normalMap.value=v.normalMap,m.normalScale.value.copy(v.normalScale),v.side===An&&m.normalScale.value.negate()),v.displacementMap&&(m.displacementMap.value=v.displacementMap,m.displacementScale.value=v.displacementScale,m.displacementBias.value=v.displacementBias)}function h(m,v){v.gradientMap&&(m.gradientMap.value=v.gradientMap),v.emissiveMap&&(m.emissiveMap.value=v.emissiveMap),v.bumpMap&&(m.bumpMap.value=v.bumpMap,m.bumpScale.value=v.bumpScale,v.side===An&&(m.bumpScale.value*=-1)),v.normalMap&&(m.normalMap.value=v.normalMap,m.normalScale.value.copy(v.normalScale),v.side===An&&m.normalScale.value.negate()),v.displacementMap&&(m.displacementMap.value=v.displacementMap,m.displacementScale.value=v.displacementScale,m.displacementBias.value=v.displacementBias)}function u(m,v){m.roughness.value=v.roughness,m.metalness.value=v.metalness,v.roughnessMap&&(m.roughnessMap.value=v.roughnessMap),v.metalnessMap&&(m.metalnessMap.value=v.metalnessMap),v.emissiveMap&&(m.emissiveMap.value=v.emissiveMap),v.bumpMap&&(m.bumpMap.value=v.bumpMap,m.bumpScale.value=v.bumpScale,v.side===An&&(m.bumpScale.value*=-1)),v.normalMap&&(m.normalMap.value=v.normalMap,m.normalScale.value.copy(v.normalScale),v.side===An&&m.normalScale.value.negate()),v.displacementMap&&(m.displacementMap.value=v.displacementMap,m.displacementScale.value=v.displacementScale,m.displacementBias.value=v.displacementBias),r.get(v).envMap&&(m.envMapIntensity.value=v.envMapIntensity)}function d(m,v,y){u(m,v),m.ior.value=v.ior,v.sheen>0&&(m.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),m.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(m.sheenColorMap.value=v.sheenColorMap),v.sheenRoughnessMap&&(m.sheenRoughnessMap.value=v.sheenRoughnessMap)),v.clearcoat>0&&(m.clearcoat.value=v.clearcoat,m.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(m.clearcoatMap.value=v.clearcoatMap),v.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap),v.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),m.clearcoatNormalMap.value=v.clearcoatNormalMap,v.side===An&&m.clearcoatNormalScale.value.negate())),v.transmission>0&&(m.transmission.value=v.transmission,m.transmissionSamplerMap.value=y.texture,m.transmissionSamplerSize.value.set(y.width,y.height),v.transmissionMap&&(m.transmissionMap.value=v.transmissionMap),m.thickness.value=v.thickness,v.thicknessMap&&(m.thicknessMap.value=v.thicknessMap),m.attenuationDistance.value=v.attenuationDistance,m.attenuationColor.value.copy(v.attenuationColor)),m.specularIntensity.value=v.specularIntensity,m.specularColor.value.copy(v.specularColor),v.specularIntensityMap&&(m.specularIntensityMap.value=v.specularIntensityMap),v.specularColorMap&&(m.specularColorMap.value=v.specularColorMap)}function f(m,v){v.matcap&&(m.matcap.value=v.matcap),v.bumpMap&&(m.bumpMap.value=v.bumpMap,m.bumpScale.value=v.bumpScale,v.side===An&&(m.bumpScale.value*=-1)),v.normalMap&&(m.normalMap.value=v.normalMap,m.normalScale.value.copy(v.normalScale),v.side===An&&m.normalScale.value.negate()),v.displacementMap&&(m.displacementMap.value=v.displacementMap,m.displacementScale.value=v.displacementScale,m.displacementBias.value=v.displacementBias)}function p(m,v){v.displacementMap&&(m.displacementMap.value=v.displacementMap,m.displacementScale.value=v.displacementScale,m.displacementBias.value=v.displacementBias)}function g(m,v){v.displacementMap&&(m.displacementMap.value=v.displacementMap,m.displacementScale.value=v.displacementScale,m.displacementBias.value=v.displacementBias),m.referencePosition.value.copy(v.referencePosition),m.nearDistance.value=v.nearDistance,m.farDistance.value=v.farDistance}function _(m,v){v.bumpMap&&(m.bumpMap.value=v.bumpMap,m.bumpScale.value=v.bumpScale,v.side===An&&(m.bumpScale.value*=-1)),v.normalMap&&(m.normalMap.value=v.normalMap,m.normalScale.value.copy(v.normalScale),v.side===An&&m.normalScale.value.negate()),v.displacementMap&&(m.displacementMap.value=v.displacementMap,m.displacementScale.value=v.displacementScale,m.displacementBias.value=v.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function iN(){const r=Ju("canvas");return r.style.display="block",r}function Kt(r={}){const e=r.canvas!==void 0?r.canvas:iN(),t=r.context!==void 0?r.context:null,n=r.alpha!==void 0?r.alpha:!1,i=r.depth!==void 0?r.depth:!0,s=r.stencil!==void 0?r.stencil:!0,a=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,c=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,l=r.powerPreference!==void 0?r.powerPreference:"default",h=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u=null,d=null;const f=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Jn,this.physicallyCorrectLights=!1,this.toneMapping=da,this.toneMappingExposure=1;const g=this;let _=!1,m=0,v=0,y=null,x=-1,w=null;const E=new Ht,M=new Ht;let A=null,T=e.width,S=e.height,b=1,U=null,L=null;const N=new Ht(0,0,T,S),k=new Ht(0,0,T,S);let B=!1;const z=[],H=new ed;let ee=!1,de=!1,ce=null;const Ce=new et,me=new D,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function pe(){return y===null?b:1}let Z=t;function ye($,re){for(let be=0;be<$.length;be++){const ge=$[be],Se=e.getContext(ge,re);if(Se!==null)return Se}return null}try{const $={alpha:n,depth:i,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(e.addEventListener("webglcontextlost",Qe,!1),e.addEventListener("webglcontextrestored",nt,!1),Z===null){const re=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&re.shift(),Z=ye(re,$),Z===null)throw ye(re)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Z.getShaderPrecisionFormat===void 0&&(Z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch($){throw console.error("THREE.WebGLRenderer: "+$.message),$}let Pe,Ie,Te,Je,fe,xe,F,Ye,Ee,O,P,se,he,R,C,q,Q,oe,K,G,le,J,Oe;function ae(){Pe=new E3(Z),Ie=new v3(Z,Pe,r),Pe.init(Ie),J=new QF(Z,Pe,Ie),Te=new KF(Z,Pe,Ie),z[0]=1029,Je=new R3,fe=new kF,xe=new JF(Z,Pe,Te,fe,Ie,J,Je),F=new y3(g),Ye=new T3(g),Ee=new VI(Z,Ie),Oe=new g3(Z,Pe,Ee,Ie),O=new C3(Z,Ee,Je,Oe),P=new D3(Z,O,Ee,Je),K=new L3(Z,Ie,xe),q=new x3(fe),se=new $F(g,F,Ye,Pe,Ie,Oe,q),he=new nN(fe),R=new VF(fe),C=new XF(Pe,Ie),oe=new m3(g,F,Te,P,o),Q=new Xb(g,P,Ie),G=new _3(Z,Pe,Je,Ie),le=new A3(Z,Pe,Je,Ie),Je.programs=se.programs,g.capabilities=Ie,g.extensions=Pe,g.properties=fe,g.renderLists=R,g.shadowMap=Q,g.state=Te,g.info=Je}ae();const Ae=new tN(g,Z);this.xr=Ae,this.getContext=function(){return Z},this.getContextAttributes=function(){return Z.getContextAttributes()},this.forceContextLoss=function(){const $=Pe.get("WEBGL_lose_context");$&&$.loseContext()},this.forceContextRestore=function(){const $=Pe.get("WEBGL_lose_context");$&&$.restoreContext()},this.getPixelRatio=function(){return b},this.setPixelRatio=function($){$!==void 0&&(b=$,this.setSize(T,S,!1))},this.getSize=function($){return $.set(T,S)},this.setSize=function($,re,be){if(Ae.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}T=$,S=re,e.width=Math.floor($*b),e.height=Math.floor(re*b),be!==!1&&(e.style.width=$+"px",e.style.height=re+"px"),this.setViewport(0,0,$,re)},this.getDrawingBufferSize=function($){return $.set(T*b,S*b).floor()},this.setDrawingBufferSize=function($,re,be){T=$,S=re,b=be,e.width=Math.floor($*be),e.height=Math.floor(re*be),this.setViewport(0,0,$,re)},this.getCurrentViewport=function($){return $.copy(E)},this.getViewport=function($){return $.copy(N)},this.setViewport=function($,re,be,ge){$.isVector4?N.set($.x,$.y,$.z,$.w):N.set($,re,be,ge),Te.viewport(E.copy(N).multiplyScalar(b).floor())},this.getScissor=function($){return $.copy(k)},this.setScissor=function($,re,be,ge){$.isVector4?k.set($.x,$.y,$.z,$.w):k.set($,re,be,ge),Te.scissor(M.copy(k).multiplyScalar(b).floor())},this.getScissorTest=function(){return B},this.setScissorTest=function($){Te.setScissorTest(B=$)},this.setOpaqueSort=function($){U=$},this.setTransparentSort=function($){L=$},this.getClearColor=function($){return $.copy(oe.getClearColor())},this.setClearColor=function(){oe.setClearColor.apply(oe,arguments)},this.getClearAlpha=function(){return oe.getClearAlpha()},this.setClearAlpha=function(){oe.setClearAlpha.apply(oe,arguments)},this.clear=function($,re,be){let ge=0;($===void 0||$)&&(ge|=16384),(re===void 0||re)&&(ge|=256),(be===void 0||be)&&(ge|=1024),Z.clear(ge)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Qe,!1),e.removeEventListener("webglcontextrestored",nt,!1),R.dispose(),C.dispose(),fe.dispose(),F.dispose(),Ye.dispose(),P.dispose(),Oe.dispose(),Ae.dispose(),Ae.removeEventListener("sessionstart",Ge),Ae.removeEventListener("sessionend",_e),ce&&(ce.dispose(),ce=null),Me.stop()};function Qe($){$.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function nt(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const $=Je.autoReset,re=Q.enabled,be=Q.autoUpdate,ge=Q.needsUpdate,Se=Q.type;ae(),Je.autoReset=$,Q.enabled=re,Q.autoUpdate=be,Q.needsUpdate=ge,Q.type=Se}function qe($){const re=$.target;re.removeEventListener("dispose",qe),ot(re)}function ot($){ft($),fe.remove($)}function ft($){const re=fe.get($).programs;re!==void 0&&re.forEach(function(be){se.releaseProgram(be)})}this.renderBufferDirect=function($,re,be,ge,Se,pt){re===null&&(re=j);const lt=Se.isMesh&&Se.matrixWorld.determinant()<0,ht=Yi($,re,be,ge,Se);Te.setMaterial(ge,lt);let yt=be.index;const zt=be.attributes.position;if(yt===null){if(zt===void 0||zt.count===0)return}else if(yt.count===0)return;let Tt=1;ge.wireframe===!0&&(yt=O.getWireframeAttribute(be),Tt=2),Oe.setup(Se,ge,ht,be,yt);let Lt,hn=G;yt!==null&&(Lt=Ee.get(yt),hn=le,hn.setIndex(Lt));const Cr=yt!==null?yt.count:zt.count,Nt=be.drawRange.start*Tt,I=be.drawRange.count*Tt,W=pt!==null?pt.start*Tt:0,ne=pt!==null?pt.count*Tt:1/0,ie=Math.max(Nt,W),Y=Math.min(Cr,Nt+I,W+ne)-1,Re=Math.max(0,Y-ie+1);if(Re!==0){if(Se.isMesh)ge.wireframe===!0?(Te.setLineWidth(ge.wireframeLinewidth*pe()),hn.setMode(1)):hn.setMode(4);else if(Se.isLine){let Le=ge.linewidth;Le===void 0&&(Le=1),Te.setLineWidth(Le*pe()),Se.isLineSegments?hn.setMode(1):Se.isLineLoop?hn.setMode(2):hn.setMode(3)}else Se.isPoints?hn.setMode(0):Se.isSprite&&hn.setMode(4);if(Se.isInstancedMesh)hn.renderInstances(ie,Re,Se.count);else if(be.isInstancedBufferGeometry){const Le=Math.min(be.instanceCount,be._maxInstanceCount);hn.renderInstances(ie,Re,Le)}else hn.render(ie,Re)}},this.compile=function($,re){d=C.get($),d.init(),p.push(d),$.traverseVisible(function(be){be.isLight&&be.layers.test(re.layers)&&(d.pushLight(be),be.castShadow&&d.pushShadow(be))}),d.setupLights(g.physicallyCorrectLights),$.traverse(function(be){const ge=be.material;if(ge)if(Array.isArray(ge))for(let Se=0;Se<ge.length;Se++){const pt=ge[Se];Ft(pt,$,be)}else Ft(ge,$,be)}),p.pop(),d=null};let St=null;function X($){St&&St($)}function Ge(){Me.stop()}function _e(){Me.start()}const Me=new Nb;Me.setAnimationLoop(X),typeof window<"u"&&Me.setContext(window),this.setAnimationLoop=function($){St=$,Ae.setAnimationLoop($),$===null?Me.stop():Me.start()},Ae.addEventListener("sessionstart",Ge),Ae.addEventListener("sessionend",_e),this.render=function($,re){if(re!==void 0&&re.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(_===!0)return;$.autoUpdate===!0&&$.updateMatrixWorld(),re.parent===null&&re.updateMatrixWorld(),Ae.enabled===!0&&Ae.isPresenting===!0&&(Ae.cameraAutoUpdate===!0&&Ae.updateCamera(re),re=Ae.getCamera()),$.isScene===!0&&$.onBeforeRender(g,$,re,y),d=C.get($,p.length),d.init(),p.push(d),Ce.multiplyMatrices(re.projectionMatrix,re.matrixWorldInverse),H.setFromProjectionMatrix(Ce),de=this.localClippingEnabled,ee=q.init(this.clippingPlanes,de,re),u=R.get($,f.length),u.init(),f.push(u),je($,re,0,g.sortObjects),u.finish(),g.sortObjects===!0&&u.sort(U,L),ee===!0&&q.beginShadows();const be=d.state.shadowsArray;if(Q.render(be,$,re),ee===!0&&q.endShadows(),this.info.autoReset===!0&&this.info.reset(),oe.render(u,$),d.setupLights(g.physicallyCorrectLights),re.isArrayCamera){const ge=re.cameras;for(let Se=0,pt=ge.length;Se<pt;Se++){const lt=ge[Se];We(u,$,lt,lt.viewport)}}else We(u,$,re);y!==null&&(xe.updateMultisampleRenderTarget(y),xe.updateRenderTargetMipmap(y)),$.isScene===!0&&$.onAfterRender(g,$,re),Te.buffers.depth.setTest(!0),Te.buffers.depth.setMask(!0),Te.buffers.color.setMask(!0),Te.setPolygonOffset(!1),Oe.resetDefaultState(),x=-1,w=null,p.pop(),p.length>0?d=p[p.length-1]:d=null,f.pop(),f.length>0?u=f[f.length-1]:u=null};function je($,re,be,ge){if($.visible===!1)return;if($.layers.test(re.layers)){if($.isGroup)be=$.renderOrder;else if($.isLOD)$.autoUpdate===!0&&$.update(re);else if($.isLight)d.pushLight($),$.castShadow&&d.pushShadow($);else if($.isSprite){if(!$.frustumCulled||H.intersectsSprite($)){ge&&me.setFromMatrixPosition($.matrixWorld).applyMatrix4(Ce);const lt=P.update($),ht=$.material;ht.visible&&u.push($,lt,ht,be,me.z,null)}}else if(($.isMesh||$.isLine||$.isPoints)&&($.isSkinnedMesh&&$.skeleton.frame!==Je.render.frame&&($.skeleton.update(),$.skeleton.frame=Je.render.frame),!$.frustumCulled||H.intersectsObject($))){ge&&me.setFromMatrixPosition($.matrixWorld).applyMatrix4(Ce);const lt=P.update($),ht=$.material;if(Array.isArray(ht)){const yt=lt.groups;for(let zt=0,Tt=yt.length;zt<Tt;zt++){const Lt=yt[zt],hn=ht[Lt.materialIndex];hn&&hn.visible&&u.push($,lt,hn,be,me.z,Lt)}}else ht.visible&&u.push($,lt,ht,be,me.z,null)}}const pt=$.children;for(let lt=0,ht=pt.length;lt<ht;lt++)je(pt[lt],re,be,ge)}function We($,re,be,ge){const Se=$.opaque,pt=$.transmissive,lt=$.transparent;d.setupLightsView(be),pt.length>0&&_t(Se,re,be),ge&&Te.viewport(E.copy(ge)),Se.length>0&&en(Se,re,be),pt.length>0&&en(pt,re,be),lt.length>0&&en(lt,re,be)}function _t($,re,be){if(ce===null){const lt=a===!0&&Ie.isWebGL2===!0?Rb:cr;ce=new lt(1024,1024,{generateMipmaps:!0,type:J.convert(wo)!==null?wo:ks,minFilter:Ku,magFilter:Rn,wrapS:Ai,wrapT:Ai})}const ge=g.getRenderTarget();g.setRenderTarget(ce),g.clear();const Se=g.toneMapping;g.toneMapping=da,en($,re,be),g.toneMapping=Se,xe.updateMultisampleRenderTarget(ce),xe.updateRenderTargetMipmap(ce),g.setRenderTarget(ge)}function en($,re,be){const ge=re.isScene===!0?re.overrideMaterial:null;for(let Se=0,pt=$.length;Se<pt;Se++){const lt=$[Se],ht=lt.object,yt=lt.geometry,zt=ge===null?lt.material:ge,Tt=lt.group;ht.layers.test(be.layers)&&Fn(ht,re,be,yt,zt,Tt)}}function Fn($,re,be,ge,Se,pt){$.onBeforeRender(g,re,be,ge,Se,pt),$.modelViewMatrix.multiplyMatrices(be.matrixWorldInverse,$.matrixWorld),$.normalMatrix.getNormalMatrix($.modelViewMatrix),Se.onBeforeRender(g,re,be,ge,$,pt),Se.transparent===!0&&Se.side===si?(Se.side=An,Se.needsUpdate=!0,g.renderBufferDirect(be,re,ge,Se,$,pt),Se.side=Fo,Se.needsUpdate=!0,g.renderBufferDirect(be,re,ge,Se,$,pt),Se.side=si):g.renderBufferDirect(be,re,ge,Se,$,pt),$.onAfterRender(g,re,be,ge,Se,pt)}function Ft($,re,be){re.isScene!==!0&&(re=j);const ge=fe.get($),Se=d.state.lights,pt=d.state.shadowsArray,lt=Se.state.version,ht=se.getParameters($,Se.state,pt,re,be),yt=se.getProgramCacheKey(ht);let zt=ge.programs;ge.environment=$.isMeshStandardMaterial?re.environment:null,ge.fog=re.fog,ge.envMap=($.isMeshStandardMaterial?Ye:F).get($.envMap||ge.environment),zt===void 0&&($.addEventListener("dispose",qe),zt=new Map,ge.programs=zt);let Tt=zt.get(yt);if(Tt!==void 0){if(ge.currentProgram===Tt&&ge.lightsStateVersion===lt)return fi($,ht),Tt}else ht.uniforms=se.getUniforms($),$.onBuild(be,ht,g),$.onBeforeCompile(ht,g),Tt=se.acquireProgram(ht,yt),zt.set(yt,Tt),ge.uniforms=ht.uniforms;const Lt=ge.uniforms;(!$.isShaderMaterial&&!$.isRawShaderMaterial||$.clipping===!0)&&(Lt.clippingPlanes=q.uniform),fi($,ht),ge.needsLights=Il($),ge.lightsStateVersion=lt,ge.needsLights&&(Lt.ambientLightColor.value=Se.state.ambient,Lt.lightProbe.value=Se.state.probe,Lt.directionalLights.value=Se.state.directional,Lt.directionalLightShadows.value=Se.state.directionalShadow,Lt.spotLights.value=Se.state.spot,Lt.spotLightShadows.value=Se.state.spotShadow,Lt.rectAreaLights.value=Se.state.rectArea,Lt.ltc_1.value=Se.state.rectAreaLTC1,Lt.ltc_2.value=Se.state.rectAreaLTC2,Lt.pointLights.value=Se.state.point,Lt.pointLightShadows.value=Se.state.pointShadow,Lt.hemisphereLights.value=Se.state.hemi,Lt.directionalShadowMap.value=Se.state.directionalShadowMap,Lt.directionalShadowMatrix.value=Se.state.directionalShadowMatrix,Lt.spotShadowMap.value=Se.state.spotShadowMap,Lt.spotShadowMatrix.value=Se.state.spotShadowMatrix,Lt.pointShadowMap.value=Se.state.pointShadowMap,Lt.pointShadowMatrix.value=Se.state.pointShadowMatrix);const hn=Tt.getUniforms(),Cr=Fs.seqWithValue(hn.seq,Lt);return ge.currentProgram=Tt,ge.uniformsList=Cr,Tt}function fi($,re){const be=fe.get($);be.outputEncoding=re.outputEncoding,be.instancing=re.instancing,be.skinning=re.skinning,be.morphTargets=re.morphTargets,be.morphNormals=re.morphNormals,be.morphTargetsCount=re.morphTargetsCount,be.numClippingPlanes=re.numClippingPlanes,be.numIntersection=re.numClipIntersection,be.vertexAlphas=re.vertexAlphas,be.vertexTangents=re.vertexTangents}function Yi($,re,be,ge,Se){re.isScene!==!0&&(re=j),xe.resetTextureUnits();const pt=re.fog,lt=ge.isMeshStandardMaterial?re.environment:null,ht=y===null?g.outputEncoding:y.texture.encoding,yt=(ge.isMeshStandardMaterial?Ye:F).get(ge.envMap||lt),zt=ge.vertexColors===!0&&!!be.attributes.color&&be.attributes.color.itemSize===4,Tt=!!ge.normalMap&&!!be.attributes.tangent,Lt=!!be.morphAttributes.position,hn=!!be.morphAttributes.normal,Cr=be.morphAttributes.position?be.morphAttributes.position.length:0,Nt=fe.get(ge),I=d.state.lights;if(ee===!0&&(de===!0||$!==w)){const $e=$===w&&ge.id===x;q.setState(ge,$,$e)}let W=!1;ge.version===Nt.__version?(Nt.needsLights&&Nt.lightsStateVersion!==I.state.version||Nt.outputEncoding!==ht||Se.isInstancedMesh&&Nt.instancing===!1||!Se.isInstancedMesh&&Nt.instancing===!0||Se.isSkinnedMesh&&Nt.skinning===!1||!Se.isSkinnedMesh&&Nt.skinning===!0||Nt.envMap!==yt||ge.fog&&Nt.fog!==pt||Nt.numClippingPlanes!==void 0&&(Nt.numClippingPlanes!==q.numPlanes||Nt.numIntersection!==q.numIntersection)||Nt.vertexAlphas!==zt||Nt.vertexTangents!==Tt||Nt.morphTargets!==Lt||Nt.morphNormals!==hn||Ie.isWebGL2===!0&&Nt.morphTargetsCount!==Cr)&&(W=!0):(W=!0,Nt.__version=ge.version);let ne=Nt.currentProgram;W===!0&&(ne=Ft(ge,re,Se));let ie=!1,Y=!1,Re=!1;const Le=ne.getUniforms(),Xe=Nt.uniforms;if(Te.useProgram(ne.program)&&(ie=!0,Y=!0,Re=!0),ge.id!==x&&(x=ge.id,Y=!0),ie||w!==$){if(Le.setValue(Z,"projectionMatrix",$.projectionMatrix),Ie.logarithmicDepthBuffer&&Le.setValue(Z,"logDepthBufFC",2/(Math.log($.far+1)/Math.LN2)),w!==$&&(w=$,Y=!0,Re=!0),ge.isShaderMaterial||ge.isMeshPhongMaterial||ge.isMeshToonMaterial||ge.isMeshStandardMaterial||ge.envMap){const $e=Le.map.cameraPosition;$e!==void 0&&$e.setValue(Z,me.setFromMatrixPosition($.matrixWorld))}(ge.isMeshPhongMaterial||ge.isMeshToonMaterial||ge.isMeshLambertMaterial||ge.isMeshBasicMaterial||ge.isMeshStandardMaterial||ge.isShaderMaterial)&&Le.setValue(Z,"isOrthographic",$.isOrthographicCamera===!0),(ge.isMeshPhongMaterial||ge.isMeshToonMaterial||ge.isMeshLambertMaterial||ge.isMeshBasicMaterial||ge.isMeshStandardMaterial||ge.isShaderMaterial||ge.isShadowMaterial||Se.isSkinnedMesh)&&Le.setValue(Z,"viewMatrix",$.matrixWorldInverse)}if(Se.isSkinnedMesh){Le.setOptional(Z,Se,"bindMatrix"),Le.setOptional(Z,Se,"bindMatrixInverse");const $e=Se.skeleton;$e&&(Ie.floatVertexTextures?($e.boneTexture===null&&$e.computeBoneTexture(),Le.setValue(Z,"boneTexture",$e.boneTexture,xe),Le.setValue(Z,"boneTextureSize",$e.boneTextureSize)):Le.setOptional(Z,$e,"boneMatrices"))}return be&&(be.morphAttributes.position!==void 0||be.morphAttributes.normal!==void 0)&&K.update(Se,be,ge,ne),(Y||Nt.receiveShadow!==Se.receiveShadow)&&(Nt.receiveShadow=Se.receiveShadow,Le.setValue(Z,"receiveShadow",Se.receiveShadow)),Y&&(Le.setValue(Z,"toneMappingExposure",g.toneMappingExposure),Nt.needsLights&&Pl(Xe,Re),pt&&ge.fog&&he.refreshFogUniforms(Xe,pt),he.refreshMaterialUniforms(Xe,ge,b,S,ce),Fs.upload(Z,Nt.uniformsList,Xe,xe)),ge.isShaderMaterial&&ge.uniformsNeedUpdate===!0&&(Fs.upload(Z,Nt.uniformsList,Xe,xe),ge.uniformsNeedUpdate=!1),ge.isSpriteMaterial&&Le.setValue(Z,"center",Se.center),Le.setValue(Z,"modelViewMatrix",Se.modelViewMatrix),Le.setValue(Z,"normalMatrix",Se.normalMatrix),Le.setValue(Z,"modelMatrix",Se.matrixWorld),ne}function Pl($,re){$.ambientLightColor.needsUpdate=re,$.lightProbe.needsUpdate=re,$.directionalLights.needsUpdate=re,$.directionalLightShadows.needsUpdate=re,$.pointLights.needsUpdate=re,$.pointLightShadows.needsUpdate=re,$.spotLights.needsUpdate=re,$.spotLightShadows.needsUpdate=re,$.rectAreaLights.needsUpdate=re,$.hemisphereLights.needsUpdate=re}function Il($){return $.isMeshLambertMaterial||$.isMeshToonMaterial||$.isMeshPhongMaterial||$.isMeshStandardMaterial||$.isShadowMaterial||$.isShaderMaterial&&$.lights===!0}this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return y},this.setRenderTarget=function($,re=0,be=0){y=$,m=re,v=be,$&&fe.get($).__webglFramebuffer===void 0&&xe.setupRenderTarget($);let ge=null,Se=!1,pt=!1;if($){const ht=$.texture;(ht.isDataTexture3D||ht.isDataTexture2DArray)&&(pt=!0);const yt=fe.get($).__webglFramebuffer;$.isWebGLCubeRenderTarget?(ge=yt[re],Se=!0):$.isWebGLMultisampleRenderTarget?ge=fe.get($).__webglMultisampledFramebuffer:ge=yt,E.copy($.viewport),M.copy($.scissor),A=$.scissorTest}else E.copy(N).multiplyScalar(b).floor(),M.copy(k).multiplyScalar(b).floor(),A=B;if(Te.bindFramebuffer(36160,ge)&&Ie.drawBuffers){let ht=!1;if($)if($.isWebGLMultipleRenderTargets){const yt=$.texture;if(z.length!==yt.length||z[0]!==36064){for(let zt=0,Tt=yt.length;zt<Tt;zt++)z[zt]=36064+zt;z.length=yt.length,ht=!0}}else(z.length!==1||z[0]!==36064)&&(z[0]=36064,z.length=1,ht=!0);else(z.length!==1||z[0]!==1029)&&(z[0]=1029,z.length=1,ht=!0);ht&&(Ie.isWebGL2?Z.drawBuffers(z):Pe.get("WEBGL_draw_buffers").drawBuffersWEBGL(z))}if(Te.viewport(E),Te.scissor(M),Te.setScissorTest(A),Se){const ht=fe.get($.texture);Z.framebufferTexture2D(36160,36064,34069+re,ht.__webglTexture,be)}else if(pt){const ht=fe.get($.texture),yt=re||0;Z.framebufferTextureLayer(36160,36064,ht.__webglTexture,be||0,yt)}x=-1},this.readRenderTargetPixels=function($,re,be,ge,Se,pt,lt){if(!($&&$.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ht=fe.get($).__webglFramebuffer;if($.isWebGLCubeRenderTarget&&lt!==void 0&&(ht=ht[lt]),ht){Te.bindFramebuffer(36160,ht);try{const yt=$.texture,zt=yt.format,Tt=yt.type;if(zt!==ui&&J.convert(zt)!==Z.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Lt=Tt===wo&&(Pe.has("EXT_color_buffer_half_float")||Ie.isWebGL2&&Pe.has("EXT_color_buffer_float"));if(Tt!==ks&&J.convert(Tt)!==Z.getParameter(35738)&&!(Tt===Cs&&(Ie.isWebGL2||Pe.has("OES_texture_float")||Pe.has("WEBGL_color_buffer_float")))&&!Lt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z.checkFramebufferStatus(36160)===36053?re>=0&&re<=$.width-ge&&be>=0&&be<=$.height-Se&&Z.readPixels(re,be,ge,Se,J.convert(zt),J.convert(Tt),pt):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const yt=y!==null?fe.get(y).__webglFramebuffer:null;Te.bindFramebuffer(36160,yt)}}},this.copyFramebufferToTexture=function($,re,be=0){const ge=Math.pow(2,-be),Se=Math.floor(re.image.width*ge),pt=Math.floor(re.image.height*ge);let lt=J.convert(re.format);Ie.isWebGL2&&(lt===6407&&(lt=32849),lt===6408&&(lt=32856)),xe.setTexture2D(re,0),Z.copyTexImage2D(3553,be,lt,$.x,$.y,Se,pt,0),Te.unbindTexture()},this.copyTextureToTexture=function($,re,be,ge=0){const Se=re.image.width,pt=re.image.height,lt=J.convert(be.format),ht=J.convert(be.type);xe.setTexture2D(be,0),Z.pixelStorei(37440,be.flipY),Z.pixelStorei(37441,be.premultiplyAlpha),Z.pixelStorei(3317,be.unpackAlignment),re.isDataTexture?Z.texSubImage2D(3553,ge,$.x,$.y,Se,pt,lt,ht,re.image.data):re.isCompressedTexture?Z.compressedTexSubImage2D(3553,ge,$.x,$.y,re.mipmaps[0].width,re.mipmaps[0].height,lt,re.mipmaps[0].data):Z.texSubImage2D(3553,ge,$.x,$.y,lt,ht,re.image),ge===0&&be.generateMipmaps&&Z.generateMipmap(3553),Te.unbindTexture()},this.copyTextureToTexture3D=function($,re,be,ge,Se=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const pt=$.max.x-$.min.x+1,lt=$.max.y-$.min.y+1,ht=$.max.z-$.min.z+1,yt=J.convert(ge.format),zt=J.convert(ge.type);let Tt;if(ge.isDataTexture3D)xe.setTexture3D(ge,0),Tt=32879;else if(ge.isDataTexture2DArray)xe.setTexture2DArray(ge,0),Tt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Z.pixelStorei(37440,ge.flipY),Z.pixelStorei(37441,ge.premultiplyAlpha),Z.pixelStorei(3317,ge.unpackAlignment);const Lt=Z.getParameter(3314),hn=Z.getParameter(32878),Cr=Z.getParameter(3316),Nt=Z.getParameter(3315),I=Z.getParameter(32877),W=be.isCompressedTexture?be.mipmaps[0]:be.image;Z.pixelStorei(3314,W.width),Z.pixelStorei(32878,W.height),Z.pixelStorei(3316,$.min.x),Z.pixelStorei(3315,$.min.y),Z.pixelStorei(32877,$.min.z),be.isDataTexture||be.isDataTexture3D?Z.texSubImage3D(Tt,Se,re.x,re.y,re.z,pt,lt,ht,yt,zt,W.data):be.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Z.compressedTexSubImage3D(Tt,Se,re.x,re.y,re.z,pt,lt,ht,yt,W.data)):Z.texSubImage3D(Tt,Se,re.x,re.y,re.z,pt,lt,ht,yt,zt,W),Z.pixelStorei(3314,Lt),Z.pixelStorei(32878,hn),Z.pixelStorei(3316,Cr),Z.pixelStorei(3315,Nt),Z.pixelStorei(32877,I),Se===0&&ge.generateMipmaps&&Z.generateMipmap(Tt),Te.unbindTexture()},this.initTexture=function($){xe.setTexture2D($,0),Te.unbindTexture()},this.resetState=function(){m=0,v=0,y=null,Te.reset(),Oe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Kt.prototype.isWebGLRenderer=!0;class rN extends Kt{}rN.prototype.isWebGL1Renderer=!0;class Zr extends Dt{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}Zr.prototype.isScene=!0;class Ml{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=jc,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=or()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=or()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=or()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Ml.prototype.isInterleavedBuffer=!0;const yn=new D;class Yc{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)yn.x=this.getX(t),yn.y=this.getY(t),yn.z=this.getZ(t),yn.applyMatrix4(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)yn.x=this.getX(t),yn.y=this.getY(t),yn.z=this.getZ(t),yn.applyNormalMatrix(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)yn.x=this.getX(t),yn.y=this.getY(t),yn.z=this.getZ(t),yn.transformDirection(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Ct(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Yc(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Yc.prototype.isInterleavedBufferAttribute=!0;class rg extends ti{constructor(e){super(),this.type="SpriteMaterial",this.color=new st(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}rg.prototype.isSpriteMaterial=!0;let to;const fc=new D,no=new D,io=new D,ro=new Ne,pc=new Ne,Zb=new et,wh=new D,mc=new D,Th=new D,Jv=new Ne,If=new Ne,Qv=new Ne;class Kb extends Dt{constructor(e){if(super(),this.type="Sprite",to===void 0){to=new kt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Ml(t,5);to.setIndex([0,1,2,0,2,3]),to.setAttribute("position",new Yc(n,3,0,!1)),to.setAttribute("uv",new Yc(n,2,3,!1))}this.geometry=to,this.material=e!==void 0?e:new rg,this.center=new Ne(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),no.setFromMatrixScale(this.matrixWorld),Zb.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),io.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&no.multiplyScalar(-io.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const a=this.center;Eh(wh.set(-.5,-.5,0),io,a,no,i,s),Eh(mc.set(.5,-.5,0),io,a,no,i,s),Eh(Th.set(.5,.5,0),io,a,no,i,s),Jv.set(0,0),If.set(1,0),Qv.set(1,1);let o=e.ray.intersectTriangle(wh,mc,Th,!1,fc);if(o===null&&(Eh(mc.set(-.5,.5,0),io,a,no,i,s),If.set(0,1),o=e.ray.intersectTriangle(wh,Th,mc,!1,fc),o===null))return;const c=e.ray.origin.distanceTo(fc);c<e.near||c>e.far||t.push({distance:c,point:fc.clone(),uv:Pn.getUV(fc,wh,mc,Th,Jv,If,Qv,new Ne),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}Kb.prototype.isSprite=!0;function Eh(r,e,t,n,i,s){ro.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(pc.x=s*ro.x-i*ro.y,pc.y=i*ro.x+s*ro.y):pc.copy(ro),r.copy(e),r.x+=pc.x,r.y+=pc.y,r.applyMatrix4(Zb)}const e0=new D,t0=new Ht,n0=new Ht,sN=new D,i0=new et;class Jb extends sn{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new et,this.bindMatrixInverse=new et}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ht,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;t0.fromBufferAttribute(i.attributes.skinIndex,e),n0.fromBufferAttribute(i.attributes.skinWeight,e),e0.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=n0.getComponent(s);if(a!==0){const o=t0.getComponent(s);i0.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(sN.copy(e0).applyMatrix4(i0),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}Jb.prototype.isSkinnedMesh=!0;class aN extends Dt{constructor(){super(),this.type="Bone"}}aN.prototype.isBone=!0;class oN extends Cn{constructor(e=null,t=1,n=1,i,s,a,o,c,l=Rn,h=Rn,u,d){super(null,a,o,c,l,h,i,s,u,d),this.image={data:e,width:t,height:n},this.magFilter=l,this.minFilter=h,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}oN.prototype.isDataTexture=!0;class im extends Ct{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}im.prototype.isInstancedBufferAttribute=!0;const r0=new et,s0=new et,Ch=[],gc=new sn;class cN extends sn{constructor(e,t,n){super(e,t),this.instanceMatrix=new im(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(gc.geometry=this.geometry,gc.material=this.material,gc.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,r0),s0.multiplyMatrices(n,r0),gc.matrixWorld=s0,gc.raycast(e,Ch);for(let a=0,o=Ch.length;a<o;a++){const c=Ch[a];c.instanceId=s,c.object=this,t.push(c)}Ch.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new im(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}cN.prototype.isInstancedMesh=!0;class as extends ti{constructor(e){super(),this.type="LineBasicMaterial",this.color=new st(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}as.prototype.isLineBasicMaterial=!0;const a0=new D,o0=new D,c0=new et,Lf=new ba,Ah=new Xo;class Sa extends Dt{constructor(e=new kt,t=new as){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)a0.fromBufferAttribute(t,i-1),o0.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=a0.distanceTo(o0);e.setAttribute("lineDistance",new Mn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ah.copy(n.boundingSphere),Ah.applyMatrix4(i),Ah.radius+=s,e.ray.intersectsSphere(Ah)===!1)return;c0.copy(i).invert(),Lf.copy(e.ray).applyMatrix4(c0);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=new D,h=new D,u=new D,d=new D,f=this.isLineSegments?2:1;if(n.isBufferGeometry){const p=n.index,_=n.attributes.position;if(p!==null){const m=Math.max(0,a.start),v=Math.min(p.count,a.start+a.count);for(let y=m,x=v-1;y<x;y+=f){const w=p.getX(y),E=p.getX(y+1);if(l.fromBufferAttribute(_,w),h.fromBufferAttribute(_,E),Lf.distanceSqToSegment(l,h,d,u)>c)continue;d.applyMatrix4(this.matrixWorld);const A=e.ray.origin.distanceTo(d);A<e.near||A>e.far||t.push({distance:A,point:u.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const m=Math.max(0,a.start),v=Math.min(_.count,a.start+a.count);for(let y=m,x=v-1;y<x;y+=f){if(l.fromBufferAttribute(_,y),h.fromBufferAttribute(_,y+1),Lf.distanceSqToSegment(l,h,d,u)>c)continue;d.applyMatrix4(this.matrixWorld);const E=e.ray.origin.distanceTo(d);E<e.near||E>e.far||t.push({distance:E,point:u.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Sa.prototype.isLine=!0;const l0=new D,h0=new D;class rd extends Sa{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)l0.fromBufferAttribute(t,i),h0.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+l0.distanceTo(h0);e.setAttribute("lineDistance",new Mn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}rd.prototype.isLineSegments=!0;class lN extends Sa{constructor(e,t){super(e,t),this.type="LineLoop"}}lN.prototype.isLineLoop=!0;class Qb extends ti{constructor(e){super(),this.type="PointsMaterial",this.color=new st(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}Qb.prototype.isPointsMaterial=!0;const u0=new et,rm=new ba,Rh=new Xo,Ph=new D;class eM extends Dt{constructor(e=new kt,t=new Qb){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Rh.copy(n.boundingSphere),Rh.applyMatrix4(i),Rh.radius+=s,e.ray.intersectsSphere(Rh)===!1)return;u0.copy(i).invert(),rm.copy(e.ray).applyMatrix4(u0);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o;if(n.isBufferGeometry){const l=n.index,u=n.attributes.position;if(l!==null){const d=Math.max(0,a.start),f=Math.min(l.count,a.start+a.count);for(let p=d,g=f;p<g;p++){const _=l.getX(p);Ph.fromBufferAttribute(u,_),d0(Ph,_,c,i,e,t,this)}}else{const d=Math.max(0,a.start),f=Math.min(u.count,a.start+a.count);for(let p=d,g=f;p<g;p++)Ph.fromBufferAttribute(u,p),d0(Ph,p,c,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}eM.prototype.isPoints=!0;function d0(r,e,t,n,i,s,a){const o=rm.distanceSqToPoint(r);if(o<t){const c=new D;rm.closestPointToPoint(r,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:c,index:e,face:null,object:a})}}class hN extends Cn{constructor(e,t,n,i,s,a,o,c,l){super(e,t,n,i,s,a,o,c,l),this.format=o!==void 0?o:fa,this.minFilter=a!==void 0?a:Kn,this.magFilter=s!==void 0?s:Kn,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}hN.prototype.isVideoTexture=!0;class uN extends Cn{constructor(e,t,n,i,s,a,o,c,l,h,u,d){super(null,a,o,c,l,h,i,s,u,d),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}uN.prototype.isCompressedTexture=!0;class dN extends Cn{constructor(e,t,n,i,s,a,o,c,l){super(e,t,n,i,s,a,o,c,l),this.needsUpdate=!0}}dN.prototype.isCanvasTexture=!0;class fN extends Cn{constructor(e,t,n,i,s,a,o,c,l,h){if(h=h!==void 0?h:To,h!==To&&h!==qc)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===To&&(n=Su),n===void 0&&h===qc&&(n=Ic),super(null,i,s,a,o,c,h,n,l),this.image={width:e,height:t},this.magFilter=o!==void 0?o:Rn,this.minFilter=c!==void 0?c:Rn,this.flipY=!1,this.generateMipmaps=!1}}fN.prototype.isDepthTexture=!0;class qi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let a;t?a=t:a=e*n[s-1];let o=0,c=s-1,l;for(;o<=c;)if(i=Math.floor(o+(c-o)/2),l=n[i]-a,l<0)o=i+1;else if(l>0)c=i-1;else{c=i;break}if(i=c,n[i]===a)return i/(s-1);const h=n[i],d=n[i+1]-h,f=(a-h)/d;return(i+f)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const a=this.getPoint(i),o=this.getPoint(s),c=t||(a.isVector2?new Ne:new D);return c.copy(o).sub(a).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],a=[],o=new D,c=new et;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new D)}s[0]=new D,a[0]=new D;let l=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),d=Math.abs(i[0].z);h<=l&&(l=h,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),d<=l&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],o),a[0].crossVectors(i[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),a[f]=a[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(vi(i[f-1].dot(i[f]),-1,1));s[f].applyMatrix4(c.makeRotationAxis(o,p))}a[f].crossVectors(i[f],s[f])}if(t===!0){let f=Math.acos(vi(s[0].dot(s[e]),-1,1));f/=e,i[0].dot(o.crossVectors(s[0],s[e]))>0&&(f=-f);for(let p=1;p<=e;p++)s[p].applyMatrix4(c.makeRotationAxis(i[p],f*p)),a[p].crossVectors(i[p],s[p])}return{tangents:i,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class sd extends qi{constructor(e=0,t=0,n=1,i=1,s=0,a=Math.PI*2,o=!1,c=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=c}getPoint(e,t){const n=t||new Ne,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(a?s=0:s=i),this.aClockwise===!0&&!a&&(s===i?s=-i:s=s-i);const o=this.aStartAngle+e*s;let c=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=c-this.aX,f=l-this.aY;c=d*h-f*u+this.aX,l=d*u+f*h+this.aY}return n.set(c,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}sd.prototype.isEllipseCurve=!0;class tM extends sd{constructor(e,t,n,i,s,a){super(e,t,n,n,i,s,a),this.type="ArcCurve"}}tM.prototype.isArcCurve=!0;function sg(){let r=0,e=0,t=0,n=0;function i(s,a,o,c){r=s,e=o,t=-3*s+3*a-2*o-c,n=2*s-2*a+o+c}return{initCatmullRom:function(s,a,o,c,l){i(a,o,l*(o-s),l*(c-a))},initNonuniformCatmullRom:function(s,a,o,c,l,h,u){let d=(a-s)/l-(o-s)/(l+h)+(o-a)/h,f=(o-a)/h-(c-a)/(h+u)+(c-o)/u;d*=h,f*=h,i(a,o,d,f)},calc:function(s){const a=s*s,o=a*s;return r+e*s+t*a+n*o}}}const Ih=new D,Df=new sg,Ff=new sg,Nf=new sg;class Fc extends qi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,a=(s-(this.closed?0:1))*e;let o=Math.floor(a),c=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:c===0&&o===s-1&&(o=s-2,c=1);let l,h;this.closed||o>0?l=i[(o-1)%s]:(Ih.subVectors(i[0],i[1]).add(i[0]),l=Ih);const u=i[o%s],d=i[(o+1)%s];if(this.closed||o+2<s?h=i[(o+2)%s]:(Ih.subVectors(i[s-1],i[s-2]).add(i[s-1]),h=Ih),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(u),f),g=Math.pow(u.distanceToSquared(d),f),_=Math.pow(d.distanceToSquared(h),f);g<1e-4&&(g=1),p<1e-4&&(p=g),_<1e-4&&(_=g),Df.initNonuniformCatmullRom(l.x,u.x,d.x,h.x,p,g,_),Ff.initNonuniformCatmullRom(l.y,u.y,d.y,h.y,p,g,_),Nf.initNonuniformCatmullRom(l.z,u.z,d.z,h.z,p,g,_)}else this.curveType==="catmullrom"&&(Df.initCatmullRom(l.x,u.x,d.x,h.x,this.tension),Ff.initCatmullRom(l.y,u.y,d.y,h.y,this.tension),Nf.initCatmullRom(l.z,u.z,d.z,h.z,this.tension));return n.set(Df.calc(c),Ff.calc(c),Nf.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}Fc.prototype.isCatmullRomCurve3=!0;function f0(r,e,t,n,i){const s=(n-e)*.5,a=(i-t)*.5,o=r*r,c=r*o;return(2*t-2*n+s+a)*c+(-3*t+3*n-2*s-a)*o+s*r+t}function pN(r,e){const t=1-r;return t*t*e}function mN(r,e){return 2*(1-r)*r*e}function gN(r,e){return r*r*e}function Nc(r,e,t,n){return pN(r,e)+mN(r,t)+gN(r,n)}function _N(r,e){const t=1-r;return t*t*t*e}function vN(r,e){const t=1-r;return 3*t*t*r*e}function xN(r,e){return 3*(1-r)*r*r*e}function yN(r,e){return r*r*r*e}function Oc(r,e,t,n,i){return _N(r,e)+vN(r,t)+xN(r,n)+yN(r,i)}class ag extends qi{constructor(e=new Ne,t=new Ne,n=new Ne,i=new Ne){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new Ne){const n=t,i=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(Oc(e,i.x,s.x,a.x,o.x),Oc(e,i.y,s.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}ag.prototype.isCubicBezierCurve=!0;class nM extends qi{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(Oc(e,i.x,s.x,a.x,o.x),Oc(e,i.y,s.y,a.y,o.y),Oc(e,i.z,s.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}nM.prototype.isCubicBezierCurve3=!0;class ad extends qi{constructor(e=new Ne,t=new Ne){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Ne){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new Ne;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ad.prototype.isLineCurve=!0;class bN extends qi{constructor(e=new D,t=new D){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class og extends qi{constructor(e=new Ne,t=new Ne,n=new Ne){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Ne){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(Nc(e,i.x,s.x,a.x),Nc(e,i.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}og.prototype.isQuadraticBezierCurve=!0;class iM extends qi{constructor(e=new D,t=new D,n=new D){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(Nc(e,i.x,s.x,a.x),Nc(e,i.y,s.y,a.y),Nc(e,i.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}iM.prototype.isQuadraticBezierCurve3=!0;class cg extends qi{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Ne){const n=t,i=this.points,s=(i.length-1)*e,a=Math.floor(s),o=s-a,c=i[a===0?a:a-1],l=i[a],h=i[a>i.length-2?i.length-1:a+1],u=i[a>i.length-3?i.length-1:a+2];return n.set(f0(o,c.x,l.x,h.x,u.x),f0(o,c.y,l.y,h.y,u.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new Ne().fromArray(i))}return this}}cg.prototype.isSplineCurve=!0;var rM=Object.freeze({__proto__:null,ArcCurve:tM,CatmullRomCurve3:Fc,CubicBezierCurve:ag,CubicBezierCurve3:nM,EllipseCurve:sd,LineCurve:ad,LineCurve3:bN,QuadraticBezierCurve:og,QuadraticBezierCurve3:iM,SplineCurve:cg});class MN extends qi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ad(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const a=i[s]-n,o=this.curves[s],c=o.getLength(),l=c===0?0:1-a/c;return o.getPointAt(l,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const a=s[i],o=a&&a.isEllipseCurve?e*2:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,c=a.getPoints(o);for(let l=0;l<c.length;l++){const h=c[l];n&&n.equals(h)||(t.push(h),n=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new rM[i.type]().fromJSON(i))}return this}}class sm extends MN{constructor(e){super(),this.type="Path",this.currentPoint=new Ne,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new ad(this.currentPoint.clone(),new Ne(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new og(this.currentPoint.clone(),new Ne(e,t),new Ne(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,a){const o=new ag(this.currentPoint.clone(),new Ne(e,t),new Ne(n,i),new Ne(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new cg(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,a){const o=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+o,t+c,n,i,s,a),this}absarc(e,t,n,i,s,a){return this.absellipse(e,t,n,n,i,s,a),this}ellipse(e,t,n,i,s,a,o,c){const l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,n,i,s,a,o,c),this}absellipse(e,t,n,i,s,a,o,c){const l=new sd(e,t,n,i,s,a,o,c);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Sl extends sm{constructor(e){super(e),this.uuid=or(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new sm().fromJSON(i))}return this}}const SN={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=sM(r,0,i,t,!0);const a=[];if(!s||s.next===s.prev)return a;let o,c,l,h,u,d,f;if(n&&(s=AN(r,e,s,t)),r.length>80*t){o=l=r[0],c=h=r[1];for(let p=t;p<i;p+=t)u=r[p],d=r[p+1],u<o&&(o=u),d<c&&(c=d),u>l&&(l=u),d>h&&(h=d);f=Math.max(l-o,h-c),f=f!==0?1/f:0}return Zc(s,a,t,o,c,f),a}};function sM(r,e,t,n,i){let s,a;if(i===$N(r,e,t,n)>0)for(s=e;s<t;s+=n)a=p0(s,r[s],r[s+1],a);else for(s=t-n;s>=e;s-=n)a=p0(s,r[s],r[s+1],a);return a&&od(a,a.next)&&(Jc(a),a=a.next),a}function Vs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(od(t,t.next)||_n(t.prev,t,t.next)===0)){if(Jc(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Zc(r,e,t,n,i,s,a){if(!r)return;!a&&s&&DN(r,n,i,s);let o=r,c,l;for(;r.prev!==r.next;){if(c=r.prev,l=r.next,s?TN(r,n,i,s):wN(r)){e.push(c.i/t),e.push(r.i/t),e.push(l.i/t),Jc(r),r=l.next,o=l.next;continue}if(r=l,r===o){a?a===1?(r=EN(Vs(r),e,t),Zc(r,e,t,n,i,s,2)):a===2&&CN(r,e,t,n,i,s):Zc(Vs(r),e,t,n,i,s,1);break}}}function wN(r){const e=r.prev,t=r,n=r.next;if(_n(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(vo(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&_n(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function TN(r,e,t,n){const i=r.prev,s=r,a=r.next;if(_n(i,s,a)>=0)return!1;const o=i.x<s.x?i.x<a.x?i.x:a.x:s.x<a.x?s.x:a.x,c=i.y<s.y?i.y<a.y?i.y:a.y:s.y<a.y?s.y:a.y,l=i.x>s.x?i.x>a.x?i.x:a.x:s.x>a.x?s.x:a.x,h=i.y>s.y?i.y>a.y?i.y:a.y:s.y>a.y?s.y:a.y,u=am(o,c,e,t,n),d=am(l,h,e,t,n);let f=r.prevZ,p=r.nextZ;for(;f&&f.z>=u&&p&&p.z<=d;){if(f!==r.prev&&f!==r.next&&vo(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&_n(f.prev,f,f.next)>=0||(f=f.prevZ,p!==r.prev&&p!==r.next&&vo(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&_n(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;f&&f.z>=u;){if(f!==r.prev&&f!==r.next&&vo(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&_n(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;p&&p.z<=d;){if(p!==r.prev&&p!==r.next&&vo(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&_n(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function EN(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!od(i,s)&&aM(i,n,n.next,s)&&Kc(i,s)&&Kc(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),Jc(n),Jc(n.next),n=r=s),n=n.next}while(n!==r);return Vs(n)}function CN(r,e,t,n,i,s){let a=r;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&ON(a,o)){let c=oM(a,o);a=Vs(a,a.next),c=Vs(c,c.next),Zc(a,e,t,n,i,s),Zc(c,e,t,n,i,s);return}o=o.next}a=a.next}while(a!==r)}function AN(r,e,t,n){const i=[];let s,a,o,c,l;for(s=0,a=e.length;s<a;s++)o=e[s]*n,c=s<a-1?e[s+1]*n:r.length,l=sM(r,o,c,n,!1),l===l.next&&(l.steiner=!0),i.push(NN(l));for(i.sort(RN),s=0;s<i.length;s++)PN(i[s],t),t=Vs(t,t.next);return t}function RN(r,e){return r.x-e.x}function PN(r,e){if(e=IN(r,e),e){const t=oM(e,r);Vs(e,e.next),Vs(t,t.next)}}function IN(r,e){let t=e;const n=r.x,i=r.y;let s=-1/0,a;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const d=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=n&&d>s){if(s=d,d===n){if(i===t.y)return t;if(i===t.next.y)return t.next}a=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!a)return null;if(n===s)return a;const o=a,c=a.x,l=a.y;let h=1/0,u;t=a;do n>=t.x&&t.x>=c&&n!==t.x&&vo(i<l?n:s,i,c,l,i<l?s:n,i,t.x,t.y)&&(u=Math.abs(i-t.y)/(n-t.x),Kc(t,r)&&(u<h||u===h&&(t.x>a.x||t.x===a.x&&LN(a,t)))&&(a=t,h=u)),t=t.next;while(t!==o);return a}function LN(r,e){return _n(r.prev,r,e.prev)<0&&_n(e.next,r,r.next)<0}function DN(r,e,t,n){let i=r;do i.z===null&&(i.z=am(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,FN(i)}function FN(r){let e,t,n,i,s,a,o,c,l=1;do{for(t=r,r=null,s=null,a=0;t;){for(a++,n=t,o=0,e=0;e<l&&(o++,n=n.nextZ,!!n);e++);for(c=l;o>0||c>0&&n;)o!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,c--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,l*=2}while(a>1);return r}function am(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function NN(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function vo(r,e,t,n,i,s,a,o){return(i-a)*(e-o)-(r-a)*(s-o)>=0&&(r-a)*(n-o)-(t-a)*(e-o)>=0&&(t-a)*(s-o)-(i-a)*(n-o)>=0}function ON(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!UN(r,e)&&(Kc(r,e)&&Kc(e,r)&&BN(r,e)&&(_n(r.prev,r,e.prev)||_n(r,e.prev,e))||od(r,e)&&_n(r.prev,r,r.next)>0&&_n(e.prev,e,e.next)>0)}function _n(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function od(r,e){return r.x===e.x&&r.y===e.y}function aM(r,e,t,n){const i=Dh(_n(r,e,t)),s=Dh(_n(r,e,n)),a=Dh(_n(t,n,r)),o=Dh(_n(t,n,e));return!!(i!==s&&a!==o||i===0&&Lh(r,t,e)||s===0&&Lh(r,n,e)||a===0&&Lh(t,r,n)||o===0&&Lh(t,e,n))}function Lh(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Dh(r){return r>0?1:r<0?-1:0}function UN(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&aM(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Kc(r,e){return _n(r.prev,r,r.next)<0?_n(r,e,r.next)>=0&&_n(r,r.prev,e)>=0:_n(r,e,r.prev)<0||_n(r,r.next,e)<0}function BN(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function oM(r,e){const t=new om(r.i,r.x,r.y),n=new om(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function p0(r,e,t,n){const i=new om(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Jc(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function om(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function $N(r,e,t,n){let i=0;for(let s=e,a=t-n;s<t;s+=n)i+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return i}class Ns{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Ns.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];m0(e),g0(n,e);let a=e.length;t.forEach(m0);for(let c=0;c<t.length;c++)i.push(a),a+=t[c].length,g0(n,t[c]);const o=SN.triangulate(n,i);for(let c=0;c<o.length;c+=3)s.push(o.slice(c,c+3));return s}}function m0(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function g0(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Zo extends kt{constructor(e=new Sl([new Ne(.5,.5),new Ne(-.5,.5),new Ne(-.5,-.5),new Ne(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let o=0,c=e.length;o<c;o++){const l=e[o];a(l)}this.setAttribute("position",new Mn(i,3)),this.setAttribute("uv",new Mn(s,2)),this.computeVertexNormals();function a(o){const c=[],l=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1;let u=t.depth!==void 0?t.depth:1,d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,g=t.bevelOffset!==void 0?t.bevelOffset:0,_=t.bevelSegments!==void 0?t.bevelSegments:3;const m=t.extrudePath,v=t.UVGenerator!==void 0?t.UVGenerator:kN;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),u=t.amount);let y,x=!1,w,E,M,A;m&&(y=m.getSpacedPoints(h),x=!0,d=!1,w=m.computeFrenetFrames(h,!1),E=new D,M=new D,A=new D),d||(_=0,f=0,p=0,g=0);const T=o.extractPoints(l);let S=T.shape;const b=T.holes;if(!Ns.isClockWise(S)){S=S.reverse();for(let fe=0,xe=b.length;fe<xe;fe++){const F=b[fe];Ns.isClockWise(F)&&(b[fe]=F.reverse())}}const L=Ns.triangulateShape(S,b),N=S;for(let fe=0,xe=b.length;fe<xe;fe++){const F=b[fe];S=S.concat(F)}function k(fe,xe,F){return xe||console.error("THREE.ExtrudeGeometry: vec does not exist"),xe.clone().multiplyScalar(F).add(fe)}const B=S.length,z=L.length;function H(fe,xe,F){let Ye,Ee,O;const P=fe.x-xe.x,se=fe.y-xe.y,he=F.x-fe.x,R=F.y-fe.y,C=P*P+se*se,q=P*R-se*he;if(Math.abs(q)>Number.EPSILON){const Q=Math.sqrt(C),oe=Math.sqrt(he*he+R*R),K=xe.x-se/Q,G=xe.y+P/Q,le=F.x-R/oe,J=F.y+he/oe,Oe=((le-K)*R-(J-G)*he)/(P*R-se*he);Ye=K+P*Oe-fe.x,Ee=G+se*Oe-fe.y;const ae=Ye*Ye+Ee*Ee;if(ae<=2)return new Ne(Ye,Ee);O=Math.sqrt(ae/2)}else{let Q=!1;P>Number.EPSILON?he>Number.EPSILON&&(Q=!0):P<-Number.EPSILON?he<-Number.EPSILON&&(Q=!0):Math.sign(se)===Math.sign(R)&&(Q=!0),Q?(Ye=-se,Ee=P,O=Math.sqrt(C)):(Ye=P,Ee=se,O=Math.sqrt(C/2))}return new Ne(Ye/O,Ee/O)}const ee=[];for(let fe=0,xe=N.length,F=xe-1,Ye=fe+1;fe<xe;fe++,F++,Ye++)F===xe&&(F=0),Ye===xe&&(Ye=0),ee[fe]=H(N[fe],N[F],N[Ye]);const de=[];let ce,Ce=ee.concat();for(let fe=0,xe=b.length;fe<xe;fe++){const F=b[fe];ce=[];for(let Ye=0,Ee=F.length,O=Ee-1,P=Ye+1;Ye<Ee;Ye++,O++,P++)O===Ee&&(O=0),P===Ee&&(P=0),ce[Ye]=H(F[Ye],F[O],F[P]);de.push(ce),Ce=Ce.concat(ce)}for(let fe=0;fe<_;fe++){const xe=fe/_,F=f*Math.cos(xe*Math.PI/2),Ye=p*Math.sin(xe*Math.PI/2)+g;for(let Ee=0,O=N.length;Ee<O;Ee++){const P=k(N[Ee],ee[Ee],Ye);ye(P.x,P.y,-F)}for(let Ee=0,O=b.length;Ee<O;Ee++){const P=b[Ee];ce=de[Ee];for(let se=0,he=P.length;se<he;se++){const R=k(P[se],ce[se],Ye);ye(R.x,R.y,-F)}}}const me=p+g;for(let fe=0;fe<B;fe++){const xe=d?k(S[fe],Ce[fe],me):S[fe];x?(M.copy(w.normals[0]).multiplyScalar(xe.x),E.copy(w.binormals[0]).multiplyScalar(xe.y),A.copy(y[0]).add(M).add(E),ye(A.x,A.y,A.z)):ye(xe.x,xe.y,0)}for(let fe=1;fe<=h;fe++)for(let xe=0;xe<B;xe++){const F=d?k(S[xe],Ce[xe],me):S[xe];x?(M.copy(w.normals[fe]).multiplyScalar(F.x),E.copy(w.binormals[fe]).multiplyScalar(F.y),A.copy(y[fe]).add(M).add(E),ye(A.x,A.y,A.z)):ye(F.x,F.y,u/h*fe)}for(let fe=_-1;fe>=0;fe--){const xe=fe/_,F=f*Math.cos(xe*Math.PI/2),Ye=p*Math.sin(xe*Math.PI/2)+g;for(let Ee=0,O=N.length;Ee<O;Ee++){const P=k(N[Ee],ee[Ee],Ye);ye(P.x,P.y,u+F)}for(let Ee=0,O=b.length;Ee<O;Ee++){const P=b[Ee];ce=de[Ee];for(let se=0,he=P.length;se<he;se++){const R=k(P[se],ce[se],Ye);x?ye(R.x,R.y+y[h-1].y,y[h-1].x+F):ye(R.x,R.y,u+F)}}}j(),pe();function j(){const fe=i.length/3;if(d){let xe=0,F=B*xe;for(let Ye=0;Ye<z;Ye++){const Ee=L[Ye];Pe(Ee[2]+F,Ee[1]+F,Ee[0]+F)}xe=h+_*2,F=B*xe;for(let Ye=0;Ye<z;Ye++){const Ee=L[Ye];Pe(Ee[0]+F,Ee[1]+F,Ee[2]+F)}}else{for(let xe=0;xe<z;xe++){const F=L[xe];Pe(F[2],F[1],F[0])}for(let xe=0;xe<z;xe++){const F=L[xe];Pe(F[0]+B*h,F[1]+B*h,F[2]+B*h)}}n.addGroup(fe,i.length/3-fe,0)}function pe(){const fe=i.length/3;let xe=0;Z(N,xe),xe+=N.length;for(let F=0,Ye=b.length;F<Ye;F++){const Ee=b[F];Z(Ee,xe),xe+=Ee.length}n.addGroup(fe,i.length/3-fe,1)}function Z(fe,xe){let F=fe.length;for(;--F>=0;){const Ye=F;let Ee=F-1;Ee<0&&(Ee=fe.length-1);for(let O=0,P=h+_*2;O<P;O++){const se=B*O,he=B*(O+1),R=xe+Ye+se,C=xe+Ee+se,q=xe+Ee+he,Q=xe+Ye+he;Ie(R,C,q,Q)}}}function ye(fe,xe,F){c.push(fe),c.push(xe),c.push(F)}function Pe(fe,xe,F){Te(fe),Te(xe),Te(F);const Ye=i.length/3,Ee=v.generateTopUV(n,i,Ye-3,Ye-2,Ye-1);Je(Ee[0]),Je(Ee[1]),Je(Ee[2])}function Ie(fe,xe,F,Ye){Te(fe),Te(xe),Te(Ye),Te(xe),Te(F),Te(Ye);const Ee=i.length/3,O=v.generateSideWallUV(n,i,Ee-6,Ee-3,Ee-2,Ee-1);Je(O[0]),Je(O[1]),Je(O[3]),Je(O[1]),Je(O[2]),Je(O[3])}function Te(fe){i.push(c[fe*3+0]),i.push(c[fe*3+1]),i.push(c[fe*3+2])}function Je(fe){s.push(fe.x),s.push(fe.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return zN(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,a=e.shapes.length;s<a;s++){const o=t[e.shapes[s]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new rM[i.type]().fromJSON(i)),new Zo(n,e.options)}}const kN={generateTopUV:function(r,e,t,n,i){const s=e[t*3],a=e[t*3+1],o=e[n*3],c=e[n*3+1],l=e[i*3],h=e[i*3+1];return[new Ne(s,a),new Ne(o,c),new Ne(l,h)]},generateSideWallUV:function(r,e,t,n,i,s){const a=e[t*3],o=e[t*3+1],c=e[t*3+2],l=e[n*3],h=e[n*3+1],u=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],g=e[s*3],_=e[s*3+1],m=e[s*3+2];return Math.abs(o-h)<Math.abs(a-l)?[new Ne(a,1-c),new Ne(l,1-u),new Ne(d,1-p),new Ne(g,1-m)]:[new Ne(o,1-c),new Ne(h,1-u),new Ne(f,1-p),new Ne(_,1-m)]}};function zN(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class lg extends kt{constructor(e=new Sl([new Ne(0,.5),new Ne(-.5,-.5),new Ne(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],a=[];let o=0,c=0;if(Array.isArray(e)===!1)l(e);else for(let h=0;h<e.length;h++)l(e[h]),this.addGroup(o,c,h),o+=c,c=0;this.setIndex(n),this.setAttribute("position",new Mn(i,3)),this.setAttribute("normal",new Mn(s,3)),this.setAttribute("uv",new Mn(a,2));function l(h){const u=i.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;Ns.isClockWise(f)===!1&&(f=f.reverse());for(let _=0,m=p.length;_<m;_++){const v=p[_];Ns.isClockWise(v)===!0&&(p[_]=v.reverse())}const g=Ns.triangulateShape(f,p);for(let _=0,m=p.length;_<m;_++){const v=p[_];f=f.concat(v)}for(let _=0,m=f.length;_<m;_++){const v=f[_];i.push(v.x,v.y,0),s.push(0,0,1),a.push(v.x,v.y)}for(let _=0,m=g.length;_<m;_++){const v=g[_],y=v[0]+u,x=v[1]+u,w=v[2]+u;n.push(y,x,w),c+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return VN(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const a=t[e.shapes[i]];n.push(a)}return new lg(n,e.curveSegments)}}function VN(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class hg extends kt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(a+o,Math.PI);let l=0;const h=[],u=new D,d=new D,f=[],p=[],g=[],_=[];for(let m=0;m<=n;m++){const v=[],y=m/n;let x=0;m==0&&a==0?x=.5/t:m==n&&c==Math.PI&&(x=-.5/t);for(let w=0;w<=t;w++){const E=w/t;u.x=-e*Math.cos(i+E*s)*Math.sin(a+y*o),u.y=e*Math.cos(a+y*o),u.z=e*Math.sin(i+E*s)*Math.sin(a+y*o),p.push(u.x,u.y,u.z),d.copy(u).normalize(),g.push(d.x,d.y,d.z),_.push(E+x,1-y),v.push(l++)}h.push(v)}for(let m=0;m<n;m++)for(let v=0;v<t;v++){const y=h[m][v+1],x=h[m][v],w=h[m+1][v],E=h[m+1][v+1];(m!==0||a>0)&&f.push(y,x,E),(m!==n-1||c<Math.PI)&&f.push(x,w,E)}this.setIndex(f),this.setAttribute("position",new Mn(p,3)),this.setAttribute("normal",new Mn(g,3)),this.setAttribute("uv",new Mn(_,2))}static fromJSON(e){return new hg(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class HN extends ti{constructor(e){super(),this.type="ShadowMaterial",this.color=new st(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}HN.prototype.isShadowMaterial=!0;class cM extends ti{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new st(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qo,this.normalScale=new Ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}cM.prototype.isMeshStandardMaterial=!0;class GN extends cM{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Ne(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return vi(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new st(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new st(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new st(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}GN.prototype.isMeshPhysicalMaterial=!0;class WN extends ti{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new st(16777215),this.specular=new st(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qo,this.normalScale=new Ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yu,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}WN.prototype.isMeshPhongMaterial=!0;class qN extends ti{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new st(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qo,this.normalScale=new Ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}qN.prototype.isMeshToonMaterial=!0;class jN extends ti{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qo,this.normalScale=new Ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}jN.prototype.isMeshNormalMaterial=!0;class XN extends ti{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new st(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yu,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}XN.prototype.isMeshLambertMaterial=!0;class YN extends ti{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new st(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qo,this.normalScale=new Ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}YN.prototype.isMeshMatcapMaterial=!0;class ZN extends as{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}ZN.prototype.isLineDashedMaterial=!0;const mn={arraySlice:function(r,e,t){return mn.isTypedArray(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,a=0;a!==n;++s){const o=t[s]*e;for(let c=0;c!==e;++c)i[a++]=r[o+c]}return i},flattenJSON:function(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let a=s[n];if(a!==void 0)if(Array.isArray(a))do a=s[n],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=r[i++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[n],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do a=s[n],a!==void 0&&(e.push(s.time),t.push(a)),s=r[i++];while(s!==void 0)},subclip:function(r,e,t,n,i=30){const s=r.clone();s.name=e;const a=[];for(let c=0;c<s.tracks.length;++c){const l=s.tracks[c],h=l.getValueSize(),u=[],d=[];for(let f=0;f<l.times.length;++f){const p=l.times[f]*i;if(!(p<t||p>=n)){u.push(l.times[f]);for(let g=0;g<h;++g)d.push(l.values[f*h+g])}}u.length!==0&&(l.times=mn.convertArray(u,l.times.constructor),l.values=mn.convertArray(d,l.values.constructor),a.push(l))}s.tracks=a;let o=1/0;for(let c=0;c<s.tracks.length;++c)o>s.tracks[c].times[0]&&(o=s.tracks[c].times[0]);for(let c=0;c<s.tracks.length;++c)s.tracks[c].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],c=o.ValueTypeName;if(c==="bool"||c==="string")continue;const l=r.tracks.find(function(m){return m.name===o.name&&m.ValueTypeName===c});if(l===void 0)continue;let h=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=o.times.length-1;let g;if(s<=o.times[0]){const m=h,v=u-h;g=mn.arraySlice(o.values,m,v)}else if(s>=o.times[p]){const m=p*u+h,v=m+u-h;g=mn.arraySlice(o.values,m,v)}else{const m=o.createInterpolant(),v=h,y=u-h;m.evaluate(s),g=mn.arraySlice(m.resultBuffer,v,y)}c==="quaternion"&&new Vn().fromArray(g).normalize().conjugate().toArray(g);const _=l.times.length;for(let m=0;m<_;++m){const v=m*f+d;if(c==="quaternion")Vn.multiplyQuaternionsFlat(l.values,v,g,0,l.values,v);else{const y=f-d*2;for(let x=0;x<y;++x)l.values[v+x]-=g[x]}}}return r.blendMode=Sb,r}};class Hs{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===o)break;if(s=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=s)){const o=t[1];e<o&&(n=2,s=o);for(let c=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===c)break;if(i=s,s=t[--n-1],e>=s)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let a=0;a!==i;++a)t[a]=n[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Hs.prototype.beforeStart_=Hs.prototype.copySampleValue_;Hs.prototype.afterEnd_=Hs.prototype.copySampleValue_;class KN extends Hs{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:go,endingEnd:go}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,a=e+1,o=i[s],c=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case _o:s=e,o=2*t-n;break;case Eu:s=i.length-2,o=t+i[s]-i[s+1];break;default:s=e,o=n}if(c===void 0)switch(this.getSettings_().endingEnd){case _o:a=e,c=2*n-t;break;case Eu:a=1,c=n+i[1]-i[0];break;default:a=e-1,c=t}const l=(n-t)*.5,h=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(c-n),this._offsetPrev=s*h,this._offsetNext=a*h}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,l=c-o,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(n-t)/(i-t),g=p*p,_=g*p,m=-d*_+2*d*g-d*p,v=(1+d)*_+(-1.5-2*d)*g+(-.5+d)*p+1,y=(-1-f)*_+(1.5+f)*g+.5*p,x=f*_-f*g;for(let w=0;w!==o;++w)s[w]=m*a[h+w]+v*a[l+w]+y*a[c+w]+x*a[u+w];return s}}class lM extends Hs{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,l=c-o,h=(n-t)/(i-t),u=1-h;for(let d=0;d!==o;++d)s[d]=a[l+d]*u+a[c+d]*h;return s}}class JN extends Hs{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Tr{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=mn.convertArray(t,this.TimeBufferType),this.values=mn.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:mn.convertArray(e.times,Array),values:mn.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new JN(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new lM(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new KN(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case wu:t=this.InterpolantFactoryMethodDiscrete;break;case Tu:t=this.InterpolantFactoryMethodLinear;break;case tf:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return wu;case this.InterpolantFactoryMethodLinear:return Tu;case this.InterpolantFactoryMethodSmooth:return tf}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,a=i-1;for(;s!==i&&n[s]<e;)++s;for(;a!==-1&&n[a]>t;)--a;if(++a,s!==0||a!==i){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=mn.arraySlice(n,s,a),this.values=mn.arraySlice(this.values,s*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==s;o++){const c=n[o];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,c),e=!1;break}if(a!==null&&a>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,c,a),e=!1;break}a=c}if(i!==void 0&&mn.isTypedArray(i))for(let o=0,c=i.length;o!==c;++o){const l=i[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),e=!1;break}}return e}optimize(){const e=mn.arraySlice(this.times),t=mn.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===tf,s=e.length-1;let a=1;for(let o=1;o<s;++o){let c=!1;const l=e[o],h=e[o+1];if(l!==h&&(o!==1||l!==e[0]))if(i)c=!0;else{const u=o*n,d=u-n,f=u+n;for(let p=0;p!==n;++p){const g=t[u+p];if(g!==t[d+p]||g!==t[f+p]){c=!0;break}}}if(c){if(o!==a){e[a]=e[o];const u=o*n,d=a*n;for(let f=0;f!==n;++f)t[d+f]=t[u+f]}++a}}if(s>0){e[a]=e[s];for(let o=s*n,c=a*n,l=0;l!==n;++l)t[c+l]=t[o+l];++a}return a!==e.length?(this.times=mn.arraySlice(e,0,a),this.values=mn.arraySlice(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=mn.arraySlice(this.times,0),t=mn.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Tr.prototype.TimeBufferType=Float32Array;Tr.prototype.ValueBufferType=Float32Array;Tr.prototype.DefaultInterpolation=Tu;class Ko extends Tr{}Ko.prototype.ValueTypeName="bool";Ko.prototype.ValueBufferType=Array;Ko.prototype.DefaultInterpolation=wu;Ko.prototype.InterpolantFactoryMethodLinear=void 0;Ko.prototype.InterpolantFactoryMethodSmooth=void 0;class hM extends Tr{}hM.prototype.ValueTypeName="color";class Au extends Tr{}Au.prototype.ValueTypeName="number";class QN extends Hs{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=(n-t)/(i-t);let l=e*o;for(let h=l+o;l!==h;l+=4)Vn.slerpFlat(s,0,a,l-o,a,l,c);return s}}class wl extends Tr{InterpolantFactoryMethodLinear(e){return new QN(this.times,this.values,this.getValueSize(),e)}}wl.prototype.ValueTypeName="quaternion";wl.prototype.DefaultInterpolation=Tu;wl.prototype.InterpolantFactoryMethodSmooth=void 0;class Jo extends Tr{}Jo.prototype.ValueTypeName="string";Jo.prototype.ValueBufferType=Array;Jo.prototype.DefaultInterpolation=wu;Jo.prototype.InterpolantFactoryMethodLinear=void 0;Jo.prototype.InterpolantFactoryMethodSmooth=void 0;class Ru extends Tr{}Ru.prototype.ValueTypeName="vector";class _0{constructor(e,t=-1,n,i=Zm){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=or(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(tO(n[a]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=n.length;s!==a;++s)t.push(Tr.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,a=[];for(let o=0;o<s;o++){let c=[],l=[];c.push((o+s-1)%s,o,(o+1)%s),l.push(0,1,0);const h=mn.getKeyframeOrder(c);c=mn.sortedArray(c,1,h),l=mn.sortedArray(l,1,h),!i&&c[0]===0&&(c.push(s),l.push(l[0])),a.push(new Au(".morphTargetInfluences["+t[o].name+"]",c,l).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,c=e.length;o<c;o++){const l=e[o],h=l.name.match(s);if(h&&h.length>1){const u=h[1];let d=i[u];d||(i[u]=d=[]),d.push(l)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,d,f,p,g){if(f.length!==0){const _=[],m=[];mn.flattenJSON(f,_,m,p),_.length!==0&&g.push(new u(d,_,m))}},i=[],s=e.name||"default",a=e.fps||30,o=e.blendMode;let c=e.length||-1;const l=e.hierarchy||[];for(let u=0;u<l.length;u++){const d=l[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let g=0;g<d[p].morphTargets.length;g++)f[d[p].morphTargets[g]]=-1;for(const g in f){const _=[],m=[];for(let v=0;v!==d[p].morphTargets.length;++v){const y=d[p];_.push(y.time),m.push(y.morphTarget===g?1:0)}i.push(new Au(".morphTargetInfluence["+g+"]",_,m))}c=f.length*a}else{const f=".bones["+t[u].name+"]";n(Ru,f+".position",d,"pos",i),n(wl,f+".quaternion",d,"rot",i),n(Ru,f+".scale",d,"scl",i)}}return i.length===0?null:new this(s,c,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function eO(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Au;case"vector":case"vector2":case"vector3":case"vector4":return Ru;case"color":return hM;case"quaternion":return wl;case"bool":case"boolean":return Ko;case"string":return Jo}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function tO(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=eO(r.type);if(r.times===void 0){const t=[],n=[];mn.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Uo={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class nO{constructor(e,t,n){const i=this;let s=!1,a=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){o++,s===!1&&i.onStart!==void 0&&i.onStart(h,a,o),s=!0},this.itemEnd=function(h){a++,i.onProgress!==void 0&&i.onProgress(h,a,o),a===o&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,u){return l.push(h,u),this},this.removeHandler=function(h){const u=l.indexOf(h);return u!==-1&&l.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=l.length;u<d;u+=2){const f=l[u],p=l[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const iO=new nO;class js{constructor(e){this.manager=e!==void 0?e:iO,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const $r={};class rO extends js{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Uo.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if($r[e]!==void 0){$r[e].push({onLoad:t,onProgress:n,onError:i});return}$r[e]=[],$r[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});fetch(a).then(o=>{if(o.status===200||o.status===0){o.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received.");const c=$r[e],l=o.body.getReader(),h=o.headers.get("Content-Length"),u=h?parseInt(h):0,d=u!==0;let f=0;return new ReadableStream({start(p){g();function g(){l.read().then(({done:_,value:m})=>{if(_)p.close();else{f+=m.byteLength;const v=new ProgressEvent("progress",{lengthComputable:d,loaded:f,total:u});for(let y=0,x=c.length;y<x;y++){const w=c[y];w.onProgress&&w.onProgress(v)}p.enqueue(m),g()}})}}})}else throw Error(`fetch for "${o.url}" responded with ${o.status}: ${o.statusText}`)}).then(o=>{const c=new Response(o);switch(this.responseType){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(l=>new DOMParser().parseFromString(l,this.mimeType));case"json":return c.json();default:return c.text()}}).then(o=>{Uo.add(e,o);const c=$r[e];delete $r[e];for(let l=0,h=c.length;l<h;l++){const u=c[l];u.onLoad&&u.onLoad(o)}this.manager.itemEnd(e)}).catch(o=>{const c=$r[e];delete $r[e];for(let l=0,h=c.length;l<h;l++){const u=c[l];u.onError&&u.onError(o)}this.manager.itemError(e),this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class uM extends js{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=Uo.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o=Ju("img");function c(){h(),Uo.add(e,this),t&&t(this),s.manager.itemEnd(e)}function l(u){h(),i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){o.removeEventListener("load",c,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",l,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class sO extends js{constructor(e){super(e)}load(e,t,n,i){const s=new Qu,a=new uM(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function c(l){a.load(e[l],function(h){s.images[l]=h,o++,o===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let l=0;l<e.length;++l)c(l);return s}}class aO extends js{constructor(e){super(e)}load(e,t,n,i){const s=new Cn,a=new uM(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Mr extends Dt{constructor(e,t=1){super(),this.type="Light",this.color=new st(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}Mr.prototype.isLight=!0;class oO extends Mr{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Dt.DefaultUp),this.updateMatrix(),this.groundColor=new st(t)}copy(e){return Mr.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}oO.prototype.isHemisphereLight=!0;const v0=new et,x0=new D,y0=new D;class ug{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ne(512,512),this.map=null,this.mapPass=null,this.matrix=new et,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ed,this._frameExtents=new Ne(1,1),this._viewportCount=1,this._viewports=[new Ht(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;x0.setFromMatrixPosition(e.matrixWorld),t.position.copy(x0),y0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(y0),t.updateMatrixWorld(),v0.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(v0),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class dM extends ug{constructor(){super(new li(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=Xc*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}dM.prototype.isSpotLightShadow=!0;class cO extends Mr{constructor(e,t,n=0,i=Math.PI/3,s=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(Dt.DefaultUp),this.updateMatrix(),this.target=new Dt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=a,this.shadow=new dM}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}cO.prototype.isSpotLight=!0;const b0=new et,_c=new D,Of=new D;class fM extends ug{constructor(){super(new li(90,1,.5,500)),this._frameExtents=new Ne(4,2),this._viewportCount=6,this._viewports=[new Ht(2,1,1,1),new Ht(0,1,1,1),new Ht(3,1,1,1),new Ht(1,1,1,1),new Ht(3,0,1,1),new Ht(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),_c.setFromMatrixPosition(e.matrixWorld),n.position.copy(_c),Of.copy(n.position),Of.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Of),n.updateMatrixWorld(),i.makeTranslation(-_c.x,-_c.y,-_c.z),b0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(b0)}}fM.prototype.isPointLightShadow=!0;class lO extends Mr{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new fM}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}lO.prototype.isPointLight=!0;class pM extends ug{constructor(){super(new nd(-5,5,5,-5,.5,500))}}pM.prototype.isDirectionalLightShadow=!0;class hO extends Mr{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Dt.DefaultUp),this.updateMatrix(),this.target=new Dt,this.shadow=new pM}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}hO.prototype.isDirectionalLight=!0;class uO extends Mr{constructor(e,t){super(e,t),this.type="AmbientLight"}}uO.prototype.isAmbientLight=!0;class dO extends Mr{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}dO.prototype.isRectAreaLight=!0;class mM{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(n*s)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*n*s),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}mM.prototype.isSphericalHarmonics3=!0;class dg extends Mr{constructor(e=new mM,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}dg.prototype.isLightProbe=!0;class fO{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class pO extends kt{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}pO.prototype.isInstancedBufferGeometry=!0;class mO extends js{constructor(e){super(e),typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=Uo.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){Uo.add(e,c),t&&t(c),s.manager.itemEnd(e)}).catch(function(c){i&&i(c),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}mO.prototype.isImageBitmapLoader=!0;let Fh;const gO={getContext:function(){return Fh===void 0&&(Fh=new(window.AudioContext||window.webkitAudioContext)),Fh},setContext:function(r){Fh=r}};class _O extends js{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new rO(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{const c=o.slice(0);gO.getContext().decodeAudioData(c,function(h){t(h)})}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}}class vO extends dg{constructor(e,t,n=1){super(void 0,n);const i=new st().set(e),s=new st().set(t),a=new D(i.r,i.g,i.b),o=new D(s.r,s.g,s.b),c=Math.sqrt(Math.PI),l=c*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(c),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(l)}}vO.prototype.isHemisphereLightProbe=!0;class xO extends dg{constructor(e,t=1){super(void 0,t);const n=new st().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}xO.prototype.isAmbientLightProbe=!0;class yO{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=M0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=M0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function M0(){return(typeof performance>"u"?Date:performance).now()}class bO extends Dt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class MO{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,a;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[s+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,s,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-s,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,l=t+t;c!==l;++c)if(n[c]!==n[c+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,a=i;s!==a;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let a=0;a!==s;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){Vn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const a=this._workIndex*s;Vn.multiplyQuaternionsFlat(e,a,e,t,e,n),Vn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,s){const a=1-i;for(let o=0;o!==s;++o){const c=t+o;e[c]=e[c]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,s){for(let a=0;a!==s;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}}const fg="\\[\\]\\.:\\/",SO=new RegExp("["+fg+"]","g"),pg="[^"+fg+"]",wO="[^"+fg.replace("\\.","")+"]",TO=/((?:WC+[\/:])*)/.source.replace("WC",pg),EO=/(WCOD+)?/.source.replace("WCOD",wO),CO=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",pg),AO=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",pg),RO=new RegExp("^"+TO+EO+CO+AO+"$"),PO=["material","materials","bones"];class IO{constructor(e,t,n){const i=n||Yt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Yt{constructor(e,t,n){this.path=t,this.parsedPath=n||Yt.parseTrackName(t),this.node=Yt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Yt.Composite(e,t,n):new Yt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(SO,"")}static parseTrackName(e){const t=RO.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);PO.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let a=0;a<s.length;a++){const o=s[a];if(o.name===t||o.uuid===t)return o;const c=n(o.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Yt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let l=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===l){l=h;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(l!==void 0){if(e[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[l]}}const a=e[i];if(a===void 0){const l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}c=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(c=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Yt.Composite=IO;Yt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Yt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Yt.prototype.GetterByBindingType=[Yt.prototype._getValue_direct,Yt.prototype._getValue_array,Yt.prototype._getValue_arrayElement,Yt.prototype._getValue_toArray];Yt.prototype.SetterByBindingTypeAndVersioning=[[Yt.prototype._setValue_direct,Yt.prototype._setValue_direct_setNeedsUpdate,Yt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Yt.prototype._setValue_array,Yt.prototype._setValue_array_setNeedsUpdate,Yt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Yt.prototype._setValue_arrayElement,Yt.prototype._setValue_arrayElement_setNeedsUpdate,Yt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Yt.prototype._setValue_fromArray,Yt.prototype._setValue_fromArray_setNeedsUpdate,Yt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class LO{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,a=s.length,o=new Array(a),c={endingStart:go,endingEnd:go};for(let l=0;l!==a;++l){const h=s[l].createInterpolant(null);o[l]=h,h.settings=c}this._interpolantSettings=c,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=tI,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=s/i,o=i/s;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const c=o.parameterPositions,l=o.sampleValues;return c[0]=s,c[1]=s+n,l[0]=e/a,l[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const c=(e-s)*n;if(c<0||n===0)return;this._startTime=null,t=n*c}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const c=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case Sb:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(a),l[h].accumulateAdditive(o);break;case Zm:default:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(a),l[h].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const a=n===nI;if(e===0)return s===-1?i:a&&(s&1)===1?t-i:i;if(n===eI){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,s+=Math.abs(o);const c=this.repetitions-s;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=_o,i.endingEnd=_o):(e?i.endingStart=this.zeroSlopeAtStart?_o:go:i.endingStart=Eu,t?i.endingEnd=this.zeroSlopeAtEnd?_o:go:i.endingEnd=Eu)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,c=a.sampleValues;return o[0]=s,c[0]=t,o[1]=s+e,c[1]=n,this}}class DO extends ya{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,a=e._propertyBindings,o=e._interpolants,c=n.uuid,l=this._bindingsByRootAndName;let h=l[c];h===void 0&&(h={},l[c]=h);for(let u=0;u!==s;++u){const d=i[u],f=d.name;let p=h[f];if(p!==void 0)a[u]=p;else{if(p=a[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,c,f));continue}const g=t&&t._propertyBindings[u].binding.parsedPath;p=new MO(Yt.create(n,f,g),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,c,f),a[u]=p}o[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let a=s[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,o=a[s],c=o.knownActions,l=c[c.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,c[h]=l,c.pop(),e._byClipCacheIndex=null;const u=o.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],c.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,o=a[i],c=t[t.length-1],l=e._cacheIndex;c._cacheIndex=l,t[l]=c,t.pop(),delete o[s],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new lM(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let a=typeof e=="string"?_0.findByName(i,e):e;const o=a!==null?a.uuid:e,c=this._actionsByClip[o];let l=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Zm),c!==void 0){const u=c.actionByRoot[s];if(u!==void 0&&u.blendMode===n)return u;l=c.knownActions[0],a===null&&(a=l._clip)}if(a===null)return null;const h=new LO(this,a,t,n);return this._bindAction(h,l),this._addInactiveAction(h,o,s),h}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?_0.findByName(n,e):e,a=s?s.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let l=0;l!==n;++l)t[l]._update(i,e,s,a);const o=this._bindings,c=this._nActiveBindings;for(let l=0;l!==c;++l)o[l].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const a=s.knownActions;for(let o=0,c=a.length;o!==c;++o){const l=a[o];this._deactivateAction(l);const h=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,c=o[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const a in s){const o=s[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}DO.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class FO extends Ml{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}FO.prototype.isInstancedInterleavedBuffer=!0;class Pu{constructor(e,t,n=0,i=1/0){this.ray=new ba(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Pb,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return cm(e,this,n,t),n.sort(S0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)cm(e[i],this,n,t);return n.sort(S0),n}}function S0(r,e){return r.distance-e.distance}function cm(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,a=i.length;s<a;s++)cm(i[s],e,t,!0)}}const bs=new D,Nh=new et,Uf=new et;class NO extends rd{constructor(e){const t=gM(e),n=new kt,i=[],s=[],a=new st(0,0,1),o=new st(0,1,0);for(let l=0;l<t.length;l++){const h=t[l];h.parent&&h.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(a.r,a.g,a.b),s.push(o.r,o.g,o.b))}n.setAttribute("position",new Mn(i,3)),n.setAttribute("color",new Mn(s,3));const c=new as({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,c),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Uf.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const o=t[s];o.parent&&o.parent.isBone&&(Nh.multiplyMatrices(Uf,o.matrixWorld),bs.setFromMatrixPosition(Nh),i.setXYZ(a,bs.x,bs.y,bs.z),Nh.multiplyMatrices(Uf,o.parent.matrixWorld),bs.setFromMatrixPosition(Nh),i.setXYZ(a+1,bs.x,bs.y,bs.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function gM(r){const e=[];r&&r.isBone&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,gM(r.children[t]));return e}class OO extends rd{constructor(e=10,t=10,n=4473924,i=8947848){n=new st(n),i=new st(i);const s=t/2,a=e/t,o=e/2,c=[],l=[];for(let d=0,f=0,p=-o;d<=t;d++,p+=a){c.push(-o,0,p,o,0,p),c.push(p,0,-o,p,0,o);const g=d===s?n:i;g.toArray(l,f),f+=3,g.toArray(l,f),f+=3,g.toArray(l,f),f+=3,g.toArray(l,f),f+=3}const h=new kt;h.setAttribute("position",new Mn(c,3)),h.setAttribute("color",new Mn(l,3));const u=new as({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}}const UO=new Float32Array(1);new Int32Array(UO.buffer);qi.create=function(r,e){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(qi.prototype),r.prototype.constructor=r,r.prototype.getPoint=e,r};sm.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)};OO.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};NO.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};js.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),fO.extractUrlBase(r)};js.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Li.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)};Li.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Li.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};Li.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};Li.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)};Xo.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};ed.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)};zn.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};zn.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};zn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};zn.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};zn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};zn.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};et.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)};et.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};et.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new D().setFromMatrixColumn(this,3)};et.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)};et.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};et.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};et.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};et.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};et.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)};et.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};et.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};et.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};et.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};et.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};et.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};et.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};et.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};et.prototype.makeFrustum=function(r,e,t,n,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,e,n,t,i,s)};et.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};Gr.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)};Vn.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)};Vn.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};ba.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};ba.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)};ba.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};Pn.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};Pn.prototype.barycoordFromPoint=function(r,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,e)};Pn.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)};Pn.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)};Pn.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)};Pn.barycoordFromPoint=function(r,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Pn.getBarycoord(r,e,t,n,i)};Pn.normal=function(r,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Pn.getNormal(r,e,t,n)};Sl.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)};Sl.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Zo(this,r)};Sl.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new lg(this,r)};Ne.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};Ne.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};Ne.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};D.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};D.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};D.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)};D.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)};D.prototype.getColumnFromMatrix=function(r,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,r)};D.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)};D.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};D.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};D.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Ht.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};Ht.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Dt.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)};Dt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Dt.prototype.translate=function(r,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,r)};Dt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Dt.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Dt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});sn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(sn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),iI},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Jb.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};li.prototype.setLens=function(r,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(r)};Object.defineProperties(Mr.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}});Object.defineProperties(Ct.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Cu},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Cu)}}});Ct.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Cu:jc),this};Ct.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Ct.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};kt.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)};kt.prototype.addAttribute=function(r,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new Ct(arguments[1],arguments[2]))):r==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(r,e)};kt.prototype.addDrawCall=function(r,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,e)};kt.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};kt.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};kt.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)};kt.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(kt.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Ml.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Cu:jc),this};Ml.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Zo.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Zo.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Zo.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};Zr.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(ti.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new st}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===xb}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(ai.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}});Kt.prototype.clearTarget=function(r,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(e,t,n)};Kt.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)};Kt.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};Kt.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};Kt.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};Kt.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};Kt.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};Kt.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};Kt.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};Kt.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};Kt.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};Kt.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};Kt.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};Kt.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};Kt.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)};Kt.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};Kt.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};Kt.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};Kt.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};Kt.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};Kt.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};Kt.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};Kt.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};Kt.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};Kt.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(Kt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=r===!0?xa:Jn}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(Xb.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(cr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}});bO.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new _O().load(r,function(n){e.setBuffer(n)}),this};eg.prototype.updateCubeMap=function(r,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,e)};eg.prototype.clear=function(r,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,e,t,n)};jo.crossOrigin=void 0;jo.loadTexture=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new aO;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};jo.loadTextureCube=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new sO;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};jo.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};jo.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:_b}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=_b);const Bo=Math.PI/180,w0=180/Math.PI,_M=6378137,vM=635675231424518e-8;function Zn(r,e,t,n,i,s){const a=mg(r,e,t);return BO(a[0],a[1],a[2],n,i,s)}function ga(r,e,t,n,i,s){const a=$O(r,e,t,n,i,s);return kO(a[0],a[1],a[2])}function BO(r,e,t,n,i,s){const a=mg(n,i,s),o=[r-a[0],e-a[1],t-a[2]];n=n*Bo,i=i*Bo;const c=Math.cos(n),l=Math.sin(n),h=Math.cos(i),u=Math.sin(i),d=-l*o[0]+c*o[1],f=-u*c*o[0]-u*l*o[1]+h*o[2],p=h*c*o[0]+h*l*o[1]+u*o[2];return[d,f,p]}function $O(r,e,t,n,i,s){const a=mg(n,i,s);n=n*Bo,i=i*Bo;const o=Math.cos(n),c=Math.sin(n),l=Math.cos(i),h=Math.sin(i),u=-c*r-h*o*e+l*o*t+a[0],d=o*r-h*c*e+l*c*t+a[1],f=l*e+h*t+a[2];return[u,d,f]}function mg(r,e,t){const n=_M,i=vM;r=r*Bo,e=e*Bo;const s=Math.cos(r),a=Math.sin(r),o=Math.cos(e),c=Math.sin(e),l=n*n,h=i*i,u=1/Math.sqrt(l*o*o+h*c*c),d=(l*u+t)*o,f=d*s,p=d*a,g=(h*u+t)*c;return[f,p,g]}function kO(r,e,t){const n=_M,i=vM,s=n*n,a=i*i,o=s-a,c=Math.sqrt(o/s),l=Math.sqrt(o/a),h=Math.sqrt(r*r+e*e),u=Math.atan2(t*n,h*i),d=Math.sin(u),f=Math.cos(u),p=Math.atan2(e,r),g=Math.atan2(t+l*l*i*d*d*d,h-c*c*n*f*f*f),_=Math.sin(g),m=Math.cos(g),v=n/Math.sqrt(1-c*c*_*_),y=h/m-v;return[p*w0,g*w0,y]}class gg{boundingBoxCorners(e,t){const n=ga(-t,-t,0,e.lng,e.lat,0),i=ga(t,t,0,e.lng,e.lat,0);return[{lat:n[1],lng:n[0]},{lat:i[1],lng:i[0]}]}rotationFromCompass(e,t){let n=0,i=0,s=0;switch(t){case 1:n=Math.PI/2;break;case 3:n=-Math.PI/2,s=Math.PI;break;case 6:i=-Math.PI/2,s=-Math.PI/2;break;case 8:i=Math.PI/2,s=Math.PI/2;break}const a=new et().makeRotationZ(s),o=new Ma(n,i,e*Math.PI/180,"XYZ"),c=new et().makeRotationFromEuler(o),l=new Ht().setAxisAngleFromRotationMatrix(c.multiply(a));return l.multiplyScalar(l.w).toArray().slice(0,3)}}class Oh{constructor(e){if(!e)throw new Error(`Incorrect core image data ${e}`);this._cache=null,this._core=e,this._spatial=null}get assetsCached(){return this._core!=null&&this._spatial!=null&&this._cache!=null&&this._cache.image!=null&&this._cache.mesh!=null}get cameraParameters(){return this._spatial.camera_parameters}get cameraType(){return this._spatial.camera_type}get capturedAt(){return this._spatial.captured_at}get clusterId(){return this._spatial.cluster?this._spatial.cluster.id:null}get clusterUrl(){return this._spatial.cluster?this._spatial.cluster.url:null}get compassAngle(){return this._spatial.computed_compass_angle!=null?this._spatial.computed_compass_angle:this._spatial.compass_angle}get complete(){return this._spatial!=null}get computedAltitude(){return this._spatial.computed_altitude}get computedCompassAngle(){return this._spatial.computed_compass_angle}get computedLngLat(){return this._core.computed_geometry}get creatorId(){return this._spatial.creator.id}get creatorUsername(){return this._spatial.creator.username}get exifOrientation(){return this._spatial.exif_orientation}get height(){return this._spatial.height}get image(){return this._cache.image}get image$(){return this._cache.image$}get id(){return this._core.id}get lngLat(){return this._core.computed_geometry!=null?this._core.computed_geometry:this._core.geometry}get merged(){return this._spatial!=null&&this._spatial.merge_id!=null}get mergeId(){return this._spatial.merge_id}get mesh(){return this._cache.mesh}get originalAltitude(){return this._spatial.altitude}get originalCompassAngle(){return this._spatial.compass_angle}get originalLngLat(){return this._core.geometry}get ownerId(){return this._spatial.owner?this._spatial.owner.id:null}get private(){return this._spatial.private}get qualityScore(){return this._spatial.quality_score}get rotation(){return this._spatial.computed_rotation}get scale(){return this._spatial.atomic_scale}get sequenceId(){return this._core.sequence?this._core.sequence.id:null}get sequenceEdges(){return this._cache.sequenceEdges}get sequenceEdges$(){return this._cache.sequenceEdges$}get spatialEdges(){return this._cache.spatialEdges}get spatialEdges$(){return this._cache.spatialEdges$}get width(){return this._spatial.width}cacheAssets$(){return this._cache.cacheAssets$(this._spatial,this.merged).pipe(V(()=>this))}cacheImage$(){return this._cache.cacheImage$(this._spatial).pipe(V(()=>this))}cacheSequenceEdges(e){this._cache.cacheSequenceEdges(e)}cacheSpatialEdges(e){this._cache.cacheSpatialEdges(e)}dispose(){this._cache!=null&&(this._cache.dispose(),this._cache=null),this._core=null,this._spatial=null}initializeCache(e){if(this._cache!=null)throw new Error(`Image cache already initialized (${this.id}).`);this._cache=e}makeComplete(e){if(e==null)throw new Error("Fill can not be null.");this._spatial=e}resetSequenceEdges(){this._cache.resetSequenceEdges()}resetSpatialEdges(){this._cache.resetSpatialEdges()}uncache(){this._cache!=null&&(this._cache.dispose(),this._cache=null)}}class zO{constructor(e){this._disposed=!1,this._provider=e,this._image=null,this._mesh=null,this._sequenceEdges={cached:!1,edges:[]},this._spatialEdges={cached:!1,edges:[]},this._imageChanged$=new De,this._image$=this._imageChanged$.pipe(At(null),Ke(1),Ue()),this._iamgeSubscription=this._image$.subscribe(),this._sequenceEdgesChanged$=new De,this._sequenceEdges$=this._sequenceEdgesChanged$.pipe(At(this._sequenceEdges),Ke(1),Ue()),this._sequenceEdgesSubscription=this._sequenceEdges$.subscribe(()=>{}),this._spatialEdgesChanged$=new De,this._spatialEdges$=this._spatialEdgesChanged$.pipe(At(this._spatialEdges),Ke(1),Ue()),this._spatialEdgesSubscription=this._spatialEdges$.subscribe(()=>{}),this._cachingAssets$=null}get image(){return this._image}get image$(){return this._image$}get mesh(){return this._mesh}get sequenceEdges(){return this._sequenceEdges}get sequenceEdges$(){return this._sequenceEdges$}get spatialEdges(){return this._spatialEdges}get spatialEdges$(){return this._spatialEdges$}cacheAssets$(e,t){return this._cachingAssets$!=null?this._cachingAssets$:(this._cachingAssets$=He(this._cacheImage$(e),this._cacheMesh$(e,t)).pipe(V(([n,i])=>(this._image=n,this._mesh=i,this)),_i(()=>{this._cachingAssets$=null}),Ke(1),Ue()),this._cachingAssets$.pipe(Ve(n=>!!n._image)).subscribe(()=>{this._imageChanged$.next(this._image)},()=>{}),this._cachingAssets$)}cacheImage$(e){if(this._image!=null)return Ze(this);const t=this._cacheImage$(e).pipe(Ve(n=>!!n),an(n=>{this._disposeImage(),this._image=n}),V(()=>this),Ke(1),Ue());return t.subscribe(()=>{this._imageChanged$.next(this._image)},()=>{}),t}cacheSequenceEdges(e){this._sequenceEdges={cached:!0,edges:e},this._sequenceEdgesChanged$.next(this._sequenceEdges)}cacheSpatialEdges(e){this._spatialEdges={cached:!0,edges:e},this._spatialEdgesChanged$.next(this._spatialEdges)}dispose(){this._iamgeSubscription.unsubscribe(),this._sequenceEdgesSubscription.unsubscribe(),this._spatialEdgesSubscription.unsubscribe(),this._disposeImage(),this._mesh=null,this._sequenceEdges={cached:!1,edges:[]},this._spatialEdges={cached:!1,edges:[]},this._imageChanged$.next(null),this._sequenceEdgesChanged$.next(this._sequenceEdges),this._spatialEdgesChanged$.next(this._spatialEdges),this._disposed=!0,this._imageAborter!=null&&(this._imageAborter(),this._imageAborter=null),this._meshAborter!=null&&(this._meshAborter(),this._meshAborter=null)}resetSequenceEdges(){this._sequenceEdges={cached:!1,edges:[]},this._sequenceEdgesChanged$.next(this._sequenceEdges)}resetSpatialEdges(){this._spatialEdges={cached:!1,edges:[]},this._spatialEdgesChanged$.next(this._spatialEdges)}_cacheImage$(e){return Qt.create(t=>{const n=new Promise((s,a)=>{this._imageAborter=a}),i=e.thumb.url;if(!i){const s=e.thumb.id,a=`Incorrect thumb URL for ${e.id} (${s}, ${i})`;t.error(new Error(a));return}this._provider.getImageBuffer(i,n).then(s=>{this._imageAborter=null;const a=new Image;a.crossOrigin="Anonymous",a.onload=()=>{if(this._disposed){window.URL.revokeObjectURL(a.src);const c=`Image load was aborted (${i})`;t.error(new Error(c));return}t.next(a),t.complete()},a.onerror=()=>{this._imageAborter=null,t.error(new Error(`Failed to load image (${i})`))};const o=new Blob([s]);a.src=window.URL.createObjectURL(o)},s=>{this._imageAborter=null,t.error(s)})})}_cacheMesh$(e,t){return Qt.create(n=>{if(!t){n.next(this._createEmptyMesh()),n.complete();return}const i=e.mesh.url;if(!i){const a=e.mesh.id,o=`Incorrect mesh URL for ${e.id} (${a}, ${i})`;console.warn(o),n.next(this._createEmptyMesh()),n.complete();return}const s=new Promise((a,o)=>{this._meshAborter=o});this._provider.getMesh(i,s).then(a=>{this._meshAborter=null,!this._disposed&&(n.next(a),n.complete())},a=>{this._meshAborter=null,console.error(a),n.next(this._createEmptyMesh()),n.complete()})})}_createEmptyMesh(){return{faces:[],vertices:[]}}_disposeImage(){this._image!=null&&window.URL.revokeObjectURL(this._image.src),this._image=null}}class VO{constructor(e){this._id=e.id,this._imageIds=e.image_ids}get id(){return this._id}get imageIds(){return this._imageIds}dispose(){this._id=null,this._imageIds=null}findNext(e){let t=this._imageIds.indexOf(e);return t+1>=this._imageIds.length||t===-1?null:this._imageIds[t+1]}findPrev(e){let t=this._imageIds.indexOf(e);return t===0||t===-1?null:this._imageIds[t-1]}}class HO{constructor(){this.sphericalPreferredDistance=2,this.sphericalMotion=2,this.sphericalSequencePenalty=1,this.sphericalMergeCCPenalty=4,this.stepPreferredDistance=4,this.stepMotion=3,this.stepRotation=4,this.stepSequencePenalty=2,this.stepMergeCCPenalty=6,this.similarDistance=2,this.similarRotation=3,this.turnDistance=4,this.turnMotion=2,this.turnSequencePenalty=1,this.turnMergeCCPenalty=4}}var ue;(function(r){r[r.Next=0]="Next",r[r.Prev=1]="Prev",r[r.StepLeft=2]="StepLeft",r[r.StepRight=3]="StepRight",r[r.StepForward=4]="StepForward",r[r.StepBackward=5]="StepBackward",r[r.TurnLeft=6]="TurnLeft",r[r.TurnRight=7]="TurnRight",r[r.TurnU=8]="TurnU",r[r.Spherical=9]="Spherical",r[r.Similar=10]="Similar"})(ue||(ue={}));class GO{constructor(){this.steps={},this.turns={},this.spherical={},this.steps[ue.StepForward]={direction:ue.StepForward,motionChange:0,useFallback:!0},this.steps[ue.StepBackward]={direction:ue.StepBackward,motionChange:Math.PI,useFallback:!0},this.steps[ue.StepLeft]={direction:ue.StepLeft,motionChange:Math.PI/2,useFallback:!1},this.steps[ue.StepRight]={direction:ue.StepRight,motionChange:-Math.PI/2,useFallback:!1},this.turns[ue.TurnLeft]={direction:ue.TurnLeft,directionChange:Math.PI/2,motionChange:Math.PI/4},this.turns[ue.TurnRight]={direction:ue.TurnRight,directionChange:-Math.PI/2,motionChange:-Math.PI/4},this.turns[ue.TurnU]={direction:ue.TurnU,directionChange:Math.PI,motionChange:null},this.spherical[ue.StepForward]={direction:ue.StepForward,directionChange:0,next:ue.StepLeft,prev:ue.StepRight},this.spherical[ue.StepBackward]={direction:ue.StepBackward,directionChange:Math.PI,next:ue.StepRight,prev:ue.StepLeft},this.spherical[ue.StepLeft]={direction:ue.StepLeft,directionChange:Math.PI/2,next:ue.StepBackward,prev:ue.StepForward},this.spherical[ue.StepRight]={direction:ue.StepRight,directionChange:-Math.PI/2,next:ue.StepForward,prev:ue.StepBackward}}}class WO{constructor(){this.sphericalMinDistance=.1,this.sphericalMaxDistance=20,this.sphericalPreferredDistance=5,this.sphericalMaxItems=4,this.sphericalMaxStepTurnChange=Math.PI/8,this.rotationMaxDistance=this.turnMaxRigDistance,this.rotationMaxDirectionChange=Math.PI/6,this.rotationMaxVerticalDirectionChange=Math.PI/8,this.similarMaxDirectionChange=Math.PI/8,this.similarMaxDistance=12,this.similarMinTimeDifference=12*3600*1e3,this.stepMaxDistance=20,this.stepMaxDirectionChange=Math.PI/6,this.stepMaxDrift=Math.PI/6,this.stepPreferredDistance=4,this.turnMaxDistance=15,this.turnMaxDirectionChange=2*Math.PI/9,this.turnMaxRigDistance=.65,this.turnMinRigDirectionChange=Math.PI/6}get maxDistance(){return Math.max(this.sphericalMaxDistance,this.similarMaxDistance,this.stepMaxDistance,this.turnMaxDistance)}}class Zt extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zt.prototype),this.name="MapillaryError"}}class gi extends Zt{constructor(e){super(e??"The argument is not valid."),Object.setPrototypeOf(this,gi.prototype),this.name="ArgumentMapillaryError"}}class Hn{constructor(){this._epsilon=1e-9}azimuthalToBearing(e){return-e+Math.PI/2}degToRad(e){return Math.PI*e/180}radToDeg(e){return 180*e/Math.PI}rotationMatrix(e){let t=new D(e[0],e[1],e[2]),n=t.length();return n>0&&t.normalize(),new et().makeRotationAxis(t,n)}rotate(e,t){let n=new D(e[0],e[1],e[2]),i=this.rotationMatrix(t);return n.applyMatrix4(i),n}opticalCenter(e,t){let n=[-e[0],-e[1],-e[2]],i=[-t[0],-t[1],-t[2]];return this.rotate(i,n)}viewingDirection(e){let t=[-e[0],-e[1],-e[2]];return this.rotate([0,0,1],t)}wrap(e,t,n){if(n<t)throw new Error("Invalid arguments: max must be larger than min.");let i=n-t;for(;e>n||e<t;)e>n?e=e-i:e<t&&(e=e+i);return e}wrapAngle(e){return this.wrap(e,-Math.PI,Math.PI)}clamp(e,t,n){return e<t?t:e>n?n:e}angleBetweenVector2(e,t,n,i){let s=Math.atan2(i,n)-Math.atan2(t,e);return this.wrapAngle(s)}angleDifference(e,t){let n=t-e;return this.wrapAngle(n)}relativeRotationAngle(e,t){let n=this.rotationMatrix([-e[0],-e[1],-e[2]]),i=this.rotationMatrix(t),a=n.multiply(i).elements,o=a[0]+a[5]+a[10];return Math.acos(Math.max(Math.min((o-1)/2,1),-1))}angleToPlane(e,t){let n=new D().fromArray(e),i=n.length();if(i<this._epsilon)return 0;let s=n.dot(new D().fromArray(t));return Math.asin(s/i)}azimuthal(e,t){const n=new D().fromArray(e),i=new D().fromArray(t),s=n.clone().dot(i),a=n.clone().sub(i.clone().multiplyScalar(s));return Math.atan2(a.y,a.x)}distanceFromLngLat(e,t,n,i){let s=6371e3,a=this.degToRad(i-t),o=this.degToRad(n-e),c=Math.sin(a/2)*Math.sin(a/2)+Math.cos(this.degToRad(t))*Math.cos(this.degToRad(i))*Math.sin(o/2)*Math.sin(o/2);return 2*s*Math.atan2(Math.sqrt(c),Math.sqrt(1-c))}}const qO=new Hn;function tt(r){return r==="spherical"}function Iu(r){return r==="fisheye"}function Lu(r,e,t){const n=Zn(r.lng,r.lat,r.alt,t.lng,t.lat,t.alt),i=qO.rotate(n,e);return[-i.x,-i.y,-i.z]}function _g(r,e,t,n,i){const s=[];for(let c=0;c<e.length;++c){const l=e[c],h=t[c];for(let u=0;u<=n;++u)s.push([l[0]+h[0]*u/n,l[1]+h[1]*u/n])}const a=new bl;return a.up.copy(r.upVector()),a.position.copy(new D().fromArray(r.unprojectSfM([0,0],0))),a.lookAt(new D().fromArray(r.unprojectSfM([0,0],10))),a.updateMatrix(),a.updateMatrixWorld(!0),s.map(c=>{const l=r.unprojectBasic(c,1e4),h=i.worldToCamera(l,a);return[Math.abs(h[0]/h[2]),Math.abs(h[1]/h[2])]})}class jO{constructor(e,t,n){this._spatial=new Hn,this._settings=e??new WO,this._directions=t??new GO,this._coefficients=n??new HO}getPotentialEdges(e,t,n){if(!e.complete)throw new gi("Image has to be full.");if(!e.merged)return[];let i=this._spatial.viewingDirection(e.rotation),s=this._spatial.angleToPlane(i.toArray(),[0,0,1]),a=[];for(let o of t){if(!o.merged||o.id===e.id)continue;let c=Zn(o.lngLat.lng,o.lngLat.lat,o.computedAltitude,e.lngLat.lng,e.lngLat.lat,e.computedAltitude),l=new D(c[0],c[1],c[2]),h=l.length();if(h>this._settings.maxDistance&&n.indexOf(o.id)<0)continue;let u=this._spatial.angleBetweenVector2(i.x,i.y,l.x,l.y),d=this._spatial.angleToPlane(l.toArray(),[0,0,1]),f=this._spatial.viewingDirection(o.rotation),p=this._spatial.angleBetweenVector2(i.x,i.y,f.x,f.y),_=this._spatial.angleToPlane(f.toArray(),[0,0,1])-s,m=this._spatial.relativeRotationAngle(e.rotation,o.rotation),v=this._spatial.angleBetweenVector2(1,0,l.x,l.y),y=o.sequenceId!=null&&e.sequenceId!=null&&o.sequenceId===e.sequenceId,x=o.mergeId===e.mergeId,w=o.creatorId===e.creatorId,E={capturedAt:o.capturedAt,directionChange:p,distance:h,spherical:tt(o.cameraType),id:o.id,motionChange:u,rotation:m,sameMergeCC:x,sameSequence:y,sameUser:w,sequenceId:o.sequenceId,verticalDirectionChange:_,verticalMotion:d,worldMotionAzimuth:v};a.push(E)}return a}computeSequenceEdges(e,t){if(!e.complete)throw new gi("Image has to be full.");if(e.sequenceId!==t.id)throw new gi("Image and sequence does not correspond.");let n=[],i=t.findNext(e.id);i!=null&&n.push({data:{direction:ue.Next,worldMotionAzimuth:Number.NaN},source:e.id,target:i});let s=t.findPrev(e.id);return s!=null&&n.push({data:{direction:ue.Prev,worldMotionAzimuth:Number.NaN},source:e.id,target:s}),n}computeSimilarEdges(e,t){if(!e.complete)throw new gi("Image has to be full.");let n=tt(e.cameraType),i={};for(let o of t)if(o.sequenceId!=null&&!o.sameSequence){if(n){if(!o.spherical)continue}else if(!o.spherical&&Math.abs(o.directionChange)>this._settings.similarMaxDirectionChange)continue;o.distance>this._settings.similarMaxDistance||o.sameUser&&Math.abs(o.capturedAt-e.capturedAt)<this._settings.similarMinTimeDifference||(i[o.sequenceId]==null&&(i[o.sequenceId]=[]),i[o.sequenceId].push(o))}let s=[],a=tt(e.cameraType)?o=>o.distance:o=>this._coefficients.similarDistance*o.distance+this._coefficients.similarRotation*o.rotation;for(let o in i){if(!i.hasOwnProperty(o))continue;let c=Number.MAX_VALUE,l=null;for(let h of i[o]){let u=a(h);u<c&&(c=u,l=h)}l!=null&&s.push(l)}return s.map(o=>({data:{direction:ue.Similar,worldMotionAzimuth:o.worldMotionAzimuth},source:e.id,target:o.id}))}computeStepEdges(e,t,n,i){if(!e.complete)throw new gi("Image has to be full.");let s=[];if(tt(e.cameraType))return s;for(let a in this._directions.steps){if(!this._directions.steps.hasOwnProperty(a))continue;let o=this._directions.steps[a],c=Number.MAX_VALUE,l=null,h=null;for(let u of t){if(u.spherical||Math.abs(u.directionChange)>this._settings.stepMaxDirectionChange)continue;let d=this._spatial.angleDifference(o.motionChange,u.motionChange),f=this._spatial.angleDifference(u.directionChange,d),p=Math.max(Math.abs(d),Math.abs(f));if(Math.abs(p)>this._settings.stepMaxDrift)continue;let g=u.id;if(o.useFallback&&(g===n||g===i)&&(h=u),u.distance>this._settings.stepMaxDistance)continue;d=Math.sqrt(d*d+u.verticalMotion*u.verticalMotion);let _=this._coefficients.stepPreferredDistance*Math.abs(u.distance-this._settings.stepPreferredDistance)/this._settings.stepMaxDistance+this._coefficients.stepMotion*d/this._settings.stepMaxDrift+this._coefficients.stepRotation*u.rotation/this._settings.stepMaxDirectionChange+this._coefficients.stepSequencePenalty*(u.sameSequence?0:1)+this._coefficients.stepMergeCCPenalty*(u.sameMergeCC?0:1);_<c&&(c=_,l=u)}l=l??h,l!=null&&s.push({data:{direction:o.direction,worldMotionAzimuth:l.worldMotionAzimuth},source:e.id,target:l.id})}return s}computeTurnEdges(e,t){if(!e.complete)throw new gi("Image has to be full.");let n=[];if(tt(e.cameraType))return n;for(let i in this._directions.turns){if(!this._directions.turns.hasOwnProperty(i))continue;let s=this._directions.turns[i],a=Number.MAX_VALUE,o=null;for(let c of t){if(c.spherical||c.distance>this._settings.turnMaxDistance)continue;let l=s.direction!==ue.TurnU&&c.distance<this._settings.turnMaxRigDistance&&Math.abs(c.directionChange)>this._settings.turnMinRigDirectionChange,h=this._spatial.angleDifference(s.directionChange,c.directionChange),u;if(l&&c.directionChange*s.directionChange>0&&Math.abs(c.directionChange)<Math.abs(s.directionChange))u=-Math.PI/2+Math.abs(c.directionChange);else{if(Math.abs(h)>this._settings.turnMaxDirectionChange)continue;let d=s.motionChange?this._spatial.angleDifference(s.motionChange,c.motionChange):0;d=Math.sqrt(d*d+c.verticalMotion*c.verticalMotion),u=this._coefficients.turnDistance*c.distance/this._settings.turnMaxDistance+this._coefficients.turnMotion*d/Math.PI+this._coefficients.turnSequencePenalty*(c.sameSequence?0:1)+this._coefficients.turnMergeCCPenalty*(c.sameMergeCC?0:1)}u<a&&(a=u,o=c)}o!=null&&n.push({data:{direction:s.direction,worldMotionAzimuth:o.worldMotionAzimuth},source:e.id,target:o.id})}return n}computePerspectiveToSphericalEdges(e,t){if(!e.complete)throw new gi("Image has to be full.");if(tt(e.cameraType))return[];let n=Number.MAX_VALUE,i=null;for(let s of t){if(!s.spherical)continue;let a=this._coefficients.sphericalPreferredDistance*Math.abs(s.distance-this._settings.sphericalPreferredDistance)/this._settings.sphericalMaxDistance+this._coefficients.sphericalMotion*Math.abs(s.motionChange)/Math.PI+this._coefficients.sphericalMergeCCPenalty*(s.sameMergeCC?0:1);a<n&&(n=a,i=s)}return i==null?[]:[{data:{direction:ue.Spherical,worldMotionAzimuth:i.worldMotionAzimuth},source:e.id,target:i.id}]}computeSphericalEdges(e,t){if(!e.complete)throw new gi("Image has to be full.");if(!tt(e.cameraType))return[];let n=[],i=[],s=[];for(let h of t)if(!(h.distance>this._settings.sphericalMaxDistance))if(h.spherical){if(h.distance<this._settings.sphericalMinDistance)continue;i.push(h)}else for(let u in this._directions.spherical){if(!this._directions.spherical.hasOwnProperty(u))continue;let d=this._directions.spherical[u],f=this._spatial.angleDifference(h.directionChange,h.motionChange),p=this._spatial.angleDifference(d.directionChange,f);if(!(Math.abs(p)>this._settings.sphericalMaxStepTurnChange)){s.push([d.direction,h]);break}}let a=Math.PI/this._settings.sphericalMaxItems,o=[],c=[];for(let h=0;h<this._settings.sphericalMaxItems;h++){let u=h/this._settings.sphericalMaxItems*2*Math.PI,d=Number.MAX_VALUE,f=null;for(let p of i){let g=this._spatial.angleDifference(u,p.motionChange);if(Math.abs(g)>a)continue;let _=Number.MAX_VALUE;for(let v of o){let y=Math.abs(this._spatial.angleDifference(v,p.motionChange));y<_&&(_=y)}if(_<=a)continue;let m=this._coefficients.sphericalPreferredDistance*Math.abs(p.distance-this._settings.sphericalPreferredDistance)/this._settings.sphericalMaxDistance+this._coefficients.sphericalMotion*Math.abs(g)/a+this._coefficients.sphericalSequencePenalty*(p.sameSequence?0:1)+this._coefficients.sphericalMergeCCPenalty*(p.sameMergeCC?0:1);m<d&&(d=m,f=p)}f!=null?(o.push(f.motionChange),n.push({data:{direction:ue.Spherical,worldMotionAzimuth:f.worldMotionAzimuth},source:e.id,target:f.id})):c.push(u)}let l={};l[ue.Spherical]=o,l[ue.StepForward]=[],l[ue.StepLeft]=[],l[ue.StepBackward]=[],l[ue.StepRight]=[];for(let h of c){let u=[];for(let d in this._directions.spherical){if(!this._directions.spherical.hasOwnProperty(d))continue;let f=this._directions.spherical[d],p=l[ue.Spherical].concat(l[f.direction]).concat(l[f.prev]).concat(l[f.next]),g=Number.MAX_VALUE,_=null;for(let m of s){if(m[0]!==f.direction)continue;let v=this._spatial.angleDifference(h,m[1].motionChange);if(Math.abs(v)>a)continue;let y=Number.MAX_VALUE;for(let w of p){let E=Math.abs(this._spatial.angleDifference(w,m[1].motionChange));E<y&&(y=E)}if(y<=a)continue;let x=this._coefficients.sphericalPreferredDistance*Math.abs(m[1].distance-this._settings.sphericalPreferredDistance)/this._settings.sphericalMaxDistance+this._coefficients.sphericalMotion*Math.abs(v)/a+this._coefficients.sphericalMergeCCPenalty*(m[1].sameMergeCC?0:1);x<g&&(g=x,_=m)}_!=null&&(u.push(_),n.push({data:{direction:_[0],worldMotionAzimuth:_[1].worldMotionAzimuth},source:e.id,target:_[1].id}))}for(let d of u)l[d[0]].push(d[1].motionChange)}return n}}class Xt extends Zt{constructor(e){super(e),Object.setPrototypeOf(this,Xt.prototype),this.name="GraphMapillaryError"}}class Qc{constructor(e,t,n,i,s,a){this._api=e,this._cachedNodes={},this._cachedNodeTiles={},this._cachedSequenceNodes={},this._cachedSpatialEdges={},this._cachedTiles={},this._cachingFill$={},this._cachingFull$={},this._cachingSequenceNodes$={},this._cachingSequences$={},this._cachingSpatialArea$={},this._cachingTiles$={},this._changed$=new De,this._filterCreator=s??new I2,this._filter=this._filterCreator.createFilter(void 0),this._filterSubject$=new De,this._filter$=Wi(Ze(this._filter),this._filterSubject$).pipe(Ke(1),Ue()),this._filterSubscription=this._filter$.subscribe(()=>{}),this._defaultAlt=2,this._edgeCalculator=i??new jO,this._graphCalculator=n??new gg,this._configuration=a??{maxSequences:50,maxUnusedImages:100,maxUnusedPreStoredImages:30,maxUnusedTiles:20},this._nodes={},this._nodeIndex=t??new Qc._spatialIndex(16),this._nodeIndexTiles={},this._nodeToTile={},this._preStored={},this._requiredNodeTiles={},this._requiredSpatialArea={},this._sequences={},this._tileThreshold=20}static register(e){Qc._spatialIndex=e}get api(){return this._api}get changed$(){return this._changed$}get filter$(){return this._filter$}cacheBoundingBox$(e,t){const n=this._api.data.geometry.bboxToCellIds(e,t).filter(i=>!(i in this._cachedTiles)).map(i=>i in this._cachingTiles$?this._cachingTiles$[i]:this._cacheTile$(i));return n.length===0&&n.push(Ze(this)),on(n).pipe(ua(),Do(),ct(()=>{const i=this._nodeIndex.search({maxX:t.lng,maxY:t.lat,minX:e.lng,minY:e.lat}).map(u=>u.node),s=[],a=[];for(const u of i)u.complete?s.push(u):a.push(u.id);const o=[],c=200;for(;a.length>0;)o.push(a.splice(0,c));const l=Ze(s),h=o.map(u=>this._api.getSpatialImages$(u).pipe(V(d=>{const f=[];for(const p of d){if(!this.hasNode(p.node_id))continue;const _=this.getNode(p.node_id);_.complete||this._makeFull(_,p.node),f.push(_)}return f})));return xt(l,on(h).pipe(ua()))}),J_((i,s)=>i.concat(s)))}cacheCell$(e){return(e in this._cachedTiles?Ze(this):e in this._cachingTiles$?this._cachingTiles$[e]:this._cacheTile$(e)).pipe(ct(()=>{const n=this._cachedTiles[e];n.accessed=new Date().getTime();const i=n.nodes,s=[],a=[];for(const u of i)u.complete?s.push(u):a.push(u.id);const o=[],c=200;for(;a.length>0;)o.push(a.splice(0,c));const l=Ze(s),h=o.map(u=>this._api.getSpatialImages$(u).pipe(V(d=>{const f=[];for(const p of d){if(!p.node){console.warn(`Image is empty (${p.node})`);continue}const g=p.node_id;if(!this.hasNode(g))continue;const _=this.getNode(g);_.complete||this._makeFull(_,p.node),f.push(_)}return f})));return xt(l,on(h).pipe(ua()))}),J_((n,i)=>n.concat(i)))}cacheFill$(e){if(e in this._cachingFull$)throw new Xt(`Cannot fill node while caching full (${e}).`);if(!this.hasNode(e))throw new Xt(`Cannot fill node that does not exist in graph (${e}).`);if(e in this._cachingFill$)return this._cachingFill$[e];const t=this.getNode(e);if(t.complete)throw new Xt(`Cannot fill node that is already full (${e}).`);return this._cachingFill$[e]=this._api.getSpatialImages$([e]).pipe(an(n=>{for(const i of n)i.node||console.warn(`Image is empty ${i.node_id}`),t.complete||this._makeFull(t,i.node),delete this._cachingFill$[i.node_id]}),V(()=>this),_i(()=>{e in this._cachingFill$&&delete this._cachingFill$[e],this._changed$.next(this)}),Ci(),Ue()),this._cachingFill$[e]}cacheFull$(e){if(e in this._cachingFull$)return this._cachingFull$[e];if(this.hasNode(e))throw new Xt(`Cannot cache full node that already exist in graph (${e}).`);return this._cachingFull$[e]=this._api.getImages$([e]).pipe(an(t=>{for(const n of t){if(!n.node)throw new Xt(`Image does not exist (${e}, ${n.node}).`);const i=n.node_id;if(this.hasNode(i)){const s=this.getNode(e);s.complete||this._makeFull(s,n.node)}else{if(n.node.sequence.id==null)throw new Xt(`Image has no sequence key (${e}).`);const s=new Oh(n.node);this._makeFull(s,n.node);const a=this._api.data.geometry.lngLatToCellId(s.originalLngLat);this._preStore(a,s),this._setNode(s),delete this._cachingFull$[i]}}}),V(()=>this),_i(()=>{e in this._cachingFull$&&delete this._cachingFull$[e],this._changed$.next(this)}),Ci(),Ue()),this._cachingFull$[e]}cacheNodeSequence$(e){if(!this.hasNode(e))throw new Xt(`Cannot cache sequence edges of node that does not exist in graph (${e}).`);let t=this.getNode(e);if(t.sequenceId in this._sequences)throw new Xt(`Sequence already cached (${e}), (${t.sequenceId}).`);return this._cacheSequence$(t.sequenceId)}cacheSequence$(e){if(e in this._sequences)throw new Xt(`Sequence already cached (${e})`);return this._cacheSequence$(e)}cacheSequenceEdges(e){let t=this.getNode(e);if(!(t.sequenceId in this._sequences))throw new Xt(`Sequence is not cached (${e}), (${t.sequenceId})`);let n=this._sequences[t.sequenceId].sequence,i=this._edgeCalculator.computeSequenceEdges(t,n);t.cacheSequenceEdges(i)}cacheSequenceNodes$(e,t){if(!this.hasSequence(e))throw new Xt(`Cannot cache sequence nodes of sequence that does not exist in graph (${e}).`);if(this.hasSequenceNodes(e))throw new Xt(`Sequence nodes already cached (${e}).`);const n=this.getSequence(e);if(n.id in this._cachingSequenceNodes$)return this._cachingSequenceNodes$[n.id];const i=[],s=n.imageIds.slice(),a=50;if(t&&s.length>a){const h=s.indexOf(t),u=Math.max(0,Math.min(h-a/2,s.length-a));i.push(s.splice(u,a))}const o=200;for(;s.length>0;)i.push(s.splice(0,o));let c=i.length;const l=on(i).pipe(ct(h=>this._api.getImages$(h).pipe(an(u=>{for(const d of u){if(!d.node){console.warn(`Image empty (${d.node_id})`);continue}const f=d.node_id;if(this.hasNode(f)){const p=this.getNode(f);p.complete||this._makeFull(p,d.node)}else{d.node.sequence.id==null&&console.warn(`Sequence missing, discarding node (${d.node_id})`);const p=new Oh(d.node);this._makeFull(p,d.node);const g=this._api.data.geometry.lngLatToCellId(p.originalLngLat);this._preStore(g,p),this._setNode(p)}}c--}),V(()=>this)),6),Do(),_i(()=>{delete this._cachingSequenceNodes$[n.id],c===0&&(this._cachedSequenceNodes[n.id]=!0)}),Ci(),Ue());return this._cachingSequenceNodes$[n.id]=l,l}cacheSpatialArea$(e){if(!this.hasNode(e))throw new Xt(`Cannot cache spatial area of node that does not exist in graph (${e}).`);if(e in this._cachedSpatialEdges)throw new Xt(`Image already spatially cached (${e}).`);if(!(e in this._requiredSpatialArea))throw new Xt(`Spatial area not determined (${e}).`);let t=this._requiredSpatialArea[e];if(Object.keys(t.cacheNodes).length===0)throw new Xt(`Spatial nodes already cached (${e}).`);if(e in this._cachingSpatialArea$)return this._cachingSpatialArea$[e];let n=[];for(;t.cacheKeys.length>0;)n.push(t.cacheKeys.splice(0,200));let i=n.length,s=[];for(let a of n){let o=this._api.getSpatialImages$(a).pipe(an(c=>{for(const l of c){if(!l.node){console.warn(`Image is empty (${l.node_id})`);continue}const h=l.node_id,u=t.cacheNodes[h];if(u.complete){delete t.cacheNodes[h];continue}this._makeFull(u,l.node),delete t.cacheNodes[h]}--i===0&&delete this._cachingSpatialArea$[e]}),V(()=>this),$t(c=>{for(let l of a)l in t.all&&delete t.all[l],l in t.cacheNodes&&delete t.cacheNodes[l];throw--i===0&&delete this._cachingSpatialArea$[e],c}),_i(()=>{Object.keys(t.cacheNodes).length===0&&this._changed$.next(this)}),Ci(),Ue());s.push(o)}return this._cachingSpatialArea$[e]=s,s}cacheSpatialEdges(e){if(e in this._cachedSpatialEdges)throw new Xt(`Spatial edges already cached (${e}).`);let t=this.getNode(e),n=this._sequences[t.sequenceId].sequence,i=[],s=n.findPrev(t.id);s!=null&&i.push(s);let a=n.findNext(t.id);a!=null&&i.push(a);let o=this._requiredSpatialArea[e].all,c=[],l=this._filter;for(let d in o){if(!o.hasOwnProperty(d))continue;let f=o[d];l(f)&&c.push(f)}let h=this._edgeCalculator.getPotentialEdges(t,c,i),u=this._edgeCalculator.computeStepEdges(t,h,s,a);u=u.concat(this._edgeCalculator.computeTurnEdges(t,h)),u=u.concat(this._edgeCalculator.computeSphericalEdges(t,h)),u=u.concat(this._edgeCalculator.computePerspectiveToSphericalEdges(t,h)),u=u.concat(this._edgeCalculator.computeSimilarEdges(t,h)),t.cacheSpatialEdges(u),this._cachedSpatialEdges[e]=t,delete this._requiredSpatialArea[e],delete this._cachedNodeTiles[e]}cacheTiles$(e){if(e in this._cachedNodeTiles)throw new Xt(`Tiles already cached (${e}).`);if(e in this._cachedSpatialEdges)throw new Xt(`Spatial edges already cached so tiles considered cached (${e}).`);if(!(e in this._requiredNodeTiles))throw new Xt(`Tiles have not been determined (${e}).`);let t=this._requiredNodeTiles[e];if(t.cache.length===0&&t.caching.length===0)throw new Xt(`Tiles already cached (${e}).`);if(!this.hasNode(e))throw new Xt(`Cannot cache tiles of node that does not exist in graph (${e}).`);let n=t.cache.slice();t.caching=this._requiredNodeTiles[e].caching.concat(n),t.cache=[];let i=[];for(let s of t.caching){const a=s in this._cachingTiles$?this._cachingTiles$[s]:this._cacheTile$(s);i.push(a.pipe(an(o=>{let c=t.caching.indexOf(s);c>-1&&t.caching.splice(c,1),t.caching.length===0&&t.cache.length===0&&(delete this._requiredNodeTiles[e],this._cachedNodeTiles[e]=!0)}),$t(o=>{let c=t.caching.indexOf(s);throw c>-1&&t.caching.splice(c,1),t.caching.length===0&&t.cache.length===0&&(delete this._requiredNodeTiles[e],this._cachedNodeTiles[e]=!0),o}),_i(()=>{this._changed$.next(this)}),Ci(),Ue()))}return i}initializeCache(e){if(e in this._cachedNodes)throw new Xt(`Image already in cache (${e}).`);const t=this.getNode(e),n=this._api.data;t.initializeCache(new zO(n));const i=new Date().getTime();this._cachedNodes[e]={accessed:i,node:t},this._updateCachedTileAccess(e,i)}isCachingFill(e){return e in this._cachingFill$}isCachingFull(e){return e in this._cachingFull$}isCachingNodeSequence(e){return this.getNode(e).sequenceId in this._cachingSequences$}isCachingSequence(e){return e in this._cachingSequences$}isCachingSequenceNodes(e){return e in this._cachingSequenceNodes$}isCachingTiles(e){return e in this._requiredNodeTiles&&this._requiredNodeTiles[e].cache.length===0&&this._requiredNodeTiles[e].caching.length>0}hasInitializedCache(e){return e in this._cachedNodes}hasNode(e){let t=new Date().getTime();return this._updateCachedNodeAccess(e,t),this._updateCachedTileAccess(e,t),e in this._nodes}hasNodeSequence(e){let n=this.getNode(e).sequenceId,i=n in this._sequences;return i&&(this._sequences[n].accessed=new Date().getTime()),i}hasSequence(e){let t=e in this._sequences;return t&&(this._sequences[e].accessed=new Date().getTime()),t}hasSequenceNodes(e){return e in this._cachedSequenceNodes}hasSpatialArea(e){if(!this.hasNode(e))throw new Xt(`Spatial area nodes cannot be determined if node not in graph (${e}).`);if(e in this._cachedSpatialEdges)return!0;if(e in this._requiredSpatialArea)return Object.keys(this._requiredSpatialArea[e].cacheNodes).length===0;let t=this.getNode(e),n=this._graphCalculator.boundingBoxCorners(t.lngLat,this._tileThreshold),i=this._nodeIndex.search({maxX:n[1].lng,maxY:n[1].lat,minX:n[0].lng,minY:n[0].lat}),s={all:{},cacheKeys:[],cacheNodes:{}};for(let a of i)s.all[a.node.id]=a.node,a.node.complete||(s.cacheKeys.push(a.node.id),s.cacheNodes[a.node.id]=a.node);return this._requiredSpatialArea[e]=s,s.cacheKeys.length===0}hasTiles(e){if(e in this._cachedNodeTiles||e in this._cachedSpatialEdges)return!0;if(!this.hasNode(e))throw new Xt(`Image does not exist in graph (${e}).`);let t={cache:[],caching:[]};if(e in this._requiredNodeTiles)t=this._requiredNodeTiles[e];else{const n=this.getNode(e),[i,s]=this._graphCalculator.boundingBoxCorners(n.lngLat,this._tileThreshold);t.cache=this._api.data.geometry.bboxToCellIds(i,s).filter(a=>!(a in this._cachedTiles)),t.cache.length>0&&(this._requiredNodeTiles[e]=t)}return t.cache.length===0&&t.caching.length===0}getNode(e){let t=new Date().getTime();return this._updateCachedNodeAccess(e,t),this._updateCachedTileAccess(e,t),this._nodes[e]}getSequence(e){let t=this._sequences[e];return t.accessed=new Date().getTime(),t.sequence}resetSpatialEdges(){let e=Object.keys(this._cachedSpatialEdges);for(let t of e)this._cachedSpatialEdges[t].resetSpatialEdges(),delete this._cachedSpatialEdges[t]}reset(e){const t=[];for(const n of e){if(!this.hasNode(n))throw new Error(`Image does not exist ${n}`);const i=this.getNode(n);i.resetSequenceEdges(),i.resetSpatialEdges(),t.push(i)}for(let n of Object.keys(this._cachedNodes))e.indexOf(n)===-1&&(this._cachedNodes[n].node.dispose(),delete this._cachedNodes[n]);this._cachedNodeTiles={},this._cachedSpatialEdges={},this._cachedTiles={},this._cachingFill$={},this._cachingFull$={},this._cachingSequences$={},this._cachingSpatialArea$={},this._cachingTiles$={},this._nodes={},this._nodeToTile={},this._preStored={};for(const n of t){this._nodes[n.id]=n;const i=this._api.data.geometry.lngLatToCellId(n.originalLngLat);this._preStore(i,n)}this._requiredNodeTiles={},this._requiredSpatialArea={},this._sequences={},this._nodeIndexTiles={},this._nodeIndex.clear()}setFilter(e){this._filter=this._filterCreator.createFilter(e),this._filterSubject$.next(this._filter)}uncache(e,t,n){const i={};this._addNewKeys(i,this._cachingFull$),this._addNewKeys(i,this._cachingFill$),this._addNewKeys(i,this._cachingSpatialArea$),this._addNewKeys(i,this._requiredNodeTiles),this._addNewKeys(i,this._requiredSpatialArea);for(const v of e)v in i||(i[v]=!0);const s=this._tileThreshold,a=this._graphCalculator,o=this._api.data.geometry,c=new Set(t);for(let v in i){if(!i.hasOwnProperty(v))continue;const y=this._nodes[v],[x,w]=a.boundingBoxCorners(y.lngLat,s),E=o.bboxToCellIds(x,w);for(const M of E)c.has(M)||c.add(M)}const l=[];for(let v in this._cachedTiles)!this._cachedTiles.hasOwnProperty(v)||c.has(v)||l.push([v,this._cachedTiles[v]]);const h=l.sort((v,y)=>y[1].accessed-v[1].accessed).slice(this._configuration.maxUnusedTiles).map(v=>v[0]);for(let v of h)this._uncacheTile(v,n);const u=[],d=[];for(let v in this._preStored){if(!this._preStored.hasOwnProperty(v)||v in this._cachingTiles$)continue;const y=this._preStored[v];for(let x in y)!y.hasOwnProperty(x)||x in i||y[x].sequenceId!==n&&(x in this._cachedNodes?u.push([this._cachedNodes[x],v]):d.push([x,v]))}const f=u.sort(([v],[y])=>y.accessed-v.accessed).slice(this._configuration.maxUnusedPreStoredImages).map(([v,y])=>[v.node.id,y]);this._uncachePreStored(d),this._uncachePreStored(f);const p=[];for(let v in this._cachedNodes)!this._cachedNodes.hasOwnProperty(v)||v in i||p.push(this._cachedNodes[v]);const g=p.sort((v,y)=>y.accessed-v.accessed).slice(this._configuration.maxUnusedImages);for(const v of g){v.node.uncache();const y=v.node.id;delete this._cachedNodes[y],y in this._cachedNodeTiles&&delete this._cachedNodeTiles[y],y in this._cachedSpatialEdges&&delete this._cachedSpatialEdges[y]}const _=[];for(let v in this._sequences)!this._sequences.hasOwnProperty(v)||v in this._cachingSequences$||v===n||_.push(this._sequences[v]);const m=_.sort((v,y)=>y.accessed-v.accessed).slice(this._configuration.maxSequences);for(const v of m){const y=v.sequence.id;delete this._sequences[y],y in this._cachedSequenceNodes&&delete this._cachedSequenceNodes[y],v.sequence.dispose()}}updateCells$(e){const t=this._cachedTiles,n=this._cachingTiles$;return on(e).pipe(ct(i=>i in t?this._updateCell$(i):i in n?n[i].pipe($t(()=>Ze(this)),ct(()=>this._updateCell$(i))):rt()))}unsubscribe(){this._filterSubscription.unsubscribe()}_addNewKeys(e,t){for(let n in t)!t.hasOwnProperty(n)||!this.hasNode(n)||n in e||(e[n]=!0)}_cacheSequence$(e){return e in this._cachingSequences$?this._cachingSequences$[e]:(this._cachingSequences$[e]=this._api.getSequence$(e).pipe(an(t=>{t?(t.id in this._sequences||(this._sequences[t.id]={accessed:new Date().getTime(),sequence:new VO(t)}),delete this._cachingSequences$[e]):console.warn(`Sequence does not exist (${e})`)}),V(()=>this),_i(()=>{e in this._cachingSequences$&&delete this._cachingSequences$[e],this._changed$.next(this)}),Ci(),Ue()),this._cachingSequences$[e])}_cacheTile$(e){return this._cachingTiles$[e]=this._api.getCoreImages$(e).pipe(an(t=>{if(e in this._cachedTiles)return;const n=t.images;this._nodeIndexTiles[e]=[],this._cachedTiles[e]={accessed:new Date().getTime(),nodes:[]};const i=this._cachedTiles[e].nodes,s=this._removeFromPreStore(e);for(const a of n){if(!a)break;if(a.sequence.id==null){console.warn(`Sequence missing, discarding node (${a.id})`);continue}if(s!=null&&a.id in s){const l=s[a.id];delete s[a.id],i.push(l);const h={lat:l.lngLat.lat,lng:l.lngLat.lng,node:l};this._nodeIndex.insert(h),this._nodeIndexTiles[e].push(h),this._nodeToTile[l.id]=e;continue}const o=new Oh(a);i.push(o);const c={lat:o.lngLat.lat,lng:o.lngLat.lng,node:o};this._nodeIndex.insert(c),this._nodeIndexTiles[e].push(c),this._nodeToTile[o.id]=e,this._setNode(o)}delete this._cachingTiles$[e]}),V(()=>this),$t(t=>{throw delete this._cachingTiles$[e],t}),Ci(),Ue()),this._cachingTiles$[e]}_makeFull(e,t){t.computed_altitude==null&&(t.computed_altitude=this._defaultAlt),t.computed_rotation==null&&(t.computed_rotation=this._graphCalculator.rotationFromCompass(t.compass_angle,t.exif_orientation)),e.makeComplete(t)}_preStore(e,t){e in this._preStored||(this._preStored[e]={}),this._preStored[e][t.id]=t}_removeFromPreStore(e){let t=null;return e in this._preStored&&(t=this._preStored[e],delete this._preStored[e]),t}_setNode(e){let t=e.id;if(this.hasNode(t))throw new Xt(`Image already exist (${t}).`);this._nodes[t]=e}_uncacheTile(e,t){for(let n of this._cachedTiles[e].nodes){let i=n.id;delete this._nodeToTile[i],i in this._cachedNodes&&delete this._cachedNodes[i],i in this._cachedNodeTiles&&delete this._cachedNodeTiles[i],i in this._cachedSpatialEdges&&delete this._cachedSpatialEdges[i],n.sequenceId===t?(this._preStore(e,n),n.uncache()):(delete this._nodes[i],n.sequenceId in this._cachedSequenceNodes&&delete this._cachedSequenceNodes[n.sequenceId],n.dispose())}for(let n of this._nodeIndexTiles[e])this._nodeIndex.remove(n);delete this._nodeIndexTiles[e],delete this._cachedTiles[e]}_uncachePreStored(e){let t={};for(let[n,i]of e){n in this._nodes&&delete this._nodes[n],n in this._cachedNodes&&delete this._cachedNodes[n];let s=this._preStored[i][n];s.sequenceId in this._cachedSequenceNodes&&delete this._cachedSequenceNodes[s.sequenceId],delete this._preStored[i][n],s.dispose(),t[i]=!0}for(let n in t)t.hasOwnProperty(n)&&Object.keys(this._preStored[n]).length===0&&delete this._preStored[n]}_updateCachedTileAccess(e,t){e in this._nodeToTile&&(this._cachedTiles[this._nodeToTile[e]].accessed=t)}_updateCachedNodeAccess(e,t){e in this._cachedNodes&&(this._cachedNodes[e].accessed=t)}_updateCell$(e){return this._api.getCoreImages$(e).pipe(ct(t=>{if(!(e in this._cachedTiles))return rt();const n=this._nodeIndex,i=this._nodeIndexTiles[e],s=this._nodeToTile,a=this._cachedTiles[e];a.accessed=new Date().getTime();const o=a.nodes,c=t.images;for(const l of c){if(l==null)break;if(this.hasNode(l.id))continue;if(l.sequence.id==null){console.warn(`Sequence missing, discarding node (${l.id})`);continue}const h=new Oh(l);o.push(h);const u={lat:h.lngLat.lat,lng:h.lngLat.lng,node:h};n.insert(u),i.push(u),s[h.id]=e,this._setNode(h)}return Ze(e)}),$t(t=>(console.error(t),rt())))}}class el{constructor(){this._hash={},this._index=new el._spatialIndex(16),this._indexChanged$=new De,this._updated$=new De}static register(e){el._spatialIndex=e}get changed$(){return this._indexChanged$}get updated$(){return this._updated$}add(e){const t=[],n=this._hash,i=this._index;for(const s of e){const a=s.id;a in n&&(i.remove(n[a]),t.push(s));const o={lat:s.lngLat.lat,lng:s.lngLat.lng,marker:s};n[a]=o,i.insert(o)}t.length>0&&this._updated$.next(t),e.length>t.length&&this._indexChanged$.next(this)}has(e){return e in this._hash}get(e){return this.has(e)?this._hash[e].marker:void 0}getAll(){return this._index.all().map(e=>e.marker)}remove(e){const t=this._hash,n=this._index;let i=!1;for(const s of e){if(!(s in t))continue;const a=t[s];n.remove(a),delete t[s],i=!0}i&&this._indexChanged$.next(this)}removeAll(){this._hash={},this._index.clear(),this._indexChanged$.next(this)}search([e,t]){return this._index.search({maxX:t.lng,maxY:t.lat,minX:e.lng,minY:e.lat}).map(n=>n.marker)}update(e){const t=this._hash,n=this._index,i=e.id;if(!(i in t))return;n.remove(t[i]);const s={lat:e.lngLat.lat,lng:e.lngLat.lng,marker:e};t[i]=s,n.insert(s)}}function XO(r,e,t,n,i){xM(r,e,t||0,n||r.length-1,i||YO)}function xM(r,e,t,n,i){for(;n>t;){if(n-t>600){var s=n-t+1,a=e-t+1,o=Math.log(s),c=.5*Math.exp(2*o/3),l=.5*Math.sqrt(o*c*(s-c)/s)*(a-s/2<0?-1:1),h=Math.max(t,Math.floor(e-a*c/s+l)),u=Math.min(n,Math.floor(e+(s-a)*c/s+l));xM(r,e,h,u,i)}var d=r[e],f=t,p=n;for(vc(r,t,e),i(r[n],d)>0&&vc(r,t,n);f<p;){for(vc(r,f,p),f++,p--;i(r[f],d)<0;)f++;for(;i(r[p],d)>0;)p--}i(r[t],d)===0?vc(r,t,p):(p++,vc(r,p,n)),p<=e&&(t=p+1),e<=p&&(n=p-1)}}function vc(r,e,t){var n=r[e];r[e]=r[t],r[t]=n}function YO(r,e){return r<e?-1:r>e?1:0}class ZO{constructor(e=9){this._maxEntries=Math.max(4,e),this._minEntries=Math.max(2,Math.ceil(this._maxEntries*.4)),this.clear()}all(){return this._all(this.data,[])}search(e){let t=this.data;const n=[];if(!Bh(e,t))return n;const i=this.toBBox,s=[];for(;t;){for(let a=0;a<t.children.length;a++){const o=t.children[a],c=t.leaf?i(o):o;Bh(e,c)&&(t.leaf?n.push(o):$f(e,c)?this._all(o,n):s.push(o))}t=s.pop()}return n}collides(e){let t=this.data;if(!Bh(e,t))return!1;const n=[];for(;t;){for(let i=0;i<t.children.length;i++){const s=t.children[i],a=t.leaf?this.toBBox(s):s;if(Bh(e,a)){if(t.leaf||$f(e,a))return!0;n.push(s)}}t=n.pop()}return!1}load(e){if(!(e&&e.length))return this;if(e.length<this._minEntries){for(let n=0;n<e.length;n++)this.insert(e[n]);return this}let t=this._build(e.slice(),0,e.length-1,0);if(!this.data.children.length)this.data=t;else if(this.data.height===t.height)this._splitRoot(this.data,t);else{if(this.data.height<t.height){const n=this.data;this.data=t,t=n}this._insert(t,this.data.height-t.height-1,!0)}return this}insert(e){return e&&this._insert(e,this.data.height-1),this}clear(){return this.data=fo([]),this}remove(e,t){if(!e)return this;let n=this.data;const i=this.toBBox(e),s=[],a=[];let o,c,l;for(;n||s.length;){if(n||(n=s.pop(),c=s[s.length-1],o=a.pop(),l=!0),n.leaf){const h=KO(e,n.children,t);if(h!==-1)return n.children.splice(h,1),s.push(n),this._condense(s),this}!l&&!n.leaf&&$f(n,i)?(s.push(n),a.push(o),o=0,c=n,n=n.children[0]):c?(o++,n=c.children[o],l=!1):n=null}return this}toBBox(e){return e}compareMinX(e,t){return e.minX-t.minX}compareMinY(e,t){return e.minY-t.minY}toJSON(){return this.data}fromJSON(e){return this.data=e,this}_all(e,t){const n=[];for(;e;)e.leaf?t.push(...e.children):n.push(...e.children),e=n.pop();return t}_build(e,t,n,i){const s=n-t+1;let a=this._maxEntries,o;if(s<=a)return o=fo(e.slice(t,n+1)),so(o,this.toBBox),o;i||(i=Math.ceil(Math.log(s)/Math.log(a)),a=Math.ceil(s/Math.pow(a,i-1))),o=fo([]),o.leaf=!1,o.height=i;const c=Math.ceil(s/a),l=c*Math.ceil(Math.sqrt(a));T0(e,t,n,l,this.compareMinX);for(let h=t;h<=n;h+=l){const u=Math.min(h+l-1,n);T0(e,h,u,c,this.compareMinY);for(let d=h;d<=u;d+=c){const f=Math.min(d+c-1,u);o.children.push(this._build(e,d,f,i-1))}}return so(o,this.toBBox),o}_chooseSubtree(e,t,n,i){for(;i.push(t),!(t.leaf||i.length-1===n);){let s=1/0,a=1/0,o;for(let c=0;c<t.children.length;c++){const l=t.children[c],h=Bf(l),u=eU(e,l)-h;u<a?(a=u,s=h<s?h:s,o=l):u===a&&h<s&&(s=h,o=l)}t=o||t.children[0]}return t}_insert(e,t,n){const i=n?e:this.toBBox(e),s=[],a=this._chooseSubtree(i,this.data,t,s);for(a.children.push(e),Cc(a,i);t>=0&&s[t].children.length>this._maxEntries;)this._split(s,t),t--;this._adjustParentBBoxes(i,s,t)}_split(e,t){const n=e[t],i=n.children.length,s=this._minEntries;this._chooseSplitAxis(n,s,i);const a=this._chooseSplitIndex(n,s,i),o=fo(n.children.splice(a,n.children.length-a));o.height=n.height,o.leaf=n.leaf,so(n,this.toBBox),so(o,this.toBBox),t?e[t-1].children.push(o):this._splitRoot(n,o)}_splitRoot(e,t){this.data=fo([e,t]),this.data.height=e.height+1,this.data.leaf=!1,so(this.data,this.toBBox)}_chooseSplitIndex(e,t,n){let i,s=1/0,a=1/0;for(let o=t;o<=n-t;o++){const c=Ec(e,0,o,this.toBBox),l=Ec(e,o,n,this.toBBox),h=tU(c,l),u=Bf(c)+Bf(l);h<s?(s=h,i=o,a=u<a?u:a):h===s&&u<a&&(a=u,i=o)}return i||n-t}_chooseSplitAxis(e,t,n){const i=e.leaf?this.compareMinX:JO,s=e.leaf?this.compareMinY:QO,a=this._allDistMargin(e,t,n,i),o=this._allDistMargin(e,t,n,s);a<o&&e.children.sort(i)}_allDistMargin(e,t,n,i){e.children.sort(i);const s=this.toBBox,a=Ec(e,0,t,s),o=Ec(e,n-t,n,s);let c=Uh(a)+Uh(o);for(let l=t;l<n-t;l++){const h=e.children[l];Cc(a,e.leaf?s(h):h),c+=Uh(a)}for(let l=n-t-1;l>=t;l--){const h=e.children[l];Cc(o,e.leaf?s(h):h),c+=Uh(o)}return c}_adjustParentBBoxes(e,t,n){for(let i=n;i>=0;i--)Cc(t[i],e)}_condense(e){for(let t=e.length-1,n;t>=0;t--)e[t].children.length===0?t>0?(n=e[t-1].children,n.splice(n.indexOf(e[t]),1)):this.clear():so(e[t],this.toBBox)}}function KO(r,e,t){if(!t)return e.indexOf(r);for(let n=0;n<e.length;n++)if(t(r,e[n]))return n;return-1}function so(r,e){Ec(r,0,r.children.length,e,r)}function Ec(r,e,t,n,i){i||(i=fo(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(let s=e;s<t;s++){const a=r.children[s];Cc(i,r.leaf?n(a):a)}return i}function Cc(r,e){return r.minX=Math.min(r.minX,e.minX),r.minY=Math.min(r.minY,e.minY),r.maxX=Math.max(r.maxX,e.maxX),r.maxY=Math.max(r.maxY,e.maxY),r}function JO(r,e){return r.minX-e.minX}function QO(r,e){return r.minY-e.minY}function Bf(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function Uh(r){return r.maxX-r.minX+(r.maxY-r.minY)}function eU(r,e){return(Math.max(e.maxX,r.maxX)-Math.min(e.minX,r.minX))*(Math.max(e.maxY,r.maxY)-Math.min(e.minY,r.minY))}function tU(r,e){const t=Math.max(r.minX,e.minX),n=Math.max(r.minY,e.minY),i=Math.min(r.maxX,e.maxX),s=Math.min(r.maxY,e.maxY);return Math.max(0,i-t)*Math.max(0,s-n)}function $f(r,e){return r.minX<=e.minX&&r.minY<=e.minY&&e.maxX<=r.maxX&&e.maxY<=r.maxY}function Bh(r,e){return e.minX<=r.maxX&&e.minY<=r.maxY&&e.maxX>=r.minX&&e.maxY>=r.minY}function fo(r){return{children:r,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function T0(r,e,t,n,i){const s=[e,t];for(;s.length;){if(t=s.pop(),e=s.pop(),t-e<=n)continue;const a=e+Math.ceil((t-e)/n/2)*n;XO(r,a,e,t,i),s.push(e,a,a,t)}}class yM extends ZO{compareMinX(e,t){return e.lng-t.lng}compareMinY(e,t){return e.lat-t.lat}toBBox(e){return{minX:e.lng,minY:e.lat,maxX:e.lng,maxY:e.lat}}}class nn{constructor(e,t){this._components={};for(const n in nn.registeredComponents){if(!nn.registeredComponents.hasOwnProperty(n))continue;const i=nn.registeredComponents[n];this._components[n]={active:!1,component:new i(n,e,t)}}this._coverComponent=new nn.registeredCoverComponent("cover",e,t),this._coverComponent.activate(),this._coverActivated=!0}static register(e){nn.registeredComponents[e.componentName]===void 0&&(nn.registeredComponents[e.componentName]=e)}static registerCover(e){nn.registeredCoverComponent=e}get coverActivated(){return this._coverActivated}activateCover(){if(!this._coverActivated){this._coverActivated=!0;for(const e in this._components){if(!this._components.hasOwnProperty(e))continue;const t=this._components[e];t.active&&t.component.deactivate()}}}deactivateCover(){if(this._coverActivated){this._coverActivated=!1;for(const e in this._components){if(!this._components.hasOwnProperty(e))continue;const t=this._components[e];t.active&&t.component.activate()}}}activate(e){this._checkName(e),this._components[e].active=!0,this._coverActivated||this.get(e).activate()}configure(e,t){this._checkName(e),this.get(e).configure(t)}deactivate(e){this._checkName(e),this._components[e].active=!1,this._coverActivated||this.get(e).deactivate()}get(e){return this._components[e].component}getCover(){return this._coverComponent}remove(){this._coverComponent.deactivate();for(const e in this._components)this._components.hasOwnProperty(e)&&this._components[e].component.deactivate()}_checkName(e){if(!(e in this._components))throw new gi(`Component does not exist: ${e}`)}}nn.registeredComponents={};var tl=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function nU(r){if(r.__esModule)return r;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(r).forEach(function(t){var n=Object.getOwnPropertyDescriptor(r,t);Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:function(){return r[t]}})}),e}function iU(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var rU=Array.isArray,sU=Object.prototype.toString,vg=rU||aU;function aU(r){return sU.call(r)==="[object Array]"}var Tl="2",oU=Tl;Xi.NONE=0;Xi.VTEXT=1;Xi.VNODE=2;Xi.WIDGET=3;Xi.PROPS=4;Xi.ORDER=5;Xi.INSERT=6;Xi.REMOVE=7;Xi.THUNK=8;var bM=Xi;function Xi(r,e,t){this.type=Number(r),this.vNode=e,this.patch=t}Xi.prototype.version=oU;Xi.prototype.type="VirtualPatch";var cU=Tl,El=lU;function lU(r){return r&&r.type==="VirtualNode"&&r.version===cU}var hU=Tl,cd=uU;function uU(r){return r&&r.type==="VirtualText"&&r.version===hU}var wa=dU;function dU(r){return r&&r.type==="Widget"}var ld=fU;function fU(r){return r&&r.type==="Thunk"}var pU=El,mU=cd,gU=wa,E0=ld,MM=_U;function _U(r,e){var t=r,n=e;return E0(e)&&(n=C0(e,r)),E0(r)&&(t=C0(r,null)),{a:t,b:n}}function C0(r,e){var t=r.vnode;if(t||(t=r.vnode=r.render(e)),!(pU(t)||mU(t)||gU(t)))throw new Error("thunk did not return a valid node");return t}var SM=function(e){return typeof e=="object"&&e!==null},hd=vU;function vU(r){return r&&(typeof r.hook=="function"&&!r.hasOwnProperty("hook")||typeof r.unhook=="function"&&!r.hasOwnProperty("unhook"))}var A0=SM,xU=hd,yU=wM;function wM(r,e){var t;for(var n in r){n in e||(t=t||{},t[n]=void 0);var i=r[n],s=e[n];if(i!==s)if(A0(i)&&A0(s))if(R0(s)!==R0(i))t=t||{},t[n]=s;else if(xU(s))t=t||{},t[n]=s;else{var a=wM(i,s);a&&(t=t||{},t[n]=a)}else t=t||{},t[n]=s}for(var o in e)o in r||(t=t||{},t[o]=e[o]);return t}function R0(r){if(Object.getPrototypeOf)return Object.getPrototypeOf(r);if(r.__proto__)return r.__proto__;if(r.constructor)return r.constructor.prototype}var bU=vg,pn=bM,_a=El,P0=cd,du=wa,Du=ld,MU=MM,SU=yU,wU=TM;function TM(r,e){var t={a:r};return EM(r,e,t,0),t}function EM(r,e,t,n){if(r!==e){var i=t[n],s=!1;if(Du(r)||Du(e))xg(r,e,t,n);else if(e==null)du(r)||(I0(r,t,n),i=t[n]),i=ir(i,new pn(pn.REMOVE,r,e));else if(_a(e))if(_a(r))if(r.tagName===e.tagName&&r.namespace===e.namespace&&r.key===e.key){var a=SU(r.properties,e.properties);a&&(i=ir(i,new pn(pn.PROPS,r,a))),i=TU(r,e,t,i,n)}else i=ir(i,new pn(pn.VNODE,r,e)),s=!0;else i=ir(i,new pn(pn.VNODE,r,e)),s=!0;else P0(e)?P0(r)?r.text!==e.text&&(i=ir(i,new pn(pn.VTEXT,r,e))):(i=ir(i,new pn(pn.VTEXT,r,e)),s=!0):du(e)&&(du(r)||(s=!0),i=ir(i,new pn(pn.WIDGET,r,e)));i&&(t[n]=i),s&&I0(r,t,n)}}function TU(r,e,t,n,i){for(var s=r.children,a=AU(s,e.children),o=a.children,c=s.length,l=o.length,h=c>l?c:l,u=0;u<h;u++){var d=s[u],f=o[u];i+=1,d?EM(d,f,t,i):f&&(n=ir(n,new pn(pn.INSERT,null,f))),_a(d)&&d.count&&(i+=d.count)}return a.moves&&(n=ir(n,new pn(pn.ORDER,r,a.moves))),n}function I0(r,e,t){AM(r,e,t),CM(r,e,t)}function CM(r,e,t){if(du(r))typeof r.destroy=="function"&&(e[t]=ir(e[t],new pn(pn.REMOVE,r,null)));else if(_a(r)&&(r.hasWidgets||r.hasThunks))for(var n=r.children,i=n.length,s=0;s<i;s++){var a=n[s];t+=1,CM(a,e,t),_a(a)&&a.count&&(t+=a.count)}else Du(r)&&xg(r,null,e,t)}function xg(r,e,t,n){var i=MU(r,e),s=TM(i.a,i.b);EU(s)&&(t[n]=new pn(pn.THUNK,null,s))}function EU(r){for(var e in r)if(e!=="a")return!0;return!1}function AM(r,e,t){if(_a(r)){if(r.hooks&&(e[t]=ir(e[t],new pn(pn.PROPS,r,CU(r.hooks)))),r.descendantHooks||r.hasThunks)for(var n=r.children,i=n.length,s=0;s<i;s++){var a=n[s];t+=1,AM(a,e,t),_a(a)&&a.count&&(t+=a.count)}}else Du(r)&&xg(r,null,e,t)}function CU(r){var e={};for(var t in r)e[t]=void 0;return e}function AU(r,e){var t=L0(e),n=t.keys,i=t.free;if(i.length===e.length)return{children:e,moves:null};var s=L0(r),a=s.keys,o=s.free;if(o.length===r.length)return{children:e,moves:null};for(var c=[],l=0,h=i.length,u=0,d=0;d<r.length;d++){var f=r[d],p;f.key?n.hasOwnProperty(f.key)?(p=n[f.key],c.push(e[p])):(p=d-u++,c.push(null)):l<h?(p=i[l++],c.push(e[p])):(p=d-u++,c.push(null))}for(var g=l>=i.length?e.length:i[l],_=0;_<e.length;_++){var m=e[_];m.key?a.hasOwnProperty(m.key)||c.push(m):_>=g&&c.push(m)}for(var v=c.slice(),y=0,x=[],w=[],E,M=0;M<e.length;){var A=e[M];for(E=v[y];E===null&&v.length;)x.push($h(v,y,null)),E=v[y];!E||E.key!==A.key?A.key?(E&&E.key?n[E.key]!==M+1?(x.push($h(v,y,E.key)),E=v[y],!E||E.key!==A.key?w.push({key:A.key,to:M}):y++):w.push({key:A.key,to:M}):w.push({key:A.key,to:M}),M++):E&&E.key&&x.push($h(v,y,E.key)):(y++,M++)}for(;y<v.length;)E=v[y],x.push($h(v,y,E&&E.key));return x.length===u&&!w.length?{children:c,moves:null}:{children:c,moves:{removes:x,inserts:w}}}function $h(r,e,t){return r.splice(e,1),{from:e,key:t}}function L0(r){for(var e={},t=[],n=r.length,i=0;i<n;i++){var s=r[i];s.key?e[s.key]=i:t.push(i)}return{keys:e,free:t}}function ir(r,e){return r?(bU(r)?r.push(e):r=[r,e],r):e}var RU=wU,PU=RU,D0=Array.prototype.slice,RM=IU;function IU(r,e){for(("length"in r)||(r=[r]),r=D0.call(r);r.length;){var t=r.shift(),n=e(t);if(n)return n;t.childNodes&&t.childNodes.length&&(r=D0.call(t.childNodes).concat(r))}}var LU=$o;function $o(r,e){if(!(this instanceof $o))return new $o(r,e);this.data=r,this.nodeValue=r,this.length=r.length,this.ownerDocument=e||null}$o.prototype.nodeType=8;$o.prototype.nodeName="#comment";$o.prototype.toString=function(){return"[object Comment]"};var DU=Gs;function Gs(r,e){if(!(this instanceof Gs))return new Gs(r);this.data=r||"",this.length=this.data.length,this.ownerDocument=e||null}Gs.prototype.type="DOMTextNode";Gs.prototype.nodeType=3;Gs.prototype.nodeName="#text";Gs.prototype.toString=function(){return this.data};Gs.prototype.replaceData=function(e,t,n){var i=this.data,s=i.substring(0,e),a=i.substring(e+t,i.length);this.data=s+n+a,this.length=this.data.length};var PM=FU;function FU(r){var e=this,t=r.type;r.target||(r.target=e),e.listeners||(e.listeners={});var n=e.listeners[t];if(n)return n.forEach(function(i){r.currentTarget=e,typeof i=="function"?i(r):i.handleEvent(r)});e.parentNode&&e.parentNode.dispatchEvent(r)}var IM=NU;function NU(r,e){var t=this;t.listeners||(t.listeners={}),t.listeners[r]||(t.listeners[r]=[]),t.listeners[r].indexOf(e)===-1&&t.listeners[r].push(e)}var LM=OU;function OU(r,e){var t=this;if(t.listeners&&t.listeners[r]){var n=t.listeners[r],i=n.indexOf(e);i!==-1&&n.splice(i,1)}}var UU=DM,BU=["area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr"];function DM(r){switch(r.nodeType){case 3:return yg(r.data);case 8:return"<!--"+r.data+"-->";default:return $U(r)}}function $U(r){var e=[],t=r.tagName;return r.namespaceURI==="http://www.w3.org/1999/xhtml"&&(t=t.toLowerCase()),e.push("<"+t+HU(r)+VU(r)),BU.indexOf(t)>-1?e.push(" />"):(e.push(">"),r.childNodes.length?e.push.apply(e,r.childNodes.map(DM)):r.textContent||r.innerText?e.push(yg(r.textContent||r.innerText)):r.innerHTML&&e.push(r.innerHTML),e.push("</"+t+">")),e.join("")}function kU(r,e){var t=typeof r[e];return e==="style"&&Object.keys(r.style).length>0?!0:r.hasOwnProperty(e)&&(t==="string"||t==="boolean"||t==="number")&&e!=="nodeName"&&e!=="className"&&e!=="tagName"&&e!=="textContent"&&e!=="innerText"&&e!=="namespaceURI"&&e!=="innerHTML"}function zU(r){if(typeof r=="string")return r;var e="";return Object.keys(r).forEach(function(t){var n=r[t];t=t.replace(/[A-Z]/g,function(i){return"-"+i.toLowerCase()}),e+=t+":"+n+";"}),e}function VU(r){var e=r.dataset,t=[];for(var n in e)t.push({name:"data-"+n,value:e[n]});return t.length?FM(t):""}function FM(r){var e=[];return r.forEach(function(t){var n=t.name,i=t.value;n==="style"&&(i=zU(i)),e.push(n+'="'+GU(i)+'"')}),e.length?" "+e.join(" "):""}function HU(r){var e=[];for(var t in r)kU(r,t)&&e.push({name:t,value:r[t]});for(var n in r._attributes)for(var i in r._attributes[n]){var s=r._attributes[n][i],a=(s.prefix?s.prefix+":":"")+i;e.push({name:a,value:s.value})}return r.className&&e.push({name:"class",value:r.className}),e.length?FM(e):""}function yg(r){var e="";return typeof r=="string"?e=r:r&&(e=r.toString()),e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function GU(r){return yg(r).replace(/"/g,"&quot;")}var bg=RM,WU=PM,qU=IM,jU=LM,XU=UU,F0="http://www.w3.org/1999/xhtml",NM=ln;function ln(r,e,t){if(!(this instanceof ln))return new ln(r);var n=t===void 0?F0:t||null;this.tagName=n===F0?String(r).toUpperCase():r,this.nodeName=this.tagName,this.className="",this.dataset={},this.childNodes=[],this.parentNode=null,this.style={},this.ownerDocument=e||null,this.namespaceURI=n,this._attributes={},this.tagName==="INPUT"&&(this.type="text")}ln.prototype.type="DOMElement";ln.prototype.nodeType=1;ln.prototype.appendChild=function(e){return e.parentNode&&e.parentNode.removeChild(e),this.childNodes.push(e),e.parentNode=this,e};ln.prototype.replaceChild=function(e,t){e.parentNode&&e.parentNode.removeChild(e);var n=this.childNodes.indexOf(t);return t.parentNode=null,this.childNodes[n]=e,e.parentNode=this,t};ln.prototype.removeChild=function(e){var t=this.childNodes.indexOf(e);return this.childNodes.splice(t,1),e.parentNode=null,e};ln.prototype.insertBefore=function(e,t){e.parentNode&&e.parentNode.removeChild(e);var n=t==null?-1:this.childNodes.indexOf(t);return n>-1?this.childNodes.splice(n,0,e):this.childNodes.push(e),e.parentNode=this,e};ln.prototype.setAttributeNS=function(e,t,n){var i=null,s=t,a=t.indexOf(":");if(a>-1&&(i=t.substr(0,a),s=t.substr(a+1)),this.tagName==="INPUT"&&t==="type")this.type=n;else{var o=this._attributes[e]||(this._attributes[e]={});o[s]={value:n,prefix:i}}};ln.prototype.getAttributeNS=function(e,t){var n=this._attributes[e],i=n&&n[t]&&n[t].value;return this.tagName==="INPUT"&&t==="type"?this.type:typeof i!="string"?null:i};ln.prototype.removeAttributeNS=function(e,t){var n=this._attributes[e];n&&delete n[t]};ln.prototype.hasAttributeNS=function(e,t){var n=this._attributes[e];return!!n&&t in n};ln.prototype.setAttribute=function(e,t){return this.setAttributeNS(null,e,t)};ln.prototype.getAttribute=function(e){return this.getAttributeNS(null,e)};ln.prototype.removeAttribute=function(e){return this.removeAttributeNS(null,e)};ln.prototype.hasAttribute=function(e){return this.hasAttributeNS(null,e)};ln.prototype.removeEventListener=jU;ln.prototype.addEventListener=qU;ln.prototype.dispatchEvent=WU;ln.prototype.focus=function(){};ln.prototype.toString=function(){return XU(this)};ln.prototype.getElementsByClassName=function(e){var t=e.split(" "),n=[];return bg(this,function(i){if(i.nodeType===1){var s=i.className||"",a=s.split(" ");t.every(function(o){return a.indexOf(o)!==-1})&&n.push(i)}}),n};ln.prototype.getElementsByTagName=function(e){e=e.toLowerCase();var t=[];return bg(this.childNodes,function(n){n.nodeType===1&&(e==="*"||n.tagName.toLowerCase()===e)&&t.push(n)}),t};ln.prototype.contains=function(e){return bg(this,function(t){return e===t})||!1};var Mg=NM,YU=Sr;function Sr(r){if(!(this instanceof Sr))return new Sr;this.childNodes=[],this.parentNode=null,this.ownerDocument=r||null}Sr.prototype.type="DocumentFragment";Sr.prototype.nodeType=11;Sr.prototype.nodeName="#document-fragment";Sr.prototype.appendChild=Mg.prototype.appendChild;Sr.prototype.replaceChild=Mg.prototype.replaceChild;Sr.prototype.removeChild=Mg.prototype.removeChild;Sr.prototype.toString=function(){return this.childNodes.map(function(e){return String(e)}).join("")};var ZU=Sg;function Sg(r){}Sg.prototype.initEvent=function(e,t,n){this.type=e,this.bubbles=t,this.cancelable=n};Sg.prototype.preventDefault=function(){};var KU=RM,JU=LU,QU=DU,Cl=NM,eB=YU,tB=ZU,nB=PM,iB=IM,rB=LM,sB=Fu;function Fu(){if(!(this instanceof Fu))return new Fu;this.head=this.createElement("head"),this.body=this.createElement("body"),this.documentElement=this.createElement("html"),this.documentElement.appendChild(this.head),this.documentElement.appendChild(this.body),this.childNodes=[this.documentElement],this.nodeType=9}var Di=Fu.prototype;Di.createTextNode=function(e){return new QU(e,this)};Di.createElementNS=function(e,t){var n=e===null?null:String(e);return new Cl(t,this,n)};Di.createElement=function(e){return new Cl(e,this)};Di.createDocumentFragment=function(){return new eB(this)};Di.createEvent=function(e){return new tB};Di.createComment=function(e){return new JU(e,this)};Di.getElementById=function(e){e=String(e);var t=KU(this.childNodes,function(n){if(String(n.id)===e)return n});return t||null};Di.getElementsByClassName=Cl.prototype.getElementsByClassName;Di.getElementsByTagName=Cl.prototype.getElementsByTagName;Di.contains=Cl.prototype.contains;Di.removeEventListener=rB;Di.addEventListener=iB;Di.dispatchEvent=nB;var aB=sB,oB=new aB,N0=typeof tl<"u"?tl:typeof window<"u"?window:{},cB=oB,Ac;typeof document<"u"?Ac=document:(Ac=N0["__GLOBAL_DOCUMENT_CACHE@4"],Ac||(Ac=N0["__GLOBAL_DOCUMENT_CACHE@4"]=cB));var OM=Ac,lm=SM,UM=hd,BM=lB;function lB(r,e,t){for(var n in e){var i=e[n];i===void 0?O0(r,n,i,t):UM(i)?(O0(r,n,i,t),i.hook&&i.hook(r,n,t?t[n]:void 0)):lm(i)?hB(r,e,t,n,i):r[n]=i}}function O0(r,e,t,n){if(n){var i=n[e];if(UM(i))i.unhook&&i.unhook(r,e,t);else if(e==="attributes")for(var s in i)r.removeAttribute(s);else if(e==="style")for(var a in i)r.style[a]="";else typeof i=="string"?r[e]="":r[e]=null}}function hB(r,e,t,n,i){var s=t?t[n]:void 0;if(n==="attributes"){for(var a in i){var o=i[a];o===void 0?r.removeAttribute(a):r.setAttribute(a,o)}return}if(s&&lm(s)&&U0(s)!==U0(i)){r[n]=i;return}lm(r[n])||(r[n]={});var c=n==="style"?"":void 0;for(var l in i){var h=i[l];r[n][l]=h===void 0?c:h}}function U0(r){if(Object.getPrototypeOf)return Object.getPrototypeOf(r);if(r.__proto__)return r.__proto__;if(r.constructor)return r.constructor.prototype}var B0=OM,uB=BM,dB=El,fB=cd,pB=wa,mB=MM,$M=kM;function kM(r,e){var t=e&&e.document||B0,n=e?e.warn:null;if(r=mB(r).a,pB(r))return r.init();if(fB(r))return t.createTextNode(r.text);if(!dB(r))return n&&n("Item is not a valid virtual dom node",r),null;var i=r.namespace===null?t.createElement(r.tagName):t.createElementNS(r.namespace,r.tagName),s=r.properties;uB(i,s);for(var a=r.children,o=0;o<a.length;o++){var c=kM(a[o],e);c&&i.appendChild(c)}return i}var gB={},_B=vB;function vB(r,e,t,n){return!t||t.length===0?{}:(t.sort(xB),zM(r,e,t,n,0))}function zM(r,e,t,n,i){if(n=n||{},r){$0(t,i,i)&&(n[i]=r);var s=e.children;if(s)for(var a=r.childNodes,o=0;o<e.children.length;o++){i+=1;var c=s[o]||gB,l=i+(c.count||0);$0(t,i,l)&&zM(a[o],c,t,n,i),i=l}}return n}function $0(r,e,t){if(r.length===0)return!1;for(var n=0,i=r.length-1,s,a;n<=i;){if(s=(i+n)/2>>0,a=r[s],n===i)return a>=e&&a<=t;if(a<e)n=s+1;else if(a>t)i=s-1;else return!0}return!1}function xB(r,e){return r>e?1:-1}var k0=wa,yB=bB;function bB(r,e){return k0(r)&&k0(e)?"name"in r&&"name"in e?r.id===e.id:r.init===e.init:!1}var MB=BM,SB=wa,Ms=bM,wB=yB,TB=EB;function EB(r,e,t){var n=r.type,i=r.vNode,s=r.patch;switch(n){case Ms.REMOVE:return CB(e,i);case Ms.INSERT:return AB(e,s,t);case Ms.VTEXT:return RB(e,i,s,t);case Ms.WIDGET:return PB(e,i,s,t);case Ms.VNODE:return IB(e,i,s,t);case Ms.ORDER:return LB(e,s),e;case Ms.PROPS:return MB(e,s,i.properties),e;case Ms.THUNK:return DB(e,t.patch(e,s,t));default:return e}}function CB(r,e){var t=r.parentNode;return t&&t.removeChild(r),VM(r,e),null}function AB(r,e,t){var n=t.render(e,t);return r&&r.appendChild(n),r}function RB(r,e,t,n){var i;if(r.nodeType===3)r.replaceData(0,r.length,t.text),i=r;else{var s=r.parentNode;i=n.render(t,n),s&&i!==r&&s.replaceChild(i,r)}return i}function PB(r,e,t,n){var i=wB(e,t),s;i?s=t.update(e,r)||r:s=n.render(t,n);var a=r.parentNode;return a&&s!==r&&a.replaceChild(s,r),i||VM(r,e),s}function IB(r,e,t,n){var i=r.parentNode,s=n.render(t,n);return i&&s!==r&&i.replaceChild(s,r),s}function VM(r,e){typeof e.destroy=="function"&&SB(e)&&e.destroy(r)}function LB(r,e){for(var t=r.childNodes,n={},i,s,a,o=0;o<e.removes.length;o++)s=e.removes[o],i=t[s.from],s.key&&(n[s.key]=i),r.removeChild(i);for(var c=t.length,l=0;l<e.inserts.length;l++)a=e.inserts[l],i=n[a.key],r.insertBefore(i,a.to>=c++?null:t[a.to])}function DB(r,e){return r&&e&&r!==e&&r.parentNode&&r.parentNode.replaceChild(e,r),e}var FB=OM,NB=vg,OB=$M,UB=_B,z0=TB,BB=HM;function HM(r,e,t){return t=t||{},t.patch=t.patch&&t.patch!==HM?t.patch:$B,t.render=t.render||OB,t.patch(r,e,t)}function $B(r,e,t){var n=zB(e);if(n.length===0)return r;var i=UB(r,e.a,n),s=r.ownerDocument;!t.document&&s!==FB&&(t.document=s);for(var a=0;a<n.length;a++){var o=n[a];r=kB(r,i[o],e[o],t)}return r}function kB(r,e,t,n){if(!e)return r;var i;if(NB(t))for(var s=0;s<t.length;s++)i=z0(t[s],e,n),e===r&&(r=i);else i=z0(t,e,n),e===r&&(r=i);return r}function zB(r){var e=[];for(var t in r)t!=="a"&&e.push(Number(t));return e}var VB=BB,HB=VB,GB=Tl,WB=El,qB=wa,jB=ld,XB=hd,GM=wg,YB={},ZB=[];function wg(r,e,t,n,i){this.tagName=r,this.properties=e||YB,this.children=t||ZB,this.key=n!=null?String(n):void 0,this.namespace=typeof i=="string"?i:null;var s=t&&t.length||0,a=0,o=!1,c=!1,l=!1,h;for(var u in e)if(e.hasOwnProperty(u)){var d=e[u];XB(d)&&d.unhook&&(h||(h={}),h[u]=d)}for(var f=0;f<s;f++){var p=t[f];WB(p)?(a+=p.count||0,!o&&p.hasWidgets&&(o=!0),!c&&p.hasThunks&&(c=!0),!l&&(p.hooks||p.descendantHooks)&&(l=!0)):!o&&qB(p)?typeof p.destroy=="function"&&(o=!0):!c&&jB(p)&&(c=!0)}this.count=s+a,this.hasWidgets=o,this.hasThunks=c,this.hooks=h,this.descendantHooks=l}wg.prototype.version=GB;wg.prototype.type="VirtualNode";var KB=Tl,WM=Tg;function Tg(r){this.text=String(r)}Tg.prototype.version=KB;Tg.prototype.type="VirtualText";/*!
 * Cross-Browser Split 1.1.1
 * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>
 * Available under the MIT License
 * ECMAScript compliant, uniform cross-browser split method
 */var JB=function(e){var t=String.prototype.split,n=/()??/.exec("")[1]===e,i;return i=function(s,u,o){if(Object.prototype.toString.call(u)!=="[object RegExp]")return t.call(s,u,o);var c=[],l=(u.ignoreCase?"i":"")+(u.multiline?"m":"")+(u.extended?"x":"")+(u.sticky?"y":""),h=0,u=new RegExp(u.source,l+"g"),d,f,p,g;for(s+="",n||(d=new RegExp("^"+u.source+"$(?!\\s)",l)),o=o===e?-1>>>0:o>>>0;(f=u.exec(s))&&(p=f.index+f[0].length,!(p>h&&(c.push(s.slice(h,f.index)),!n&&f.length>1&&f[0].replace(d,function(){for(var _=1;_<arguments.length-2;_++)arguments[_]===e&&(f[_]=e)}),f.length>1&&f.index<s.length&&Array.prototype.push.apply(c,f.slice(1)),g=f[0].length,h=p,c.length>=o)));)u.lastIndex===f.index&&u.lastIndex++;return h===s.length?(g||!u.test(""))&&c.push(""):c.push(s.slice(h)),c.length>o?c.slice(0,o):c},i}(),QB=JB,e$=/([\.#]?[a-zA-Z0-9\u007F-\uFFFF_:-]+)/,t$=/^\.|#/,n$=i$;function i$(r,e){if(!r)return"DIV";var t=!e.hasOwnProperty("id"),n=QB(r,e$),i=null;t$.test(n[1])&&(i="DIV");var s,a,o,c;for(c=0;c<n.length;c++)a=n[c],a&&(o=a.charAt(0),i?o==="."?(s=s||[],s.push(a.substring(1,a.length))):o==="#"&&t&&(e.id=a.substring(1,a.length)):i=a);return s&&(e.className&&s.push(e.className),e.className=s.join(" ")),e.namespace?i:i.toUpperCase()}var r$=Nu;function Nu(r){if(!(this instanceof Nu))return new Nu(r);this.value=r}Nu.prototype.hook=function(r,e){r[e]!==this.value&&(r[e]=this.value)};var kf=typeof window<"u"?window:typeof tl<"u"?tl:{},s$=a$;function a$(r,e){return r in kf?kf[r]:(kf[r]=e,e)}var V0=s$,o$=c$;function c$(r,e,t){var n="__INDIVIDUAL_ONE_VERSION_"+r,i=n+"_ENFORCE_SINGLETON",s=V0(i,e);if(s!==e)throw new Error("Can only have one copy of "+r+`.
You already have version `+s+` installed.
This means you cannot install version `+e);return V0(n,t)}var l$=o$,qM="7";l$("ev-store",qM);var H0="__EV_STORE_KEY@"+qM,h$=u$;function u$(r){var e=r[H0];return e||(e=r[H0]={}),e}var jM=h$,d$=nl;function nl(r){if(!(this instanceof nl))return new nl(r);this.value=r}nl.prototype.hook=function(r,e){var t=jM(r),n=e.substr(3);t[n]=this.value};nl.prototype.unhook=function(r,e){var t=jM(r),n=e.substr(3);t[n]=void 0};var XM=vg,f$=GM,G0=WM,p$=El,m$=cd,g$=wa,YM=hd,_$=ld,v$=n$,x$=r$,y$=d$,b$=M$;function M$(r,e,t){var n=[],i,s,a,o;return!t&&w$(e)&&(t=e,s={}),s=s||e||{},i=v$(r,s),s.hasOwnProperty("key")&&(a=s.key,s.key=void 0),s.hasOwnProperty("namespace")&&(o=s.namespace,s.namespace=void 0),i==="INPUT"&&!o&&s.hasOwnProperty("value")&&s.value!==void 0&&!YM(s.value)&&(s.value=x$(s.value)),S$(s),t!=null&&ZM(t,n,i,s),new f$(i,s,n,a,o)}function ZM(r,e,t,n){if(typeof r=="string")e.push(new G0(r));else if(typeof r=="number")e.push(new G0(String(r)));else if(KM(r))e.push(r);else if(XM(r))for(var i=0;i<r.length;i++)ZM(r[i],e,t,n);else{if(r==null)return;throw T$({foreignObject:r,parentVnode:{tagName:t,properties:n}})}}function S$(r){for(var e in r)if(r.hasOwnProperty(e)){var t=r[e];if(YM(t))continue;e.substr(0,3)==="ev-"&&(r[e]=y$(t))}}function KM(r){return p$(r)||m$(r)||g$(r)||_$(r)}function w$(r){return typeof r=="string"||XM(r)||KM(r)}function T$(r){var e=new Error;return e.type="virtual-hyperscript.unexpected.virtual-element",e.message=`Unexpected virtual child passed to h().
Expected a VNode / Vthunk / VWidget / string but:
got:
`+W0(r.foreignObject)+`.
The parent vnode is:
`+W0(r.parentVnode),e.foreignObject=r.foreignObject,e.parentVnode=r.parentVnode,e}function W0(r){try{return JSON.stringify(r,null,"    ")}catch{return String(r)}}var E$=b$,C$=E$,A$=$M,R$=A$,P$=PU,I$=HB,L$=C$,D$=R$,F$=GM,N$=WM,ve={diff:P$,patch:I$,h:L$,create:D$,VNode:F$,VText:N$};class ud{constructor(){this._events={}}fire(e,t){if(this._listens(e))for(const n of this._events[e])n(t)}off(e,t){if(!e){this._events={};return}if(this._listens(e)){const n=this._events[e].indexOf(t);n>=0&&this._events[e].splice(n,1),this._events[e].length||delete this._events[e]}}on(e,t){this._events[e]=this._events[e]||[],this._events[e].push(t)}_listens(e){return e in this._events}}class Gn{constructor(){this._subscriptions=[]}push(e){this._subscriptions.push(e)}unsubscribe(){for(const e of this._subscriptions)e.unsubscribe();this._subscriptions=[]}}class Wn extends ud{constructor(e,t,n){super(),this._activated$=new ss(!1),this._configurationSubject$=new De,this._activated=!1,this._container=t,this._name=e,this._navigator=n,this._subscriptions=new Gn,this._configuration$=this._configurationSubject$.pipe(At(this.defaultConfiguration),cn((i,s)=>{for(let a in s)s.hasOwnProperty(a)&&(i[a]=s[a]);return i}),Ke(1),Ue()),this._configuration$.subscribe(()=>{})}get activated(){return this._activated}get activated$(){return this._activated$}get defaultConfiguration(){return this._getDefaultConfiguration()}get configuration$(){return this._configuration$}get name(){return this._name}activate(e){this._activated||(e!==void 0&&this._configurationSubject$.next(e),this._activated=!0,this._activate(),this._activated$.next(!0))}configure(e){this._configurationSubject$.next(e)}deactivate(){this._activated&&(this._activated=!1,this._deactivate(),this._container.domRenderer.clear(this._name),this._container.glRenderer.clear(this._name),this._activated$.next(!1))}fire(e,t){super.fire(e,t)}off(e,t){super.off(e,t)}on(e,t){super.on(e,t)}resize(){}}var oi;(function(r){r[r.Hidden=0]="Hidden",r[r.Loading=1]="Loading",r[r.Visible=2]="Visible"})(oi||(oi={}));class JM extends Wn{constructor(e,t,n){super(e,t,n)}_activate(){const e=this.configuration$.pipe(Ve(n=>!!n.id),Fe(n=>!n.src),we(n=>this._getImageSrc$(n.id).pipe($t(i=>(console.error(i),rt())))),Ke(1),Ue()),t=this._subscriptions;t.push(e.pipe(V(n=>({src:n}))).subscribe(n=>{this._configurationSubject$.next(n)})),t.push(He(this.configuration$,e).pipe(Fe(([n,i])=>!!n.src&&n.src!==i),Ve()).subscribe(([,n])=>{window.URL.revokeObjectURL(n)})),t.push(this._configuration$.pipe(Be(void 0,n=>n.state),we(n=>He(Ze(n.state),this._navigator.stateService.currentImage$)),we(([n,i])=>{const s=He(Ze(i.id),i.image$.pipe(Fe(a=>!!a),V(a=>a.src)));return n===oi.Visible?s.pipe(Ve()):s}),Be(([n,i],[s,a])=>n===s&&i===a),V(([n,i])=>({id:n,src:i}))).subscribe(this._configurationSubject$)),t.push(He(this._configuration$,this._container.configurationService.exploreUrl$,this._container.renderService.size$).pipe(V(([n,i,s])=>{if(!n.src)return{name:this._name,vNode:ve.h("div",[])};const a=s.width<=640||s.height<=480?".mapillary-cover-compact":"";if(n.state===oi.Hidden){const c=ve.h("div.mapillary-cover-container.mapillary-cover-done"+a,[this._getCoverBackgroundVNode(n)]);return{name:this._name,vNode:c}}const o=ve.h("div.mapillary-cover-container"+a,[this._getCoverButtonVNode(n,i)]);return{name:this._name,vNode:o}})).subscribe(this._container.domRenderer.render$))}_deactivate(){this._subscriptions.unsubscribe()}_getDefaultConfiguration(){return{state:oi.Visible}}_getCoverButtonVNode(e,t){const n=e.state===oi.Loading?"div.mapillary-cover.mapillary-cover-loading":"div.mapillary-cover",i=ve.h("div.mapillary-cover-button",[ve.h("div.mapillary-cover-button-icon",[])]),s=ve.h("a.mapillary-cover-logo",{href:t,target:"_blank"},[]),a=ve.h("div.mapillary-cover-indicator",{onclick:()=>{this.configure({state:oi.Loading})}},[]);return ve.h(n,[this._getCoverBackgroundVNode(e),a,i,s])}_getCoverBackgroundVNode(e){const t={style:{backgroundImage:`url(${e.src})`}},n=[];return e.state===oi.Loading&&n.push(ve.h("div.mapillary-cover-spinner",{},[])),ve.h("div.mapillary-cover-background",t,n)}_getImageSrc$(e){return Qt.create(t=>{this._navigator.api.getImages$([e]).subscribe(n=>{for(const i of n){const s=typeof e=="number"?e.toString():e;if(i.node_id===s){this._navigator.api.data.getImageBuffer(i.node.thumb.url).then(a=>{const o=new Image;o.crossOrigin="Anonymous",o.onload=()=>{t.next(o.src),t.complete()},o.onerror=()=>{t.error(new Error(`Failed to load cover image (${e})`))};const c=new Blob([a]);o.src=window.URL.createObjectURL(c)},a=>{t.error(a)});return}}t.error(new Zt(`Non existent cover key: ${e}`))},n=>{t.error(n)})})}}JM.componentName="cover";class QM extends Wn{_activate(){this._subscriptions.push(He(this._container.configurationService.exploreUrl$,this._navigator.stateService.currentImage$,this._container.renderService.size$).pipe(V(([e,t,n])=>{const i=this._makeAttribution(t.creatorUsername,e,t.id,t.capturedAt,n.width);return{name:this._name,vNode:i}})).subscribe(this._container.domRenderer.render$))}_deactivate(){this._subscriptions.unsubscribe()}_getDefaultConfiguration(){return{}}makeImageUrl(e,t){return`${e}/app/?pKey=${t}&focus=photo`}_makeAttribution(e,t,n,i,s){const a=s<=640,o=this._makeDate(i,a),c=this._makeBy(e,t,n,a),l=a?".mapillary-attribution-compact":"";return ve.h("div.mapillary-attribution-container"+l,{},[...c,o])}_makeBy(e,t,n,i){const s=ve.h("div.mapillary-attribution-logo",[]);return e?this._makeCreatorBy(s,e,t,n,i):this._makeGeneralBy(s,t,n,i)}_makeCreatorBy(e,t,n,i,s){const a=ve.h("a.mapillary-attribution-icon-container",{href:n,rel:"noreferrer",target:"_blank"},[e]),o=s?`${t}`:`image by ${t}`,c=ve.h("div.mapillary-attribution-username",{textContent:o},[]),l=ve.h("a.mapillary-attribution-image-container",{href:this.makeImageUrl(n,i),rel:"noreferrer",target:"_blank"},[c]);return[a,l]}_makeGeneralBy(e,t,n,i){const s=ve.h("div.mapillary-attribution-username",{textContent:"images by"},[]),a=ve.h("div.mapillary-attribution-icon-container",{},[e]),o=ve.h("div.mapillary-attribution-username",{textContent:"contributors"},[]),c=[a,o];return i||c.unshift(s),[ve.h("a.mapillary-attribution-image-container",{href:this.makeImageUrl(t,n),rel:"noreferrer",target:"_blank"},c)]}_makeDate(e,t){const n=new Date(e).toDateString().split(" "),i=(n.length>3?t?[n[3]]:[n[1],n[2]+",",n[3]]:n).join(" ");return ve.h("div.mapillary-attribution-date",{textContent:i},[])}}QM.componentName="attribution";class ei{constructor(){this._unprojectDepth=200}basicToCanvas(e,t,n,i,s){const a=i.unprojectBasic([e,t],this._unprojectDepth);return this.projectToCanvas(a,n,s)}basicToCanvasSafe(e,t,n,i,s){const a=this.basicToViewportSafe(e,t,i,s);return a===null?null:this.viewportToCanvas(a[0],a[1],n)}basicToViewport(e,t,n,i){const s=n.unprojectBasic([e,t],this._unprojectDepth);return this.projectToViewport(s,i)}basicToViewportSafe(e,t,n,i){const s=n.unprojectBasic([e,t],this._unprojectDepth);return this.worldToCamera(s,i)[2]>0?null:this.projectToViewport(s,i)}cameraToViewport(e,t){const n=new D().fromArray(e).applyMatrix4(t.projectionMatrix);return[n.x,n.y]}canvasPosition(e,t){const n=t.getBoundingClientRect(),i=e.clientX-n.left-t.clientLeft,s=e.clientY-n.top-t.clientTop;return[i,s]}canvasToBasic(e,t,n,i,s){const a=this.unprojectFromCanvas(e,t,n,s).toArray();return i.projectBasic(a)}canvasToViewport(e,t,n){const[i,s]=this.containerToCanvas(n),a=2*e/i-1,o=1-2*t/s;return[a,o]}containerToCanvas(e){return[e.offsetWidth,e.offsetHeight]}getBasicDistances(e,t){const n=this.viewportToBasic(-1,1,e,t),i=this.viewportToBasic(1,1,e,t),s=this.viewportToBasic(1,-1,e,t),a=this.viewportToBasic(-1,-1,e,t);let o=0,c=0,l=0,h=0;return n[1]<0&&i[1]<0&&(o=n[1]>i[1]?-n[1]:-i[1]),i[0]>1&&s[0]>1&&(c=i[0]<s[0]?i[0]-1:s[0]-1),s[1]>1&&a[1]>1&&(l=s[1]<a[1]?s[1]-1:a[1]-1),a[0]<0&&n[0]<0&&(h=a[0]>n[0]?-a[0]:-n[0]),[o,c,l,h]}getPixelDistances(e,t,n){const i=this.viewportToBasic(-1,1,t,n),s=this.viewportToBasic(1,1,t,n),a=this.viewportToBasic(1,-1,t,n),o=this.viewportToBasic(-1,-1,t,n);let c=0,l=0,h=0,u=0;const[d,f]=this.containerToCanvas(e);if(i[1]<0&&s[1]<0){const p=i[1]>s[1]?i[0]:s[0],g=this.basicToCanvas(p,0,e,t,n);c=g[1]>0?g[1]:0}if(s[0]>1&&a[0]>1){const p=s[0]<a[0]?s[1]:a[1],g=this.basicToCanvas(1,p,e,t,n);l=g[0]<d?d-g[0]:0}if(a[1]>1&&o[1]>1){const p=a[1]<o[1]?a[0]:o[0],g=this.basicToCanvas(p,1,e,t,n);h=g[1]<f?f-g[1]:0}if(o[0]<0&&i[0]<0){const p=o[0]>i[0]?o[1]:i[1],g=this.basicToCanvas(0,p,e,t,n);u=g[0]>0?g[0]:0}return[c,l,h,u]}insideElement(e,t){const n=t.getBoundingClientRect(),i=n.left+t.clientLeft,s=i+t.clientWidth,a=n.top+t.clientTop,o=a+t.clientHeight;return e.clientX>i&&e.clientX<s&&e.clientY>a&&e.clientY<o}projectToCanvas(e,t,n){const i=this.projectToViewport(e,n);return this.viewportToCanvas(i[0],i[1],t)}projectToCanvasSafe(e,t,n){if(this.worldToCamera(e,n)[2]>0)return null;const s=this.projectToViewport(e,n);return this.viewportToCanvas(s[0],s[1],t)}projectToViewport(e,t){const n=new D(e[0],e[1],e[2]).project(t);return[n.x,n.y]}unprojectFromCanvas(e,t,n,i){const s=this.canvasToViewport(e,t,n);return this.unprojectFromViewport(s[0],s[1],i)}unprojectFromViewport(e,t,n){return new D(e,t,1).unproject(n)}viewportToBasic(e,t,n,i){const s=new D(e,t,1).unproject(i).toArray();return n.projectBasic(s)}viewportToCanvas(e,t,n){const[i,s]=this.containerToCanvas(n),a=i*(e+1)/2,o=-s*(t-1)/2;return[a,o]}worldToCamera(e,t){return new D(e[0],e[1],e[2]).applyMatrix4(t.matrixWorldInverse).toArray()}}var Os;(function(r){r[r.Automatic=0]="Automatic",r[r.Large=1]="Large",r[r.Small=2]="Small"})(Os||(Os={}));class eS extends Wn{constructor(e,t,n){super(e,t,n),this._spatial=new Hn,this._viewportCoords=new ei,this._svgNamespace="http://www.w3.org/2000/svg",this._distinctThreshold=Math.PI/360,this._animationSpeed=.075}_activate(){const e=this._subscriptions,t=this._container.renderService.renderCamera$.pipe(V(c=>{let l=this._spatial.degToRad(c.perspective.fov),h=c.perspective.aspect===Number.POSITIVE_INFINITY?Math.PI:Math.atan(c.perspective.aspect*Math.tan(.5*l))*2;return[this._spatial.azimuthalToBearing(c.rotation.phi),h]}),Be((c,l)=>Math.abs(l[0]-c[0])<this._distinctThreshold&&Math.abs(l[1]-c[1])<this._distinctThreshold)),n=He(this._navigator.stateService.currentState$.pipe(Be(void 0,c=>c.state.currentImage.id)),this._navigator.panService.panImages$).pipe(V(([c,l])=>{const h=c.state.currentImage,u=c.state.currentTransform;if(tt(h.cameraType))return[Math.PI,Math.PI];const d=this._computeProjectedPoints(u),f=this._spatial.degToRad(this._computeHorizontalFov(d));let p=f/2,g=f/2;for(const[_,,m]of l){const v=this._spatial.wrap(_.compassAngle-h.compassAngle,-180,180);v<0?p=this._spatial.degToRad(Math.abs(v))+m/2:g=this._spatial.degToRad(Math.abs(v))+m/2}return[p,g]}),Be(([c,l],[h,u])=>Math.abs(h-c)<this._distinctThreshold&&Math.abs(u-l)<this._distinctThreshold)),i=He(this._navigator.stateService.currentState$.pipe(Be(void 0,c=>c.state.currentImage.id)),this._container.renderService.bearing$).pipe(V(([c,l])=>this._spatial.degToRad(c.state.currentImage.compassAngle-l))),s=new De,a=s.pipe(cn((c,l)=>l(c),{alpha:0,curr:[0,0,0],prev:[0,0,0]}),V(c=>{const l=No.smootherstep(c.alpha,0,1),h=c.curr,u=c.prev;return[this._interpolate(u[0],h[0],l),this._interpolate(u[1],h[1],l)]}));e.push(n.pipe(V(c=>l=>{const h=No.smootherstep(l.alpha,0,1),u=l.curr,d=l.prev,f=[this._interpolate(d[0],u[0],h),this._interpolate(d[1],u[1],h)];return{alpha:0,curr:c.slice(),prev:f}})).subscribe(s)),e.push(n.pipe(we(()=>this._container.renderService.renderCameraFrame$.pipe(In(1),cn(c=>c+this._animationSpeed,0),gb(c=>c<=1+this._animationSpeed),V(c=>Math.min(c,1)))),V(c=>l=>({alpha:c,curr:l.curr.slice(),prev:l.prev.slice()}))).subscribe(s));const o=He(i,a).pipe(V(([c,l])=>[c,l[0],l[1]]));e.push(He(t,o,this._configuration$,this._container.renderService.size$).pipe(V(([[c,l],[h,u,d],f,p])=>{const g=this._createBackground(c),_=this._createFovIndicator(u,d,h),m=this._createNorth(c),v=this._createCircleSectorCompass(this._createCircleSector(Math.max(Math.PI/20,l),"#FFF")),y=f.size===Os.Small||f.size===Os.Automatic&&p.width<640?".mapillary-bearing-compact":"";return{name:this._name,vNode:ve.h("div.mapillary-bearing-indicator-container"+y,{oncontextmenu:x=>{x.preventDefault()}},[g,_,m,v])}})).subscribe(this._container.domRenderer.render$))}_deactivate(){this._subscriptions.unsubscribe()}_getDefaultConfiguration(){return{size:Os.Automatic}}_createFovIndicator(e,t,n){const i=this._createFovArc(e,t),s=ve.h("g",{attributes:{transform:"translate(18,18)"},namespace:this._svgNamespace},[i]);return ve.h("svg",{attributes:{viewBox:"0 0 36 36"},namespace:this._svgNamespace,style:{height:"36px",left:"2px",position:"absolute",top:"2px",transform:`rotateZ(${this._spatial.radToDeg(n)}deg)`,width:"36px"}},[s])}_createFovArc(e,t){const s=e+t;if(s>2*Math.PI-Math.PI/90)return ve.h("circle",{attributes:{cx:"0",cy:"0","fill-opacity":"0",r:`${16.75}`,stroke:"#FFF","stroke-width":`${2.5}`},namespace:this._svgNamespace},[]);let a=-Math.PI/2-e,o=a+s,c=16.75*Math.cos(a),l=16.75*Math.sin(a),h=16.75*Math.cos(o),u=16.75*Math.sin(o),d=s>=Math.PI?1:0,f=`M ${c} ${l} A ${16.75} ${16.75} 0 ${d} 1 ${h} ${u}`;return ve.h("path",{attributes:{d:f,"fill-opacity":"0",stroke:"#FFF","stroke-width":`${2.5}`},namespace:this._svgNamespace},[])}_createCircleSectorCompass(e){let t=ve.h("g",{attributes:{transform:"translate(1,1)"},namespace:this._svgNamespace},[e]);return ve.h("svg",{attributes:{viewBox:"0 0 2 2"},namespace:this._svgNamespace,style:{height:"26px",left:"7px",position:"absolute",top:"7px",width:"26px"}},[t])}_createCircleSector(e,t){if(e>2*Math.PI-Math.PI/90)return ve.h("circle",{attributes:{cx:"0",cy:"0",fill:t,r:"1"},namespace:this._svgNamespace},[]);let n=-Math.PI/2-e/2,i=n+e,s=Math.cos(n),a=Math.sin(n),o=Math.cos(i),c=Math.sin(i),l=e>=Math.PI?1:0,h=`M 0 0 ${s} ${a} A 1 1 0 ${l} 1 ${o} ${c}`;return ve.h("path",{attributes:{d:h,fill:t},namespace:this._svgNamespace},[])}_createNorth(e){const t=ve.h("div.mapillary-bearing-north",[]);return ve.h("div.mapillary-bearing-north-container",{style:{transform:`rotateZ(${this._spatial.radToDeg(-e)}deg)`}},[t])}_createBackground(e){return ve.h("div.mapillary-bearing-indicator-background",{style:{transform:`rotateZ(${this._spatial.radToDeg(-e)}deg)`}},[ve.h("div.mapillary-bearing-indicator-background-circle",[]),ve.h("div.mapillary-bearing-indicator-background-arrow-container",[ve.h("div.mapillary-bearing-indicator-background-arrow",[])])])}_computeProjectedPoints(e){return _g(e,[[1,0]],[[0,.5]],12,this._viewportCoords)}_computeHorizontalFov(e){const t=e.map(i=>this._coordToFov(i[0]));return Math.min(...t)}_coordToFov(e){return this._spatial.radToDeg(2*Math.atan(e))}_interpolate(e,t,n){return(1-n)*e+n*t}}eS.componentName="bearing";class tS extends Wn{constructor(e,t,n){super(e,t,n)}_activate(){const e=this._subscriptions;e.push(He(this._navigator.stateService.currentImage$.pipe(we(t=>t.sequenceEdges$),Fe(t=>t.cached)),this._configuration$).pipe(we(t=>{let n=t[0],i=t[1],s=Math.max(0,Math.min(4,i.depth.sequence)),a=this._cache$(n.edges,ue.Next,s),o=this._cache$(n.edges,ue.Prev,s);return xt(a,o).pipe($t(c=>(console.error("Failed to cache sequence edges.",c),rt())))})).subscribe(()=>{})),e.push(He(this._navigator.stateService.currentImage$.pipe(we(t=>He(Ze(t),t.spatialEdges$.pipe(Fe(n=>n.cached))))),this._configuration$).pipe(we(([[t,n],i])=>{let s=n.edges,a=i.depth,o=Math.max(0,Math.min(2,a.spherical)),c=tt(t.cameraType)?0:Math.max(0,Math.min(3,a.step)),l=tt(t.cameraType)?0:Math.max(0,Math.min(1,a.turn)),h=this._cache$(s,ue.Spherical,o),u=this._cache$(s,ue.StepForward,c),d=this._cache$(s,ue.StepBackward,c),f=this._cache$(s,ue.StepLeft,c),p=this._cache$(s,ue.StepRight,c),g=this._cache$(s,ue.TurnLeft,l),_=this._cache$(s,ue.TurnRight,l),m=this._cache$(s,ue.TurnU,l);return xt(u,d,f,p,h,g,_,m).pipe($t(v=>(console.error("Failed to cache spatial edges.",v),rt())))})).subscribe(()=>{}))}_deactivate(){this._subscriptions.unsubscribe()}_getDefaultConfiguration(){return{depth:{spherical:1,sequence:2,step:1,turn:0}}}_cache$(e,t,n){return Gc(Ze(e),Ze(n)).pipe(pb(i=>{let s=i[0],a=i[1],o=[];if(a>0)for(let c of s)c.data.direction===t&&o.push(Gc(this._navigator.graphService.cacheImage$(c.target).pipe(ct(l=>this._imageToEdges$(l,t))),Ze(a-1)));return on(o).pipe(ua())}),In(1))}_imageToEdges$(e,t){return([ue.Next,ue.Prev].indexOf(t)>-1?e.sequenceEdges$:e.spatialEdges$).pipe(Ve(n=>n.cached),V(n=>n.edges))}}tS.componentName="cache";class Gi extends Zt{constructor(e){super(e??"The request was cancelled."),Object.setPrototypeOf(this,Gi.prototype),this.name="CancelMapillaryError"}}class O${constructor(e,t){this._spatial=new Hn,this._minThresholdWidth=320,this._maxThresholdWidth=1480,this._minThresholdHeight=240,this._maxThresholdHeight=820,this._configure(e),this._resize(t),this._reset()}get minWidth(){return this._minWidth}get maxWidth(){return this._maxWidth}get containerWidth(){return this._containerWidth}get containerWidthCss(){return this._containerWidthCss}get containerMarginCss(){return this._containerMarginCss}get containerLeftCss(){return this._containerLeftCss}get containerHeight(){return this._containerHeight}get containerHeightCss(){return this._containerHeightCss}get containerBottomCss(){return this._containerBottomCss}get stepCircleSize(){return this._stepCircleSize}get stepCircleSizeCss(){return this._stepCircleSizeCss}get stepCircleMarginCss(){return this._stepCircleMarginCss}get turnCircleSize(){return this._turnCircleSize}get turnCircleSizeCss(){return this._turnCircleSizeCss}get outerRadius(){return this._outerRadius}get innerRadius(){return this._innerRadius}get shadowOffset(){return this._shadowOffset}configure(e){this._configure(e),this._reset()}resize(e){this._resize(e),this._reset()}angleToCoordinates(e){return[Math.cos(e),Math.sin(e)]}relativeAngleToCoordiantes(e,t){let n=this._spatial.wrapAngle(e-t);return this.angleToCoordinates(n)}_configure(e){this._minWidth=e.minWidth,this._maxWidth=this._getMaxWidth(e.minWidth,e.maxWidth)}_resize(e){this._elementWidth=e.width,this._elementHeight=e.height}_reset(){this._containerWidth=this._getContainerWidth(this._elementWidth,this._elementHeight),this._containerHeight=this._getContainerHeight(this.containerWidth),this._stepCircleSize=this._getStepCircleDiameter(this._containerHeight),this._turnCircleSize=this._getTurnCircleDiameter(this.containerHeight),this._outerRadius=this._getOuterRadius(this._containerHeight),this._innerRadius=this._getInnerRadius(this._containerHeight),this._shadowOffset=3,this._containerWidthCss=this._numberToCssPixels(this._containerWidth),this._containerMarginCss=this._numberToCssPixels(-.5*this._containerWidth),this._containerLeftCss=this._numberToCssPixels(Math.floor(.5*this._elementWidth)),this._containerHeightCss=this._numberToCssPixels(this._containerHeight),this._containerBottomCss=this._numberToCssPixels(Math.floor(-.08*this._containerHeight)),this._stepCircleSizeCss=this._numberToCssPixels(this._stepCircleSize),this._stepCircleMarginCss=this._numberToCssPixels(-.5*this._stepCircleSize),this._turnCircleSizeCss=this._numberToCssPixels(this._turnCircleSize)}_getContainerWidth(e,t){let n=(e-this._minThresholdWidth)/(this._maxThresholdWidth-this._minThresholdWidth),i=(t-this._minThresholdHeight)/(this._maxThresholdHeight-this._minThresholdHeight),s=Math.max(0,Math.min(1,Math.min(n,i)));return s=.04*Math.round(25*s),this._minWidth+s*(this._maxWidth-this._minWidth)}_getContainerHeight(e){return .77*e}_getStepCircleDiameter(e){return .34*e}_getTurnCircleDiameter(e){return .3*e}_getOuterRadius(e){return .31*e}_getInnerRadius(e){return .125*e}_numberToCssPixels(e){return e+"px"}_getMaxWidth(e,t){return e>t?e:t}}class U${constructor(e,t){this._isEdge=!1,this._spatial=new Hn,this._calculator=new O$(e,t),this._image=null,this._rotation={phi:0,theta:0},this._epsilon=.5*Math.PI/180,this._highlightKey=null,this._distinguishSequence=!1,this._needsRender=!1,this._stepEdges=[],this._turnEdges=[],this._sphericalEdges=[],this._sequenceEdgeKeys=[],this._stepDirections=[ue.StepForward,ue.StepBackward,ue.StepLeft,ue.StepRight],this._turnDirections=[ue.TurnLeft,ue.TurnRight,ue.TurnU],this._turnNames={},this._turnNames[ue.TurnLeft]="mapillary-direction-turn-left",this._turnNames[ue.TurnRight]="mapillary-direction-turn-right",this._turnNames[ue.TurnU]="mapillary-direction-turn-around";let n=!!document.documentMode;this._isEdge=!n&&!!window.StyleMedia}get needsRender(){return this._needsRender}render(e){this._needsRender=!1;let t=this._rotation,n=[],i=[];return tt(this._image.cameraType)?n=n.concat(this._createSphericalArrows(e,t)):(n=n.concat(this._createPerspectiveToSphericalArrows(e,t)),n=n.concat(this._createStepArrows(e,t)),i=i.concat(this._createTurnArrows(e))),this._getContainer(n,i,t)}setEdges(e,t){this._setEdges(e,t),this._setNeedsRender()}setImage(e){this._image=e,this._clearEdges(),this._setNeedsRender()}setRenderCamera(e){let t=e.rotation;Math.abs(t.phi-this._rotation.phi)<this._epsilon||(this._rotation=t,this._setNeedsRender())}setConfiguration(e){let t=!1;(this._highlightKey!==e.highlightId||this._distinguishSequence!==e.distinguishSequence)&&(this._highlightKey=e.highlightId,this._distinguishSequence=e.distinguishSequence,t=!0),(this._calculator.minWidth!==e.minWidth||this._calculator.maxWidth!==e.maxWidth)&&(this._calculator.configure(e),t=!0),t&&this._setNeedsRender()}resize(e){this._calculator.resize(e),this._setNeedsRender()}_setNeedsRender(){this._image!=null&&(this._needsRender=!0)}_clearEdges(){this._stepEdges=[],this._turnEdges=[],this._sphericalEdges=[],this._sequenceEdgeKeys=[]}_setEdges(e,t){this._stepEdges=[],this._turnEdges=[],this._sphericalEdges=[],this._sequenceEdgeKeys=[];for(let n of e.edges){let i=n.data.direction;if(this._stepDirections.indexOf(i)>-1){this._stepEdges.push(n);continue}if(this._turnDirections.indexOf(i)>-1){this._turnEdges.push(n);continue}n.data.direction===ue.Spherical&&this._sphericalEdges.push(n)}if(this._distinguishSequence&&t!=null){let n=this._sphericalEdges.concat(this._stepEdges).concat(this._turnEdges);for(let i of n){let s=i.target;for(let a of t.imageIds)if(a===s){this._sequenceEdgeKeys.push(s);break}}}}_createSphericalArrows(e,t){let n=[];for(let i of this._sphericalEdges)n.push(this._createVNodeByKey(e,i.target,i.data.worldMotionAzimuth,t,this._calculator.outerRadius,"mapillary-direction-arrow-spherical"));for(let i of this._stepEdges)n.push(this._createSphericalToPerspectiveArrow(e,i.target,i.data.worldMotionAzimuth,t,i.data.direction));return n}_createSphericalToPerspectiveArrow(e,t,n,i,s){let a=Math.PI/8,o=i.phi;switch(s){case ue.StepBackward:o=i.phi-Math.PI;break;case ue.StepLeft:o=i.phi+Math.PI/2;break;case ue.StepRight:o=i.phi-Math.PI/2;break}return Math.abs(this._spatial.wrapAngle(n-o))<a?this._createVNodeByKey(e,t,n,i,this._calculator.outerRadius,"mapillary-direction-arrow-step"):this._createVNodeInactive(t,n,i)}_createPerspectiveToSphericalArrows(e,t){let n=[];for(let i of this._sphericalEdges)n.push(this._createVNodeByKey(e,i.target,i.data.worldMotionAzimuth,t,this._calculator.innerRadius,"mapillary-direction-arrow-spherical",!0));return n}_createStepArrows(e,t){let n=[];for(let i of this._stepEdges)n.push(this._createVNodeByDirection(e,i.target,i.data.worldMotionAzimuth,t,i.data.direction));return n}_createTurnArrows(e){let t=[];for(let n of this._turnEdges){let i=n.data.direction,s=this._turnNames[i];t.push(this._createVNodeByTurn(e,n.target,s,i))}return t}_createVNodeByKey(e,t,n,i,s,a,o){let c=l=>{e.moveTo$(t).subscribe(void 0,h=>{h instanceof Gi||console.error(h)})};return this._createVNode(t,n,i,s,a,"mapillary-direction-circle",c,o)}_createVNodeByDirection(e,t,n,i,s){let a=o=>{e.moveDir$(s).subscribe(void 0,c=>{c instanceof Gi||console.error(c)})};return this._createVNode(t,n,i,this._calculator.outerRadius,"mapillary-direction-arrow-step","mapillary-direction-circle",a)}_createVNodeByTurn(e,t,n,i){let s=h=>{e.moveDir$(i).subscribe(void 0,u=>{u instanceof Gi||console.error(u)})},a={height:this._calculator.turnCircleSizeCss,transform:"rotate(0)",width:this._calculator.turnCircleSizeCss};switch(i){case ue.TurnLeft:a.left="5px",a.top="5px";break;case ue.TurnRight:a.right="5px",a.top="5px";break;case ue.TurnU:a.left="5px",a.bottom="5px";break}let o={attributes:{"data-id":t},onclick:s,style:a},c="mapillary-direction-turn-circle";this._sequenceEdgeKeys.indexOf(t)>-1&&(c+="-sequence"),this._highlightKey===t&&(c+="-highlight");let l=ve.h(`div.${n}`,{},[]);return ve.h("div."+c,o,[l])}_createVNodeInactive(e,t,n){return this._createVNode(e,t,n,this._calculator.outerRadius,"mapillary-direction-arrow-inactive","mapillary-direction-circle-inactive")}_createVNode(e,t,n,i,s,a,o,c){let l=this._calculator.angleToCoordinates(t-n.phi),h=Math.round(-i*l[1]+.5*this._calculator.containerWidth),u=Math.round(-i*l[0]+.5*this._calculator.containerHeight),d=this._calculator.relativeAngleToCoordiantes(t,n.phi),f=this._calculator.shadowOffset,p=-f*d[1],g=f*d[0],_=`drop-shadow(${p}px ${g}px 1px rgba(0,0,0,0.8))`,m={style:{"-webkit-filter":_,filter:_}},v=ve.h("div."+s,m,[]),y=-this._spatial.radToDeg(t-n.phi),x=c?`translate(${h}px, ${u}px) rotate(${y}deg) translateZ(-0.01px)`:`translate(${h}px, ${u}px) rotate(${y}deg)`,w={attributes:{"data-id":e},onclick:o,style:{height:this._calculator.stepCircleSizeCss,marginLeft:this._calculator.stepCircleMarginCss,marginTop:this._calculator.stepCircleMarginCss,transform:x,width:this._calculator.stepCircleSizeCss}};return this._sequenceEdgeKeys.indexOf(e)>-1&&(a+="-sequence"),this._highlightKey===e&&(a+="-highlight"),ve.h("div."+a,w,[v])}_getContainer(e,t,n){let i=this._isEdge?"rotateX(60deg)":`perspective(${this._calculator.containerWidthCss}) rotateX(60deg)`,s={oncontextmenu:a=>{a.preventDefault()},style:{bottom:this._calculator.containerBottomCss,height:this._calculator.containerHeightCss,left:this._calculator.containerLeftCss,marginLeft:this._calculator.containerMarginCss,transform:i,width:this._calculator.containerWidthCss}};return ve.h("div.mapillary-direction-perspective",s,t.concat(e))}}class nS extends Wn{constructor(e,t,n,i){super(e,t,n),this._renderer=i||new U$(this.defaultConfiguration,{height:t.container.offsetHeight,width:t.container.offsetWidth}),this._hoveredIdSubject$=new De,this._hoveredId$=this._hoveredIdSubject$.pipe(vt())}fire(e,t){super.fire(e,t)}off(e,t){super.off(e,t)}on(e,t){super.on(e,t)}_activate(){const e=this._subscriptions;e.push(this._configuration$.subscribe(t=>{this._renderer.setConfiguration(t)})),e.push(this._container.renderService.size$.subscribe(t=>{this._renderer.resize(t)})),e.push(this._navigator.stateService.currentImage$.pipe(an(t=>{this._container.domRenderer.render$.next({name:this._name,vNode:ve.h("div",{},[])}),this._renderer.setImage(t)}),at(this._configuration$),we(([t,n])=>He(t.spatialEdges$,n.distinguishSequence?this._navigator.graphService.cacheSequence$(t.sequenceId).pipe($t(i=>(console.error(`Failed to cache sequence (${t.sequenceId})`,i),Ze(null)))):Ze(null)))).subscribe(([t,n])=>{this._renderer.setEdges(t,n)})),e.push(this._container.renderService.renderCameraFrame$.pipe(an(t=>{this._renderer.setRenderCamera(t)}),V(()=>this._renderer),Fe(t=>t.needsRender),V(t=>({name:this._name,vNode:t.render(this._navigator)}))).subscribe(this._container.domRenderer.render$)),e.push(He(this._container.domRenderer.element$,this._container.renderService.renderCamera$,this._container.mouseService.mouseMove$.pipe(At(null)),this._container.mouseService.mouseUp$.pipe(At(null))).pipe(V(([t])=>{let n=t.getElementsByClassName("mapillary-direction-perspective");for(let i=0;i<n.length;i++){let s=n.item(i).querySelector(":hover");if(s!=null&&s.hasAttribute("data-id"))return s.getAttribute("data-id")}return null}),Be()).subscribe(this._hoveredIdSubject$)),e.push(this._hoveredId$.subscribe(t=>{const n="hover",i={id:t,target:this,type:n};this.fire(n,i)}))}_deactivate(){this._subscriptions.unsubscribe()}_getDefaultConfiguration(){return{distinguishSequence:!1,maxWidth:460,minWidth:260}}}nS.componentName="direction";const B$=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

#define tau 6.28318530718

uniform sampler2D projectorTex;
uniform float opacity;

varying vec4 vRstq;

void main()
{
    vec3 b = normalize(vRstq.xyz);
    float lat = -asin(b.y);
    float lng = atan(b.x, b.z);
    float x = lng / tau + 0.5;
    float y = lat / tau * 2.0 + 0.5;
    vec4 baseColor = texture2D(projectorTex, vec2(x, y));
    baseColor.a = opacity;
    gl_FragColor = baseColor;
}
`,$$=`
#ifdef GL_ES
precision highp float;
#endif

uniform mat4 projectorMat;

varying vec4 vRstq;

void main()
{
    vRstq = projectorMat * vec4(position, 1.0);
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,k$=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

#define tau 6.28318530718

uniform sampler2D projectorTex;
uniform float curtain;
uniform float opacity;

varying vec4 vRstq;

void main()
{
    vec3 b = normalize(vRstq.xyz);
    float lat = -asin(b.y);
    float lng = atan(b.x, b.z);
    float x = lng / tau + 0.5;
    float y = lat / tau * 2.0 + 0.5;

    bool inverted = curtain < 0.5;

    float curtainMin = inverted ? curtain + 0.5 : curtain - 0.5;
    float curtainMax = curtain;

    bool insideCurtain = inverted ?
        x > curtainMin || x < curtainMax :
        x > curtainMin && x < curtainMax;

    vec4 baseColor;
    if (insideCurtain) {
        baseColor = texture2D(projectorTex, vec2(x, y));
        baseColor.a = opacity;
    } else {
        baseColor = vec4(0.0, 0.0, 0.0, 0.0);
    }

    gl_FragColor = baseColor;
}
`,z$=`
#ifdef GL_ES
precision highp float;
#endif

uniform mat4 projectorMat;

varying vec4 vRstq;

void main()
{
    vRstq = projectorMat * vec4(position, 1.0);
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,V$=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D projectorTex;
uniform float opacity;
uniform float focal;
uniform float k1;
uniform float k2;
uniform float scale_x;
uniform float scale_y;
uniform float radial_peak;

varying vec4 vRstq;

void main()
{
    float x = vRstq.x;
    float y = vRstq.y;
    float z = vRstq.z;

    float r = sqrt(x * x + y * y);
    float theta = atan(r, z);

    if (radial_peak > 0. && theta > radial_peak) {
        theta = radial_peak;
    }

    float theta2 = theta * theta;
    float theta_d = theta * (1.0 + theta2 * (k1 + theta2 * k2));
    float s = focal * theta_d / r;

    float u = scale_x * s * x + 0.5;
    float v = -scale_y * s * y + 0.5;

    vec4 baseColor;
    if (u >= 0. && u <= 1. && v >= 0. && v <= 1.) {
        baseColor = texture2D(projectorTex, vec2(u, v));
        baseColor.a = opacity;
    } else {
        baseColor = vec4(0.0, 0.0, 0.0, 0.0);
    }

    gl_FragColor = baseColor;
}
`,H$=`
#ifdef GL_ES
precision highp float;
#endif

uniform mat4 projectorMat;

varying vec4 vRstq;

void main()
{
    vRstq = projectorMat * vec4(position, 1.0);
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,G$=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D projectorTex;
uniform float opacity;
uniform float focal;
uniform float k1;
uniform float k2;
uniform float scale_x;
uniform float scale_y;
uniform float radial_peak;
uniform float curtain;

varying vec4 vRstq;

void main()
{
    float x = vRstq.x;
    float y = vRstq.y;
    float z = vRstq.z;

    float r2 = sqrt(x * x + y * y);
    float theta = atan(r2, z);

    if (radial_peak > 0. && theta > radial_peak) {
        theta = radial_peak;
    }

    float theta2 = theta * theta;
    float theta_d = theta * (1.0 + theta2 * (k1 + theta2 * k2));
    float s = focal * theta_d / r2;

    float u = scale_x * s * x + 0.5;
    float v = -scale_y * s * y + 0.5;

    vec4 baseColor;
    if ((u < curtain || curtain >= 1.0) && u >= 0. && u <= 1. && v >= 0. && v <= 1.) {
        baseColor = texture2D(projectorTex, vec2(u, v));
        baseColor.a = opacity;
    } else {
        baseColor = vec4(0.0, 0.0, 0.0, 0.0);
    }

    gl_FragColor = baseColor;
}
`,W$=`
#ifdef GL_ES
precision highp float;
#endif

uniform mat4 projectorMat;

varying vec4 vRstq;

void main()
{
    vRstq = projectorMat * vec4(position, 1.0);
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,q$=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D projectorTex;
uniform float opacity;
uniform float focal;
uniform float k1;
uniform float k2;
uniform float scale_x;
uniform float scale_y;
uniform float radial_peak;

varying vec4 vRstq;

void main()
{
    float x = vRstq.x / vRstq.z;
    float y = vRstq.y / vRstq.z;
    float r2 = x * x + y * y;

    if (radial_peak > 0. && r2 > radial_peak * sqrt(r2)) {
        r2 = radial_peak * radial_peak;
    }

    float d = 1.0 + k1 * r2 + k2 * r2 * r2;
    float u = scale_x * focal * d * x + 0.5;
    float v = - scale_y * focal * d * y + 0.5;

    vec4 baseColor;
    if (u >= 0. && u <= 1. && v >= 0. && v <= 1.) {
        baseColor = texture2D(projectorTex, vec2(u, v));
        baseColor.a = opacity;
    } else {
        baseColor = vec4(0.0, 0.0, 0.0, 0.0);
    }

    gl_FragColor = baseColor;
}
`,j$=`
#ifdef GL_ES
precision highp float;
#endif

uniform mat4 projectorMat;

varying vec4 vRstq;

void main()
{
    vRstq = projectorMat * vec4(position, 1.0);
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,X$=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D projectorTex;
uniform float opacity;
uniform float focal;
uniform float k1;
uniform float k2;
uniform float scale_x;
uniform float scale_y;
uniform float radial_peak;
uniform float curtain;

varying vec4 vRstq;

void main()
{
    float x = vRstq.x / vRstq.z;
    float y = vRstq.y / vRstq.z;
    float r2 = x * x + y * y;

    if (radial_peak > 0. && r2 > radial_peak * sqrt(r2)) {
        r2 = radial_peak * radial_peak;
    }

    float d = 1.0 + k1 * r2 + k2 * r2 * r2;
    float u = scale_x * focal * d * x + 0.5;
    float v = - scale_y * focal * d * y + 0.5;

    vec4 baseColor;
    if ((u < curtain || curtain >= 1.0) && u >= 0. && u <= 1. && v >= 0. && v <= 1.) {
        baseColor = texture2D(projectorTex, vec2(u, v));
        baseColor.a = opacity;
    } else {
        baseColor = vec4(0.0, 0.0, 0.0, 0.0);
    }

    gl_FragColor = baseColor;
}
`,Y$=`
#ifdef GL_ES
precision highp float;
#endif

uniform mat4 projectorMat;

varying vec4 vRstq;

void main()
{
    vRstq = projectorMat * vec4(position, 1.0);
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,Z$=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D projectorTex;
uniform float opacity;

varying vec4 vRstq;

void main()
{
    float u = vRstq.x / vRstq.w;
    float v = vRstq.y / vRstq.w;

    vec4 baseColor;
    if (u >= 0. && u <= 1. && v >= 0. && v <= 1.) {
        baseColor = texture2D(projectorTex, vec2(u, v));
        baseColor.a = opacity;
    } else {
        baseColor = vec4(0.0, 0.0, 0.0, 0.0);
    }

    gl_FragColor = baseColor;
}
`,K$=`
#ifdef GL_ES
precision highp float;
#endif

uniform mat4 projectorMat;

varying vec4 vRstq;

void main()
{
    vRstq = projectorMat * vec4(position, 1.0);
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,J$=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D projectorTex;
uniform float opacity;
uniform float curtain;

varying vec4 vRstq;

void main()
{
    float u = vRstq.x / vRstq.w;
    float v = vRstq.y / vRstq.w;

    vec4 baseColor;
    if ((u < curtain || curtain >= 1.0) && u >= 0. && u <= 1. && v >= 0. && v <= 1.) {
        baseColor = texture2D(projectorTex, vec2(u, v));
        baseColor.a = opacity;
    } else {
        baseColor = vec4(0.0, 0.0, 0.0, 0.0);
    }

    gl_FragColor = baseColor;
}
`,Q$=`
#ifdef GL_ES
precision highp float;
#endif

uniform mat4 projectorMat;

varying vec4 vRstq;

void main()
{
    vRstq = projectorMat * vec4(position, 1.0);
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`;class fn{}fn.fisheye={fragment:V$,vertex:H$};fn.fisheyeCurtain={fragment:G$,vertex:W$};fn.perspective={fragment:q$,vertex:j$};fn.perspectiveCurtain={fragment:X$,vertex:Y$};fn.perspectiveDistorted={fragment:Z$,vertex:K$};fn.perspectiveDistortedCurtain={fragment:J$,vertex:Q$};fn.spherical={fragment:B$,vertex:$$};fn.sphericalCurtain={fragment:k$,vertex:z$};class iS{constructor(e,t){this._imagePlaneDepth=e??200,this._imageSphereRadius=t??200}createMesh(e,t){return tt(t.cameraType)?this._createImageSphere(e,t):Iu(t.cameraType)?this._createImagePlaneFisheye(e,t):this._createImagePlane(e,t)}createFlatMesh(e,t,n,i,s,a){let o=this._createTexture(e.image),c=this._createDistortedPlaneMaterialParameters(t,o),l=new ai(c),h=this._getFlatImagePlaneGeoFromBasic(t,n,i,s,a);return new sn(h,l)}createCurtainMesh(e,t){return tt(t.cameraType)?this._createSphereCurtainMesh(e,t):Iu(t.cameraType)?this._createCurtainMeshFisheye(e,t):this._createCurtainMesh(e,t)}createDistortedCurtainMesh(e,t){return this._createDistortedCurtainMesh(e,t)}_createCurtainMesh(e,t){let n=this._createTexture(e.image),i=this._createCurtainPlaneMaterialParameters(t,n),s=new ai(i),a=this._useMesh(t,e)?this._getImagePlaneGeo(t,e):this._getRegularFlatImagePlaneGeo(t);return new sn(a,s)}_createCurtainMeshFisheye(e,t){let n=this._createTexture(e.image),i=this._createCurtainPlaneMaterialParametersFisheye(t,n),s=new ai(i),a=this._useMesh(t,e)?this._getImagePlaneGeoFisheye(t,e):this._getRegularFlatImagePlaneGeo(t);return new sn(a,s)}_createDistortedCurtainMesh(e,t){let n=this._createTexture(e.image),i=this._createDistortedCurtainPlaneMaterialParameters(t,n),s=new ai(i),a=this._getRegularFlatImagePlaneGeo(t);return new sn(a,s)}_createSphereCurtainMesh(e,t){let n=this._createTexture(e.image),i=this._createCurtainSphereMaterialParameters(t,n),s=new ai(i);return this._useMesh(t,e)?new sn(this._getImageSphereGeo(t,e),s):new sn(this._getFlatImageSphereGeo(t),s)}_createImageSphere(e,t){let n=this._createTexture(e.image),i=this._createSphereMaterialParameters(t,n),s=new ai(i);return this._useMesh(t,e)?new sn(this._getImageSphereGeo(t,e),s):new sn(this._getFlatImageSphereGeo(t),s)}_createImagePlane(e,t){let n=this._createTexture(e.image),i=this._createPlaneMaterialParameters(t,n),s=new ai(i),a=this._useMesh(t,e)?this._getImagePlaneGeo(t,e):this._getRegularFlatImagePlaneGeo(t);return new sn(a,s)}_createImagePlaneFisheye(e,t){let n=this._createTexture(e.image),i=this._createPlaneMaterialParametersFisheye(t,n),s=new ai(i),a=this._useMesh(t,e)?this._getImagePlaneGeoFisheye(t,e):this._getRegularFlatImagePlaneGeoFisheye(t);return new sn(a,s)}_createSphereMaterialParameters(e,t){return{depthWrite:!1,fragmentShader:fn.spherical.fragment,side:si,transparent:!0,uniforms:{opacity:{value:1},projectorMat:{value:e.rt},projectorTex:{value:t}},vertexShader:fn.spherical.vertex}}_createCurtainSphereMaterialParameters(e,t){return{depthWrite:!1,fragmentShader:fn.sphericalCurtain.fragment,side:si,transparent:!0,uniforms:{curtain:{value:1},opacity:{value:1},projectorMat:{value:e.rt},projectorTex:{value:t}},vertexShader:fn.sphericalCurtain.vertex}}_createPlaneMaterialParameters(e,t){return{depthWrite:!1,fragmentShader:fn.perspective.fragment,side:si,transparent:!0,uniforms:{focal:{value:e.focal},k1:{value:e.ck1},k2:{value:e.ck2},opacity:{value:1},projectorMat:{value:e.basicRt},projectorTex:{value:t},radial_peak:{value:e.radialPeak?e.radialPeak:0},scale_x:{value:Math.max(e.basicHeight,e.basicWidth)/e.basicWidth},scale_y:{value:Math.max(e.basicWidth,e.basicHeight)/e.basicHeight}},vertexShader:fn.perspective.vertex}}_createPlaneMaterialParametersFisheye(e,t){return{depthWrite:!1,fragmentShader:fn.fisheye.fragment,side:si,transparent:!0,uniforms:{focal:{value:e.focal},k1:{value:e.ck1},k2:{value:e.ck2},opacity:{value:1},projectorMat:{value:e.basicRt},projectorTex:{value:t},radial_peak:{value:e.radialPeak?e.radialPeak:0},scale_x:{value:Math.max(e.basicHeight,e.basicWidth)/e.basicWidth},scale_y:{value:Math.max(e.basicWidth,e.basicHeight)/e.basicHeight}},vertexShader:fn.fisheye.vertex}}_createCurtainPlaneMaterialParametersFisheye(e,t){return{depthWrite:!1,fragmentShader:fn.fisheyeCurtain.fragment,side:si,transparent:!0,uniforms:{curtain:{value:1},focal:{value:e.focal},k1:{value:e.ck1},k2:{value:e.ck2},opacity:{value:1},projectorMat:{value:e.basicRt},projectorTex:{value:t},radial_peak:{value:e.radialPeak?e.radialPeak:0},scale_x:{value:Math.max(e.basicHeight,e.basicWidth)/e.basicWidth},scale_y:{value:Math.max(e.basicWidth,e.basicHeight)/e.basicHeight}},vertexShader:fn.fisheyeCurtain.vertex}}_createCurtainPlaneMaterialParameters(e,t){return{depthWrite:!1,fragmentShader:fn.perspectiveCurtain.fragment,side:si,transparent:!0,uniforms:{curtain:{value:1},focal:{value:e.focal},k1:{value:e.ck1},k2:{value:e.ck2},opacity:{value:1},projectorMat:{value:e.basicRt},projectorTex:{value:t},radial_peak:{value:e.radialPeak?e.radialPeak:0},scale_x:{value:Math.max(e.basicHeight,e.basicWidth)/e.basicWidth},scale_y:{value:Math.max(e.basicWidth,e.basicHeight)/e.basicHeight}},vertexShader:fn.perspectiveCurtain.vertex}}_createDistortedCurtainPlaneMaterialParameters(e,t){return{depthWrite:!1,fragmentShader:fn.perspectiveDistortedCurtain.fragment,side:si,transparent:!0,uniforms:{curtain:{value:1},opacity:{value:1},projectorMat:{value:e.projectorMatrix()},projectorTex:{value:t}},vertexShader:fn.perspectiveDistortedCurtain.vertex}}_createDistortedPlaneMaterialParameters(e,t){return{depthWrite:!1,fragmentShader:fn.perspectiveDistorted.fragment,side:si,transparent:!0,uniforms:{opacity:{value:1},projectorMat:{value:e.projectorMatrix()},projectorTex:{value:t}},vertexShader:fn.perspectiveDistorted.vertex}}_createTexture(e){let t=new Cn(e);return t.minFilter=Kn,t.needsUpdate=!0,t}_useMesh(e,t){return t.mesh.vertices.length&&e.hasValidScale}_getImageSphereGeo(e,t){const n=e.srtInverse;let i=5*e.scale,s=this._imageSphereRadius*e.scale,a=t.mesh.vertices,o=a.length/3,c=new Float32Array(a.length);for(let d=0;d<o;++d){let f=3*d,p=a[f+0],g=a[f+1],_=a[f+2],m=Math.sqrt(p*p+g*g+_*_),y=Math.max(i,Math.min(m,s))/m,x=new D(p*y,g*y,_*y);x.applyMatrix4(n),c[f+0]=x.x,c[f+1]=x.y,c[f+2]=x.z}let l=t.mesh.faces,h=new Uint16Array(l.length);for(let d=0;d<l.length;++d)h[d]=l[d];let u=new kt;return u.setAttribute("position",new Ct(c,3)),u.setIndex(new Ct(h,1)),u}_getImagePlaneGeo(e,t){const i=e.srtInverse;let s=5*e.scale,a=this._imagePlaneDepth*e.scale,o=t.mesh.vertices,c=o.length/3,l=new Float32Array(o.length);for(let f=0;f<c;++f){let p=3*f,g=o[p+0],_=o[p+1],m=o[p+2];f<4&&(g*=3,_*=3);let v=Math.max(s,Math.min(m,a)),y=v/m,x=new D(g*y,_*y,v);x.applyMatrix4(i),l[p+0]=x.x,l[p+1]=x.y,l[p+2]=x.z}let h=t.mesh.faces,u=new Uint16Array(h.length);for(let f=0;f<h.length;++f)u[f]=h[f];let d=new kt;return d.setAttribute("position",new Ct(l,3)),d.setIndex(new Ct(u,1)),d}_getImagePlaneGeoFisheye(e,t){const n=e.srtInverse;let i=5*e.scale,s=this._imagePlaneDepth*e.scale,a=t.mesh.vertices,o=a.length/3,c=new Float32Array(a.length);for(let d=0;d<o;++d){let f=3*d,p=a[f+0],g=a[f+1],_=a[f+2],m=Math.sqrt(p*p+g*g+_*_),y=Math.max(i,Math.min(m,s))/m,x=new D(p*y,g*y,_*y);x.applyMatrix4(n),c[f+0]=x.x,c[f+1]=x.y,c[f+2]=x.z}let l=t.mesh.faces,h=new Uint16Array(l.length);for(let d=0;d<l.length;++d)h[d]=l[d];let u=new kt;return u.setAttribute("position",new Ct(c,3)),u.setIndex(new Ct(h,1)),u}_getFlatImageSphereGeo(e){const t=new hg(this._imageSphereRadius,20,40),n=e.rt.clone().invert();return t.applyMatrix4(n),t}_getRegularFlatImagePlaneGeo(e){let t=e.width,n=e.height,i=Math.max(t,n),s=t/2/i,a=n/2/i;return this._getFlatImagePlaneGeo(e,s,a)}_getFlatImagePlaneGeo(e,t,n){let i=[];return i.push(e.unprojectSfM([-t,-n],this._imagePlaneDepth)),i.push(e.unprojectSfM([t,-n],this._imagePlaneDepth)),i.push(e.unprojectSfM([t,n],this._imagePlaneDepth)),i.push(e.unprojectSfM([-t,n],this._imagePlaneDepth)),this._createFlatGeometry(i)}_getRegularFlatImagePlaneGeoFisheye(e){let t=e.width,n=e.height,i=Math.max(t,n),s=t/2/i,a=n/2/i;return this._getFlatImagePlaneGeoFisheye(e,s,a)}_getFlatImagePlaneGeoFisheye(e,t,n){let i=[];return i.push(e.unprojectSfM([-t,-n],this._imagePlaneDepth)),i.push(e.unprojectSfM([t,-n],this._imagePlaneDepth)),i.push(e.unprojectSfM([t,n],this._imagePlaneDepth)),i.push(e.unprojectSfM([-t,n],this._imagePlaneDepth)),this._createFlatGeometry(i)}_getFlatImagePlaneGeoFromBasic(e,t,n,i,s){let a=[];return a.push(e.unprojectBasic([t,i],this._imagePlaneDepth)),a.push(e.unprojectBasic([n,i],this._imagePlaneDepth)),a.push(e.unprojectBasic([n,s],this._imagePlaneDepth)),a.push(e.unprojectBasic([t,s],this._imagePlaneDepth)),this._createFlatGeometry(a)}_createFlatGeometry(e){let t=new Float32Array(12);for(let s=0;s<e.length;s++){let a=3*s;t[a+0]=e[s][0],t[a+1]=e[s][1],t[a+2]=e[s][2]}let n=new Uint16Array(6);n[0]=0,n[1]=1,n[2]=3,n[3]=1,n[4]=2,n[5]=3;let i=new kt;return i.setAttribute("position",new Ct(t,3)),i.setIndex(new Ct(n,1)),i}}class rS{constructor(){this._planes={},this._planesOld={},this._planesPeriphery={},this._scene=new Zr,this._sceneOld=new Zr,this._scenePeriphery=new Zr}get planes(){return this._planes}get planesOld(){return this._planesOld}get planesPeriphery(){return this._planesPeriphery}get scene(){return this._scene}get sceneOld(){return this._sceneOld}get scenePeriphery(){return this._scenePeriphery}updateImagePlanes(e){this._dispose(this._planesOld,this.sceneOld);for(const t in this._planes){if(!this._planes.hasOwnProperty(t))continue;const n=this._planes[t];this._scene.remove(n),this._sceneOld.add(n)}for(const t in e)e.hasOwnProperty(t)&&this._scene.add(e[t]);this._planesOld=this._planes,this._planes=e}addImagePlanes(e){for(const t in e){if(!e.hasOwnProperty(t))continue;const n=e[t];this._scene.add(n),this._planes[t]=n}}addImagePlanesOld(e){for(const t in e){if(!e.hasOwnProperty(t))continue;const n=e[t];this._sceneOld.add(n),this._planesOld[t]=n}}setImagePlanes(e){this._clear(),this.addImagePlanes(e)}addPeripheryPlanes(e){for(const t in e){if(!e.hasOwnProperty(t))continue;const n=e[t];this._scenePeriphery.add(n),this._planesPeriphery[t]=n}}setPeripheryPlanes(e){this._clearPeriphery(),this.addPeripheryPlanes(e)}setImagePlanesOld(e){this._clearOld(),this.addImagePlanesOld(e)}clear(){this._clear(),this._clearOld()}_clear(){this._dispose(this._planes,this._scene),this._planes={}}_clearOld(){this._dispose(this._planesOld,this._sceneOld),this._planesOld={}}_clearPeriphery(){this._dispose(this._planesPeriphery,this._scenePeriphery),this._planesPeriphery={}}_dispose(e,t){for(const n in e){if(!e.hasOwnProperty(n))continue;const i=e[n];t.remove(i),i.geometry.dispose(),i.material.dispose();let s=i.material.uniforms.projectorTex.value;s!=null&&s.dispose()}}}class ek{constructor(){this._factory=new iS,this._scene=new rS,this._alpha=0,this._alphaOld=0,this._fadeOutSpeed=.05,this._currentKey=null,this._previousKey=null,this._providerDisposers={},this._frameId=0,this._needsRender=!1}get frameId(){return this._frameId}get needsRender(){return this._needsRender}indicateNeedsRender(){this._needsRender=!0}addPeripheryPlane(e,t){const n=this._factory.createMesh(e,t),i={};i[e.id]=n,this._scene.addPeripheryPlanes(i),this._needsRender=!0}clearPeripheryPlanes(){this._scene.setPeripheryPlanes({}),this._needsRender=!0}updateFrame(e){this._updateFrameId(e.id),this._needsRender=this._updateAlpha(e.state.alpha)||this._needsRender,this._needsRender=this._updateAlphaOld(e.state.alpha)||this._needsRender,this._needsRender=this._updateImagePlanes(e.state)||this._needsRender}setTextureProvider(e,t){if(e!==this._currentKey)return;let n=t.textureCreated$.subscribe(a=>{this._updateTexture(a)}),i=t.textureUpdated$.subscribe(a=>{this._needsRender=!0}),s=()=>{n.unsubscribe(),i.unsubscribe(),t.dispose()};if(e in this._providerDisposers){let a=this._providerDisposers[e];a(),delete this._providerDisposers[e]}this._providerDisposers[e]=s}updateTextureImage(e,t){this._needsRender=!0;const n=this._extend({},this._scene.planes,this._scene.planesOld,this._scene.planesPeriphery);for(const i in n){if(!n.hasOwnProperty(i)||i!==t.id)continue;let o=n[i].material.uniforms.projectorTex.value;o.image=e,o.needsUpdate=!0}}render(e,t){const n=this._scene.planes,i=this._scene.planesOld,s=this._scene.planesPeriphery,a=Object.keys(i).length?1:this._alpha,o=Object.keys(i).length?1:Math.floor(this._alpha);for(const c in n){if(!n.hasOwnProperty(c))continue;const l=n[c];l.material.uniforms.opacity.value=a}for(const c in i){if(!i.hasOwnProperty(c))continue;const l=i[c];l.material.uniforms.opacity.value=this._alphaOld}for(const c in s){if(!s.hasOwnProperty(c))continue;const l=s[c];l.material.uniforms.opacity.value=o}t.render(this._scene.scenePeriphery,e),t.render(this._scene.scene,e),t.render(this._scene.sceneOld,e);for(const c in n){if(!n.hasOwnProperty(c))continue;const l=n[c];l.material.uniforms.opacity.value=this._alpha}t.render(this._scene.scene,e)}clearNeedsRender(){this._needsRender=!1}dispose(){this._scene.clear()}_updateFrameId(e){this._frameId=e}_updateAlpha(e){return e===this._alpha?!1:(this._alpha=e,!0)}_updateAlphaOld(e){return e<1||this._alphaOld===0?!1:(this._alphaOld=Math.max(0,this._alphaOld-this._fadeOutSpeed),!0)}_updateImagePlanes(e){if(e.currentImage==null||e.currentImage.id===this._currentKey)return!1;let t=e.previousImage!=null?e.previousImage.id:null,n=e.currentImage.id;if(this._previousKey!==t&&this._previousKey!==n&&this._previousKey in this._providerDisposers){let a=this._providerDisposers[this._previousKey];a(),delete this._providerDisposers[this._previousKey]}if(t!=null){if(t!==this._currentKey&&t!==this._previousKey){let a=this._factory.createMesh(e.previousImage,e.previousTransform);const o={};o[t]=a,this._scene.updateImagePlanes(o)}this._previousKey=t}this._currentKey=n;let i=this._factory.createMesh(e.currentImage,e.currentTransform);const s={};return s[n]=i,this._scene.updateImagePlanes(s),this._alphaOld=1,!0}_updateTexture(e){this._needsRender=!0;const t=this._scene.planes;for(const n in t){if(!t.hasOwnProperty(n))continue;let s=t[n].material,a=s.uniforms.projectorTex.value;s.uniforms.projectorTex.value=null,a.dispose(),s.uniforms.projectorTex.value=e}}_extend(e,...t){for(const n of t)for(const i in n)n.hasOwnProperty(i)&&(e[i]=n[i]);return e}}var os;(function(r){r[r.Background=0]="Background",r[r.Opaque=1]="Opaque"})(os||(os={}));class sS{constructor(e){this._api=e,this._urls$=new Map}getImage$(e){let t;const n=new Promise((i,s)=>{t=s});return[Qt.create(i=>{this._api.data.getImageBuffer(e,n).then(s=>{t=null;const a=new Image;a.crossOrigin="Anonymous",a.onload=()=>{window.URL.revokeObjectURL(a.src),i.next(a),i.complete()},a.onerror=()=>{t=null,window.URL.revokeObjectURL(a.src),i.error(new Error("Failed to load image tile"))};const o=new Blob([s]);a.src=window.URL.createObjectURL(o)},s=>{t=null,i.error(s)})}),()=>{t&&t()}]}getURLs$(e,t){const n=this._inventId(e,t);if(this._urls$.has(n))return this._urls$.get(n);const i={imageId:e,z:t},s=this._api.getImageTiles$(i).pipe(V(a=>a.node),_i(()=>{this._urls$.delete(n)}),Ci(),Ue());return this._urls$.set(n,s),s}_inventId(e,t){return`${e}-${t}`}}class hm{constructor(){this._tiles=new Map,this._urlLevels=new Set,this._urls=new Map}add(e,t){if(this._tiles.has(e))throw new Error(`Image tile already stored (${e})`);this._tiles.set(e,t)}addURLs(e,t){const n=this._urls;for(const i of t){const s=this.inventId(i);if(this._urls.has(s))throw new Error(`URL already stored (${s})`);n.set(s,i.url)}this._urlLevels.add(e)}dispose(){this._tiles.forEach(e=>window.URL.revokeObjectURL(e.src)),this._tiles.clear(),this._urls.clear(),this._urlLevels.clear()}get(e){return this._tiles.get(e)}getURL(e){return this._urls.get(e)}has(e){return this._tiles.has(e)}hasURL(e){return this._urls.has(e)}hasURLLevel(e){return this._urlLevels.has(e)}inventId(e){return`${e.z}-${e.x}-${e.y}`}}class aS{constructor(){this._viewportCoords=new ei}computeRegionOfInterest(e,t,n){const i=this._viewportBoundaryPoints(4),s=this._viewportPointsBoundingBox(i,e,n);this._clipBoundingBox(s);const a=2/t.width,o=2/t.height,c=[[-.5*a,.5*o],[.5*a,.5*o],[.5*a,-.5*o],[-.5*a,-.5*o]],l=this._viewportPointsBoundingBox(c,e,n),h=l.minX<l.maxX;return{bbox:s,pixelHeight:l.maxY-l.minY,pixelWidth:l.maxX-l.minX+(h?0:1)}}_viewportBoundaryPoints(e){const t=[],n=[[-1,1],[1,1],[1,-1],[-1,-1]],i=[[2,0],[0,-2],[-2,0],[0,2]];for(let s=0;s<4;++s){const a=n[s],o=i[s];for(let c=0;c<e;++c)t.push([a[0]+o[0]*c/e,a[1]+o[1]*c/e])}return t}_viewportPointsBoundingBox(e,t,n){const i=e.map(s=>this._viewportCoords.viewportToBasic(s[0],s[1],n,t.perspective));return tt(n.cameraType)?this._boundingBoxSpherical(i):this._boundingBox(i)}_boundingBox(e){const t={maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY};for(let n=0;n<e.length;++n)t.minX=Math.min(t.minX,e[n][0]),t.maxX=Math.max(t.maxX,e[n][0]),t.minY=Math.min(t.minY,e[n][1]),t.maxY=Math.max(t.maxY,e[n][1]);return t}_boundingBoxSpherical(e){const t=[],n=[];for(let s=0;s<e.length;++s)t.push(e[s][0]),n.push(e[s][1]);t.sort((s,a)=>this._sign(s-a)),n.sort((s,a)=>this._sign(s-a));const i=this._intervalSpherical(t);return{maxX:i[1],maxY:n[n.length-1],minX:i[0],minY:n[0]}}_intervalSpherical(e){let t=0,n=-1;for(let s=0;s<e.length-1;++s){const a=e[s+1]-e[s];a>t&&(t=a,n=s)}return e[0]+1-e[e.length-1]>t?[e[0],e[e.length-1]]:[e[n+1],e[n]]}_clipBoundingBox(e){e.minX=Math.max(0,Math.min(1,e.minX)),e.maxX=Math.max(0,Math.min(1,e.maxX)),e.minY=Math.max(0,Math.min(1,e.minY)),e.maxY=Math.max(0,Math.min(1,e.maxY))}_sign(e){return e>0?1:e<0?-1:0}}const tk=11,oS=1024;function q0(r,e,t){return Math.max(e,Math.min(t,r))}function cS(r){return oS/Eg(r)}function Eg(r){return Math.pow(2,r.z-r.max)}function nk(r){const e=Math.max(r.w,r.h);return Math.log(e)/Math.log(2)}function lS(r){return Math.ceil(nk(r))}function ik(r,e,t){return Math.max(e,Math.min(t,lS(r)))}function j0(r,e,t){const n=cS(t),i=e.w,s=e.h,a=Math.ceil(i/n)-1,o=Math.ceil(s/n)-1,c=q0(Math.floor(i*r[0]/n),0,a),l=q0(Math.floor(s*r[1]/n),0,o);return{x:c,y:l}}function zf(r,e,t){const i=1/Eg(t)*oS,s=i*r.x,a=i*r.y,o=Math.min(i,e.w-s);return{h:Math.min(i,e.h-a),x:s,y:a,w:o}}function X0(r,e,t){return t*r<=e&&e<t*(r+1)}function rk(r,e){if(r.z===e.z)return r.x===e.x&&r.y===e.y;const t=r.z<e.z?r:e,n=r.z<e.z?e:r,i=1/Eg({max:n.z,z:t.z}),s=X0(t.x,n.x,i),a=X0(t.y,n.y,i);return s&&a}function sk(r,e,t,n){const i=[];if(r.x>e.x){const a=cS(n),o=Math.ceil(t.w/a)-1;for(let c=r.x;c<=o;c++)i.push(c);for(let c=0;c<=e.x;c++)i.push(c)}else for(let a=r.x;a<=e.x;a++)i.push(a);const s=[];for(const a of i)for(let o=r.y;o<=e.y;o++)s.push({x:a,y:o});return s}function Y0(r){return r.w>0&&r.h>0}class um{constructor(e,t,n,i,s,a,o){const c={h:n,w:t};Y0(c)||console.warn(`Original image size (${t}, ${n}) is invalid (${e}). Tiles will not be loaded.`),this._imageId=e,this._size=c,this._level={max:lS(this._size),z:-1},this._holder=new Gn,this._updated$=new De,this._createdSubject$=new De,this._created$=this._createdSubject$.pipe(Ke(1),Ue()),this._holder.push(this._created$.subscribe(()=>{})),this._hasSubject$=new De,this._has$=this._hasSubject$.pipe(At(!1),Ke(1),Ue()),this._holder.push(this._has$.subscribe(()=>{})),this._renderedLevel=new Set,this._rendered=new Map,this._subscriptions=new Map,this._urlSubscriptions=new Map,this._loader=s,this._store=a,this._background=i,this._renderer=o,this._aborts=[],this._render=null,this._disposed=!1}get disposed(){return this._disposed}get hasTexture$(){return this._has$}get id(){return this._imageId}get textureUpdated$(){return this._updated$}get textureCreated$(){return this._created$}abort(){this._subscriptions.forEach(e=>e.unsubscribe()),this._subscriptions.clear();for(const e of this._aborts)e();this._aborts=[]}dispose(){if(this._disposed){console.warn(`Texture already disposed (${this._imageId})`);return}this._urlSubscriptions.forEach(e=>e.unsubscribe()),this._urlSubscriptions.clear(),this.abort(),this._render!=null&&(this._render.target.dispose(),this._render.target=null,this._render.camera=null,this._render=null),this._store.dispose(),this._holder.unsubscribe(),this._renderedLevel.clear(),this._background=null,this._renderer=null,this._disposed=!0}setRegionOfInterest(e){if(!Y0(this._size))return;const t=1/e.pixelWidth,n=1/e.pixelHeight,i=ik({h:n,w:t},tk,this._level.max);i!==this._level.z&&(this.abort(),this._level.z=i,this._renderedLevel.clear(),this._rendered.forEach((c,l)=>{c.z===i&&this._renderedLevel.add(l)})),this._render==null&&this._initRender();const s=j0([e.bbox.minX,e.bbox.minY],this._size,this._level),a=j0([e.bbox.maxX,e.bbox.maxY],this._size,this._level),o=sk(s,a,this._size,this._level);this._fetchTiles(i,o)}_fetchTile(e){const t=this._loader.getImage$(e.url),n=t[0],i=t[1];this._aborts.push(i);const s=this._store.inventId(e),a=n.subscribe(o=>{const c=zf(e,this._size,this._level);this._renderToTarget(c,o),this._subscriptions.delete(s),this._removeFromArray(i,this._aborts),this._markRendered(e),this._store.add(s,o),this._updated$.next(!0)},o=>{this._subscriptions.delete(s),this._removeFromArray(i,this._aborts),console.error(o)});a.closed||this._subscriptions.set(s,a)}_fetchTiles(e,t){const i=(this._store.hasURLLevel(e)?Ze(void 0):this._loader.getURLs$(this._imageId,e).pipe(an(s=>{this._store.hasURLLevel(e)||this._store.addURLs(e,s)}))).subscribe(()=>{if(e===this._level.z){for(const s of t){const a={x:s.x,y:s.y,z:e,url:null},o=this._store.inventId(a);if(!(this._renderedLevel.has(o)||this._subscriptions.has(o))){if(this._store.has(o)){const c=zf(s,this._size,this._level);this._renderToTarget(c,this._store.get(o)),this._markRendered(a),this._updated$.next(!0);continue}a.url=this._store.getURL(o),this._fetchTile(a)}}this._urlSubscriptions.delete(e)}},s=>{this._urlSubscriptions.delete(e),console.error(s)});i.closed||this._urlSubscriptions.set(e,i)}_initRender(){const e=this._size.w/2,t=this._size.h/2,n=-1,i=1,s=new nd(-e,e,t,-t,n,i);s.position.z=1;const a=this._renderer.getContext(),o=a.getParameter(a.MAX_TEXTURE_SIZE),c=Math.max(this._size.w,this._size.h),l=o>c?1:o/c,h=Math.floor(l*this._size.w),u=Math.floor(l*this._size.h),d=new cr(h,u,{depthBuffer:!1,format:fa,magFilter:Kn,minFilter:Kn,stencilBuffer:!1});this._render={camera:s,target:d};const f=zf({x:0,y:0},this._size,{max:this._level.max,z:0});this._renderToTarget(f,this._background),this._createdSubject$.next(d.texture),this._hasSubject$.next(!0)}_markRendered(e){const t=Array.from(this._rendered.entries()).filter(([i,s])=>s.z!==e.z);for(const[i,s]of t)rk(e,s)&&this._rendered.delete(i);const n=this._store.inventId(e);this._rendered.set(n,e),this._renderedLevel.add(n)}_removeFromArray(e,t){const n=t.indexOf(e);n!==-1&&t.splice(n,1)}_renderToTarget(e,t){const n=new Cn(t);n.minFilter=Kn,n.needsUpdate=!0;const i=new td(e.w,e.h),s=new xl({map:n,side:Fo}),a=new sn(i,s);a.position.x=-this._size.w/2+e.x+e.w/2,a.position.y=this._size.h/2-e.y-e.h/2;const o=new Zr;o.add(a);const c=this._renderer.getRenderTarget();this._renderer.resetState(),this._renderer.setRenderTarget(this._render.target),this._renderer.render(o,this._render.camera),this._renderer.setRenderTarget(c),o.remove(a),i.dispose(),s.dispose(),n.dispose()}}var it;(function(r){r[r.Custom=0]="Custom",r[r.Earth=1]="Earth",r[r.Traversing=2]="Traversing",r[r.Waiting=3]="Waiting",r[r.WaitingInteractively=4]="WaitingInteractively"})(it||(it={}));class hS extends Wn{constructor(e,t,n){super(e,t,n),this._imageTileLoader=new sS(n.api),this._roiCalculator=new aS,this._rendererOperation$=new De,this._rendererCreator$=new De,this._rendererDisposer$=new De,this._renderer$=this._rendererOperation$.pipe(cn((i,s)=>s(i),null),Fe(i=>i!=null),Be(void 0,i=>i.frameId)),this._rendererCreator$.pipe(V(()=>i=>{if(i!=null)throw new Error("Multiple image plane states can not be created at the same time");return new ek})).subscribe(this._rendererOperation$),this._rendererDisposer$.pipe(V(()=>i=>(i.dispose(),null))).subscribe(this._rendererOperation$)}_activate(){const e=this._subscriptions;e.push(this._renderer$.pipe(V(c=>{const l={name:this._name,renderer:{frameId:c.frameId,needsRender:c.needsRender,render:c.render.bind(c),pass:os.Background}};return c.clearNeedsRender(),l})).subscribe(this._container.glRenderer.render$)),this._rendererCreator$.next(null),e.push(this._navigator.stateService.currentState$.pipe(V(c=>l=>(l.updateFrame(c),l))).subscribe(this._rendererOperation$));const t=this._container.configurationService.imageTiling$.pipe(we(c=>c?this._navigator.stateService.currentState$:new De),Be(void 0,c=>c.state.currentImage.id),at(this._container.glRenderer.webGLRenderer$),V(([c,l])=>{const h=c.state,u=h.currentImage,d=h.currentTransform;return new um(u.id,d.basicWidth,d.basicHeight,u.image,this._imageTileLoader,new hm,l)}),Ke(1),Ue());e.push(t.subscribe(()=>{})),e.push(t.pipe(V(c=>l=>(l.setTextureProvider(c.id,c),l))).subscribe(this._rendererOperation$)),e.push(t.pipe(Ri()).subscribe(c=>{c[0].abort()}));const n=this._container.configurationService.imageTiling$.pipe(we(c=>c?He(this._navigator.stateService.state$,this._navigator.stateService.inTranslation$):new De),we(([c,l])=>(c===it.Traversing||c===it.Waiting||c===it.WaitingInteractively)&&!l?this._container.renderService.renderCameraFrame$:rt()),V(c=>({camera:c,height:c.size.height.valueOf(),lookat:c.camera.lookat.clone(),width:c.size.width.valueOf(),zoom:c.zoom.valueOf()})),Ri(),V(([c,l])=>{const h=c.width===l.width&&c.height===l.height&&c.zoom===l.zoom&&c.lookat.equals(l.lookat);return{camera:l.camera,stalled:h}}),Be((c,l)=>c.stalled===l.stalled),Fe(c=>c.stalled),at(this._container.renderService.size$,this._navigator.stateService.currentTransform$));e.push(t.pipe(we(c=>n.pipe(V(([l,h,u])=>{const d=l.camera,f=new ei().viewportToBasic(0,0,u,d.perspective);if(!(f[0]<0||f[1]<0||f[0]>1||f[1]>1))return[this._roiCalculator.computeRegionOfInterest(d,h,u),c]}),Fe(l=>!!l))),Fe(c=>!c[1].disposed)).subscribe(([c,l])=>{l.setRegionOfInterest(c)}));const i=t.pipe(we(c=>c.hasTexture$),At(!1),Ke(1),Ue());e.push(i.subscribe(()=>{})),e.push(this._navigator.panService.panImages$.pipe(Fe(c=>c.length===0),V(()=>c=>(c.clearPeripheryPlanes(),c))).subscribe(this._rendererOperation$));const s=this._navigator.panService.panImages$.pipe(we(c=>on(c).pipe(ct(([l,h])=>He(this._navigator.graphService.cacheImage$(l.id).pipe($t(u=>(console.error(`Failed to cache periphery image (${l.id})`,u),rt()))),Ze(h))))),vt());e.push(s.pipe(V(([c,l])=>h=>(h.addPeripheryPlane(c,l),h))).subscribe(this._rendererOperation$)),e.push(s.pipe(ct(([c])=>c.cacheImage$().pipe($t(()=>rt()))),V(c=>l=>(l.updateTextureImage(c.image,c),l))).subscribe(this._rendererOperation$));const a=this._navigator.stateService.currentState$.pipe(V(c=>c.state.alpha<1),Be()),o=He(this._container.mouseService.active$,this._container.touchService.active$,this._navigator.stateService.inMotion$,a).pipe(V(([c,l,h,u])=>!(c||l||h||u)),Fe(c=>c));e.push(this._navigator.stateService.state$.pipe(we(c=>c===it.Traversing?this._navigator.panService.panImages$:rt()),we(c=>o.pipe(at(this._container.renderService.renderCamera$,this._navigator.stateService.currentImage$,this._navigator.stateService.currentTransform$),ct(([,l,h,u])=>Ze([l,h,u,c])))),we(([c,l,h,u])=>{const d=c.camera.lookat.clone().sub(c.camera.position),g=[new Hn().viewingDirection(l.rotation).angleTo(d),void 0],_=new ei().viewportToBasic(0,0,h,c.perspective);_[0]>=0&&_[0]<=1&&_[1]>=0&&_[1]<=1&&(g[0]=Number.NEGATIVE_INFINITY);for(const[m]of u){const y=new Hn().viewingDirection(m.rotation).angleTo(d);y<g[0]&&(g[0]=y,g[1]=m.id)}return g[1]?this._navigator.moveTo$(g[1]).pipe($t(()=>rt())):rt()})).subscribe())}_deactivate(){this._rendererDisposer$.next(null),this._subscriptions.unsubscribe()}_getDefaultConfiguration(){return{}}}hS.componentName="image";class Er{constructor(e,t,n){this._component=e,this._container=t,this._navigator=n,this._enabled=!1}get isEnabled(){return this._enabled}enable(){this._enabled||!this._component.activated||(this._enable(),this._enabled=!0,this._component.configure(this._getConfiguration(!0)))}disable(){this._enabled&&(this._disable(),this._enabled=!1,this._component.activated&&this._component.configure(this._getConfiguration(!1)))}}class ak extends Er{_enable(){const e=this._navigator.stateService.currentImage$.pipe(we(t=>t.sequenceEdges$));this._keyDownSubscription=this._container.keyboardService.keyDown$.pipe(at(e)).subscribe(([t,n])=>{let i=null;switch(t.keyCode){case 38:i=ue.Next;break;case 40:i=ue.Prev;break;default:return}if(t.preventDefault(),!(!t.altKey||t.shiftKey||!n.cached)){for(const s of n.edges)if(s.data.direction===i){this._navigator.moveTo$(s.target).subscribe(void 0,a=>{a instanceof Gi||console.error(a)});return}}})}_disable(){this._keyDownSubscription.unsubscribe()}_getConfiguration(e){return{keySequenceNavigation:e}}}class ok extends Er{constructor(e,t,n,i){super(e,t,n),this._spatial=i}_enable(){const e=this._navigator.stateService.currentImage$.pipe(we(t=>t.spatialEdges$));this._keyDownSubscription=this._container.keyboardService.keyDown$.pipe(at(e,this._navigator.stateService.currentState$)).subscribe(([t,n,i])=>{let s=tt(i.state.currentImage.cameraType),a=null;switch(t.keyCode){case 37:a=t.shiftKey&&!s?ue.TurnLeft:ue.StepLeft;break;case 38:a=t.shiftKey&&!s?ue.Spherical:ue.StepForward;break;case 39:a=t.shiftKey&&!s?ue.TurnRight:ue.StepRight;break;case 40:a=t.shiftKey&&!s?ue.TurnU:ue.StepBackward;break;default:return}if(t.preventDefault(),!(t.altKey||!n.cached||t.shiftKey&&s))if(!s)this._moveDir(a,n);else{const o={};o[ue.StepBackward]=Math.PI,o[ue.StepForward]=0,o[ue.StepLeft]=Math.PI/2,o[ue.StepRight]=-Math.PI/2;const c=this._rotationFromCamera(i.state.camera).phi,l=this._spatial.wrapAngle(c+o[a]),h=Math.PI/4,u=n.edges.filter(p=>p.data.direction===ue.Spherical||p.data.direction===a);let d=Number.MAX_VALUE,f=null;for(const p of u){const g=Math.abs(this._spatial.wrapAngle(p.data.worldMotionAzimuth-l));g<Math.min(d,h)&&(d=g,f=p.target)}if(f==null)return;this._moveTo(f)}})}_disable(){this._keyDownSubscription.unsubscribe()}_getConfiguration(e){return{keySpatialNavigation:e}}_moveDir(e,t){for(const n of t.edges)if(n.data.direction===e){this._moveTo(n.target);return}}_moveTo(e){this._navigator.moveTo$(e).subscribe(void 0,t=>{t instanceof Gi||console.error(t)})}_rotationFromCamera(e){let t=e.lookat.clone().sub(e.position),n=t.clone().dot(e.up),i=t.clone().sub(e.up.clone().multiplyScalar(n)),s=Math.atan2(i.y,i.x),a=Math.PI/2-this._spatial.angleToPlane(t.toArray(),[0,0,1]);return{phi:s,theta:a}}}class ck extends Er{constructor(e,t,n,i){super(e,t,n),this._viewportCoords=i}_enable(){this._keyDownSubscription=this._container.keyboardService.keyDown$.pipe(at(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$)).subscribe(([e,t,n])=>{if(e.altKey||e.ctrlKey||e.metaKey)return;let i=0;switch(e.key){case"+":i=1;break;case"-":i=-1;break;default:return}e.preventDefault();const s=this._viewportCoords.unprojectFromViewport(0,0,t.perspective),a=n.projectBasic(s.toArray());this._navigator.stateService.zoomIn(i,a)})}_disable(){this._keyDownSubscription.unsubscribe()}_getConfiguration(e){return{keyZoom:e}}}class lk extends Er{_enable(){this._keyDownSubscription=this._container.keyboardService.keyDown$.pipe(at(this._navigator.playService.playing$,this._navigator.playService.direction$,this._navigator.playService.speed$,this._navigator.stateService.currentImage$.pipe(we(e=>e.sequenceEdges$)),this._navigator.stateService.state$.pipe(V(e=>e===it.Earth),Be()))).subscribe(([e,t,n,i,s,a])=>{if(!(e.altKey||e.ctrlKey||e.metaKey)){switch(e.key){case"D":if(!e.shiftKey)return;const o=t?null:n===ue.Next?ue.Prev:n===ue.Prev?ue.Next:null;o!=null&&this._navigator.playService.setDirection(o);break;case" ":if(e.shiftKey)return;if(!a)if(t)this._navigator.playService.stop();else for(let c of s.edges)c.data.direction===n&&this._navigator.playService.play();break;case"<":this._navigator.playService.setSpeed(i-.05);break;case">":this._navigator.playService.setSpeed(i+.05);break;default:return}e.preventDefault()}})}_disable(){this._keyDownSubscription.unsubscribe()}_getConfiguration(e){return{keyPlay:e}}}class uS extends Wn{constructor(e,t,n){super(e,t,n),this._keyPlayHandler=new lk(this,t,n),this._keySequenceNavigationHandler=new ak(this,t,n),this._keySpatialNavigationHandler=new ok(this,t,n,new Hn),this._keyZoomHandler=new ck(this,t,n,new ei)}get keyPlay(){return this._keyPlayHandler}get keySequenceNavigation(){return this._keySequenceNavigationHandler}get keySpatialNavigation(){return this._keySpatialNavigationHandler}get keyZoom(){return this._keyZoomHandler}_activate(){this._subscriptions.push(this._configuration$.subscribe(e=>{e.keyPlay?this._keyPlayHandler.enable():this._keyPlayHandler.disable(),e.keySequenceNavigation?this._keySequenceNavigationHandler.enable():this._keySequenceNavigationHandler.disable(),e.keySpatialNavigation?this._keySpatialNavigationHandler.enable():this._keySpatialNavigationHandler.disable(),e.keyZoom?this._keyZoomHandler.enable():this._keyZoomHandler.disable()}))}_deactivate(){this._subscriptions.unsubscribe(),this._keyPlayHandler.disable(),this._keySequenceNavigationHandler.disable(),this._keySpatialNavigationHandler.disable(),this._keyZoomHandler.disable()}_getDefaultConfiguration(){return{keyPlay:!0,keySequenceNavigation:!0,keySpatialNavigation:!0,keyZoom:!0}}}uS.componentName="keyboard";class hk{constructor(e,t){this._needsRender=!1,this._interactiveObjects=[],this._markers={},this._objectMarkers={},this._raycaster=t||new Pu,this._scene=e||new Zr}get markers(){return this._markers}get needsRender(){return this._needsRender}add(e,t){e.id in this._markers&&this._dispose(e.id),e.createGeometry(t),this._scene.add(e.geometry),this._markers[e.id]=e;for(let n of e.getInteractiveObjects())this._interactiveObjects.push(n),this._objectMarkers[n.uuid]=e.id;this._needsRender=!0}clear(){for(const e in this._markers)this._markers.hasOwnProperty&&this._dispose(e);this._needsRender=!0}get(e){return this._markers[e]}getAll(){return Object.keys(this._markers).map(e=>this._markers[e])}has(e){return e in this._markers}intersectObjects([e,t],n){this._raycaster.setFromCamera(new Ne(e,t),n);const i=this._raycaster.intersectObjects(this._interactiveObjects);for(const s of i)if(s.object.uuid in this._objectMarkers)return this._objectMarkers[s.object.uuid];return null}lerpAltitude(e,t,n){e in this._markers&&(this._markers[e].lerpAltitude(t,n),this._needsRender=!0)}remove(e){e in this._markers&&(this._dispose(e),this._needsRender=!0)}render(e,t){t.render(this._scene,e),this._needsRender=!1}update(e,t,n){if(!(e in this._markers))return;this._markers[e].updatePosition(t,n),this._needsRender=!0}_dispose(e){const t=this._markers[e];this._scene.remove(t.geometry);for(let n of t.getInteractiveObjects()){const i=this._interactiveObjects.indexOf(n);i!==-1?this._interactiveObjects.splice(i,1):console.warn(`Object does not exist (${n.id}) for ${e}`),delete this._objectMarkers[n.uuid]}t.disposeGeometry(),delete this._markers[e]}}class dS extends Wn{constructor(e,t,n){super(e,t,n),this._graphCalculator=new gg,this._markerScene=new hk,this._markerSet=new el,this._viewportCoords=new ei,this._relativeGroundAltitude=-2}add(e){this._markerSet.add(e)}fire(e,t){super.fire(e,t)}get(e){return this._markerSet.get(e)}getAll(){return this._markerSet.getAll()}getMarkerIdAt(e){return new Promise((t,n)=>{this._container.renderService.renderCamera$.pipe(Ve(),V(i=>{const s=this._viewportCoords.canvasToViewport(e[0],e[1],this._container.container);return this._markerScene.intersectObjects(s,i.perspective)})).subscribe(i=>{t(i)},i=>{n(i)})})}has(e){return this._markerSet.has(e)}off(e,t){super.off(e,t)}on(e,t){super.on(e,t)}remove(e){this._markerSet.remove(e)}removeAll(){this._markerSet.removeAll()}_activate(){const e=this._navigator.stateService.currentState$.pipe(V(p=>p.state.camera.position.z+this._relativeGroundAltitude),Be((p,g)=>Math.abs(p-g)<.01),Ke(1),Ue()),t=He(e,this._navigator.stateService.reference$).pipe(Ve(),V(()=>{}),Ke(1),Ue()),n=this._configuration$.pipe(V(p=>({visibleBBoxSize:Math.max(1,Math.min(200,p.visibleBBoxSize))}))),i=this._navigator.stateService.currentImage$.pipe(V(p=>p.lngLat),Ke(1),Ue()),s=He(n,i).pipe(V(([p,g])=>this._graphCalculator.boundingBoxCorners(g,p.visibleBBoxSize/2)),Ke(1),Ue()),a=He(Wi(Ze(this._markerSet),this._markerSet.changed$),s).pipe(V(([p,g])=>p.search(g))),o=this._subscriptions;o.push(t.pipe(we(()=>a.pipe(at(this._navigator.stateService.reference$,e)))).subscribe(([p,g,_])=>{const m=this._markerScene,v=m.markers,y=Object.assign({},v);for(const x of p)if(x.id in v)delete y[x.id];else{const w=Zn(x.lngLat.lng,x.lngLat.lat,g.alt+_,g.lng,g.lat,g.alt);m.add(x,w)}for(const x in y)y.hasOwnProperty(x)&&m.remove(x)})),o.push(t.pipe(we(()=>this._markerSet.updated$.pipe(at(s,this._navigator.stateService.reference$,e)))).subscribe(([p,[g,_],m,v])=>{const y=this._markerScene;for(const x of p){const w=y.has(x.id),E=x.lngLat.lat>g.lat&&x.lngLat.lat<_.lat&&x.lngLat.lng>g.lng&&x.lngLat.lng<_.lng;if(E){const M=Zn(x.lngLat.lng,x.lngLat.lat,m.alt+v,m.lng,m.lat,m.alt);y.add(x,M)}else!E&&w&&y.remove(x.id)}})),o.push(this._navigator.stateService.reference$.pipe(In(1),at(e)).subscribe(([p,g])=>{const _=this._markerScene;for(const m of _.getAll()){const v=Zn(m.lngLat.lng,m.lngLat.lat,p.alt+g,p.lng,p.lat,p.alt);_.update(m.id,v)}})),o.push(e.pipe(In(1),at(this._navigator.stateService.reference$,i)).subscribe(([p,g,_])=>{const m=this._markerScene,v=Zn(_.lng,_.lat,g.alt+p,g.lng,g.lat,g.alt);for(const y of m.getAll()){const x=Zn(y.lngLat.lng,y.lngLat.lat,g.alt+p,g.lng,g.lat,g.alt),w=x[0]-v[0],E=x[1]-v[1],M=Math.sqrt(w*w+E*E);M>50||m.lerpAltitude(y.id,p,Math.min(1,Math.max(0,1.2-1.2*M/50)))}})),o.push(this._navigator.stateService.currentState$.pipe(V(p=>{const g=this._markerScene;return{name:this._name,renderer:{frameId:p.id,needsRender:g.needsRender,render:g.render.bind(g),pass:os.Opaque}}})).subscribe(this._container.glRenderer.render$));const c=He(this._container.renderService.renderCamera$,this._container.mouseService.mouseMove$).pipe(V(([p,g])=>{const _=this._container.container,[m,v]=this._viewportCoords.canvasPosition(g,_),y=this._viewportCoords.canvasToViewport(m,v,_);return this._markerScene.intersectObjects(y,p.perspective)}),Ke(1),Ue()),l=this._container.mouseService.filtered$(this._name,this._container.mouseService.mouseDragStart$).pipe(V(()=>!0)),h=this._container.mouseService.filtered$(this._name,this._container.mouseService.mouseDragEnd$).pipe(V(()=>!1)),u=xt(l,h).pipe(At(!1));o.push(xt(l.pipe(at(c)),He(h,Ze(null))).pipe(At([!1,null]),Ri()).subscribe(([p,g])=>{const _=g[0],m=_?"markerdragstart":"markerdragend",v=_?g[1]:p[1],x={marker:this._markerScene.get(v),target:this,type:m};this.fire(m,x)}));const d=xt(this._container.mouseService.mouseDown$.pipe(V(()=>!0)),this._container.mouseService.documentMouseUp$.pipe(V(()=>!1))).pipe(At(!1));o.push(He(this._container.mouseService.active$,c.pipe(Be()),d,u).pipe(V(([p,g,_,m])=>!p&&g!=null&&_||m),Be()).subscribe(p=>{p?(this._container.mouseService.claimMouse(this._name,1),this._container.mouseService.claimWheel(this._name,1)):(this._container.mouseService.unclaimMouse(this._name),this._container.mouseService.unclaimWheel(this._name))}));const f=this._container.mouseService.filtered$(this._name,this._container.mouseService.mouseDragStart$).pipe(at(c,this._container.renderService.renderCamera$),V(([p,g,_])=>{const m=this._markerScene.get(g),v=this._container.container,[y,x]=this._viewportCoords.projectToCanvas(m.geometry.position.toArray(),v,_.perspective),[w,E]=this._viewportCoords.canvasPosition(p,v),M=[w-y,E-x];return[m,M,_]}),Ke(1),Ue());o.push(this._container.mouseService.filtered$(this._name,this._container.mouseService.mouseDrag$).pipe(at(f,this._navigator.stateService.reference$,n)).subscribe(([p,[g,_,m],v,y])=>{if(!this._markerScene.has(g.id))return;const x=this._container.container,[w,E]=this._viewportCoords.canvasPosition(p,x),M=w-_[0],A=E-_[1],[T,S]=this._viewportCoords.canvasToViewport(M,A,x),b=new D(T,S,1).unproject(m.perspective).sub(m.perspective.position).normalize(),U=Math.min(this._relativeGroundAltitude/b.z,y.visibleBBoxSize/2-.1);if(U<0)return;const L=b.clone().multiplyScalar(U).add(m.perspective.position);L.z=m.perspective.position.z+this._relativeGroundAltitude;const[N,k]=ga(L.x,L.y,L.z,v.lng,v.lat,v.alt);this._markerScene.update(g.id,L.toArray(),{lat:k,lng:N}),this._markerSet.update(g);const B="markerposition",z={marker:g,target:this,type:B};this.fire(B,z)}))}_deactivate(){this._subscriptions.unsubscribe(),this._markerScene.clear()}_getDefaultConfiguration(){return{visibleBBoxSize:100}}}dS.componentName="marker";function uk(r){return r>0?1:r<0?-1:0}function kh(r,e){return r.x<=Math.max(e.p1.x,e.p2.x)&&r.x>=Math.min(e.p1.x,e.p2.x)&&r.y>=Math.max(e.p1.y,e.p2.y)&&r.y>=Math.min(e.p1.y,e.p2.y)}function fS(r,e){const t=r.p2.x-r.p1.x,n=r.p2.y-r.p1.y,i=e.p2.x-e.p1.x,s=e.p2.y-e.p1.y,a=t*s-n*i,o=t*t+n*n,c=i*i+s*s;return a*a<1e-10*o*c}function zh(r,e,t){const n=(e.y-r.y)*(t.x-e.x)-(t.y-e.y)*(e.x-r.x);return uk(n)}function dk(r,e){if(fS(r,e))return!1;const t=zh(r.p1,r.p2,e.p1),n=zh(r.p1,r.p2,e.p2),i=zh(e.p1,e.p2,r.p1),s=zh(e.p1,e.p2,r.p2);return!!(t!==n&&i!==s||t===0&&kh(e.p1,r)||n===0&&kh(e.p2,r)||i===0&&kh(r.p1,e)||s===0&&kh(r.p2,e))}function fk(r,e){if(fS(r,e))return;const t=r.p1.x,n=r.p2.x,i=r.p1.y,s=r.p2.y,a=e.p1.x,o=e.p2.x,c=e.p1.y,l=e.p2.y,h=(t-n)*(c-l)-(i-s)*(a-o),u=(t*s-i*n)*(a-o)-(t-n)*(a*l-c*o),d=(t*s-i*n)*(c-l)-(i-s)*(a*l-c*o);return{x:u/h,y:d/h}}function pk(r){let e=[],t=[[0,0],[1,0],[1,1],[0,1]],n=[[1,0],[0,1],[-1,0],[0,-1]];for(let i=0;i<4;++i){let s=t[i],a=n[i];for(let o=0;o<r;++o)e.push([s[0]+a[0]*o/r,s[1]+a[1]*o/r])}return e}function Vf(r,e){return r>=-1&&r<=1&&e>=-1&&e<=1}function Vh(r,e){return r>=0&&r<=1&&e>=0&&e<=1}function Ou(r,e,t){const i=pk(100).map(y=>t.basicToViewportSafe(y[0],y[1],r,e)),s=[],a=[{x:-1,y:1},{x:1,y:1},{x:1,y:-1},{x:-1,y:-1}],o=[!1,!1,!1,!1];for(let y=0;y<i.length;y++){const x=i[y],w=i[(y+1)%i.length];if(x===null)continue;if(w===null){Vf(x[0],x[1])&&s.push(x);continue}const[E,M]=x,[A,T]=w;if(Vf(E,M))if(Vf(A,T))s.push(x);else for(let S=0;S<4;S++){const b={p1:{x:E,y:M},p2:{x:A,y:T}},U={p1:a[S],p2:a[(S+1)%4]};if(dk(b,U)){const N=fk(b,U);s.push(x,[N.x,N.y]),o[S]=!0}}}const[c,l]=t.viewportToBasic(-1,1,r,e),[h,u]=t.viewportToBasic(1,1,r,e),[d,f]=t.viewportToBasic(1,-1,r,e),[p,g]=t.viewportToBasic(-1,-1,r,e);Vh(c,l)&&(o[3]=o[0]=!0),Vh(h,u)&&(o[0]=o[1]=!0),Vh(d,f)&&(o[1]=o[2]=!0),Vh(p,g)&&(o[2]=o[3]=!0);const _=[-1,-1,1,1];for(let y of s){const x=y[0],w=y[1];x>_[1]&&(_[1]=x),x<_[3]&&(_[3]=x),w>_[0]&&(_[0]=w),w<_[2]&&(_[2]=w)}const m=[1,1,-1,-1],v=[];for(let y=0;y<4;y++){if(o[y]){v.push(0);continue}v.push(Math.abs(m[y]-_[y]))}return v}class mk extends Er{constructor(e,t,n,i,s){super(e,t,n),this._spatial=s,this._viewportCoords=i}_enable(){const e=this._navigator.stateService.currentState$.pipe(V(t=>t.state.alpha<1),Be());this._bounceSubscription=He(e,this._navigator.stateService.inTranslation$,this._container.mouseService.active$,this._container.touchService.active$).pipe(V(t=>t[0]||t[1]||t[2]||t[3]),Be(),we(t=>t?rt():He(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$.pipe(Ve()))),at(this._navigator.panService.panImages$)).subscribe(([[t,n],i])=>{if(!n.hasValidScale&&t.camera.focal<.1||t.perspective.aspect===0||t.perspective.aspect===Number.POSITIVE_INFINITY)return;const s=Ou(n,t.perspective,this._viewportCoords),a=this._viewportCoords.viewportToBasic(0,0,n,t.perspective);(a[0]<0||a[0]>1)&&i.length>0&&(s[0]=s[2]=0);for(const[,_]of i){const m=Ou(_,t.perspective,this._viewportCoords);for(let v=1;v<s.length;v+=2)m[v]<s[v]&&(s[v]=m[v])}if(Math.max(...s)<.01)return;const o=s[1]-s[3],c=s[0]-s[2],l=this._viewportCoords.unprojectFromViewport(0,0,t.perspective).sub(t.perspective.position),h=this._viewportCoords.unprojectFromViewport(o,0,t.perspective).sub(t.perspective.position),u=this._viewportCoords.unprojectFromViewport(0,c,t.perspective).sub(t.perspective.position);let d=(o>0?1:-1)*h.angleTo(l),f=(c>0?1:-1)*u.angleTo(l);const p=Math.PI/60,g=.1;d=this._spatial.clamp(g*d,-p,p),f=this._spatial.clamp(g*f,-p,p),this._navigator.stateService.rotateUnbounded({phi:d,theta:f})})}_disable(){this._bounceSubscription.unsubscribe()}_getConfiguration(){return{}}}class fu{static filteredPairwiseMouseDrag$(e,t){return this._filteredPairwiseMouseDrag$(e,t,t.mouseDragStart$,t.mouseDrag$,t.mouseDragEnd$)}static filteredPairwiseMouseRightDrag$(e,t){return this._filteredPairwiseMouseDrag$(e,t,t.mouseRightDragStart$,t.mouseRightDrag$,t.mouseRightDragEnd$)}static _filteredPairwiseMouseDrag$(e,t,n,i,s){return t.filtered$(e,n).pipe(we(a=>{const o=Wi(Ze(a),t.filtered$(e,i)),c=t.filtered$(e,s).pipe(V(()=>null));return xt(o,c).pipe(gb(l=>!!l),At(null))}),Ri(),Fe(a=>a[0]!=null&&a[1]!=null))}}class gk extends Er{constructor(e,t,n,i,s){super(e,t,n),this._spatial=s,this._viewportCoords=i}_enable(){let e=this._container.mouseService.filtered$(this._component.name,this._container.mouseService.mouseDragStart$).pipe(V(()=>!0),vt()),t=this._container.mouseService.filtered$(this._component.name,this._container.mouseService.mouseDragEnd$).pipe(V(()=>!1),vt());this._activeMouseSubscription=xt(e,t).subscribe(this._container.mouseService.activate$);const n=xt(e,t).pipe(we(o=>o?this._container.mouseService.documentMouseMove$:rt()));this._preventDefaultSubscription=xt(n,this._container.touchService.touchMove$).subscribe(o=>{o.preventDefault()});let i=this._container.touchService.singleTouchDragStart$.pipe(V(()=>!0)),s=this._container.touchService.singleTouchDragEnd$.pipe(V(()=>!1));this._activeTouchSubscription=xt(i,s).subscribe(this._container.touchService.activate$);const a=this._navigator.stateService.currentState$.pipe(V(o=>tt(o.state.currentImage.cameraType)||o.state.imagesAhead<1),Be(),we(o=>{if(!o)return rt();const c=fu.filteredPairwiseMouseDrag$(this._component.name,this._container.mouseService),l=xt(this._container.touchService.singleTouchDragStart$,this._container.touchService.singleTouchDrag$,this._container.touchService.singleTouchDragEnd$.pipe(V(()=>null))).pipe(V(h=>h!=null&&h.touches.length>0?h.touches[0]:null),Ri(),Fe(h=>h[0]!=null&&h[1]!=null));return xt(c,l)}),at(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$,this._navigator.panService.panImages$),V(([o,c,l,h])=>{let u=o[0],d=o[1],f=d.clientX-u.clientX,p=d.clientY-u.clientY,g=this._container.container,[_,m]=this._viewportCoords.canvasPosition(d,g),v=this._viewportCoords.unprojectFromCanvas(_,m,g,c.perspective).sub(c.perspective.position),y=this._viewportCoords.unprojectFromCanvas(_-f,m,g,c.perspective).sub(c.perspective.position),x=this._viewportCoords.unprojectFromCanvas(_,m-p,g,c.perspective).sub(c.perspective.position),w=(f>0?1:-1)*y.angleTo(v),E=(p>0?-1:1)*x.angleTo(v);const M=Ou(l,c.perspective,this._viewportCoords);for(const[,A]of h){const T=Ou(A,c.perspective,this._viewportCoords);for(let S=0;S<M.length;S++)T[S]<M[S]&&(M[S]=T[S])}return M[0]>0&&E<0&&(E/=Math.max(1,200*M[0])),M[2]>0&&E>0&&(E/=Math.max(1,200*M[2])),M[1]>0&&w<0&&(w/=Math.max(1,200*M[1])),M[3]>0&&w>0&&(w/=Math.max(1,200*M[3])),{phi:w,theta:E}}),vt());this._rotateWithoutInertiaSubscription=a.subscribe(o=>{this._navigator.stateService.rotateWithoutInertia(o)}),this._rotateSubscription=a.pipe(cn((o,c)=>(this._drainBuffer(o),o.push([Date.now(),c]),o),[]),P2(xt(this._container.mouseService.filtered$(this._component.name,this._container.mouseService.mouseDragEnd$),this._container.touchService.singleTouchDragEnd$)),V(o=>{const c=this._drainBuffer(o.slice()),l={phi:0,theta:0};for(const d of c)l.phi+=d[1].phi,l.theta+=d[1].theta;const h=c.length;h>0&&(l.phi/=h,l.theta/=h);const u=Math.PI/18;return l.phi=this._spatial.clamp(l.phi,-u,u),l.theta=this._spatial.clamp(l.theta,-u,u),l})).subscribe(o=>{this._navigator.stateService.rotate(o)})}_disable(){this._activeMouseSubscription.unsubscribe(),this._activeTouchSubscription.unsubscribe(),this._preventDefaultSubscription.unsubscribe(),this._rotateSubscription.unsubscribe(),this._rotateWithoutInertiaSubscription.unsubscribe(),this._activeMouseSubscription=null,this._activeTouchSubscription=null,this._preventDefaultSubscription=null,this._rotateSubscription=null}_getConfiguration(e){return{dragPan:e}}_drainBuffer(e){const n=Date.now();for(;e.length>0&&n-e[0][0]>50;)e.shift();return e}}class _k extends Er{constructor(e,t,n,i,s){super(e,t,n),this._spatial=s,this._viewportCoords=i,this._subscriptions=new Gn}_enable(){const e=this._navigator.stateService.state$.pipe(V(n=>n===it.Earth),Ke(1),Ue()),t=this._subscriptions;t.push(e.pipe(we(n=>n?this._container.mouseService.mouseWheel$:rt())).subscribe(n=>{n.preventDefault()})),t.push(e.pipe(we(n=>n?fu.filteredPairwiseMouseDrag$(this._component.name,this._container.mouseService).pipe(Fe(([i,s])=>!(i.ctrlKey&&s.ctrlKey))):rt()),at(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$),V(([[n,i],s,a])=>{const o=[0,0,1],c=[0,0,-2],l=this._planeIntersection(i,o,c,s.perspective,this._container.container),h=this._planeIntersection(n,o,c,s.perspective,this._container.container);return!l||!h?null:new D().subVectors(l,h).multiplyScalar(-1).toArray()}),Fe(n=>!!n)).subscribe(n=>{this._navigator.stateService.truck(n)})),t.push(e.pipe(we(n=>n?fu.filteredPairwiseMouseDrag$(this._component.name,this._container.mouseService).pipe(Fe(([i,s])=>i.ctrlKey&&s.ctrlKey)):rt()),V(([n,i])=>this._mousePairToRotation(n,i))).subscribe(n=>{this._navigator.stateService.orbit(n)})),t.push(e.pipe(we(n=>n?fu.filteredPairwiseMouseRightDrag$(this._component.name,this._container.mouseService).pipe(Fe(([i,s])=>!i.ctrlKey&&!s.ctrlKey)):rt()),V(([n,i])=>this._mousePairToRotation(n,i))).subscribe(n=>{this._navigator.stateService.orbit(n)})),t.push(e.pipe(we(n=>n?this._container.mouseService.filteredWheel$(this._component.name,this._container.mouseService.mouseWheel$):rt()),V(n=>{let i=n.deltaY;n.deltaMode===1?i=40*i:n.deltaMode===2&&(i=800*i);const s=this._viewportCoords.containerToCanvas(this._container.container);return-i/s[1]})).subscribe(n=>{this._navigator.stateService.dolly(n)}))}_disable(){this._subscriptions.unsubscribe()}_getConfiguration(){return{}}_eventToViewport(e,t){const n=this._viewportCoords.canvasPosition(e,t);return this._viewportCoords.canvasToViewport(n[0],n[1],t)}_mousePairToRotation(e,t){const[n,i]=this._eventToViewport(t,this._container.container),[s,a]=this._eventToViewport(e,this._container.container),o=(s-n)*Math.PI,c=(i-a)*Math.PI/2;return{phi:o,theta:c}}_planeIntersection(e,t,n,i,s){const[a,o]=this._viewportCoords.canvasPosition(e,s),c=this._viewportCoords.unprojectFromCanvas(a,o,s,i).sub(i.position).normalize();if(Math.abs(this._spatial.angleToPlane(c.toArray(),t))<Math.PI/90)return null;const l=i.position.clone(),h=new D().fromArray(t),u=new D().fromArray(n),d=new D().subVectors(u,l).dot(h)/c.clone().dot(h),f=new D().addVectors(l,c.multiplyScalar(d));return this._viewportCoords.worldToCamera(f.toArray(),i)[2]>0?null:f}}class vk extends Er{constructor(e,t,n,i){super(e,t,n),this._viewportCoords=i}_enable(){this._container.mouseService.claimWheel(this._component.name,0),this._preventDefaultSubscription=this._container.mouseService.mouseWheel$.subscribe(e=>{e.preventDefault()}),this._zoomSubscription=this._container.mouseService.filteredWheel$(this._component.name,this._container.mouseService.mouseWheel$).pipe(at(this._navigator.stateService.currentState$,(e,t)=>[e,t]),Fe(e=>{let t=e[1].state;return tt(t.currentImage.cameraType)||t.imagesAhead<1}),V(e=>e[0]),at(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$,(e,t,n)=>[e,t,n])).subscribe(e=>{let t=e[0],n=e[1],i=e[2],s=this._container.container,[a,o]=this._viewportCoords.canvasPosition(t,s),c=this._viewportCoords.unprojectFromCanvas(a,o,s,n.perspective),l=i.projectBasic(c.toArray()),h=t.deltaY;t.deltaMode===1?h=40*h:t.deltaMode===2&&(h=800*h);const u=this._viewportCoords.containerToCanvas(s);let d=-3*h/u[1];this._navigator.stateService.zoomIn(d,l)})}_disable(){this._container.mouseService.unclaimWheel(this._component.name),this._preventDefaultSubscription.unsubscribe(),this._zoomSubscription.unsubscribe(),this._preventDefaultSubscription=null,this._zoomSubscription=null}_getConfiguration(e){return{scrollZoom:e}}}class xk extends Er{constructor(e,t,n,i){super(e,t,n),this._viewportCoords=i}_enable(){this._preventDefaultSubscription=this._container.touchService.pinch$.subscribe(n=>{n.originalEvent.preventDefault()});let e=this._container.touchService.pinchStart$.pipe(V(n=>!0)),t=this._container.touchService.pinchEnd$.pipe(V(n=>!1));this._activeSubscription=xt(e,t).subscribe(this._container.touchService.activate$),this._zoomSubscription=this._container.touchService.pinch$.pipe(at(this._navigator.stateService.currentState$),Fe(n=>{let i=n[1].state;return tt(i.currentImage.cameraType)||i.imagesAhead<1}),V(n=>n[0]),at(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$)).subscribe(([n,i,s])=>{let a=this._container.container,[o,c]=this._viewportCoords.canvasPosition(n,a),l=this._viewportCoords.unprojectFromCanvas(o,c,a,i.perspective),h=s.projectBasic(l.toArray());const[u,d]=this._viewportCoords.containerToCanvas(a);let f=3*n.distanceChange/Math.min(u,d);this._navigator.stateService.zoomIn(f,h)})}_disable(){this._activeSubscription.unsubscribe(),this._preventDefaultSubscription.unsubscribe(),this._zoomSubscription.unsubscribe(),this._preventDefaultSubscription=null,this._zoomSubscription=null}_getConfiguration(e){return{touchZoom:e}}}class pS extends Wn{constructor(e,t,n){super(e,t,n);const i=new Hn,s=new ei;this._bounceHandler=new mk(this,t,n,s,i),this._dragPanHandler=new gk(this,t,n,s,i),this._earthControlHandler=new _k(this,t,n,s,i),this._scrollZoomHandler=new vk(this,t,n,s),this._touchZoomHandler=new xk(this,t,n,s)}get dragPan(){return this._dragPanHandler}get earthControl(){return this._earthControlHandler}get scrollZoom(){return this._scrollZoomHandler}get touchZoom(){return this._touchZoomHandler}_activate(){this._bounceHandler.enable(),this._subscriptions.push(this._configuration$.subscribe(e=>{e.dragPan?this._dragPanHandler.enable():this._dragPanHandler.disable(),e.earthControl?this._earthControlHandler.enable():this._earthControlHandler.disable(),e.scrollZoom?this._scrollZoomHandler.enable():this._scrollZoomHandler.disable(),e.touchZoom?this._touchZoomHandler.enable():this._touchZoomHandler.disable()})),this._container.mouseService.claimMouse(this._name,0)}_deactivate(){this._container.mouseService.unclaimMouse(this._name),this._subscriptions.unsubscribe(),this._bounceHandler.disable(),this._dragPanHandler.disable(),this._earthControlHandler.disable(),this._scrollZoomHandler.disable(),this._touchZoomHandler.disable()}_getDefaultConfiguration(){return{dragPan:!0,earthControl:!0,scrollZoom:!0,touchZoom:!0}}}pS.componentName="pointer";class Cg{constructor(e){this._document=e||document}get document(){return this._document}createElement(e,t,n){const i=this._document.createElement(e);return t&&(i.className=t),n&&n.appendChild(i),i}}class mS extends Wn{constructor(e,t,n,i){super(e,t,n),this._dom=i||new Cg,this._popups=[],this._added$=new De,this._popups$=new De}add(e){for(const t of e)this._popups.indexOf(t)===-1&&(this._popups.push(t),this._activated&&t.setParentContainer(this._popupContainer));this._added$.next(e),this._popups$.next(this._popups)}getAll(){return this._popups.slice()}remove(e){for(const t of e)this._remove(t);this._popups$.next(this._popups)}removeAll(){for(const e of this._popups.slice())this._remove(e);this._popups$.next(this._popups)}_activate(){this._popupContainer=this._dom.createElement("div","mapillary-popup-container",this._container.container);for(const n of this._popups)n.setParentContainer(this._popupContainer);const e=this._subscriptions;e.push(He(this._container.renderService.renderCamera$,this._container.renderService.size$,this._navigator.stateService.currentTransform$).subscribe(([n,i,s])=>{for(const a of this._popups)a.update(n,i,s)}));const t=this._popups$.pipe(At(this._popups),we(n=>on(n).pipe(ct(i=>i.changed$))),V(n=>[n]));e.push(xt(this._added$,t).pipe(at(this._container.renderService.renderCamera$,this._container.renderService.size$,this._navigator.stateService.currentTransform$)).subscribe(([n,i,s,a])=>{for(const o of n)o.update(i,s,a)}))}_deactivate(){this._subscriptions.unsubscribe();for(const e of this._popups)e.remove();this._container.container.removeChild(this._popupContainer),delete this._popupContainer}_getDefaultConfiguration(){return{}}_remove(e){const t=this._popups.indexOf(e);if(t===-1)return;const n=this._popups.splice(t,1)[0];this._activated&&n.remove()}}mS.componentName="popup";var hi;(function(r){r[r.Sequence=0]="Sequence",r[r.Spatial=1]="Spatial"})(hi||(hi={}));var $n;(function(r){r[r.Default=0]="Default",r[r.Playback=1]="Playback",r[r.Timeline=2]="Timeline"})($n||($n={}));class yk{constructor(e){this._container=e,this._minThresholdWidth=320,this._maxThresholdWidth=1480,this._minThresholdHeight=240,this._maxThresholdHeight=820,this._stepperDefaultWidth=108,this._controlsDefaultWidth=88,this._defaultHeight=30,this._expandControls=!1,this._mode=$n.Default,this._speed=.5,this._changingSpeed=!1,this._index=null,this._changingPosition=!1,this._mouseEnterDirection$=new De,this._mouseLeaveDirection$=new De,this._notifyChanged$=new De,this._notifyChangingPositionChanged$=new De,this._notifySpeedChanged$=new De,this._notifyIndexChanged$=new De}get changed$(){return this._notifyChanged$}get changingPositionChanged$(){return this._notifyChangingPositionChanged$}get speed$(){return this._notifySpeedChanged$}get index$(){return this._notifyIndexChanged$}get mouseEnterDirection$(){return this._mouseEnterDirection$}get mouseLeaveDirection$(){return this._mouseLeaveDirection$}activate(){this._changingSubscription||(this._changingSubscription=xt(this._container.mouseService.documentMouseUp$,this._container.touchService.touchEnd$.pipe(Fe(e=>e.touches.length===0))).subscribe(()=>{this._changingSpeed&&(this._changingSpeed=!1),this._changingPosition&&this._setChangingPosition(!1)}))}deactivate(){this._changingSubscription&&(this._changingSpeed=!1,this._changingPosition=!1,this._expandControls=!1,this._mode=$n.Default,this._changingSubscription.unsubscribe(),this._changingSubscription=null)}render(e,t,n,i,s,a,o,c,l){if(t.visible===!1)return ve.h("div.mapillary-sequence-container",{},[]);const h=this._createStepper(e,t,o,n,c,l),u=this._createSequenceControls(n),d=this._createPlaybackControls(n,i,c,t),f=this._createTimelineControls(n,s,a);return ve.h("div.mapillary-sequence-container",[h,u,d,f])}getContainerWidth(e,t){let n=t.minWidth,i=t.maxWidth;i<n&&(i=n);let s=(e.width-this._minThresholdWidth)/(this._maxThresholdWidth-this._minThresholdWidth),a=(e.height-this._minThresholdHeight)/(this._maxThresholdHeight-this._minThresholdHeight),o=Math.max(0,Math.min(1,Math.min(s,a)));return n+o*(i-n)}_createPositionInput(e,t){this._index=e;const n=f=>{this._index=Number(f.target.value),this._notifyIndexChanged$.next(this._index)},i=this._container.domContainer.getBoundingClientRect(),s=Math.max(276,Math.min(410,5+.8*i.width))-65,a=f=>{f.stopPropagation(),this._setChangingPosition(!0)},o=f=>{this._changingPosition===!0&&f.stopPropagation()},l={max:t??1,min:0,onchange:n,oninput:n,onkeydown:f=>{(f.key==="ArrowDown"||f.key==="ArrowLeft"||f.key==="ArrowRight"||f.key==="ArrowUp")&&f.preventDefault()},onpointerdown:a,onpointermove:o,ontouchmove:o,ontouchstart:a,style:{width:`${s}px`},type:"range",value:e??0},h=e==null||t==null||t<=1;h&&(l.disabled="true");const u=ve.h("input.mapillary-sequence-position",l,[]),d=h?".mapillary-sequence-position-container-inactive":".mapillary-sequence-position-container";return ve.h("div"+d,[u])}_createSpeedInput(e){this._speed=e;const t=l=>{this._speed=Number(l.target.value)/1e3,this._notifySpeedChanged$.next(this._speed)},n=this._container.domContainer.getBoundingClientRect(),i=Math.max(276,Math.min(410,5+.8*n.width))-160,s=l=>{this._changingSpeed=!0,l.stopPropagation()},a=l=>{this._changingSpeed===!0&&l.stopPropagation()},o=l=>{(l.key==="ArrowDown"||l.key==="ArrowLeft"||l.key==="ArrowRight"||l.key==="ArrowUp")&&l.preventDefault()},c=ve.h("input.mapillary-sequence-speed",{max:1e3,min:0,onchange:t,oninput:t,onkeydown:o,onpointerdown:s,onpointermove:a,ontouchmove:a,ontouchstart:s,style:{width:`${i}px`},type:"range",value:1e3*e},[]);return ve.h("div.mapillary-sequence-speed-container",[c])}_createPlaybackControls(e,t,n,i){if(this._mode!==$n.Playback)return ve.h("div.mapillary-sequence-playback",[]);const s=ve.h("div.mapillary-sequence-switch-icon.mapillary-sequence-icon-visible",[]),a=i.direction===ue.Next?ue.Prev:ue.Next,o=i.playing,c={onclick:()=>{o||n.configure({direction:a})}},l=i.playing?".mapillary-sequence-switch-button-inactive":".mapillary-sequence-switch-button",h=ve.h("div"+l,c,[s]),u=ve.h("div.mapillary-sequence-slow-icon.mapillary-sequence-icon-visible",[]),d=ve.h("div.mapillary-sequence-slow-container",[u]),f=ve.h("div.mapillary-sequence-fast-icon.mapillary-sequence-icon-visible",[]),p=ve.h("div.mapillary-sequence-fast-container",[f]),g=ve.h("div.mapillary-sequence-close-icon.mapillary-sequence-icon-visible",[]),_={onclick:()=>{this._mode=$n.Default,this._notifyChanged$.next(this)}},m=ve.h("div.mapillary-sequence-close-button",_,[g]),v=this._createSpeedInput(t),y=[h,d,v,p,m],w={style:{top:`${Math.round(e/this._stepperDefaultWidth*this._defaultHeight+10)}px`}};return ve.h("div.mapillary-sequence-playback",w,y)}_createPlayingButton(e,t,n,i,s){let a=i.direction===ue.Next&&e!=null||i.direction===ue.Prev&&t!=null;a=a&&n;let c={onclick:i.playing?()=>{s.stop()}:a?()=>{s.play()}:null},l={};i.direction===ue.Prev&&(l.style={transform:"rotate(180deg) translate(50%, 50%)"});let h=ve.h("div.mapillary-sequence-icon",l,[]),u=i.playing?"mapillary-sequence-stop":a?"mapillary-sequence-play":"mapillary-sequence-play-inactive";return ve.h("div."+u,c,[h])}_createSequenceControls(e){const t=Math.round(8/this._stepperDefaultWidth*e),n={onclick:()=>{this._expandControls=!this._expandControls,this._mode=$n.Default,this._notifyChanged$.next(this)},style:{"border-bottom-right-radius":`${t}px`,"border-top-right-radius":`${t}px`}},i=ve.h("div.mapillary-sequence-expander-bar",[]),s=ve.h("div.mapillary-sequence-expander-button",n,[i]),a=this._mode===$n.Playback?".mapillary-sequence-fast-icon-gray.mapillary-sequence-icon-visible":".mapillary-sequence-fast-icon",o=ve.h("div"+a,[]),c={onclick:()=>{this._mode=this._mode===$n.Playback?$n.Default:$n.Playback,this._notifyChanged$.next(this)}},l=ve.h("div.mapillary-sequence-playback-button",c,[o]),h=this._mode===$n.Timeline?".mapillary-sequence-timeline-icon-gray.mapillary-sequence-icon-visible":".mapillary-sequence-timeline-icon",u=ve.h("div"+h,[]),d={onclick:()=>{this._mode=this._mode===$n.Timeline?$n.Default:$n.Timeline,this._notifyChanged$.next(this)}},f=ve.h("div.mapillary-sequence-timeline-button",d,[u]),p={style:{height:this._defaultHeight/this._stepperDefaultWidth*e+"px",transform:`translate(${e/2+2}px, 0)`,width:this._controlsDefaultWidth/this._stepperDefaultWidth*e+"px"}},g=".mapillary-sequence-controls"+(this._expandControls?".mapillary-sequence-controls-expanded":"");return ve.h("div"+g,p,[l,f,s])}_createSequenceArrows(e,t,n,i,s){let a={onclick:e!=null?()=>{s.moveDir$(ue.Next).subscribe(void 0,f=>{f instanceof Gi||console.error(f)})}:null,onpointerenter:()=>{this._mouseEnterDirection$.next(ue.Next)},onpointerleave:()=>{this._mouseLeaveDirection$.next(ue.Next)}};const o=Math.round(8/this._stepperDefaultWidth*n);let c={onclick:t!=null?()=>{s.moveDir$(ue.Prev).subscribe(void 0,f=>{f instanceof Gi||console.error(f)})}:null,onpointerenter:()=>{this._mouseEnterDirection$.next(ue.Prev)},onpointerleave:()=>{this._mouseLeaveDirection$.next(ue.Prev)},style:{"border-bottom-left-radius":`${o}px`,"border-top-left-radius":`${o}px`}},l=this._getStepClassName(ue.Next,e,i.highlightId),h=this._getStepClassName(ue.Prev,t,i.highlightId),u=ve.h("div.mapillary-sequence-icon",[]),d=ve.h("div.mapillary-sequence-icon",[]);return[ve.h("div."+h,c,[d]),ve.h("div."+l,a,[u])]}_createStepper(e,t,n,i,s,a){let o=null,c=null;for(let d of e.edges)d.data.direction===ue.Next&&(o=d.target),d.data.direction===ue.Prev&&(c=d.target);const l=this._createPlayingButton(o,c,n,t,s),h=this._createSequenceArrows(o,c,i,t,a);h.splice(1,0,l);const u={oncontextmenu:d=>{d.preventDefault()},style:{height:this._defaultHeight/this._stepperDefaultWidth*i+"px",width:i+"px"}};return ve.h("div.mapillary-sequence-stepper",u,h)}_createTimelineControls(e,t,n){if(this._mode!==$n.Timeline)return ve.h("div.mapillary-sequence-timeline",[]);const i=this._createPositionInput(t,n),s=ve.h("div.mapillary-sequence-close-icon.mapillary-sequence-icon-visible",[]),a={onclick:()=>{this._mode=$n.Default,this._notifyChanged$.next(this)}},o=ve.h("div.mapillary-sequence-close-button",a,[s]),l={style:{top:`${Math.round(e/this._stepperDefaultWidth*this._defaultHeight+10)}px`}};return ve.h("div.mapillary-sequence-timeline",l,[i,o])}_getStepClassName(e,t,n){let i=e===ue.Next?"mapillary-sequence-step-next":"mapillary-sequence-step-prev";return t==null?i+="-inactive":n===t&&(i+="-highlight"),i}_setChangingPosition(e){this._changingPosition=e,this._notifyChangingPositionChanged$.next(e)}}class gS extends Wn{constructor(e,t,n,i,s){super(e,t,n),this._sequenceDOMRenderer=i||new yk(t),this._scheduler=s,this._containerWidth$=new De,this._hoveredIdSubject$=new De,this._hoveredId$=this._hoveredIdSubject$.pipe(vt()),this._navigator.playService.playing$.pipe(In(1),at(this._configuration$)).subscribe(([a,o])=>{const c="playing",l={playing:a,target:this,type:c};this.fire(c,l),a!==o.playing&&(a?this.play():this.stop())}),this._navigator.playService.direction$.pipe(In(1),at(this._configuration$)).subscribe(([a,o])=>{a!==o.direction&&this.configure({direction:a})})}fire(e,t){super.fire(e,t)}off(e,t){super.off(e,t)}on(e,t){super.on(e,t)}play(){this.configure({playing:!0})}stop(){this.configure({playing:!1})}_activate(){this._sequenceDOMRenderer.activate();const e=this._navigator.stateService.currentImage$.pipe(we(o=>o.sequenceEdges$),Ke(1),Ue()),t=this._navigator.stateService.currentImage$.pipe(Be(void 0,o=>o.sequenceId),we(o=>Wi(Ze(null),this._navigator.graphService.cacheSequence$(o.sequenceId).pipe(Xp(3),$t(c=>(console.error("Failed to cache sequence",c),Ze(null)))))),At(null),Ke(1),Ue()),n=this._subscriptions;n.push(t.subscribe());const i=this._sequenceDOMRenderer.index$.pipe(at(t),V(([o,c])=>c!=null?c.imageIds[o]:null),Fe(o=>!!o),Be(),Ci(),Ue());n.push(xt(i.pipe(Wc(100,this._scheduler)),i.pipe(lb(400,this._scheduler))).pipe(Be(),we(o=>this._navigator.moveTo$(o).pipe($t(()=>rt())))).subscribe()),n.push(this._sequenceDOMRenderer.changingPositionChanged$.pipe(Fe(o=>o)).subscribe(()=>{this._navigator.graphService.setGraphMode(hi.Sequence)})),n.push(this._sequenceDOMRenderer.changingPositionChanged$.pipe(Fe(o=>!o)).subscribe(()=>{this._navigator.graphService.setGraphMode(hi.Spatial)})),this._navigator.graphService.graphMode$.pipe(we(o=>o===hi.Spatial?this._navigator.stateService.currentImage$.pipe(Hi(2)):rt()),Fe(o=>!o.spatialEdges.cached),we(o=>this._navigator.graphService.cacheImage$(o.id).pipe($t(()=>rt())))).subscribe(),n.push(this._sequenceDOMRenderer.changingPositionChanged$.pipe(Fe(o=>o)).subscribe(()=>{this._navigator.playService.stop()})),n.push(He(this._navigator.graphService.graphMode$,this._sequenceDOMRenderer.changingPositionChanged$.pipe(At(!1),Be())).pipe(at(this._navigator.stateService.currentImage$),we(([[o,c],l])=>c&&o===hi.Sequence?this._navigator.graphService.cacheSequenceImages$(l.sequenceId,l.id).pipe(Xp(3),$t(h=>(console.error("Failed to cache sequence images.",h),rt()))):rt())).subscribe());const s=t.pipe(we(o=>{if(!o)return Ze({index:null,max:null});let c=!0;return this._sequenceDOMRenderer.changingPositionChanged$.pipe(At(!1),Be(),we(l=>{const h=!l&&c?0:1;return c=!1,l?i:this._navigator.stateService.currentImage$.pipe(V(u=>u.id),Be(),In(h))}),V(l=>{const h=o.imageIds.indexOf(l);return h===-1?{index:null,max:null}:{index:h,max:o.imageIds.length-1}}))})),a=this._navigator.stateService.state$.pipe(V(o=>o===it.Earth),Be());n.push(He(e,this._configuration$,this._containerWidth$,this._sequenceDOMRenderer.changed$.pipe(At(this._sequenceDOMRenderer)),this._navigator.playService.speed$,s,a).pipe(V(([o,c,l,,h,u,d])=>{const f=this._sequenceDOMRenderer.render(o,c,l,h,u.index,u.max,!d,this,this._navigator);return{name:this._name,vNode:f}})).subscribe(this._container.domRenderer.render$)),n.push(this._sequenceDOMRenderer.speed$.subscribe(o=>{this._navigator.playService.setSpeed(o)})),n.push(this._configuration$.pipe(V(o=>o.direction),Be()).subscribe(o=>{this._navigator.playService.setDirection(o)})),n.push(He(this._container.renderService.size$,this._configuration$.pipe(Be((o,c)=>o[0]===c[0]&&o[1]===c[1],o=>[o.minWidth,o.maxWidth]))).pipe(V(([o,c])=>this._sequenceDOMRenderer.getContainerWidth(o,c))).subscribe(this._containerWidth$)),n.push(this._configuration$.pipe(V(o=>o.playing),Be()).subscribe(o=>{o?this._navigator.playService.play():this._navigator.playService.stop()})),n.push(this._sequenceDOMRenderer.mouseEnterDirection$.pipe(we(o=>{const c=e.pipe(V(l=>{for(let h of l.edges)if(h.data.direction===o)return h.target;return null}),As(this._sequenceDOMRenderer.mouseLeaveDirection$));return Wi(c,Ze(null))}),Be()).subscribe(this._hoveredIdSubject$)),n.push(this._hoveredId$.subscribe(o=>{const c="hover",l={id:o,target:this,type:c};this.fire(c,l)}))}_deactivate(){this._subscriptions.unsubscribe(),this._sequenceDOMRenderer.deactivate()}_getDefaultConfiguration(){return{direction:ue.Next,maxWidth:108,minWidth:70,playing:!1,visible:!0}}}gS.componentName="sequence";var ki;(function(r){r[r.Motion=0]="Motion",r[r.Stationary=1]="Stationary"})(ki||(ki={}));const bk=1e-8;class Co{constructor(e,t,n,i,s,a,o,c,l,h){this._orientation=this._getValue(e,1);let u=o!=null?o.width:4,d=o!=null?o.height:3,f=this._orientation<5;this._width=this._getValue(t,f?u:d),this._height=this._getValue(n,f?d:u),this._basicAspect=f?this._width/this._height:this._height/this._width,this._basicWidth=f?t:n,this._basicHeight=f?n:t;const p=this._getCameraParameters(l,h),g=p[0],_=p[1],m=p[2];this._focal=this._getValue(g,1),this._scale=this._getValue(i,0),this._worldToCamera=this.createWorldToCamera(s,a),this._worldToCameraInverse=new et().copy(this._worldToCamera).invert(),this._scaledWorldToCamera=this._createScaledWorldToCamera(this._worldToCamera,this._scale),this._scaledWorldToCameraInverse=new et().copy(this._scaledWorldToCamera).invert(),this._basicWorldToCamera=this._createBasicWorldToCamera(this._worldToCamera,e),this._textureScale=c||[1,1],this._ck1=_||0,this._ck2=m||0,this._cameraType=h||"perspective",this._radialPeak=this._getRadialPeak(this._ck1,this._ck2)}get ck1(){return this._ck1}get ck2(){return this._ck2}get cameraType(){return this._cameraType}get basicAspect(){return this._basicAspect}get basicHeight(){return this._basicHeight}get basicRt(){return this._basicWorldToCamera}get basicWidth(){return this._basicWidth}get focal(){return this._focal}get height(){return this._height}get orientation(){return this._orientation}get rt(){return this._worldToCamera}get srt(){return this._scaledWorldToCamera}get srtInverse(){return this._scaledWorldToCameraInverse}get scale(){return this._scale}get hasValidScale(){return this._scale>.01&&this._scale<50}get radialPeak(){return this._radialPeak}get width(){return this._width}upVector(){let e=this._worldToCamera.elements;switch(this._orientation){case 1:return new D(-e[1],-e[5],-e[9]);case 3:return new D(e[1],e[5],e[9]);case 6:return new D(-e[0],-e[4],-e[8]);case 8:return new D(e[0],e[4],e[8]);default:return new D(-e[1],-e[5],-e[9])}}projectorMatrix(){let e=this._normalizedToTextureMatrix(),t=this._focal,n=new et().set(t,0,0,0,0,t,0,0,0,0,0,0,0,0,1,0);return e.multiply(n),e.multiply(this._worldToCamera),e}projectBasic(e){let t=this.projectSfM(e);return this._sfmToBasic(t)}unprojectBasic(e,t,n){let i=this._basicToSfm(e);return this.unprojectSfM(i,t,n)}projectSfM(e){let t=new Ht(e[0],e[1],e[2],1);return t.applyMatrix4(this._worldToCamera),this._bearingToSfm([t.x,t.y,t.z])}unprojectSfM(e,t,n){const i=this._sfmToBearing(e),a=(n&&!tt(this._cameraType)?new Ht(t*i[0]/i[2],t*i[1]/i[2],t,1):new Ht(t*i[0],t*i[1],t*i[2],1)).applyMatrix4(this._worldToCameraInverse);return[a.x/a.w,a.y/a.w,a.z/a.w]}_sfmToBearing(e){if(tt(this._cameraType)){let t=e[0]*2*Math.PI,n=-e[1]*2*Math.PI,i=Math.cos(n)*Math.sin(t),s=-Math.sin(n),a=Math.cos(n)*Math.cos(t);return[i,s,a]}else if(Iu(this._cameraType)){let[t,n]=[e[0]/this._focal,e[1]/this._focal];const i=Math.sqrt(t*t+n*n);let s=this._distortionFromDistortedRadius(i,this._ck1,this._ck2,this._radialPeak),a=i/s,o=Math.cos(a),c=Math.sin(a);const l=i>bk?1/i:1;let h=c*t*l,u=c*n*l;return[h,u,o]}else{let[t,n]=[e[0]/this._focal,e[1]/this._focal];const i=Math.sqrt(t*t+n*n);let s=this._distortionFromDistortedRadius(i,this._ck1,this._ck2,this._radialPeak);const a=t/s,o=n/s;let c=new D(a,o,1);return c.normalize(),[c.x,c.y,c.z]}}_distortionFromDistortedRadius(e,t,n,i){let s=1;for(let a=0;a<10;a++){let o=e/s;o>i&&(o=i),s=1+t*Math.pow(o,2)+n*Math.pow(o,4)}return s}_bearingToSfm(e){if(tt(this._cameraType)){let t=e[0],n=e[1],i=e[2],s=Math.atan2(t,i),a=Math.atan2(-n,Math.sqrt(t*t+i*i));return[s/(2*Math.PI),-a/(2*Math.PI)]}else if(Iu(this._cameraType))if(e[2]>0){const[t,n,i]=e,s=Math.sqrt(t*t+n*n);let a=Math.atan2(s,i);a>this._radialPeak&&(a=this._radialPeak);const o=1+Math.pow(a,2)*(this._ck1+Math.pow(a,2)*this._ck2),c=this._focal*o*a/s;return[c*t,c*n]}else return[e[0]<0?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,e[1]<0?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY];else if(e[2]>0){let[t,n]=[e[0]/e[2],e[1]/e[2]],i=t*t+n*n;const s=Math.pow(this._radialPeak,2);i>s&&(i=s);const a=1+this._ck1*i+this._ck2*Math.pow(i,2);return[this._focal*a*t,this._focal*a*n]}else return[e[0]<0?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,e[1]<0?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY]}_basicToSfm(e){let t,n;switch(this._orientation){case 1:t=e[0],n=e[1];break;case 3:t=1-e[0],n=1-e[1];break;case 6:t=e[1],n=1-e[0];break;case 8:t=1-e[1],n=e[0];break;default:t=e[0],n=e[1];break}let i=this._width,s=this._height,a=Math.max(i,s),o=t*i/a-i/a/2,c=n*s/a-s/a/2;return[o,c]}_sfmToBasic(e){let t=this._width,n=this._height,i=Math.max(t,n),s=(e[0]+t/i/2)/t*i,a=(e[1]+n/i/2)/n*i,o,c;switch(this._orientation){case 1:o=s,c=a;break;case 3:o=1-s,c=1-a;break;case 6:o=1-a,c=s;break;case 8:o=a,c=1-s;break;default:o=s,c=a;break}return[o,c]}_getValue(e,t){return e!=null&&e>0?e:t}_getCameraParameters(e,t){if(tt(t))return[];if(!e||e.length===0)return[1,0,0];const n=3-e.length;return n<=0?e:e.concat(new Array(n).fill(0))}createWorldToCamera(e,t){const n=new D(e[0],e[1],e[2]),i=n.length();i>0&&n.normalize();const s=new et;return s.makeRotationAxis(n,i),s.setPosition(new D(t[0],t[1],t[2])),s}_createScaledWorldToCamera(e,t){const n=e.clone(),i=n.elements;return i[12]=t*i[12],i[13]=t*i[13],i[14]=t*i[14],n.scale(new D(t,t,t)),n}_createBasicWorldToCamera(e,t){const n=new D(0,0,1);let i=0;switch(t){case 3:i=Math.PI;break;case 6:i=Math.PI/2;break;case 8:i=3*Math.PI/2;break}return new et().makeRotationAxis(n,i).multiply(e)}_getRadialPeak(e,t){const n=5*t,i=3*e,a=Math.pow(i,2)-4*n*1;if(a<0)return;const o=(-i-Math.sqrt(a))/2/n,c=(-i+Math.sqrt(a))/2/n,l=Math.min(o,c),h=Math.max(o,c);return l>0?Math.sqrt(l):h>0?Math.sqrt(h):void 0}_normalizedToTextureMatrix(){const e=Math.max(this._width,this._height),t=this._orientation<5?this._textureScale[0]:this._textureScale[1],n=this._orientation<5?this._textureScale[1]:this._textureScale[0],i=e/this._width*t,s=e/this._height*n;switch(this._orientation){case 1:return new et().set(i,0,0,.5,0,-s,0,.5,0,0,1,0,0,0,0,1);case 3:return new et().set(-i,0,0,.5,0,s,0,.5,0,0,1,0,0,0,0,1);case 6:return new et().set(0,-s,0,.5,-i,0,0,.5,0,0,1,0,0,0,0,1);case 8:return new et().set(0,s,0,.5,i,0,0,.5,0,0,1,0,0,0,0,1);default:return new et().set(i,0,0,.5,0,-s,0,.5,0,0,1,0,0,0,0,1)}}}class Mk{constructor(){this._factory=new iS,this._scene=new rS,this._spatial=new Hn,this._currentKey=null,this._previousKey=null,this._disabled=!1,this._curtain=1,this._frameId=0,this._needsRender=!1,this._mode=null,this._currentProviderDisposers={},this._previousProviderDisposers={}}get disabled(){return this._disabled}get frameId(){return this._frameId}get needsRender(){return this._needsRender}setTextureProvider(e,t){this._setTextureProvider(e,this._currentKey,t,this._currentProviderDisposers,this._updateTexture.bind(this))}setTextureProviderPrev(e,t){this._setTextureProvider(e,this._previousKey,t,this._previousProviderDisposers,this._updateTexturePrev.bind(this))}update(e,t){this._updateFrameId(e.id),this._updateImagePlanes(e.state,t)}updateCurtain(e){this._curtain!==e&&(this._curtain=e,this._updateCurtain(),this._needsRender=!0)}updateTexture(e,t){const n=t.id===this._currentKey?this._scene.planes:t.id===this._previousKey?this._scene.planesOld:{};if(Object.keys(n).length!==0){this._needsRender=!0;for(const i in n){if(!n.hasOwnProperty(i))continue;let o=n[i].material.uniforms.projectorTex.value;o.image=e,o.needsUpdate=!0}}}updateTextureImage(e,t){if(this._currentKey!==t.id)return;this._needsRender=!0;const n=this._scene.planes;for(const i in n){if(!n.hasOwnProperty(i))continue;let o=n[i].material.uniforms.projectorTex.value;o.image=e,o.needsUpdate=!0}}render(e,t){this.disabled||t.render(this._scene.sceneOld,e),t.render(this._scene.scene,e),this._needsRender=!1}dispose(){this._scene.clear();for(const e in this._currentProviderDisposers)this._currentProviderDisposers.hasOwnProperty(e)&&this._currentProviderDisposers[e]();for(const e in this._previousProviderDisposers)this._previousProviderDisposers.hasOwnProperty(e)&&this._previousProviderDisposers[e]();this._currentProviderDisposers={},this._previousProviderDisposers={}}_getBasicCorners(e,t){let n,i;return e>t?(n=.5,i=.5*e/t):(n=.5*t/e,i=.5),[[.5-n,.5-i],[.5+n,.5+i]]}_setDisabled(e){this._disabled=e.currentImage==null||e.previousImage==null||tt(e.currentImage.cameraType)&&!tt(e.previousImage.cameraType)}_setTextureProvider(e,t,n,i,s){if(e!==t)return;let a=n.textureCreated$.subscribe(s),o=n.textureUpdated$.subscribe(l=>{this._needsRender=!0}),c=()=>{a.unsubscribe(),o.unsubscribe(),n.dispose()};if(e in i){let l=i[e];l(),delete i[e]}i[e]=c}_updateCurtain(){const e=this._scene.planes;for(const t in e){if(!e.hasOwnProperty(t))continue;let i=e[t].material;i.uniforms.curtain&&(i.uniforms.curtain.value=this._curtain)}}_updateFrameId(e){this._frameId=e}_updateImagePlanes(e,t){const n=e.currentImage!=null&&this._currentKey!==e.currentImage.id,i=e.previousImage!=null&&this._previousKey!==e.previousImage.id,s=this._mode!==t;if(!(n||i||s))return;this._setDisabled(e),this._needsRender=!0,this._mode=t;const a=e.motionless||t===ki.Stationary||tt(e.currentImage.cameraType);if((this.disabled||i)&&this._previousKey in this._previousProviderDisposers&&(this._previousProviderDisposers[this._previousKey](),delete this._previousProviderDisposers[this._previousKey]),this.disabled)this._scene.setImagePlanesOld({});else if(i||s){const o=e.previousImage;this._previousKey=o.id;const c=e.currentTransform.rt.elements;let l=[c[12],c[13],c[14]];const h=e.currentTransform.basicAspect,u=e.previousTransform.basicAspect,d=h>u?[1,u/h]:[h/u,1];let f=e.currentImage.rotation,p=e.currentImage.width,g=e.currentImage.height;tt(o.cameraType)&&(f=e.previousImage.rotation,l=this._spatial.rotate(this._spatial.opticalCenter(e.currentImage.rotation,l).toArray(),f).multiplyScalar(-1).toArray(),p=e.previousImage.width,g=e.previousImage.height);const _=new Co(e.currentImage.exifOrientation,p,g,e.currentImage.scale,f,l,o.image,d,e.currentImage.cameraParameters,e.currentImage.cameraType);let m;if(tt(o.cameraType))m=this._factory.createMesh(o,a||tt(e.currentImage.cameraType)?_:e.previousTransform);else if(a){const[[y,x],[w,E]]=this._getBasicCorners(h,u);m=this._factory.createFlatMesh(e.previousImage,_,y,w,x,E)}else m=this._factory.createMesh(e.previousImage,e.previousTransform);const v={};v[o.id]=m,this._scene.setImagePlanesOld(v)}if(n||s){this._currentKey in this._currentProviderDisposers&&(this._currentProviderDisposers[this._currentKey](),delete this._currentProviderDisposers[this._currentKey]),this._currentKey=e.currentImage.id;const o={};tt(e.currentImage.cameraType)?o[e.currentImage.id]=this._factory.createCurtainMesh(e.currentImage,e.currentTransform):a?o[e.currentImage.id]=this._factory.createDistortedCurtainMesh(e.currentImage,e.currentTransform):o[e.currentImage.id]=this._factory.createCurtainMesh(e.currentImage,e.currentTransform),this._scene.setImagePlanes(o),this._updateCurtain()}}_updateTexture(e){this._needsRender=!0;const t=this._scene.planes;for(const n in t){if(!t.hasOwnProperty(n))continue;let s=t[n].material,a=s.uniforms.projectorTex.value;s.uniforms.projectorTex.value=null,a.dispose(),s.uniforms.projectorTex.value=e}}_updateTexturePrev(e){this._needsRender=!0;const t=this._scene.planesOld;for(const n in t){if(!t.hasOwnProperty(n))continue;let s=t[n].material,a=s.uniforms.projectorTex.value;s.uniforms.projectorTex.value=null,a.dispose(),s.uniforms.projectorTex.value=e}}}class Sk{constructor(e){this._container=e,this._interacting=!1,this._notifyModeChanged$=new De,this._notifyPositionChanged$=new De,this._stopInteractionSubscription=null}get mode$(){return this._notifyModeChanged$}get position$(){return this._notifyPositionChanged$}activate(){this._stopInteractionSubscription||(this._stopInteractionSubscription=xt(this._container.mouseService.documentMouseUp$,this._container.touchService.touchEnd$.pipe(Fe(e=>e.touches.length===0))).subscribe(e=>{this._interacting&&(this._interacting=!1)}))}deactivate(){this._stopInteractionSubscription&&(this._interacting=!1,this._stopInteractionSubscription.unsubscribe(),this._stopInteractionSubscription=null)}render(e,t,n,i,s){const a=[];if(s){a.push(ve.h("div.mapillary-slider-border",[]));const l=!(n||i);l&&(a.push(this._createModeButton(t)),a.push(this._createModeButton2d(t))),a.push(this._createPositionInput(e,l))}const o=this._container.domContainer.getBoundingClientRect(),c=Math.max(215,Math.min(400,o.width-100));return ve.h("div.mapillary-slider-container",{style:{width:`${c}px`}},a)}_createModeButton(e){const t={onclick:()=>{e!==ki.Motion&&this._notifyModeChanged$.next(ki.Motion)}},n=e===ki.Stationary?"mapillary-slider-mode-button-inactive":"mapillary-slider-mode-button";return ve.h("div."+n,t,[ve.h("div.mapillary-slider-mode-icon",[])])}_createModeButton2d(e){const t={onclick:()=>{e!==ki.Stationary&&this._notifyModeChanged$.next(ki.Stationary)}},n=e===ki.Motion?"mapillary-slider-mode-button-2d-inactive":"mapillary-slider-mode-button-2d";return ve.h("div."+n,t,[ve.h("div.mapillary-slider-mode-icon-2d",[])])}_createPositionInput(e,t){const n=h=>{this._notifyPositionChanged$.next(Number(h.target.value)/1e3)},i=h=>{this._interacting=!0,h.stopPropagation()},s=h=>{this._interacting&&h.stopPropagation()},a=h=>{(h.key==="ArrowDown"||h.key==="ArrowLeft"||h.key==="ArrowRight"||h.key==="ArrowUp")&&h.preventDefault()},o=this._container.domContainer.getBoundingClientRect(),c=Math.max(215,Math.min(400,o.width-105))-84+(t?0:52),l=ve.h("input.mapillary-slider-position",{max:1e3,min:0,onchange:n,oninput:n,onkeydown:a,onpointerdown:i,onpointermove:s,ontouchmove:s,ontouchstart:i,style:{width:`${c}px`},type:"range",value:1e3*e},[]);return ve.h("div.mapillary-slider-position-container",[l])}}class _S extends Wn{constructor(e,t,n,i){super(e,t,n),this._viewportCoords=i||new ei,this._domRenderer=new Sk(t),this._imageTileLoader=new sS(n.api),this._roiCalculator=new aS,this._spatial=new Hn,this._glRendererOperation$=new De,this._glRendererCreator$=new De,this._glRendererDisposer$=new De,this._glRenderer$=this._glRendererOperation$.pipe(cn((s,a)=>a(s),null),Fe(s=>s!=null),Be(void 0,s=>s.frameId)),this._glRendererCreator$.pipe(V(()=>s=>{if(s!=null)throw new Error("Multiple slider states can not be created at the same time");return new Mk})).subscribe(this._glRendererOperation$),this._glRendererDisposer$.pipe(V(()=>s=>(s.dispose(),null))).subscribe(this._glRendererOperation$)}_activate(){const e=this._subscriptions;e.push(this._domRenderer.mode$.subscribe(f=>{this.configure({mode:f})})),e.push(this._glRenderer$.pipe(V(f=>({name:this._name,renderer:{frameId:f.frameId,needsRender:f.needsRender,render:f.render.bind(f),pass:os.Background}}))).subscribe(this._container.glRenderer.render$));const t=Wi(this.configuration$.pipe(V(f=>f.initialPosition!=null?f.initialPosition:1),Ve()),this._domRenderer.position$),n=this.configuration$.pipe(V(f=>f.mode),Be()),i=this._navigator.stateService.currentState$.pipe(V(f=>f.state.motionless),Be()),s=this._navigator.stateService.currentState$.pipe(V(f=>tt(f.state.currentImage.cameraType)),Be()),a=He(this._configuration$.pipe(V(f=>f.sliderVisible)),this._navigator.stateService.currentState$.pipe(V(f=>!(f.state.currentImage==null||f.state.previousImage==null||tt(f.state.currentImage.cameraType)&&!tt(f.state.previousImage.cameraType))),Be())).pipe(V(([f,p])=>f&&p),Be());this._waitSubscription=He(n,i,s,a).pipe(at(this._navigator.stateService.state$)).subscribe(([[f,p,g,_],m])=>{const v=_&&(p||f===ki.Stationary||g);v&&m!==it.WaitingInteractively?this._navigator.stateService.waitInteractively():!v&&m!==it.Waiting&&this._navigator.stateService.wait()}),e.push(He(t,n,i,s,a).subscribe(([f,p,g,_])=>{g||p===ki.Stationary||_?this._navigator.stateService.moveTo(1):this._navigator.stateService.moveTo(f)})),e.push(He(t,n,i,s,a,this._container.renderService.size$).pipe(V(([f,p,g,_,m])=>({name:this._name,vNode:this._domRenderer.render(f,p,g,_,m)}))).subscribe(this._container.domRenderer.render$)),this._glRendererCreator$.next(null),e.push(He(t,s,a,this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$).pipe(V(([f,p,g,_,m])=>{if(!p)return g?f:1;const v=this._viewportCoords.viewportToBasic(-1.15,0,m,_.perspective),y=this._viewportCoords.viewportToBasic(1.15,0,m,_.perspective),x=y[0]<v[0]?y[0]+1:y[0],w=v[0]+f*(x-v[0]);return w>1?w-1:w}),V(f=>p=>(p.updateCurtain(f),p))).subscribe(this._glRendererOperation$)),e.push(He(this._navigator.stateService.currentState$,n).pipe(V(([f,p])=>g=>(g.update(f,p),g))).subscribe(this._glRendererOperation$)),e.push(this._configuration$.pipe(Fe(f=>f.ids!=null),we(f=>Gc(Gc(this._catchCacheImage$(f.ids.background),this._catchCacheImage$(f.ids.foreground)).pipe(V(p=>({background:p[0],foreground:p[1]}))),this._navigator.stateService.currentState$.pipe(Ve())).pipe(V(p=>({images:p[0],state:p[1].state}))))).subscribe(f=>{if(!(f.state.currentImage!=null&&f.state.previousImage!=null&&f.state.currentImage.id===f.images.foreground.id&&f.state.previousImage.id===f.images.background.id)){if(f.state.currentImage.id===f.images.background.id){this._navigator.stateService.setImages([f.images.foreground]);return}if(f.state.currentImage.id===f.images.foreground.id&&f.state.trajectory.length===1){this._navigator.stateService.prependImages([f.images.background]);return}this._navigator.stateService.setImages([f.images.background]),this._navigator.stateService.setImages([f.images.foreground])}},f=>{console.error(f)}));const o=this._container.configurationService.imageTiling$.pipe(we(f=>f?this._navigator.stateService.currentState$:new De),Be(void 0,f=>f.state.currentImage.id),at(this._container.glRenderer.webGLRenderer$,this._container.renderService.size$),V(([f,p,g])=>{const _=f.state;Math.max(g.width,g.height);const m=_.currentImage,v=_.currentTransform;return new um(m.id,v.basicWidth,v.basicHeight,m.image,this._imageTileLoader,new hm,p)}),Ke(1),Ue());e.push(o.subscribe(()=>{})),e.push(o.pipe(V(f=>p=>(p.setTextureProvider(f.id,f),p))).subscribe(this._glRendererOperation$)),e.push(o.pipe(Ri()).subscribe(f=>{f[0].abort()}));const c=this._container.configurationService.imageTiling$.pipe(we(f=>f?He(this._container.renderService.renderCameraFrame$,this._container.renderService.size$.pipe(Wc(250))):new De),V(([f,p])=>[f.camera.position.clone(),f.camera.lookat.clone(),f.zoom.valueOf(),p.height.valueOf(),p.width.valueOf()]),Ri(),Yp(f=>f[1][2]-f[0][2]<0||f[1][2]===0),V(f=>{let p=f[0][0].equals(f[1][0]),g=f[0][1].equals(f[1][1]),_=f[0][2]===f[1][2],m=f[0][3]===f[1][3],v=f[0][4]===f[1][4];return p&&g&&_&&m&&v}),Be(),Fe(f=>f),we(()=>this._container.renderService.renderCameraFrame$.pipe(Ve())),at(this._container.renderService.size$,this._navigator.stateService.currentTransform$));e.push(o.pipe(we(f=>c.pipe(V(([p,g,_])=>[this._roiCalculator.computeRegionOfInterest(p,g,_),f]))),Fe(f=>!f[1].disposed)).subscribe(f=>{let p=f[0];f[1].setRegionOfInterest(p)}));const l=o.pipe(we(f=>f.hasTexture$),At(!1),Ke(1),Ue());e.push(l.subscribe(()=>{}));const h=this._container.configurationService.imageTiling$.pipe(we(f=>f?this._navigator.stateService.currentState$:new De),Fe(f=>!!f.state.previousImage),Be(void 0,f=>f.state.previousImage.id),at(this._container.glRenderer.webGLRenderer$,this._container.renderService.size$),V(([f,p,g])=>{const _=f.state,m=_.previousImage,v=_.previousTransform;return new um(m.id,v.basicWidth,v.basicHeight,m.image,this._imageTileLoader,new hm,p)}),Ke(1),Ue());e.push(h.subscribe(()=>{})),e.push(h.pipe(V(f=>p=>(p.setTextureProviderPrev(f.id,f),p))).subscribe(this._glRendererOperation$)),e.push(h.pipe(Ri()).subscribe(f=>{f[0].abort()}));const u=this._container.configurationService.imageTiling$.pipe(we(f=>f?He(this._container.renderService.renderCameraFrame$,this._container.renderService.size$.pipe(Wc(250))):new De),V(([f,p])=>[f.camera.position.clone(),f.camera.lookat.clone(),f.zoom.valueOf(),p.height.valueOf(),p.width.valueOf()]),Ri(),Yp(f=>f[1][2]-f[0][2]<0||f[1][2]===0),V(f=>{let p=f[0][0].equals(f[1][0]),g=f[0][1].equals(f[1][1]),_=f[0][2]===f[1][2],m=f[0][3]===f[1][3],v=f[0][4]===f[1][4];return p&&g&&_&&m&&v}),Be(),Fe(f=>f),we(()=>this._container.renderService.renderCameraFrame$.pipe(Ve())),at(this._container.renderService.size$,this._navigator.stateService.currentTransform$));e.push(h.pipe(we(f=>u.pipe(V(([p,g,_])=>[this._roiCalculator.computeRegionOfInterest(p,g,_),f]))),Fe(f=>!f[1].disposed),at(this._navigator.stateService.currentState$)).subscribe(([[f,p],g])=>{let _=null;if(tt(g.state.previousImage.cameraType))if(tt(g.state.currentImage.cameraType)){const m=this._spatial.viewingDirection(g.state.currentImage.rotation),v=this._spatial.viewingDirection(g.state.previousImage.rotation),x=this._spatial.angleBetweenVector2(m.x,m.y,v.x,v.y)/(2*Math.PI);_={bbox:{maxX:this._spatial.wrap(f.bbox.maxX+x,0,1),maxY:f.bbox.maxY,minX:this._spatial.wrap(f.bbox.minX+x,0,1),minY:f.bbox.minY},pixelHeight:f.pixelHeight,pixelWidth:f.pixelWidth}}else{const m=this._spatial.viewingDirection(g.state.currentImage.rotation),v=this._spatial.viewingDirection(g.state.previousImage.rotation),x=this._spatial.angleBetweenVector2(m.x,m.y,v.x,v.y)/(2*Math.PI),w=this._spatial.angleToPlane(m.toArray(),[0,0,1]),M=(this._spatial.angleToPlane(v.toArray(),[0,0,1])-w)/(2*Math.PI),A=g.state.currentTransform,T=Math.max(A.basicWidth,A.basicHeight),S=T>0?2*Math.atan(.5*A.basicWidth/(T*A.focal)):Math.PI/3,b=T>0?2*Math.atan(.5*A.basicHeight/(T*A.focal)):Math.PI/3,U=S/(2*Math.PI),L=b/Math.PI,N=(f.bbox.maxX-f.bbox.minX)*U,k=(f.bbox.maxY-f.bbox.minY)*L,B=f.pixelWidth*U,z=f.pixelHeight*L,H=(f.bbox.minX+f.bbox.maxX)/2-.5,ee=(f.bbox.minY+f.bbox.maxY)/2-.5,de=.5+x+U*H-N/2,ce=.5+x+U*H+N/2,Ce=.5+M+L*ee-k/2,me=.5+M+L*ee+k/2;_={bbox:{maxX:this._spatial.wrap(ce,0,1),maxY:me,minX:this._spatial.wrap(de,0,1),minY:Ce},pixelHeight:z,pixelWidth:B}}else{const m=g.state.currentTransform.basicAspect,v=g.state.previousTransform.basicAspect,[[y,x],[w,E]]=this._getBasicCorners(m,v),M=w-y,A=E-x,T=f.pixelWidth/M,S=f.pixelHeight/A,b=(M-1)/(2*M)+f.bbox.minX/M,U=(M-1)/(2*M)+f.bbox.maxX/M,L=(A-1)/(2*A)+f.bbox.minY/A,N=(A-1)/(2*A)+f.bbox.maxY/A,k={maxX:U,maxY:N,minX:b,minY:L};this._clipBoundingBox(k),_={bbox:k,pixelHeight:S,pixelWidth:T}}p.setRegionOfInterest(_)}));const d=h.pipe(we(f=>f.hasTexture$),At(!1),Ke(1),Ue());e.push(d.subscribe(()=>{}))}_deactivate(){this._waitSubscription.unsubscribe(),this._navigator.stateService.state$.pipe(Ve()).subscribe(e=>{e!==it.Traversing&&this._navigator.stateService.traverse()}),this._glRendererDisposer$.next(null),this._domRenderer.deactivate(),this._subscriptions.unsubscribe(),this.configure({ids:null})}_getDefaultConfiguration(){return{initialPosition:1,mode:ki.Motion,sliderVisible:!0}}_catchCacheImage$(e){return this._navigator.graphService.cacheImage$(e).pipe($t(t=>(console.error(`Failed to cache slider image (${e})`,t),rt())))}_getBasicCorners(e,t){let n,i;return e>t?(n=.5,i=.5*e/t):(n=.5*t/e,i=.5),[[.5-n,.5-i],[.5+n,.5+i]]}_clipBoundingBox(e){e.minX=Math.max(0,Math.min(1,e.minX)),e.maxX=Math.max(0,Math.min(1,e.maxX)),e.minY=Math.max(0,Math.min(1,e.minY)),e.maxY=Math.max(0,Math.min(1,e.maxY))}}_S.componentName="slider";class Al{constructor(e,t){this._subscriptions=new Gn,this._graphService=e,this._stateService=t;const n=this._subscriptions;this._directionSubject$=new De,this._direction$=this._directionSubject$.pipe(At(ue.Next),Ke(1),Ue()),n.push(this._direction$.subscribe()),this._playing=!1,this._playingSubject$=new De,this._playing$=this._playingSubject$.pipe(At(this._playing),Ke(1),Ue()),n.push(this._playing$.subscribe()),this._speed=.5,this._speedSubject$=new De,this._speed$=this._speedSubject$.pipe(At(this._speed),Ke(1),Ue()),n.push(this._speed$.subscribe()),this._imagesAhead=this._mapImagesAhead(this._mapSpeed(this._speed)),this._bridging$=null}get playing(){return this._playing}get direction$(){return this._direction$}get playing$(){return this._playing$}get speed$(){return this._speed$}play(){if(this._playing)return;this._stateService.cutImages();const e=this._setSpeed(this._speed);this._stateService.setSpeed(e),this._graphModeSubscription=this._speed$.pipe(V(n=>n>Al.sequenceSpeed?hi.Sequence:hi.Spatial),Be()).subscribe(n=>{this._graphService.setGraphMode(n)}),this._cacheSubscription=He(this._stateService.currentImage$.pipe(V(n=>[n.sequenceId,n.id]),Be(void 0,([n])=>n)),this._graphService.graphMode$,this._direction$).pipe(we(([[n,i],s,a])=>{if(a!==ue.Next&&a!==ue.Prev)return Ze([void 0,a]);const o=(s===hi.Sequence?this._graphService.cacheSequenceImages$(n,i):this._graphService.cacheSequence$(n)).pipe(Xp(3),$t(c=>(console.error(c),Ze(void 0))));return He(o,Ze(a))}),we(([n,i])=>{if(n===void 0)return rt();const s=n.imageIds.slice();return i===ue.Prev&&s.reverse(),this._stateService.currentState$.pipe(V(a=>[a.state.trajectory[a.state.trajectory.length-1].id,a.state.imagesAhead]),cn(([a,o],[c,l])=>{a===void 0&&(a=c);const h=s.length-1;if(l>=this._imagesAhead||s[h]===a)return[a,[]];const u=s.indexOf(c),d=s.indexOf(a)+1,f=Math.min(h,u+this._imagesAhead-l)+1;return f<=d?[a,[]]:[s[f-1],s.slice(d,f)]},[void 0,[]]),ct(([a,o])=>on(o)))}),ct(n=>this._graphService.cacheImage$(n).pipe($t(()=>rt())),6)).subscribe(),this._playingSubscription=this._stateService.currentState$.pipe(Fe(n=>n.state.imagesAhead<this._imagesAhead),Be(void 0,n=>n.state.lastImage.id),V(n=>{const i=n.state.lastImage,s=n.state.trajectory;let a;for(let o=s.length-2;o>=0;o--){const c=s[o];if(c.sequenceId!==i.sequenceId)break;if(c.capturedAt!==i.capturedAt){a=c.capturedAt<i.capturedAt;break}}return[n.state.lastImage,a]}),at(this._direction$),we(([[n,i],s])=>Gc(([ue.Next,ue.Prev].indexOf(s)>-1?n.sequenceEdges$:n.spatialEdges$).pipe(Ve(a=>a.cached),qp(15e3)),Ze(s)).pipe(V(([a,o])=>{for(let c of a.edges)if(c.data.direction===o)return c.target;return null}),we(a=>a!=null?this._graphService.cacheImage$(a):rt())))).subscribe(n=>{this._stateService.appendImagess([n])},n=>{console.error(n),this.stop()}),this._clearSubscription=this._stateService.currentImage$.pipe(Mu(1,10)).subscribe(n=>{this._stateService.clearPriorImages()}),this._setPlaying(!0);const t=this._stateService.currentState$.pipe(V(n=>n.state),Be(([n,i],[s,a])=>n===s&&i===a,n=>[n.currentImage.id,n.lastImage.id]),Fe(n=>n.currentImage.id===n.lastImage.id&&n.currentIndex===n.trajectory.length-1),V(n=>n.currentImage));this._stopSubscription=He(t,this._direction$).pipe(we(([n,i])=>{const s=([ue.Next,ue.Prev].indexOf(i)>-1?n.sequenceEdges$:n.spatialEdges$).pipe(Ve(a=>a.cached),qp(15e3),$t(a=>(console.error(a),Ze({cached:!1,edges:[]}))));return He(Ze(i),s).pipe(V(([a,o])=>{for(const c of o.edges)if(c.data.direction===a)return!0;return!1}))}),ct(n=>n||!this._bridging$?Ze(n):this._bridging$.pipe(V(i=>i!=null),$t(i=>(console.error(i),Ze(!1))))),Ve(n=>!n)).subscribe(void 0,void 0,()=>{this.stop()}),this._stopSubscription.closed&&(this._stopSubscription=null),this._earthSubscription=this._stateService.state$.pipe(V(n=>n===it.Earth),Be(),Ve(n=>n)).subscribe(void 0,void 0,()=>{this.stop()}),this._earthSubscription.closed&&(this._earthSubscription=null)}dispose(){this.stop(),this._subscriptions.unsubscribe()}setDirection(e){this._directionSubject$.next(e)}setSpeed(e){if(e=Math.max(0,Math.min(1,e)),e===this._speed)return;const t=this._setSpeed(e);this._playing&&this._stateService.setSpeed(t),this._speedSubject$.next(this._speed)}stop(){this._playing&&(this._stopSubscription&&(this._stopSubscription.closed||this._stopSubscription.unsubscribe(),this._stopSubscription=null),this._earthSubscription&&(this._earthSubscription.closed||this._earthSubscription.unsubscribe(),this._earthSubscription=null),this._graphModeSubscription.unsubscribe(),this._graphModeSubscription=null,this._cacheSubscription.unsubscribe(),this._cacheSubscription=null,this._playingSubscription.unsubscribe(),this._playingSubscription=null,this._clearSubscription.unsubscribe(),this._clearSubscription=null,this._stateService.setSpeed(1),this._stateService.cutImages(),this._graphService.setGraphMode(hi.Spatial),this._setPlaying(!1))}_mapSpeed(e){const t=2*e-1;return Math.pow(10,t)-.2*t}_mapImagesAhead(e){return Math.round(Math.max(10,Math.min(50,8+6*e)))}_setPlaying(e){this._playing=e,this._playingSubject$.next(e)}_setSpeed(e){this._speed=e;const t=this._mapSpeed(this._speed);return this._imagesAhead=this._mapImagesAhead(t),t}}Al.sequenceSpeed=.54;var zi;(function(r){r[r.Hidden=0]="Hidden",r[r.Homogeneous=1]="Homogeneous",r[r.Cluster=2]="Cluster",r[r.ConnectedComponent=3]="ConnectedComponent",r[r.Sequence=4]="Sequence"})(zi||(zi={}));var il;(function(r){r[r.Hidden=0]="Hidden",r[r.Altitude=1]="Altitude",r[r.Flat=2]="Flat"})(il||(il={}));class wk extends eM{constructor(e){super(),this._originalSize=e.originalSize;const{cluster:t,color:n,scale:i,translation:s}=e;this._makeAttributes(t),this.material.size=i*this._originalSize,this.setColor(n),this.matrixAutoUpdate=!1,this.position.fromArray(s),this.updateMatrix(),this.updateMatrixWorld(!1)}dispose(){this.geometry.dispose(),this.material.dispose()}setColor(e){this.material.vertexColors=e==null,this.material.color=new st(e),this.material.needsUpdate=!0}resize(e){this.material.size=e*this._originalSize,this.material.needsUpdate=!0}_makeAttributes(e){const t=[],n=[],i=e.points;for(const a in i){if(!i.hasOwnProperty(a))continue;const o=i[a];t.push(...o.coordinates);const c=o.color;n.push(c[0]),n.push(c[1]),n.push(c[2])}const s=this.geometry;s.setAttribute("position",new Ct(new Float32Array(t),3)),s.setAttribute("color",new Ct(new Float32Array(n),3))}}class Tk extends Sa{constructor(e){super(),this._makeAttributes(e),this.matrixAutoUpdate=!1,this.updateMatrix(),this.updateMatrixWorld(!1)}dispose(){this.geometry.dispose(),this.material.dispose()}_makeAttributes(e){const t=e.slice();t.push(e[0]);let n=0;const i=new Float32Array(3*(e.length+1));for(const s of t)i[n++]=s[0],i[n++]=s[1],i[n++]=s[2];this.geometry.setAttribute("position",new Ct(i,3))}}const Ek=14,Ck=6;function Z0(r,e){return r===e}function Ak(r){return Math.pow(2,r)}function Rk(r){const t=Ak(r)/2;return{min:[-t,-t,-t],max:[t,t,t]}}class Ag{constructor(e,t,n,i){this.level=e,this.leafLevel=t,this.boundingBox=n,this.parent=i,this.children=[],this.items=[],i&&i.children.push(this)}get isEmpty(){return!(this.children.length||this.items.length)}add(e){const t=this;if(!t.boundingBox.containsPoint(e.position))throw new Error("Item not contained in node");if(Z0(t.level,t.leafLevel))return t.items.push(e),this;for(const n of t.children)if(n.boundingBox.containsPoint(e.position))return n.add(e);for(const n of t._generateBoundingBoxes())if(n.containsPoint(e.position))return new Ag(t.level-1,t.leafLevel,n,t).add(e);throw new Error("Item not contained in children")}intersect(e,t,n){if(e.intersectBox(this.boundingBox,t)){if(Z0(this.level,this.leafLevel)){n.push(this);return}for(const i of this.children)i.intersect(e,t,n)}}remove(e){const t=this.items.indexOf(e);if(t<0)throw new Error(`Item does not exist ${e.uuid}`);this.items.splice(t,1)}traverse(){const e=this;if(!e.isEmpty)return;const t=e.parent;if(!t)return;const n=t.children.indexOf(e);if(n<0)throw new Error("Corrupt octree");t.children.splice(n,1),this.parent=null,t.traverse()}_generateBoundingBoxes(){const e=this,t=e.boundingBox.min,i=(e.boundingBox.max.x-t.x)/2,s=[[t.x,t.y+i,t.z+i],[t.x+i,t.y+i,t.z+i],[t.x,t.y,t.z+i],[t.x+i,t.y,t.z+i],[t.x,t.y+i,t.z],[t.x+i,t.y+i,t.z],[t.x,t.y,t.z],[t.x+i,t.y,t.z]],a=[];for(const[o,c,l]of s)a.push(new Li(new D(o,c,l),new D(o+i,c+i,l+i)));return a}}class Pk{constructor(e,t){if(this.rootLevel=e,this.leafLevel=t,t>e)throw new Error;this._index=new Map,this._root=this._makeRoot()}get root(){return this._root}add(e){if(!this.root.boundingBox.containsPoint(e.position)){console.warn(`Object outside bounding box ${e.uuid}`);return}const t=this._root.add(e);this._index.set(e.uuid,t)}has(e){return this._index.has(e.uuid)}intersect(e){const t=[],n=new D;return this._root.intersect(e,n,t),t.map(i=>i.items).reduce((i,s)=>(i.push(...s),i),[])}reset(){this._root=this._makeRoot(),this._index.clear()}remove(e){if(!this.has(e))throw new Error(`Frame does not exist ${e.uuid}`);const t=this._index.get(e.uuid);t.remove(e),t.traverse(),this._index.delete(e.uuid)}_makeRoot(){const e=this.rootLevel,t=Rk(e),n=new Li(new D().fromArray(t.min),new D().fromArray(t.max));return new Ag(e,this.leafLevel,n)}}class Ik{constructor(e,t){this._objects=[],this._objectImageMap=new Map,this._octree=e??new Pk(Ek,Ck),this._raycaster=t??new Pu,this._interactiveLayer=1,this._raycaster=t||new Pu(void 0,void 0,1,1e4),this._lineThreshold=.2,this._largeLineThreshold=.4,this._raycaster.params.Line.threshold=this._lineThreshold,this._raycaster.layers.set(this._interactiveLayer)}get interactiveLayer(){return this._interactiveLayer}get octree(){return this._octree}get raycaster(){return this._raycaster}add(e,t){const n=e.uuid;this._objectImageMap.set(n,t),this._objects.push(e),this._octree.add(e)}intersectObjects(e,t){this._raycaster.setFromCamera(new Ne().fromArray(e),t);const n=this._octree.intersect(this.raycaster.ray),i=this._raycaster.intersectObjects(n),s=this._objectImageMap;for(const a of i){const o=a.object.uuid;if(s.has(o))return s.get(o)}return null}remove(e){const t=this._objects,n=t.indexOf(e);if(n!==-1){const i=t.splice(n,1);for(const s of i)this._objectImageMap.delete(s.uuid);this._octree.remove(e)}else console.warn("Object does not exist")}resetIntersectionThreshold(e){this._raycaster.params.Line.threshold=e?this._largeLineThreshold:this._lineThreshold}}class Lk extends Sa{constructor(e){super(e.geometry,e.material);const t=e.mode,n=e.originalOrigin,s=e.transform.unprojectBasic([0,0],0);this._relativeAltitude=n[2]-s[2],this._makeAttributes(s,n,t),this.matrixAutoUpdate=!1,this.position.fromArray(s),this.updateMatrix(),this.updateMatrixWorld(!1)}dispose(){this.geometry.dispose(),this.material.dispose()}setMode(e){const t=this.geometry.attributes.position,n=t.array;n[5]=this._modeToAltitude(e),t.needsUpdate=!0,this.geometry.computeBoundingSphere()}_makeAttributes(e,t,n){const i=new Float32Array(6);i[0]=0,i[1]=0,i[2]=0,i[3]=t[0]-e[0],i[4]=t[1]-e[1],i[5]=this._modeToAltitude(n);const s=new Ct(i,3);this.geometry.setAttribute("position",s),s.needsUpdate=!0,this.geometry.computeBoundingSphere()}_modeToAltitude(e){return e===il.Altitude?this._relativeAltitude:0}}class vS extends rd{constructor(e){super(e.geometry,e.material);const t=e.color,n=e.size,i=e.scale,s=e.transform,a=s.unprojectBasic([0,0],0),o=this._makePositions(n,s,a);this._makeAttributes(o,t),this.geometry.computeBoundingSphere(),this.geometry.computeBoundingBox(),this.matrixAutoUpdate=!1,this.position.fromArray(a),this.scale.set(i,i,i),this.updateMatrix(),this.updateMatrixWorld(!1)}dispose(){this.geometry.dispose(),this.material.dispose()}setColor(e){return this._updateColorAttribute(e),this}resize(e){return this.scale.set(e,e,e),this.updateMatrix(),this.updateMatrixWorld(!1),this}_makeAttributes(e,t){const n=this.geometry,i=new Ct(new Float32Array(e),3);n.setAttribute("position",i),i.needsUpdate=!0;const s=new Ct(new Float32Array(e.length),3);n.setAttribute("color",s),this._updateColorAttribute(t)}_updateColorAttribute(e){const[t,n,i]=new st(e).toArray(),s=this.geometry.attributes.color,a=s.array,o=a.length;let c=0;for(let l=0;l<o;l++)a[c++]=t,a[c++]=n,a[c++]=i;s.needsUpdate=!0}}class Dk extends vS{_makePositions(e,t,n){const s=[];s.push(...this._makeAxis(e,t,n)),s.push(...this._makeLat(.5,10,e,t,n));for(const a of[0,.25,.5,.75])s.push(...this._makeLng(a,10,e,t,n));return s}_makeAxis(e,t,n){const i=t.unprojectBasic([.5,1],.8*e),s=t.unprojectBasic([.5,0],1.2*e);return[i[0]-n[0],i[1]-n[1],i[2]-n[2],s[0]-n[0],s[1]-n[1],s[2]-n[2]]}_makeLat(e,t,n,i,s){const a=.8*n,[o,c,l]=s,h=[],u=i.unprojectBasic([0,e],a);u[0]-=o,u[1]-=c,u[2]-=l,h.push(...u);for(let d=1;d<=t;d++){const f=i.unprojectBasic([d/t,e],a);f[0]-=o,f[1]-=c,f[2]-=l,h.push(...f,...f)}return h.push(...u),h}_makeLng(e,t,n,i,s){const a=.8*n,[o,c,l]=s,h=[],u=i.unprojectBasic([e,0],a);u[0]-=o,u[1]-=c,u[2]-=l,h.push(...u);for(let d=0;d<=t;d++){const f=i.unprojectBasic([e,d/t],a);f[0]-=o,f[1]-=c,f[2]-=l,h.push(...f,...f)}return h.push(...u),h}}class Fk extends vS{_makePositions(e,t,n){const s=[];return s.push(...this._makeDiags(e,t,n)),s.push(...this._makeFrame(e,8,t,n)),s}_makeDiags(e,t,n){const[i,s,a]=n,o=[0,0,0],c=[];for(const l of[[0,0],[1,0],[1,1],[0,1]]){const h=t.unprojectBasic(l,e);h[0]-=i,h[1]-=s,h[2]-=a,c.push(...o,...h)}return c}_makeFrame(e,t,n,i){const s=[];s.push(...this._subsample([0,1],[0,0],t)),s.push(...this._subsample([0,0],[1,0],t)),s.push(...this._subsample([1,0],[1,1],t));const[a,o,c]=i,l=[];for(const h of s){const u=n.unprojectBasic(h,e);u[0]-=a,u[1]-=o,u[2]-=c,l.push(...u)}return l}_interpolate(e,t,n){return e+n*(t-e)}_subsample(e,t,n){if(n<1)return[e,t];const i=[];i.push(e);for(let s=0;s<=n;s++){const a=[];for(let o=0;o<3;o++)a.push(this._interpolate(e[o],t[o],s/(n+1)));i.push(a),i.push(a)}return i.push(t),i}}function Uu(r,e,t){const[n,i,s]=e,[a,o,c]=ga(n,i,s,t.lng,t.lat,t.alt);return Zn(a,o,c,r.lng,r.lat,r.alt)}class Nk{constructor(e,t,n){this.id=e,this._scene=t,this._intersection=n,this.cameras=new Dt,this.keys=[],this._positionLines={},this._positions=new Dt,this._cameraFrames={},this._clusters=new Map,this._connectedComponents=new Map,this._sequences=new Map,this._props={},this.clusterVisibles={},this._frameMaterial=new as({fog:!1,vertexColors:!0}),this._positionMaterial=new as({fog:!1,color:16711680}),this._scene.add(this.cameras,this._positions)}addImage(e){const t=e.image,n=t.id;if(this.hasImage(n))throw new Error(`Image exists ${n}`);const i=e.idMap.ccId;this._connectedComponents.has(i)||this._connectedComponents.set(i,[]);const s=e.idMap.clusterId;this._clusters.has(s)||this._clusters.set(s,[]);const a=e.idMap.sequenceId;this._sequences.has(a)||this._sequences.set(a,[]),this._props[n]={image:t,ids:{ccId:i,clusterId:s,sequenceId:a}},this.keys.push(n)}applyCameraColor(e,t){this._cameraFrames[e].setColor(t)}applyCameraSize(e){for(const t of this.cameras.children)t.resize(e)}applyFilter(e){var t;const n=this.clusterVisibles;for(const o in n)n.hasOwnProperty(o)&&(n[o]=!1);const i=this._cameraFrames,s=this._positionLines,a=this._intersection.interactiveLayer;for(const o of Object.values(this._props)){const c=o.image,l=e(c),h=c.id;s[h].visible=l;const u=i[h];this._setCameraVisibility(u,l,a),n[t=o.ids.clusterId]||(n[t]=l)}}applyPositionMode(e){this._positions.visible=e!==il.Hidden;for(const t of this._positions.children)t.setMode(e)}dispose(){this._disposeCameras(),this._disposePositions(),this._scene=null,this._intersection=null}getCamerasByMode(e){if(e===zi.Cluster)return this._clusters;if(e===zi.ConnectedComponent)return this._connectedComponents;if(e===zi.Sequence)return this._sequences;const t=zi,n=t[t.Homogeneous],i=new Map;return i.set(n,this.cameras.children),i}getColorId(e,t){const n=this._props[e],i=zi;switch(t){case i.Cluster:return n.ids.clusterId;case i.ConnectedComponent:return n.ids.ccId;case i.Sequence:return n.ids.sequenceId;default:return i[i.Homogeneous]}}hasImage(e){return this.keys.indexOf(e)!==-1}resetReference(e,t){const n=this._cameraFrames;for(const s in n){if(!n.hasOwnProperty(s))continue;const a=n[s];a.position.fromArray(Uu(e,a.position.toArray(),t))}const i=this._positionLines;for(const s in i){if(!i.hasOwnProperty(s))continue;const a=i[s];a.position.fromArray(Uu(e,a.position.toArray(),t))}}visualize(e){var t,n;const i=e.id,s=e.visible,a=e.transform,o={color:e.color,material:this._frameMaterial,scale:e.scale,size:e.maxSize,transform:a},c=tt(a.cameraType)?new Dk(o):new Fk(o),l=this._intersection.interactiveLayer;this._setCameraVisibility(c,s,l),this.cameras.add(c),this._cameraFrames[i]=c,this._intersection.add(c,i);const u=this._props[i].ids;(t=this.clusterVisibles)[n=u.clusterId]||(t[n]=s),this._connectedComponents.get(u.ccId).push(c),this._clusters.get(u.clusterId).push(c),this._sequences.get(u.sequenceId).push(c);const d={material:this._positionMaterial,mode:e.positionMode,originalOrigin:e.originalPosition,transform:a},f=new Lk(d);f.visible=s,this._positions.add(f),this._positionLines[i]=f}_disposeCameras(){const e=this._intersection,t=this.cameras;for(const n of t.children.slice())n.dispose(),e.remove(n),t.remove(n);this._scene.remove(this.cameras)}_disposePositions(){const e=this._positions;for(const t of e.children.slice())t.dispose(),e.remove(t);this._scene.remove(this._positions)}_setCameraVisibility(e,t,n){e.visible=t,t?e.layers.enable(n):e.layers.disable(n)}}class Ok{constructor(){this._colors=new Map;const e=zi;this._colors.set(e[e.Homogeneous],"#FFFFFF")}getColor(e){const t=this._colors;return t.has(e)||t.set(e,this._randomColor()),t.get(e)}_randomColor(){return`hsl(${Math.floor(360*Math.random())}, 100%, 50%)`}}function dm(r){return r!==zi.Hidden}function Uk(r){return r===it.Custom||r===it.Earth}var _r;(function(r){r[r.Hidden=0]="Hidden",r[r.Original=1]="Original",r[r.Cluster=2]="Cluster"})(_r||(_r={}));const Bk="NO_CLUSTER_ID",$k="NO_MERGE_ID",kk="NO_SEQUENCE_ID";class zk{constructor(e,t){this._rayNearScale=1.1,this._originalPointSize=2,this._originalCameraSize=2,this._imageCellMap=new Map,this._scene=t||new Zr,this._scene.autoUpdate=!1,this._intersection=new Ik,this._assets=new Ok,this._needsRender=!1,this._images={},this._cells={},this._cellClusters={},this._clusters={},this._cameraVisualizationMode=e.cameraVisualizationMode?e.cameraVisualizationMode:zi.Homogeneous,this._cameraSize=e.cameraSize,this._pointSize=e.pointSize,this._pointVisualizationMode=e.pointVisualizationMode?e.pointVisualizationMode:_r.Original,this._positionMode=e.originalPositionMode,this._cellsVisible=e.cellsVisible,this._hoveredId=null,this._selectedId=null,this._colors={hover:"#FF0000",select:"#FF8000"},this._filter=()=>!0}get needsRender(){return this._needsRender}get intersection(){return this._intersection}addCluster(e,t,n){if(this.hasCluster(e.id,n))return;const i=e.id;if(!(i in this._clusters)){this._clusters[i]={points:new Dt,cellIds:[]};const s=this._getClusterVisible(i),a=this._clusters[i],o=this._pointVisualizationMode===_r.Cluster?this._assets.getColor(i):null,c=new wk({cluster:e,color:o,originalSize:this._originalPointSize,scale:this._pointSize,translation:t});a.points.visible=s,a.points.add(c),this._scene.add(a.points)}this._clusters[i].cellIds.indexOf(n)===-1&&this._clusters[i].cellIds.push(n),n in this._cellClusters||(this._cellClusters[n]={keys:[]}),this._cellClusters[n].keys.indexOf(i)===-1&&this._cellClusters[n].keys.push(i),this._needsRender=!0}addImage(e,t,n,i){var s,a,o;const c=e.id,l={clusterId:(s=e.clusterId)!==null&&s!==void 0?s:Bk,sequenceId:(a=e.sequenceId)!==null&&a!==void 0?a:kk,ccId:(o=e.mergeId)!==null&&o!==void 0?o:$k};if(!(i in this._images)){const p=new Nk(i,this._scene,this._intersection);p.cameras.visible=dm(this._cameraVisualizationMode),p.applyPositionMode(this._positionMode),this._images[i]=p}const h=this._images[i];if(h.hasImage(c))return;h.addImage({idMap:l,image:e});const u=h.getColorId(c,this._cameraVisualizationMode),d=this._assets.getColor(u),f=this._filter(e);if(h.visualize({id:c,color:d,positionMode:this._positionMode,scale:this._cameraSize,transform:t,visible:f,maxSize:this._originalCameraSize,originalPosition:n}),this._imageCellMap.set(c,i),c===this._selectedId&&this._highlight(c,this._colors.select,this._cameraVisualizationMode),l.clusterId in this._clusters){const p=this._getClusterVisible(l.clusterId);this._clusters[l.clusterId].points.visible=p}this._needsRender=!0}addCell(e,t){if(this.hasCell(t))return;const n=new Tk(e);this._cells[t]=new Dt,this._cells[t].visible=this._cellsVisible,this._cells[t].add(n),this._scene.add(this._cells[t]),this._needsRender=!0}deactivate(){this._filter=()=>!0,this._selectedId=null,this._hoveredId=null,this.uncache()}hasCluster(e,t){return e in this._clusters&&this._clusters[e].cellIds.indexOf(t)!==-1}hasCell(e){return e in this._cells}hasImage(e,t){return t in this._images&&this._images[t].hasImage(e)}render(e,t){t.render(this._scene,e),this._needsRender=!1}resetReference(e,t){const n=this._clusters;for(const a in n){if(!n.hasOwnProperty(a))continue;const o=n[a];o.points.position.fromArray(Uu(e,o.points.position.toArray(),t))}const i=this._cells;for(const a in i){if(!i.hasOwnProperty(a))continue;const o=i[a];o.position.fromArray(Uu(e,o.position.toArray(),t))}const s=this._images;for(const a in s){if(!s.hasOwnProperty(a))continue;s[a].resetReference(e,t)}}setCameraSize(e){if(Math.abs(e-this._cameraSize)<.001)return;const t=this._images;for(const n of Object.keys(t))t[n].applyCameraSize(e);this._intersection.raycaster.near=this._getNear(e),this._cameraSize=e,this._needsRender=!0}setFilter(e){this._filter=e;const t={};for(const i of Object.values(this._images)){i.applyFilter(e);const s=i.clusterVisibles;for(const a in s)s.hasOwnProperty(a)&&(a in t||(t[a]=!1),t[a]||(t[a]=s[a]))}const n=this._pointVisualizationMode!==_r.Hidden;for(const i in t){if(!t.hasOwnProperty(i))continue;t[i]&&(t[i]=n);const s=t[i];i in this._clusters&&(this._clusters[i].points.visible=s)}this._needsRender=!0}setHoveredImage(e){if(e!=null&&!this._imageCellMap.has(e))throw new Zt(`Image does not exist: ${e}`);this._hoveredId!==e&&(this._needsRender=!0,this._hoveredId!=null&&(this._hoveredId===this._selectedId?this._highlight(this._hoveredId,this._colors.select,this._cameraVisualizationMode):this._resetCameraColor(this._hoveredId)),this._highlight(e,this._colors.hover,this._cameraVisualizationMode),this._hoveredId=e)}setNavigationState(e){this._intersection.resetIntersectionThreshold(e)}setPointSize(e){if(Math.abs(e-this._pointSize)<.001)return;const t=this._clusters;for(const n in t)if(t.hasOwnProperty(n))for(const i of t[n].points.children)i.resize(e);this._pointSize=e,this._needsRender=!0}setPointVisualizationMode(e){if(e!==this._pointVisualizationMode){this._pointVisualizationMode=e;for(const t in this._clusters){if(!this._clusters.hasOwnProperty(t))continue;const n=this._clusters[t];n.points.visible=this._getClusterVisible(t);for(const i of n.points.children){const s=e===_r.Cluster?this._assets.getColor(t):null;i.setColor(s)}}this._needsRender=!0}}setPositionMode(e){if(e!==this._positionMode){for(const t of Object.values(this._images))t.applyPositionMode(e);this._positionMode=e,this._needsRender=!0}}setSelectedImage(e){this._selectedId!==e&&(this._needsRender=!0,this._selectedId!=null&&this._resetCameraColor(this._selectedId),this._highlight(e,this._colors.select,this._cameraVisualizationMode),this._selectedId=e)}setCellVisibility(e){if(e!==this._cellsVisible){for(const t in this._cells)this._cells.hasOwnProperty(t)&&(this._cells[t].visible=e);this._cellsVisible=e,this._needsRender=!0}}setCameraVisualizationMode(e){if(e===this._cameraVisualizationMode)return;const t=dm(e),n=this._assets;for(const i of Object.values(this._images))i.cameras.visible=t,i.getCamerasByMode(e).forEach((a,o)=>{const c=n.getColor(o);for(const l of a)l.setColor(c)});this._highlight(this._hoveredId,this._colors.hover,e),this._highlight(this._selectedId,this._colors.select,e),this._cameraVisualizationMode=e,this._needsRender=!0}uncache(e){for(const t of Object.keys(this._cellClusters))e&&e.indexOf(t)!==-1||this._disposeReconstruction(t);for(const t of Object.keys(this._images)){if(e&&e.indexOf(t)!==-1)continue;const n=this._imageCellMap,i=this._images[t].keys;for(const s of i)n.delete(s);this._images[t].dispose(),delete this._images[t]}for(const t of Object.keys(this._cells))e&&e.indexOf(t)!==-1||this._disposeCell(t);this._needsRender=!0}_getClusterVisible(e){if(this._pointVisualizationMode===_r.Hidden)return!1;let t=!1;for(const n of Object.values(this._images)){const i=n.clusterVisibles;e in i&&(t||(t=i[e]))}return t}_disposePoints(e){for(const t of this._cellClusters[e].keys){if(!(t in this._clusters))continue;const n=this._clusters[t].cellIds.indexOf(e);if(n!==-1&&(this._clusters[t].cellIds.splice(n,1),!(this._clusters[t].cellIds.length>0))){for(const i of this._clusters[t].points.children.slice())i.dispose();this._scene.remove(this._clusters[t].points),delete this._clusters[t]}}}_disposeReconstruction(e){this._disposePoints(e),delete this._cellClusters[e]}_disposeCell(e){const t=this._cells[e];for(const n of t.children.slice())n.dispose(),t.remove(n);this._scene.remove(t),delete this._cells[e]}_getNear(e){const t=this._rayNearScale*this._originalCameraSize*e;return Math.max(1,t)}_resetCameraColor(e){const t=this._imageCellMap;if(e==null||!t.has(e))return;const n=t.get(e),i=this._images[n],s=i.getColorId(e,this._cameraVisualizationMode),a=this._assets.getColor(s);i.applyCameraColor(e,a)}_highlight(e,t,n){const i=this._imageCellMap;if(e==null||!i.has(e))return;const s=i.get(e);t=n===zi.Homogeneous?t:"#FFFFFF",this._images[s].applyCameraColor(e,t)}}class Vk{constructor(e,t){this._graphService=e,this._data=t,this._cells={},this._cacheRequests={},this._clusters={},this._clusterCells={},this._cellClusters={},this._cachingCells$={},this._cachingClusters$={}}cacheClusters$(e){if(!this.hasCell(e))throw new Error("Cannot cache reconstructions of a non-existing cell.");if(this.hasClusters(e))throw new Error("Cannot cache reconstructions that already exists.");if(this.isCachingClusters(e))return this._cachingClusters$[e];const t=this.getCell(e).filter(a=>!!a.clusterId&&!!a.clusterUrl).map(a=>({key:a.clusterId,url:a.clusterUrl})),n=Array.from(new Map(t.map(a=>[a.key,a])).values());this._cellClusters[e]=n,this._cacheRequests[e]=[];let i;const s=new Promise((a,o)=>{i=o});return this._cacheRequests[e].push(i),this._cachingClusters$[e]=this._cacheClusters$(n,e,s).pipe(_i(()=>{e in this._cachingClusters$&&delete this._cachingClusters$[e],e in this._cacheRequests&&delete this._cacheRequests[e]}),Ci(),Ue()),this._cachingClusters$[e]}cacheCell$(e){if(this.hasCell(e))throw new Error("Cannot cache cell that already exists.");return this.isCachingCell(e)?this._cachingCells$[e]:(this._cachingCells$[e]=this._graphService.cacheCell$(e).pipe($t(t=>(console.error(t),rt())),Fe(()=>!(e in this._cells)),an(t=>{this._cells[e]=[],this._cells[e].push(...t),delete this._cachingCells$[e]}),_i(()=>{e in this._cachingCells$&&delete this._cachingCells$[e]}),Ci(),Ue()),this._cachingCells$[e])}isCachingClusters(e){return e in this._cachingClusters$}isCachingCell(e){return e in this._cachingCells$}hasClusters(e){if(e in this._cachingClusters$||!(e in this._cellClusters))return!1;for(const t of this._cellClusters[e])if(!(t.key in this._clusters))return!1;return!0}hasCell(e){return!(e in this._cachingCells$)&&e in this._cells}getClusters(e){return e in this._cellClusters?this._cellClusters[e].map(t=>this._clusters[t.key]).filter(t=>!!t):[]}getCell(e){return e in this._cells?this._cells[e]:[]}uncache(e){for(let t of Object.keys(this._cacheRequests))if(!(e&&e.indexOf(t)!==-1)){for(const n of this._cacheRequests[t])n();delete this._cacheRequests[t]}for(let t of Object.keys(this._cellClusters))if(!(e&&e.indexOf(t)!==-1)){for(const n of this._cellClusters[t]){if(!(n.key in this._clusterCells))continue;const i=this._clusterCells[n.key].indexOf(t);i!==-1&&(this._clusterCells[n.key].splice(i,1),!(this._clusterCells[n.key].length>0)&&(delete this._clusterCells[n.key],delete this._clusters[n.key]))}delete this._cellClusters[t]}for(let t of Object.keys(this._cells))e&&e.indexOf(t)!==-1||delete this._cells[t]}updateCell$(e){if(!this.hasCell(e))throw new Error("Cannot update cell that does not exists.");return this._graphService.cacheCell$(e).pipe($t(t=>(console.error(t),rt())),Fe(()=>e in this._cells),an(t=>{this._cells[e]=[],this._cells[e].push(...t)}),Ci(),Ue())}updateClusters$(e){if(!this.hasCell(e))throw new Error("Cannot update reconstructions of a non-existing cell.");if(!this.hasClusters(e))throw new Error("Cannot update reconstructions for cell that is not cached.");const t=this.getCell(e).filter(i=>!!i.clusterId&&!!i.clusterUrl).map(i=>({key:i.clusterId,url:i.clusterUrl})),n=Array.from(new Map(t.map(i=>[i.key,i])).values()).filter(i=>!(i.key in this._clusters));return this._cellClusters[e].push(...n),this._cacheClusters$(n,e,null)}_cacheClusters$(e,t,n){return on(e).pipe(ct(i=>this._hasCluster(i.key)?Ze(this._getCluster(i.key)):this._getCluster$(i.url,i.key,n).pipe($t(s=>(s instanceof Gi||console.error(s),rt()))),6),Fe(()=>t in this._cellClusters),an(i=>{this._hasCluster(i.id)||(this._clusters[i.id]=i),i.id in this._clusterCells||(this._clusterCells[i.id]=[]),this._clusterCells[i.id].indexOf(t)===-1&&this._clusterCells[i.id].push(t)}))}_getCluster(e){return this._clusters[e]}_getCluster$(e,t,n){return Qt.create(i=>{this._data.getCluster(e,n).then(s=>{s.id=t,i.next(s),i.complete()},s=>{i.error(s)})})}_hasCluster(e){return e in this._clusters}}function fm(r,e,t){const n=new Set;return n.add(r),xS(n,[r],0,e,t),Array.from(n)}function xS(r,e,t,n,i){if(t>=n)return;const s=[];for(const o of e){const c=i.getAdjacent(o);s.push(...c)}const a=[];for(const o of s)r.has(o)||(r.add(o),a.push(o));xS(r,a,t+1,n,i)}class yS extends Wn{constructor(e,t,n){super(e,t,n),this._cache=new Vk(n.graphService,n.api.data),this._scene=new zk(this._getDefaultConfiguration()),this._viewportCoords=new ei,this._spatial=new Hn}getFrameIdAt(e){return new Promise((t,n)=>{this._container.renderService.renderCamera$.pipe(Ve(),V(i=>{const s=this._viewportCoords.canvasToViewport(e[0],e[1],this._container.container);return this._scene.intersection.intersectObjects(s,i.perspective)})).subscribe(i=>{t(i)},i=>{n(i)})})}_activate(){this._navigator.cacheService.configure({cellDepth:3});const e=this._subscriptions;e.push(this._navigator.stateService.reference$.pipe(Ri()).subscribe(([d,f])=>{this._scene.resetReference(f,d)})),e.push(this._navigator.graphService.filter$.subscribe(d=>{this._scene.setFilter(d)}));const t=this._container.renderService.bearing$.pipe(V(d=>6*Math.floor(d/6)),Be(),Ke(1),Ue()),n=this._navigator.stateService.currentImage$.pipe(V(d=>this._navigator.api.data.geometry.lngLatToCellId(d.originalLngLat)),Be(),Ke(1),Ue()),i=this._configuration$.pipe(V(d=>this._spatial.clamp(d.cellGridDepth,1,3)),Be(),Ke(1),Ue()),s=He(this._navigator.playService.playing$,this._navigator.playService.speed$).pipe(V(([d,f])=>d&&f>Al.sequenceSpeed),Be(),Ke(1),Ue()),a=this._navigator.stateService.state$.pipe(V(d=>Uk(d)),Be(),Ke(1),Ue());e.push(a.subscribe(d=>{this._scene.setNavigationState(d)}));const o=He(a,s,t,i,this._navigator.stateService.currentImage$).pipe(Be(([d,f,p,g,_],[m,v,y,x,w])=>{if(d!==m)return!1;const E=_.id===w.id&&f===v&&g===x;return d?E:E&&p===y}),Qd(([d,f,p,g,_])=>{if(d){const v=this._navigator.api.data.geometry,y=v.lngLatToCellId(_.originalLngLat),x=f?[y]:fm(y,g,v);return Ze(x)}const m=f?30:90;return Ze(this._cellsInFov(_,p,m))}),we(d=>on(d).pipe(ct(f=>(this._cache.hasCell(f)?Ze(this._cache.getCell(f)):this._cache.cacheCell$(f)).pipe(V(g=>({id:f,images:g}))),6))));e.push(o.pipe(at(this._navigator.stateService.reference$)).subscribe(([d,f])=>{this._scene.hasCell(d.id)||this._scene.addCell(this._cellToTopocentric(d.id,f),d.id)})),e.push(o.pipe(at(this._navigator.stateService.reference$)).subscribe(([d,f])=>{this._addSceneImages(d,f)})),e.push(o.pipe(Qd(d=>{const f=d.id;let p;return this._cache.hasClusters(f)?p=on(this._cache.getClusters(f)):this._cache.isCachingClusters(f)?p=this._cache.cacheClusters$(f).pipe(Do(null,{}),we(()=>on(this._cache.getClusters(f)))):this._cache.hasCell(f)?p=this._cache.cacheClusters$(f):p=rt(),He(Ze(f),p)}),at(this._navigator.stateService.reference$)).subscribe(([[d,f],p])=>{this._scene.hasCluster(f.id,d)||this._scene.addCluster(f,this._computeTranslation(f,p),d)})),e.push(this._configuration$.pipe(V(d=>{var f;d.cameraSize=this._spatial.clamp(d.cameraSize,.01,1),d.pointSize=this._spatial.clamp(d.pointSize,.01,1);const p=d.pointsVisible?(f=d.pointVisualizationMode)!==null&&f!==void 0?f:_r.Original:_r.Hidden;return{cameraSize:d.cameraSize,cameraVisualizationMode:d.cameraVisualizationMode,cellsVisible:d.cellsVisible,originalPositionMode:d.originalPositionMode,pointSize:d.pointSize,pointVisualizationMode:p}}),Be((d,f)=>d.cameraSize===f.cameraSize&&d.cameraVisualizationMode===f.cameraVisualizationMode&&d.cellsVisible===f.cellsVisible&&d.originalPositionMode===f.originalPositionMode&&d.pointSize===f.pointSize&&d.pointVisualizationMode===f.pointVisualizationMode)).subscribe(d=>{this._scene.setCameraSize(d.cameraSize);const f=d.cameraVisualizationMode;this._scene.setCameraVisualizationMode(f),this._scene.setCellVisibility(d.cellsVisible),this._scene.setPointSize(d.pointSize);const p=d.pointVisualizationMode;this._scene.setPointVisualizationMode(p);const g=d.originalPositionMode;this._scene.setPositionMode(g)})),e.push(He(n,i).subscribe(([d,f])=>{const p=fm(d,f,this._navigator.api.data.geometry);this._scene.uncache(p),this._cache.uncache(p)})),e.push(this._navigator.playService.playing$.pipe(we(d=>d?rt():this._container.mouseService.dblClick$),at(this._container.renderService.renderCamera$),we(([d,f])=>{const p=this._container.container,[g,_]=this._viewportCoords.canvasPosition(d,p),m=this._viewportCoords.canvasToViewport(g,_,p),v=this._scene.intersection.intersectObjects(m,f.perspective);return v?this._navigator.moveTo$(v).pipe($t(()=>rt())):rt()})).subscribe());const c=He(this._configuration$,this._navigator.stateService.state$).pipe(V(([d,f])=>(d.cameraSize=this._spatial.clamp(d.cameraSize,.01,1),{size:d.cameraSize,visible:dm(d.cameraVisualizationMode),state:f})),Be((d,f)=>d.size===f.size&&d.visible===f.visible&&d.state===f.state)),l=this._container.mouseService.mouseMove$.pipe(Ke(1),Ue());e.push(l.subscribe());const h=xt(this._container.mouseService.mouseEnter$,this._container.mouseService.mouseLeave$,this._container.mouseService.windowBlur$);e.push(He(this._navigator.playService.playing$,h,a,this._navigator.graphService.filter$).pipe(we(([d,f])=>!d&&f.type==="pointerenter"?He(Wi(l.pipe(Hi(1)),this._container.mouseService.mouseMove$),this._container.renderService.renderCamera$,c):He(Ze(f),Ze(null),Ze(null)))).subscribe(([d,f])=>{if(d.type!=="pointermove"){this._scene.setHoveredImage(null);return}const p=this._container.container,[g,_]=this._viewportCoords.canvasPosition(d,p),m=this._viewportCoords.canvasToViewport(g,_,p),v=this._scene.intersection.intersectObjects(m,f.perspective);this._scene.setHoveredImage(v)})),e.push(this._navigator.stateService.currentId$.subscribe(d=>{this._scene.setSelectedImage(d)})),e.push(this._navigator.stateService.currentState$.pipe(V(d=>{const f=this._scene;return{name:this._name,renderer:{frameId:d.id,needsRender:f.needsRender,render:f.render.bind(f),pass:os.Opaque}}})).subscribe(this._container.glRenderer.render$));const u=this._navigator.graphService.dataAdded$.pipe(Fe(d=>this._cache.hasCell(d)),ct(d=>this._cache.updateCell$(d).pipe(V(f=>({id:d,images:f})),at(this._navigator.stateService.reference$))),Ci(),Ue());e.push(u.subscribe(([d,f])=>{this._addSceneImages(d,f)})),e.push(u.pipe(Qd(([d])=>{const f=d.id,p=this._cache;let g;return p.hasClusters(f)?g=p.updateClusters$(f):p.isCachingClusters(f)?g=this._cache.cacheClusters$(f).pipe(Do(null,{}),we(()=>on(p.updateClusters$(f)))):g=rt(),He(Ze(f),g)}),at(this._navigator.stateService.reference$)).subscribe(([[d,f],p])=>{this._scene.hasCluster(f.id,d)||this._scene.addCluster(f,this._computeTranslation(f,p),d)}))}_deactivate(){this._subscriptions.unsubscribe(),this._cache.uncache(),this._scene.deactivate(),this._navigator.cacheService.configure()}_getDefaultConfiguration(){return{cameraSize:.1,cameraVisualizationMode:zi.Homogeneous,cellGridDepth:1,originalPositionMode:il.Hidden,pointSize:.1,pointsVisible:!0,pointVisualizationMode:_r.Original,cellsVisible:!1}}_addSceneImages(e,t){const n=e.id,i=e.images;for(const s of i)this._scene.hasImage(s.id,n)||this._scene.addImage(s,this._createTransform(s,t),this._computeOriginalPosition(s,t),n)}_cellsInFov(e,t,n){const i=this._spatial,s=this._navigator.api.data.geometry,a=s.lngLatToCellId(e.originalLngLat),o=[a],c=n/2,l=s.getAdjacent(a);for(const h of l){const u=s.getVertices(h);for(const d of u){const[f,p]=Zn(d.lng,d.lat,0,e.lngLat.lng,e.lngLat.lat,0),g=Math.atan2(p,f),_=i.radToDeg(i.azimuthalToBearing(g));Math.abs(_-t)<c&&o.push(h)}}return o}_computeOriginalPosition(e,t){return Zn(e.originalLngLat.lng,e.originalLngLat.lat,e.originalAltitude!=null?e.originalAltitude:e.computedAltitude,t.lng,t.lat,t.alt)}_cellToTopocentric(e,t){return this._navigator.api.data.geometry.getVertices(e).map(i=>Zn(i.lng,i.lat,-2,t.lng,t.lat,t.alt))}_computeTranslation(e,t){return Zn(e.reference.lng,e.reference.lat,e.reference.alt,t.lng,t.lat,t.alt)}_createTransform(e,t){const n=Lu({alt:e.computedAltitude,lat:e.lngLat.lat,lng:e.lngLat.lng},e.rotation,t);return new Co(e.exifOrientation,e.width,e.height,e.scale,e.rotation,n,void 0,void 0,e.cameraParameters,e.cameraType)}}yS.componentName="spatial";class Rg{constructor(){this._notifyChanged$=new De}get changed$(){return this._notifyChanged$}}class Tn extends Zt{constructor(e){super(e??"The provided geometry value is incorrect"),Object.setPrototypeOf(this,Tn.prototype),this.name="GeometryTagError"}}class Hk extends Rg{constructor(e){if(super(),e.length<2)throw new Tn("A points geometry must have two or more positions.");this._points=[];for(const n of e){if(n[0]<0||n[0]>1||n[1]<0||n[1]>1)throw new Tn("Basic coordinates of points must be on the interval [0, 1].");this._points.push(n.slice())}}get points(){return this._points}addPoint2d(e){const t=[Math.max(0,Math.min(1,e[0])),Math.max(0,Math.min(1,e[1]))];this._points.push(t),this._notifyChanged$.next(this)}getPoint2d(e){return this._points[e].slice()}removePoint2d(e){if(e<0||e>=this._points.length||this._points.length<3)throw new Tn("Index for removed point must be valid.");this._points.splice(e,1),this._notifyChanged$.next(this)}setVertex2d(e,t,n){this.setPoint2d(e,t,n)}setPoint2d(e,t,n){const i=[Math.max(0,Math.min(1,t[0])),Math.max(0,Math.min(1,t[1]))];this._points[e]=i,this._notifyChanged$.next(this)}getPoints3d(e){return this._getPoints3d(this._points,e)}getPoint3d(e,t){return t.unprojectBasic(this._points[e],200)}getPoints2d(){return this._points.slice()}getCentroid2d(e){if(!e)throw new Tn("Get centroid must be called with a transform for points geometries.");const[t,n,i,s]=this.getRect2d(e),a=t<i?(t+i)/2:(t+i+1)/2%1,o=(n+s)/2;return[a,o]}getCentroid3d(e){let t=this.getCentroid2d();return e.unprojectBasic(t,200)}getRect2d(e){let t=1,n=0,i=1,s=0;const a=this._points;for(const o of a)o[0]<t&&(t=o[0]),o[0]>n&&(n=o[0]),o[1]<i&&(i=o[1]),o[1]>s&&(s=o[1]);if(tt(e.cameraType)){const o=[];for(let h=0;h<a.length;h++)o[h]=h;o.sort((h,u)=>a[h][0]<a[u][0]?-1:a[h][0]>a[u][0]?1:h<u?-1:1);let c=a[o[0]][0]+1-a[o[o.length-1]][0],l=0;for(let h=0;h<o.length-1;h++){const u=o[h],d=o[h+1],f=a[d][0]-a[u][0];f>c&&(c=f,l=h+1)}l>0&&(t=a[o[l]][0],n=a[o[l-1]][0])}return[t,i,n,s]}setCentroid2d(e,t){throw new Error("Not implemented")}_getPoints3d(e,t){return e.map(n=>t.unprojectBasic(n,200))}}class bS{constructor(e,t,n){this._geometry=e,this._transform=t,this._viewportCoords=n||new ei,this._aborted$=new De,this._created$=new De,this._glObjectsChanged$=new De,this._geometryChangedSubscription=this._geometry.changed$.subscribe(()=>{this._onGeometryChanged(),this._glObjectsChanged$.next(this)})}get geometry(){return this._geometry}get glObjects(){return this._glObjects}get aborted$(){return this._aborted$}get created$(){return this._created$}get glObjectsChanged$(){return this._glObjectsChanged$}get geometryChanged$(){return this._geometry.changed$.pipe(V(()=>this))}dispose(){this._geometryChangedSubscription.unsubscribe()}_canvasToTransform(e){const t=Math.round(e[0]),n=Math.round(e[1]);return`translate(-50%,-50%) translate(${t}px,${n}px)`}_colorToBackground(e){return"#"+("000000"+e.toString(16)).substr(-6)}_createOutine(e,t){const n=this._getLinePositions(e),i=new kt;i.setAttribute("position",new Ct(n,3));const s=new as({color:t,linewidth:1});return new Sa(i,s)}_disposeLine(e){e!=null&&(e.geometry.dispose(),e.material.dispose())}_getLinePositions(e){const t=e.length,n=new Float32Array(t*3);for(let i=0;i<t;++i){const s=3*i,a=e[i];n[s]=a[0],n[s+1]=a[1],n[s+2]=a[2]}return n}}var Pg={exports:{}};Pg.exports=dd;Pg.exports.default=dd;function dd(r,e,t){t=t||2;var n=e&&e.length,i=n?e[0]*t:r.length,s=MS(r,0,i,t,!0),a=[];if(!s||s.next===s.prev)return a;var o,c,l,h,u,d,f;if(n&&(s=Xk(r,e,s,t)),r.length>80*t){o=l=r[0],c=h=r[1];for(var p=t;p<i;p+=t)u=r[p],d=r[p+1],u<o&&(o=u),d<c&&(c=d),u>l&&(l=u),d>h&&(h=d);f=Math.max(l-o,h-c),f=f!==0?1/f:0}return rl(s,a,t,o,c,f),a}function MS(r,e,t,n,i){var s,a;if(i===gm(r,e,t,n)>0)for(s=e;s<t;s+=n)a=K0(s,r[s],r[s+1],a);else for(s=t-n;s>=e;s-=n)a=K0(s,r[s],r[s+1],a);return a&&fd(a,a.next)&&(al(a),a=a.next),a}function Ws(r,e){if(!r)return r;e||(e=r);var t=r,n;do if(n=!1,!t.steiner&&(fd(t,t.next)||vn(t.prev,t,t.next)===0)){if(al(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function rl(r,e,t,n,i,s,a){if(r){!a&&s&&Qk(r,n,i,s);for(var o=r,c,l;r.prev!==r.next;){if(c=r.prev,l=r.next,s?Wk(r,n,i,s):Gk(r)){e.push(c.i/t),e.push(r.i/t),e.push(l.i/t),al(r),r=l.next,o=l.next;continue}if(r=l,r===o){a?a===1?(r=qk(Ws(r),e,t),rl(r,e,t,n,i,s,2)):a===2&&jk(r,e,t,n,i,s):rl(Ws(r),e,t,n,i,s,1);break}}}}function Gk(r){var e=r.prev,t=r,n=r.next;if(vn(e,t,n)>=0)return!1;for(var i=r.next.next;i!==r.prev;){if(xo(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&vn(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Wk(r,e,t,n){var i=r.prev,s=r,a=r.next;if(vn(i,s,a)>=0)return!1;for(var o=i.x<s.x?i.x<a.x?i.x:a.x:s.x<a.x?s.x:a.x,c=i.y<s.y?i.y<a.y?i.y:a.y:s.y<a.y?s.y:a.y,l=i.x>s.x?i.x>a.x?i.x:a.x:s.x>a.x?s.x:a.x,h=i.y>s.y?i.y>a.y?i.y:a.y:s.y>a.y?s.y:a.y,u=pm(o,c,e,t,n),d=pm(l,h,e,t,n),f=r.prevZ,p=r.nextZ;f&&f.z>=u&&p&&p.z<=d;){if(f!==r.prev&&f!==r.next&&xo(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&vn(f.prev,f,f.next)>=0||(f=f.prevZ,p!==r.prev&&p!==r.next&&xo(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&vn(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;f&&f.z>=u;){if(f!==r.prev&&f!==r.next&&xo(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&vn(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;p&&p.z<=d;){if(p!==r.prev&&p!==r.next&&xo(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&vn(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function qk(r,e,t){var n=r;do{var i=n.prev,s=n.next.next;!fd(i,s)&&SS(i,n,n.next,s)&&sl(i,s)&&sl(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),al(n),al(n.next),n=r=s),n=n.next}while(n!==r);return Ws(n)}function jk(r,e,t,n,i,s){var a=r;do{for(var o=a.next.next;o!==a.prev;){if(a.i!==o.i&&nz(a,o)){var c=wS(a,o);a=Ws(a,a.next),c=Ws(c,c.next),rl(a,e,t,n,i,s),rl(c,e,t,n,i,s);return}o=o.next}a=a.next}while(a!==r)}function Xk(r,e,t,n){var i=[],s,a,o,c,l;for(s=0,a=e.length;s<a;s++)o=e[s]*n,c=s<a-1?e[s+1]*n:r.length,l=MS(r,o,c,n,!1),l===l.next&&(l.steiner=!0),i.push(tz(l));for(i.sort(Yk),s=0;s<i.length;s++)t=Zk(i[s],t),t=Ws(t,t.next);return t}function Yk(r,e){return r.x-e.x}function Zk(r,e){var t=Kk(r,e);if(!t)return e;var n=wS(t,r),i=Ws(t,t.next);return Ws(n,n.next),e===t?i:e}function Kk(r,e){var t=e,n=r.x,i=r.y,s=-1/0,a;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){var o=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(o<=n&&o>s){if(s=o,o===n){if(i===t.y)return t;if(i===t.next.y)return t.next}a=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!a)return null;if(n===s)return a;var c=a,l=a.x,h=a.y,u=1/0,d;t=a;do n>=t.x&&t.x>=l&&n!==t.x&&xo(i<h?n:s,i,l,h,i<h?s:n,i,t.x,t.y)&&(d=Math.abs(i-t.y)/(n-t.x),sl(t,r)&&(d<u||d===u&&(t.x>a.x||t.x===a.x&&Jk(a,t)))&&(a=t,u=d)),t=t.next;while(t!==c);return a}function Jk(r,e){return vn(r.prev,r,e.prev)<0&&vn(e.next,r,r.next)<0}function Qk(r,e,t,n){var i=r;do i.z===null&&(i.z=pm(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,ez(i)}function ez(r){var e,t,n,i,s,a,o,c,l=1;do{for(t=r,r=null,s=null,a=0;t;){for(a++,n=t,o=0,e=0;e<l&&(o++,n=n.nextZ,!!n);e++);for(c=l;o>0||c>0&&n;)o!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,c--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,l*=2}while(a>1);return r}function pm(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function tz(r){var e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function xo(r,e,t,n,i,s,a,o){return(i-a)*(e-o)-(r-a)*(s-o)>=0&&(r-a)*(n-o)-(t-a)*(e-o)>=0&&(t-a)*(s-o)-(i-a)*(n-o)>=0}function nz(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!iz(r,e)&&(sl(r,e)&&sl(e,r)&&rz(r,e)&&(vn(r.prev,r,e.prev)||vn(r,e.prev,e))||fd(r,e)&&vn(r.prev,r,r.next)>0&&vn(e.prev,e,e.next)>0)}function vn(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function fd(r,e){return r.x===e.x&&r.y===e.y}function SS(r,e,t,n){var i=Gh(vn(r,e,t)),s=Gh(vn(r,e,n)),a=Gh(vn(t,n,r)),o=Gh(vn(t,n,e));return!!(i!==s&&a!==o||i===0&&Hh(r,t,e)||s===0&&Hh(r,n,e)||a===0&&Hh(t,r,n)||o===0&&Hh(t,e,n))}function Hh(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Gh(r){return r>0?1:r<0?-1:0}function iz(r,e){var t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&SS(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function sl(r,e){return vn(r.prev,r,r.next)<0?vn(r,e,r.next)>=0&&vn(r,r.prev,e)>=0:vn(r,e,r.prev)<0||vn(r,r.next,e)<0}function rz(r,e){var t=r,n=!1,i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function wS(r,e){var t=new mm(r.i,r.x,r.y),n=new mm(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function K0(r,e,t,n){var i=new mm(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function al(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function mm(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}dd.deviation=function(r,e,t,n){var i=e&&e.length,s=i?e[0]*t:r.length,a=Math.abs(gm(r,0,s,t));if(i)for(var o=0,c=e.length;o<c;o++){var l=e[o]*t,h=o<c-1?e[o+1]*t:r.length;a-=Math.abs(gm(r,l,h,t))}var u=0;for(o=0;o<n.length;o+=3){var d=n[o]*t,f=n[o+1]*t,p=n[o+2]*t;u+=Math.abs((r[d]-r[p])*(r[f+1]-r[d+1])-(r[d]-r[f])*(r[p+1]-r[d+1]))}return a===0&&u===0?0:Math.abs((u-a)/a)};function gm(r,e,t,n){for(var i=0,s=e,a=t-n;s<t;s+=n)i+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return i}dd.flatten=function(r){for(var e=r[0][0].length,t={vertices:[],holes:[],dimensions:e},n=0,i=0;i<r.length;i++){for(var s=0;s<r[i].length;s++)for(var a=0;a<e;a++)t.vertices.push(r[i][s][a]);i>0&&(n+=r[i-1].length,t.holes.push(n))}return t};var J0=Pg.exports,Ig={exports:{}};class sz{constructor(e=[],t=az){if(this.data=e,this.length=this.data.length,this.compare=t,this.length>0)for(let n=(this.length>>1)-1;n>=0;n--)this._down(n)}push(e){this.data.push(e),this.length++,this._up(this.length-1)}pop(){if(this.length===0)return;const e=this.data[0],t=this.data.pop();return this.length--,this.length>0&&(this.data[0]=t,this._down(0)),e}peek(){return this.data[0]}_up(e){const{data:t,compare:n}=this,i=t[e];for(;e>0;){const s=e-1>>1,a=t[s];if(n(i,a)>=0)break;t[e]=a,e=s}t[e]=i}_down(e){const{data:t,compare:n}=this,i=this.length>>1,s=t[e];for(;e<i;){let a=(e<<1)+1,o=t[a];const c=a+1;if(c<this.length&&n(t[c],o)<0&&(a=c,o=t[c]),n(o,s)>=0)break;t[e]=o,e=a}t[e]=s}}function az(r,e){return r<e?-1:r>e?1:0}var oz=Object.freeze({__proto__:null,default:sz}),cz=nU(oz),pu=cz;pu.default&&(pu=pu.default);Ig.exports=TS;Ig.exports.default=TS;function TS(r,e,t){e=e||1;for(var n,i,s,a,o=0;o<r[0].length;o++){var c=r[0][o];(!o||c[0]<n)&&(n=c[0]),(!o||c[1]<i)&&(i=c[1]),(!o||c[0]>s)&&(s=c[0]),(!o||c[1]>a)&&(a=c[1])}var l=s-n,h=a-i,u=Math.min(l,h),d=u/2;if(u===0){var f=[n,i];return f.distance=0,f}for(var p=new pu(void 0,lz),g=n;g<s;g+=u)for(var _=i;_<a;_+=u)p.push(new Ts(g+d,_+d,d,r));var m=uz(r),v=new Ts(n+l/2,i+h/2,0,r);v.d>m.d&&(m=v);for(var y=p.length;p.length;){var x=p.pop();x.d>m.d&&(m=x,t&&console.log("found best %d after %d probes",Math.round(1e4*x.d)/1e4,y)),!(x.max-m.d<=e)&&(d=x.h/2,p.push(new Ts(x.x-d,x.y-d,d,r)),p.push(new Ts(x.x+d,x.y-d,d,r)),p.push(new Ts(x.x-d,x.y+d,d,r)),p.push(new Ts(x.x+d,x.y+d,d,r)),y+=4)}t&&(console.log("num probes: "+y),console.log("best distance: "+m.d));var w=[m.x,m.y];return w.distance=m.d,w}function lz(r,e){return e.max-r.max}function Ts(r,e,t,n){this.x=r,this.y=e,this.h=t,this.d=hz(r,e,n),this.max=this.d+this.h*Math.SQRT2}function hz(r,e,t){for(var n=!1,i=1/0,s=0;s<t.length;s++)for(var a=t[s],o=0,c=a.length,l=c-1;o<c;l=o++){var h=a[o],u=a[l];h[1]>e!=u[1]>e&&r<(u[0]-h[0])*(e-h[1])/(u[1]-h[1])+h[0]&&(n=!n),i=Math.min(i,dz(r,e,h,u))}return i===0?0:(n?1:-1)*Math.sqrt(i)}function uz(r){for(var e=0,t=0,n=0,i=r[0],s=0,a=i.length,o=a-1;s<a;o=s++){var c=i[s],l=i[o],h=c[0]*l[1]-l[0]*c[1];t+=(c[0]+l[0])*h,n+=(c[1]+l[1])*h,e+=h*3}return e===0?new Ts(i[0][0],i[0][1],0,r):new Ts(t/e,n/e,0,r)}function dz(r,e,t,n){var i=t[0],s=t[1],a=n[0]-i,o=n[1]-s;if(a!==0||o!==0){var c=((r-i)*a+(e-s)*o)/(a*a+o*o);c>1?(i=n[0],s=n[1]):c>0&&(i+=a*c,s+=o*c)}return a=r-i,o=e-s,a*a+o*o}var fz=Ig.exports;function pz(r,e){return r>e?1:r<e?-1:0}class Lg{constructor(e=pz,t=!1){this._compare=e,this._root=null,this._size=0,this._noDuplicates=!!t}rotateLeft(e){var t=e.right;t&&(e.right=t.left,t.left&&(t.left.parent=e),t.parent=e.parent),e.parent?e===e.parent.left?e.parent.left=t:e.parent.right=t:this._root=t,t&&(t.left=e),e.parent=t}rotateRight(e){var t=e.left;t&&(e.left=t.right,t.right&&(t.right.parent=e),t.parent=e.parent),e.parent?e===e.parent.left?e.parent.left=t:e.parent.right=t:this._root=t,t&&(t.right=e),e.parent=t}_splay(e){for(;e.parent;){var t=e.parent;t.parent?t.left===e&&t.parent.left===t?(this.rotateRight(t.parent),this.rotateRight(t)):t.right===e&&t.parent.right===t?(this.rotateLeft(t.parent),this.rotateLeft(t)):t.left===e&&t.parent.right===t?(this.rotateRight(t),this.rotateLeft(t)):(this.rotateLeft(t),this.rotateRight(t)):t.left===e?this.rotateRight(t):this.rotateLeft(t)}}splay(e){for(var t,n,i,s,a;e.parent;)t=e.parent,n=t.parent,n&&n.parent?(i=n.parent,i.left===n?i.left=e:i.right=e,e.parent=i):(e.parent=null,this._root=e),s=e.left,a=e.right,e===t.left?(n&&(n.left===t?(t.right?(n.left=t.right,n.left.parent=n):n.left=null,t.right=n,n.parent=t):(s?(n.right=s,s.parent=n):n.right=null,e.left=n,n.parent=e)),a?(t.left=a,a.parent=t):t.left=null,e.right=t,t.parent=e):(n&&(n.right===t?(t.left?(n.right=t.left,n.right.parent=n):n.right=null,t.left=n,n.parent=t):(a?(n.left=a,a.parent=n):n.left=null,e.right=n,n.parent=e)),s?(t.right=s,s.parent=t):t.right=null,e.left=t,t.parent=e)}replace(e,t){e.parent?e===e.parent.left?e.parent.left=t:e.parent.right=t:this._root=t,t&&(t.parent=e.parent)}minNode(e=this._root){if(e)for(;e.left;)e=e.left;return e}maxNode(e=this._root){if(e)for(;e.right;)e=e.right;return e}insert(e,t){var n=this._root,i=null,s=this._compare,a;if(this._noDuplicates)for(;n;){if(i=n,a=s(n.key,e),a===0)return;s(n.key,e)<0?n=n.right:n=n.left}else for(;n;)i=n,s(n.key,e)<0?n=n.right:n=n.left;return n={key:e,data:t,left:null,right:null,parent:i},i?s(i.key,n.key)<0?i.right=n:i.left=n:this._root=n,this.splay(n),this._size++,n}find(e){for(var t=this._root,n=this._compare;t;){var i=n(t.key,e);if(i<0)t=t.right;else if(i>0)t=t.left;else return t}return null}contains(e){for(var t=this._root,n=this._compare;t;){var i=n(e,t.key);if(i===0)return!0;i<0?t=t.left:t=t.right}return!1}remove(e){var t=this.find(e);if(!t)return!1;if(this.splay(t),!t.left)this.replace(t,t.right);else if(!t.right)this.replace(t,t.left);else{var n=this.minNode(t.right);n.parent!==t&&(this.replace(n,n.right),n.right=t.right,n.right.parent=n),this.replace(t,n),n.left=t.left,n.left.parent=n}return this._size--,!0}removeNode(e){if(!e)return!1;if(this.splay(e),!e.left)this.replace(e,e.right);else if(!e.right)this.replace(e,e.left);else{var t=this.minNode(e.right);t.parent!==e&&(this.replace(t,t.right),t.right=e.right,t.right.parent=t),this.replace(e,t),t.left=e.left,t.left.parent=t}return this._size--,!0}erase(e){var t=this.find(e);if(t){this.splay(t);var n=t.left,i=t.right,s=null;n&&(n.parent=null,s=this.maxNode(n),this.splay(s),this._root=s),i&&(n?s.right=i:this._root=i,i.parent=s),this._size--}}pop(){var e=this._root,t=null;if(e){for(;e.left;)e=e.left;t={key:e.key,data:e.data},this.remove(e.key)}return t}next(e){var t=e;if(t)if(t.right)for(t=t.right;t&&t.left;)t=t.left;else for(t=e.parent;t&&t.right===e;)e=t,t=t.parent;return t}prev(e){var t=e;if(t)if(t.left)for(t=t.left;t&&t.right;)t=t.right;else for(t=e.parent;t&&t.left===e;)e=t,t=t.parent;return t}forEach(e){for(var t=this._root,n=[],i=!1,s=0;!i;)t?(n.push(t),t=t.left):n.length>0?(t=n.pop(),e(t,s++),t=t.right):i=!0;return this}range(e,t,n,i){const s=[],a=this._compare;let o=this._root,c;for(;s.length!==0||o;)if(o)s.push(o),o=o.left;else{if(o=s.pop(),c=a(o.key,t),c>0)break;if(a(o.key,e)>=0&&n.call(i,o))return this;o=o.right}return this}keys(){for(var e=this._root,t=[],n=[],i=!1;!i;)e?(t.push(e),e=e.left):t.length>0?(e=t.pop(),n.push(e.key),e=e.right):i=!0;return n}values(){for(var e=this._root,t=[],n=[],i=!1;!i;)e?(t.push(e),e=e.left):t.length>0?(e=t.pop(),n.push(e.data),e=e.right):i=!0;return n}at(e){for(var t=this._root,n=[],i=!1,s=0;!i;)if(t)n.push(t),t=t.left;else if(n.length>0){if(t=n.pop(),s===e)return t;s++,t=t.right}else i=!0;return null}load(e=[],t=[],n=!1){if(this._size!==0)throw new Error("bulk-load: tree is not empty");const i=e.length;return n&&vm(e,t,0,i-1,this._compare),this._root=_m(null,e,t,0,i),this._size=i,this}min(){var e=this.minNode(this._root);return e?e.key:null}max(){var e=this.maxNode(this._root);return e?e.key:null}isEmpty(){return this._root===null}get size(){return this._size}static createTree(e,t,n,i,s){return new Lg(n,s).load(e,t,i)}}function _m(r,e,t,n,i){const s=i-n;if(s>0){const a=n+Math.floor(s/2),o=e[a],c=t[a],l={key:o,data:c,parent:r};return l.left=_m(l,e,t,n,a),l.right=_m(l,e,t,a+1,i),l}return null}function vm(r,e,t,n,i){if(t>=n)return;const s=r[t+n>>1];let a=t-1,o=n+1;for(;;){do a++;while(i(r[a],s)<0);do o--;while(i(r[o],s)>0);if(a>=o)break;let c=r[a];r[a]=r[o],r[o]=c,c=e[a],e[a]=e[o],e[o]=c}vm(r,e,t,o,i),vm(r,e,o+1,n,i)}const ES=0,CS=1,AS=2,RS=3,Bu=0,xm=1,$u=2,PS=3;function xc(r,e,t){e===null?(r.inOut=!1,r.otherInOut=!0):(r.isSubject===e.isSubject?(r.inOut=!e.inOut,r.otherInOut=e.otherInOut):(r.inOut=!e.otherInOut,r.otherInOut=e.isVertical()?!e.inOut:e.inOut),e&&(r.prevInResult=!Q0(e,t)||e.isVertical()?e.prevInResult:e)),Q0(r,t)?r.resultTransition=mz(r,t):r.resultTransition=0}function Q0(r,e){switch(r.type){case ES:switch(e){case Bu:return!r.otherInOut;case xm:return r.otherInOut;case $u:return r.isSubject&&r.otherInOut||!r.isSubject&&!r.otherInOut;case PS:return!0}break;case AS:return e===Bu||e===xm;case RS:return e===$u;case CS:return!1}return!1}function mz(r,e){let t=!r.inOut,n=!r.otherInOut,i;switch(e){case Bu:i=t&&n;break;case xm:i=t||n;break;case PS:i=t^n;break;case $u:r.isSubject?i=t&&!n:i=n&&!t;break}return i?1:-1}class ko{constructor(e,t,n,i,s){this.left=t,this.point=e,this.otherEvent=n,this.isSubject=i,this.type=s||ES,this.inOut=!1,this.otherInOut=!1,this.prevInResult=null,this.resultTransition=0,this.otherPos=-1,this.outputContourId=-1,this.isExteriorRing=!0}isBelow(e){const t=this.point,n=this.otherEvent.point;return this.left?(t[0]-e[0])*(n[1]-e[1])-(n[0]-e[0])*(t[1]-e[1])>0:(n[0]-e[0])*(t[1]-e[1])-(t[0]-e[0])*(n[1]-e[1])>0}isAbove(e){return!this.isBelow(e)}isVertical(){return this.point[0]===this.otherEvent.point[0]}get inResult(){return this.resultTransition!==0}clone(){const e=new ko(this.point,this.left,this.otherEvent,this.isSubject,this.type);return e.contourId=this.contourId,e.resultTransition=this.resultTransition,e.prevInResult=this.prevInResult,e.isExteriorRing=this.isExteriorRing,e.inOut=this.inOut,e.otherInOut=this.otherInOut,e}}function pr(r,e){return r[0]===e[0]?r[1]===e[1]:!1}const Kr=11102230246251565e-32,Xn=134217729,gz=(3+8*Kr)*Kr;function Hf(r,e,t,n,i){let s,a,o,c,l=e[0],h=n[0],u=0,d=0;h>l==h>-l?(s=l,l=e[++u]):(s=h,h=n[++d]);let f=0;if(u<r&&d<t)for(h>l==h>-l?(a=l+s,o=s-(a-l),l=e[++u]):(a=h+s,o=s-(a-h),h=n[++d]),s=a,o!==0&&(i[f++]=o);u<r&&d<t;)h>l==h>-l?(a=s+l,c=a-s,o=s-(a-c)+(l-c),l=e[++u]):(a=s+h,c=a-s,o=s-(a-c)+(h-c),h=n[++d]),s=a,o!==0&&(i[f++]=o);for(;u<r;)a=s+l,c=a-s,o=s-(a-c)+(l-c),l=e[++u],s=a,o!==0&&(i[f++]=o);for(;d<t;)a=s+h,c=a-s,o=s-(a-c)+(h-c),h=n[++d],s=a,o!==0&&(i[f++]=o);return(s!==0||f===0)&&(i[f++]=s),f}function _z(r,e){let t=e[0];for(let n=1;n<r;n++)t+=e[n];return t}function Rl(r){return new Float64Array(r)}const vz=(3+16*Kr)*Kr,xz=(2+12*Kr)*Kr,yz=(9+64*Kr)*Kr*Kr,ao=Rl(4),ex=Rl(8),tx=Rl(12),nx=Rl(16),ii=Rl(4);function bz(r,e,t,n,i,s,a){let o,c,l,h,u,d,f,p,g,_,m,v,y,x,w,E,M,A;const T=r-i,S=t-i,b=e-s,U=n-s;x=T*U,d=Xn*T,f=d-(d-T),p=T-f,d=Xn*U,g=d-(d-U),_=U-g,w=p*_-(x-f*g-p*g-f*_),E=b*S,d=Xn*b,f=d-(d-b),p=b-f,d=Xn*S,g=d-(d-S),_=S-g,M=p*_-(E-f*g-p*g-f*_),m=w-M,u=w-m,ao[0]=w-(m+u)+(u-M),v=x+m,u=v-x,y=x-(v-u)+(m-u),m=y-E,u=y-m,ao[1]=y-(m+u)+(u-E),A=v+m,u=A-v,ao[2]=v-(A-u)+(m-u),ao[3]=A;let L=_z(4,ao),N=xz*a;if(L>=N||-L>=N||(u=r-T,o=r-(T+u)+(u-i),u=t-S,l=t-(S+u)+(u-i),u=e-b,c=e-(b+u)+(u-s),u=n-U,h=n-(U+u)+(u-s),o===0&&c===0&&l===0&&h===0)||(N=yz*a+gz*Math.abs(L),L+=T*h+U*o-(b*l+S*c),L>=N||-L>=N))return L;x=o*U,d=Xn*o,f=d-(d-o),p=o-f,d=Xn*U,g=d-(d-U),_=U-g,w=p*_-(x-f*g-p*g-f*_),E=c*S,d=Xn*c,f=d-(d-c),p=c-f,d=Xn*S,g=d-(d-S),_=S-g,M=p*_-(E-f*g-p*g-f*_),m=w-M,u=w-m,ii[0]=w-(m+u)+(u-M),v=x+m,u=v-x,y=x-(v-u)+(m-u),m=y-E,u=y-m,ii[1]=y-(m+u)+(u-E),A=v+m,u=A-v,ii[2]=v-(A-u)+(m-u),ii[3]=A;const k=Hf(4,ao,4,ii,ex);x=T*h,d=Xn*T,f=d-(d-T),p=T-f,d=Xn*h,g=d-(d-h),_=h-g,w=p*_-(x-f*g-p*g-f*_),E=b*l,d=Xn*b,f=d-(d-b),p=b-f,d=Xn*l,g=d-(d-l),_=l-g,M=p*_-(E-f*g-p*g-f*_),m=w-M,u=w-m,ii[0]=w-(m+u)+(u-M),v=x+m,u=v-x,y=x-(v-u)+(m-u),m=y-E,u=y-m,ii[1]=y-(m+u)+(u-E),A=v+m,u=A-v,ii[2]=v-(A-u)+(m-u),ii[3]=A;const B=Hf(k,ex,4,ii,tx);x=o*h,d=Xn*o,f=d-(d-o),p=o-f,d=Xn*h,g=d-(d-h),_=h-g,w=p*_-(x-f*g-p*g-f*_),E=c*l,d=Xn*c,f=d-(d-c),p=c-f,d=Xn*l,g=d-(d-l),_=l-g,M=p*_-(E-f*g-p*g-f*_),m=w-M,u=w-m,ii[0]=w-(m+u)+(u-M),v=x+m,u=v-x,y=x-(v-u)+(m-u),m=y-E,u=y-m,ii[1]=y-(m+u)+(u-E),A=v+m,u=A-v,ii[2]=v-(A-u)+(m-u),ii[3]=A;const z=Hf(B,tx,4,ii,nx);return nx[z-1]}function Mz(r,e,t,n,i,s){const a=(e-s)*(t-i),o=(r-i)*(n-s),c=a-o;if(a===0||o===0||a>0!=o>0)return c;const l=Math.abs(a+o);return Math.abs(c)>=vz*l?c:-bz(r,e,t,n,i,s,l)}function ym(r,e,t){const n=Mz(r[0],r[1],e[0],e[1],t[0],t[1]);return n>0?-1:n<0?1:0}function qs(r,e){const t=r.point,n=e.point;return t[0]>n[0]?1:t[0]<n[0]?-1:t[1]!==n[1]?t[1]>n[1]?1:-1:Sz(r,e,t)}function Sz(r,e,t,n){return r.left!==e.left?r.left?1:-1:ym(t,r.otherEvent.point,e.otherEvent.point)!==0?r.isBelow(e.otherEvent.point)?-1:1:!r.isSubject&&e.isSubject?1:-1}function Ss(r,e,t){const n=new ko(e,!1,r,r.isSubject),i=new ko(e,!0,r.otherEvent,r.isSubject);return pr(r.point,r.otherEvent.point)&&console.warn("what is that, a collapsed segment?",r),n.contourId=i.contourId=r.contourId,qs(i,r.otherEvent)>0&&(r.otherEvent.left=!0,i.left=!1),r.otherEvent.otherEvent=i,r.otherEvent=n,t.push(i),t.push(n),t}function Wh(r,e){return r[0]*e[1]-r[1]*e[0]}function Gf(r,e){return r[0]*e[0]+r[1]*e[1]}function wz(r,e,t,n,i){const s=[e[0]-r[0],e[1]-r[1]],a=[n[0]-t[0],n[1]-t[1]];function o(_,m,v){return[_[0]+m*v[0],_[1]+m*v[1]]}const c=[t[0]-r[0],t[1]-r[1]];let l=Wh(s,a),h=l*l;const u=Gf(s,s);if(h>0){const _=Wh(c,a)/l;if(_<0||_>1)return null;const m=Wh(c,s)/l;return m<0||m>1?null:_===0||_===1?[o(r,_,s)]:m===0||m===1?[o(t,m,a)]:[o(r,_,s)]}if(l=Wh(c,s),h=l*l,h>0)return null;const d=Gf(s,c)/u,f=d+Gf(s,a)/u,p=Math.min(d,f),g=Math.max(d,f);return p<=1&&g>=0?p===1?[o(r,p>0?p:0,s)]:g===0?[o(r,g<1?g:1,s)]:[o(r,p>0?p:0,s),o(r,g<1?g:1,s)]:null}function Wf(r,e,t){const n=wz(r.point,r.otherEvent.point,e.point,e.otherEvent.point),i=n?n.length:0;if(i===0||i===1&&(pr(r.point,e.point)||pr(r.otherEvent.point,e.otherEvent.point))||i===2&&r.isSubject===e.isSubject)return 0;if(i===1)return!pr(r.point,n[0])&&!pr(r.otherEvent.point,n[0])&&Ss(r,n[0],t),!pr(e.point,n[0])&&!pr(e.otherEvent.point,n[0])&&Ss(e,n[0],t),1;const s=[];let a=!1,o=!1;return pr(r.point,e.point)?a=!0:qs(r,e)===1?s.push(e,r):s.push(r,e),pr(r.otherEvent.point,e.otherEvent.point)?o=!0:qs(r.otherEvent,e.otherEvent)===1?s.push(e.otherEvent,r.otherEvent):s.push(r.otherEvent,e.otherEvent),a&&o||a?(e.type=CS,r.type=e.inOut===r.inOut?AS:RS,a&&!o&&Ss(s[1].otherEvent,s[0].point,t),2):o?(Ss(s[0],s[1].point,t),3):s[0]!==s[3].otherEvent?(Ss(s[0],s[1].point,t),Ss(s[1],s[2].point,t),3):(Ss(s[0],s[1].point,t),Ss(s[3].otherEvent,s[2].point,t),3)}function Tz(r,e){if(r===e)return 0;if(ym(r.point,r.otherEvent.point,e.point)!==0||ym(r.point,r.otherEvent.point,e.otherEvent.point)!==0)return pr(r.point,e.point)?r.isBelow(e.otherEvent.point)?-1:1:r.point[0]===e.point[0]?r.point[1]<e.point[1]?-1:1:qs(r,e)===1?e.isAbove(r.point)?-1:1:r.isBelow(e.point)?-1:1;if(r.isSubject===e.isSubject){let t=r.point,n=e.point;if(t[0]===n[0]&&t[1]===n[1])return t=r.otherEvent.point,n=e.otherEvent.point,t[0]===n[0]&&t[1]===n[1]?0:r.contourId>e.contourId?1:-1}else return r.isSubject?-1:1;return qs(r,e)===1?1:-1}function Ez(r,e,t,n,i,s){const a=new Lg(Tz),o=[],c=Math.min(n[2],i[2]);let l,h,u;for(;r.length!==0;){let d=r.pop();if(o.push(d),d.point[0]>c||s===$u)break;if(d.left){h=l=a.insert(d),u=a.minNode(),l!==u?l=a.prev(l):l=null,h=a.next(h);const f=l?l.key:null;let p;if(xc(d,f,s),h&&Wf(d,h.key,r)===2&&(xc(d,f,s),xc(d,h.key,s)),l&&Wf(l.key,d,r)===2){let g=l;g!==u?g=a.prev(g):g=null,p=g?g.key:null,xc(f,p,s),xc(d,f,s)}}else d=d.otherEvent,h=l=a.find(d),l&&h&&(l!==u?l=a.prev(l):l=null,h=a.next(h),a.remove(d),h&&l&&Wf(l.key,h.key,r))}return o}class Cz{constructor(){this.points=[],this.holeIds=[],this.holeOf=null,this.depth=null}isExterior(){return this.holeOf==null}}function Az(r){let e,t,n,i;const s=[];for(t=0,n=r.length;t<n;t++)e=r[t],(e.left&&e.inResult||!e.left&&e.otherEvent.inResult)&&s.push(e);let a=!1;for(;!a;)for(a=!0,t=0,n=s.length;t<n;t++)t+1<n&&qs(s[t],s[t+1])===1&&(i=s[t],s[t]=s[t+1],s[t+1]=i,a=!1);for(t=0,n=s.length;t<n;t++)e=s[t],e.otherPos=t;for(t=0,n=s.length;t<n;t++)e=s[t],e.left||(i=e.otherPos,e.otherPos=e.otherEvent.otherPos,e.otherEvent.otherPos=i);return s}function Rz(r,e,t,n){let i=r+1,s=e[r].point,a;const o=e.length;for(i<o&&(a=e[i].point);i<o&&a[0]===s[0]&&a[1]===s[1];){if(t[i])i++;else return i;a=e[i].point}for(i=r-1;t[i]&&i>n;)i--;return i}function Pz(r,e,t){const n=new Cz;if(r.prevInResult!=null){const i=r.prevInResult,s=i.outputContourId;if(i.resultTransition>0){const o=e[s];if(o.holeOf!=null){const c=o.holeOf;e[c].holeIds.push(t),n.holeOf=c,n.depth=e[s].depth}else e[s].holeIds.push(t),n.holeOf=s,n.depth=e[s].depth+1}else n.holeOf=null,n.depth=e[s].depth}else n.holeOf=null,n.depth=0;return n}function Iz(r){let e,t;const n=Az(r),i={},s=[];for(e=0,t=n.length;e<t;e++){if(i[e])continue;const a=s.length,o=Pz(n[e],s,a),c=d=>{i[d]=!0,n[d].outputContourId=a};let l=e,h=e;const u=n[e].point;for(o.points.push(u);c(l),l=n[l].otherPos,c(l),o.points.push(n[l].point),l=Rz(l,n,i,h),l!=h;);s.push(o)}return s}var Dg={exports:{}};Dg.exports=ol;Dg.exports.default=ol;function ol(r,e){if(!(this instanceof ol))return new ol(r,e);if(this.data=r||[],this.length=this.data.length,this.compare=e||Lz,this.length>0)for(var t=(this.length>>1)-1;t>=0;t--)this._down(t)}function Lz(r,e){return r<e?-1:r>e?1:0}ol.prototype={push:function(r){this.data.push(r),this.length++,this._up(this.length-1)},pop:function(){if(this.length!==0){var r=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),r}},peek:function(){return this.data[0]},_up:function(r){for(var e=this.data,t=this.compare,n=e[r];r>0;){var i=r-1>>1,s=e[i];if(t(n,s)>=0)break;e[r]=s,r=i}e[r]=n},_down:function(r){for(var e=this.data,t=this.compare,n=this.length>>1,i=e[r];r<n;){var s=(r<<1)+1,a=s+1,o=e[s];if(a<this.length&&t(e[a],o)<0&&(s=a,o=e[a]),t(o,i)>=0)break;e[r]=o,r=s}e[r]=i}};var Dz=Dg.exports;const ix=Math.max,rx=Math.min;let qh=0;function sx(r,e,t,n,i,s){let a,o,c,l,h,u;for(a=0,o=r.length-1;a<o;a++){if(c=r[a],l=r[a+1],h=new ko(c,!1,void 0,e),u=new ko(l,!1,h,e),h.otherEvent=u,c[0]===l[0]&&c[1]===l[1])continue;h.contourId=u.contourId=t,s||(h.isExteriorRing=!1,u.isExteriorRing=!1),qs(h,u)>0?u.left=!0:h.left=!0;const d=c[0],f=c[1];i[0]=rx(i[0],d),i[1]=rx(i[1],f),i[2]=ix(i[2],d),i[3]=ix(i[3],f),n.push(h),n.push(u)}}function Fz(r,e,t,n,i){const s=new Dz(null,qs);let a,o,c,l,h,u;for(c=0,l=r.length;c<l;c++)for(a=r[c],h=0,u=a.length;h<u;h++)o=h===0,o&&qh++,sx(a[h],!0,qh,s,t,o);for(c=0,l=e.length;c<l;c++)for(a=e[c],h=0,u=a.length;h<u;h++)o=h===0,o&&qh++,sx(a[h],!1,qh,s,n,o);return s}const ku=[];function Nz(r,e,t){let n=null;return r.length*e.length===0&&(n=ku),n}function Oz(r,e,t,n,i){let s=null;return(t[0]>n[2]||n[0]>t[2]||t[1]>n[3]||n[1]>t[3])&&(s=ku),s}function Uz(r,e,t){typeof r[0][0][0]=="number"&&(r=[r]),typeof e[0][0][0]=="number"&&(e=[e]);let n=Nz(r,e);if(n)return n===ku?null:n;const i=[1/0,1/0,-1/0,-1/0],s=[1/0,1/0,-1/0,-1/0],a=Fz(r,e,i,s);if(n=Oz(r,e,i,s),n)return n===ku?null:n;const o=Ez(a,r,e,i,s,t),c=Iz(o),l=[];for(let h=0;h<c.length;h++){let u=c[h];if(u.isExterior()){let d=[u.points];for(let f=0;f<u.holeIds.length;f++){let p=u.holeIds[f];d.push(c[p].points)}l.push(d)}}return l}function Bz(r,e){return Uz(r,e,Bu)}class IS extends Rg{constructor(){super(),this._subsampleThreshold=.005}_getPoleOfInaccessibility2d(e){return fz([e],.03)}_project(e,t){const n=this._createCamera(t.upVector().toArray(),t.unprojectSfM([0,0],0),t.unprojectSfM([0,0],10));return this._deunproject(e,t,n)}_subsample(e,t=this._subsampleThreshold){const n=[],i=e.length;for(let s=0;s<i;s++){const a=e[s],o=e[(s+1)%i];n.push(a);const c=Math.sqrt(Math.pow(o[0]-a[0],2)+Math.pow(o[1]-a[1],2)),l=Math.floor(c/t),h=1/(l+1);for(let u=1;u<=l;u++){const d=u*h,f=[(1-d)*a[0]+d*o[0],(1-d)*a[1]+d*o[1]];n.push(f)}}return n}_triangulate(e,t,n,i){let s=[e.slice(0,-1)];for(let h of n??[])s.push(h.slice(0,-1));let a=t.slice(0,-1);for(let h of i??[])a=a.concat(h.slice(0,-1));let o=J0.flatten(s),c=J0(o.vertices,o.holes,o.dimensions),l=[];for(let h=0;h<c.length;++h){let u=a[c[h]];l.push(u[0]),l.push(u[1]),l.push(u[2])}return l}_triangulateSpherical(e,t,n){const i=[];for(let c=0;c<3;c++)for(let l=0;l<3;l++){const h=c===0?-1e-9:1e-9,u=l===0?-1e-9:1e-9,d=c/3+h,f=l/3+u,p=(c+1)/3+1e-9,g=(l+1)/3+1e-9,_=[[d,f],[d,g],[p,g],[p,f],[d,f]],m=[(2*c+1)/(2*3),(2*l+1)/(2*3)];i.push(...this._triangulateSubarea(e,t,_,m,n))}return i}_unproject(e,t,n=200){return e.map(i=>t.unprojectBasic(i,n))}_createCamera(e,t,n){const i=new bl;return i.up.copy(new D().fromArray(e)),i.position.copy(new D().fromArray(t)),i.lookAt(new D().fromArray(n)),i.updateMatrix(),i.updateMatrixWorld(!0),i}_deunproject(e,t,n){return e.map(i=>{const s=t.unprojectBasic(i,1e4),a=new D(s[0],s[1],s[2]).applyMatrix4(n.matrixWorldInverse);return[a.x/a.z,a.y/a.z]})}_triangulateSubarea(e,t,n,i,s){const a=Bz([e,...t],[n]);if(!a)return[];const o=[],c=this._subsampleThreshold,l=this._createCamera(s.upVector().toArray(),s.unprojectSfM([0,0],0),s.unprojectBasic(i,10));for(const h of a){const u=this._subsample(h[0],c),d=this._deunproject(u,s,l),f=this._unproject(u,s),p=[],g=[];for(let _=1;_<h.length;_++){let m=this._subsample(h[_],c);const v=this._deunproject(m,s,l),y=this._unproject(m,s);p.push(v),g.push(y)}o.push(...this._triangulate(d,f,p,g))}return o}}class xi extends IS{constructor(e){if(super(),e.length!==4)throw new Tn("Rectangle needs to have four values.");if(e[1]>e[3])throw new Tn("Basic Y coordinates values can not be inverted.");for(let t of e)if(t<0||t>1)throw new Tn("Basic coordinates must be on the interval [0, 1].");this._anchorIndex=void 0,this._rect=e.slice(0,4),this._inverted=this._rect[0]>this._rect[2]}get anchorIndex(){return this._anchorIndex}get inverted(){return this._inverted}get rect(){return this._rect}initializeAnchorIndexing(e){if(this._anchorIndex!==void 0)throw new Tn("Anchor indexing is already initialized.");if(e<0||e>3)throw new Tn(`Invalid anchor index: ${e}.`);this._anchorIndex=e===void 0?0:e}terminateAnchorIndexing(){this._anchorIndex=void 0}setOppositeVertex2d(e,t){if(this._anchorIndex===void 0)throw new Tn("Anchor indexing needs to be initialized.");const n=[Math.max(0,Math.min(1,e[0])),Math.max(0,Math.min(1,e[1]))],i=this._rect.slice(),s=this._anchorIndex===0?[i[0],i[3]]:this._anchorIndex===1?[i[0],i[1]]:this._anchorIndex===2?[i[2],i[1]]:[i[2],i[3]];if(tt(t.cameraType)){const a=this._anchorIndex<2?n[0]-i[2]:n[0]-i[0];!this._inverted&&this._anchorIndex<2&&n[0]<.25&&i[2]>.75&&a<-.5?(this._inverted=!0,this._anchorIndex=s[1]>n[1]?0:1):!this._inverted&&this._anchorIndex>=2&&n[0]<.25&&i[2]>.75&&a<-.5?(this._inverted=!0,this._anchorIndex=s[1]>n[1]?0:1):this._inverted&&this._anchorIndex>=2&&n[0]<.25&&i[0]>.75&&a<-.5?(this._inverted=!1,s[0]>n[0]?this._anchorIndex=s[1]>n[1]?3:2:this._anchorIndex=s[1]>n[1]?0:1):!this._inverted&&this._anchorIndex>=2&&n[0]>.75&&i[0]<.25&&a>.5?(this._inverted=!0,this._anchorIndex=s[1]>n[1]?3:2):!this._inverted&&this._anchorIndex<2&&n[0]>.75&&i[0]<.25&&a>.5?(this._inverted=!0,this._anchorIndex=s[1]>n[1]?3:2):this._inverted&&this._anchorIndex<2&&n[0]>.75&&i[2]<.25&&a>.5?(this._inverted=!1,s[0]>n[0]?this._anchorIndex=s[1]>n[1]?3:2:this._anchorIndex=s[1]>n[1]?0:1):this._inverted&&this._anchorIndex<2&&n[0]>i[0]?(this._inverted=!1,this._anchorIndex=s[1]>n[1]?0:1):this._inverted&&this._anchorIndex>=2&&n[0]<i[2]?(this._inverted=!1,this._anchorIndex=s[1]>n[1]?3:2):this._inverted?this._anchorIndex<2?this._anchorIndex=s[1]>n[1]?0:1:this._anchorIndex=s[1]>n[1]?3:2:s[0]<=n[0]&&s[1]>n[1]?this._anchorIndex=0:s[0]<=n[0]&&s[1]<=n[1]?this._anchorIndex=1:s[0]>n[0]&&s[1]<=n[1]?this._anchorIndex=2:this._anchorIndex=3;const o=[];this._anchorIndex===0?(o[0]=s[0],o[1]=n[1],o[2]=n[0],o[3]=s[1]):this._anchorIndex===1?(o[0]=s[0],o[1]=s[1],o[2]=n[0],o[3]=n[1]):this._anchorIndex===2?(o[0]=n[0],o[1]=s[1],o[2]=s[0],o[3]=n[1]):(o[0]=n[0],o[1]=n[1],o[2]=s[0],o[3]=s[1]),(!this._inverted&&o[0]>o[2]||this._inverted&&o[0]<o[2])&&(o[0]=i[0],o[2]=i[2]),o[1]>o[3]&&(o[1]=i[1],o[3]=i[3]),this._rect[0]=o[0],this._rect[1]=o[1],this._rect[2]=o[2],this._rect[3]=o[3]}else{s[0]<=n[0]&&s[1]>n[1]?this._anchorIndex=0:s[0]<=n[0]&&s[1]<=n[1]?this._anchorIndex=1:s[0]>n[0]&&s[1]<=n[1]?this._anchorIndex=2:this._anchorIndex=3;const a=[];this._anchorIndex===0?(a[0]=s[0],a[1]=n[1],a[2]=n[0],a[3]=s[1]):this._anchorIndex===1?(a[0]=s[0],a[1]=s[1],a[2]=n[0],a[3]=n[1]):this._anchorIndex===2?(a[0]=n[0],a[1]=s[1],a[2]=s[0],a[3]=n[1]):(a[0]=n[0],a[1]=n[1],a[2]=s[0],a[3]=s[1]),a[0]>a[2]&&(a[0]=i[0],a[2]=i[2]),a[1]>a[3]&&(a[1]=i[1],a[3]=i[3]),this._rect[0]=a[0],this._rect[1]=a[1],this._rect[2]=a[2],this._rect[3]=a[3]}this._notifyChanged$.next(this)}setVertex2d(e,t,n){let i=this._rect.slice(),s=[Math.max(0,Math.min(1,t[0])),Math.max(0,Math.min(1,t[1]))],a=[];if(e===0?(a[0]=s[0],a[1]=i[1],a[2]=i[2],a[3]=s[1]):e===1?(a[0]=s[0],a[1]=s[1],a[2]=i[2],a[3]=i[3]):e===2?(a[0]=i[0],a[1]=s[1],a[2]=s[0],a[3]=i[3]):e===3&&(a[0]=i[0],a[1]=i[1],a[2]=s[0],a[3]=s[1]),tt(n.cameraType)){let o=e<2&&s[0]>.75&&i[0]<.25||e>=2&&this._inverted&&s[0]>.75&&i[2]<.25,c=e<2&&this._inverted&&s[0]<.25&&i[0]>.75||e>=2&&s[0]<.25&&i[2]>.75;o||c?this._inverted=!this._inverted:(a[0]-i[0]<-.25&&(a[0]=i[0]),a[2]-i[2]>.25&&(a[2]=i[2])),(!this._inverted&&a[0]>a[2]||this._inverted&&a[0]<a[2])&&(a[0]=i[0],a[2]=i[2])}else a[0]>a[2]&&(a[0]=i[0],a[2]=i[2]);a[1]>a[3]&&(a[1]=i[1],a[3]=i[3]),this._rect[0]=a[0],this._rect[1]=a[1],this._rect[2]=a[2],this._rect[3]=a[3],this._notifyChanged$.next(this)}setCentroid2d(e,t){let n=this._rect.slice(),i=n[0],s=this._inverted?n[2]+1:n[2],a=n[1],o=n[3],c=i+(s-i)/2,l=a+(o-a)/2,h=0;if(tt(t.cameraType))h=this._inverted?e[0]+1-c:e[0]-c;else{let p=-i,g=1-s;h=Math.max(p,Math.min(g,e[0]-c))}let u=-a,d=1-o,f=Math.max(u,Math.min(d,e[1]-l));this._rect[0]=n[0]+h,this._rect[1]=n[1]+f,this._rect[2]=n[2]+h,this._rect[3]=n[3]+f,this._rect[0]<0?(this._rect[0]+=1,this._inverted=!this._inverted):this._rect[0]>1&&(this._rect[0]-=1,this._inverted=!this._inverted),this._rect[2]<0?(this._rect[2]+=1,this._inverted=!this._inverted):this._rect[2]>1&&(this._rect[2]-=1,this._inverted=!this._inverted),this._notifyChanged$.next(this)}getPoints3d(e){return this._getPoints2d().map(t=>e.unprojectBasic(t,200))}getVertex2d(e){return this._rectToVertices2d(this._rect)[e]}getNonAdjustedVertex2d(e){return this._rectToNonAdjustedVertices2d(this._rect)[e]}getVertex3d(e,t){return t.unprojectBasic(this._rectToVertices2d(this._rect)[e],200)}getVertices2d(){return this._rectToVertices2d(this._rect)}getVertices3d(e){return this._rectToVertices2d(this._rect).map(t=>e.unprojectBasic(t,200))}getCentroid2d(){const e=this._rect,t=e[0],n=this._inverted?e[2]+1:e[2],i=e[1],s=e[3],a=(t+n)/2,o=(i+s)/2;return[a,o]}getCentroid3d(e){const t=this.getCentroid2d();return e.unprojectBasic(t,200)}getPoleOfInaccessibility2d(){return this._getPoleOfInaccessibility2d(this._rectToVertices2d(this._rect))}getPoleOfInaccessibility3d(e){let t=this._getPoleOfInaccessibility2d(this._rectToVertices2d(this._rect));return e.unprojectBasic(t,200)}getTriangles3d(e){return tt(e.cameraType)?[]:this._triangulate(this._project(this._getPoints2d(),e),this.getPoints3d(e))}validate(e){let t=this._rect;return!(!this._inverted&&e[0]<t[0]||e[0]-t[2]>.25||e[1]<t[1])}_getPoints2d(){let e=this._rectToVertices2d(this._rect),t=e.length-1,n=10,i=[];for(let s=0;s<t;++s){let a=e[s][0],o=e[s][1],c=e[s+1][0],l=e[s+1][1],h=(c-a)/(n-1),u=(l-o)/(n-1);for(let d=0;d<n;++d){let f=[a+d*h,o+d*u];i.push(f)}}return i}_rectToVertices2d(e){return[[e[0],e[3]],[e[0],e[1]],[this._inverted?e[2]+1:e[2],e[1]],[this._inverted?e[2]+1:e[2],e[3]],[e[0],e[3]]]}_rectToNonAdjustedVertices2d(e){return[[e[0],e[3]],[e[0],e[1]],[e[2],e[1]],[e[2],e[3]],[e[0],e[3]]]}}class $z extends bS{constructor(e,t,n,i){super(e,n,i),this._options={color:t.color==null?16777215:t.color,indicateCompleter:t.indicateCompleter==null?!0:t.indicateCompleter},this._rectGeometry=new xi(this._geometry.getRect2d(n)),this._createGlObjects()}create(){this._geometry.points.length<3||(this._geometry.removePoint2d(this._geometry.points.length-1),this._created$.next(this))}dispose(){super.dispose(),this._disposeObjects()}getDOMObjects(e,t){const n={offsetHeight:t.height,offsetWidth:t.width},i=[],s=this._geometry.getPoints2d(),a=s.length;for(let o=0;o<a-1;o++){const c=o,[l,h]=s[o],u=this._viewportCoords.basicToCanvasSafe(l,h,n,this._transform,e);if(!u)continue;const d=v=>{v.stopPropagation(),this._aborted$.next(this)},f=v=>{v.stopPropagation(),this._geometry.removePoint2d(c)},p=this._canvasToTransform(u),g={onclick:o===0&&a<3?d:f,style:{transform:p}};i.push(ve.h("div.mapillary-tag-interactor",g,[]));const m={style:{background:this._colorToBackground(this._options.color),transform:p}};i.push(ve.h("div.mapillary-tag-vertex",m,[]))}if(a>2&&this._options.indicateCompleter===!0){const[o,c]=this._geometry.getCentroid2d(this._transform),l=this._viewportCoords.basicToCanvasSafe(o,c,n,this._transform,e);if(l){const h=g=>{g.stopPropagation(),this._geometry.removePoint2d(this._geometry.points.length-1),this._created$.next(this)},u=this._canvasToTransform(l),d={onclick:h,style:{transform:u}};i.push(ve.h("div.mapillary-tag-completer.mapillary-tag-larger",d,[]));const f={style:{background:this._colorToBackground(this._options.color),transform:u}};i.push(ve.h("div.mapillary-tag-vertex.mapillary-tag-larger",f,[]));const p={style:{transform:u}};i.push(ve.h("div.mapillary-tag-dot",p,[]))}}return i}_onGeometryChanged(){this._disposeObjects(),this._rectGeometry=new xi(this._geometry.getRect2d(this._transform)),this._createGlObjects()}_createGlObjects(){this._glObjects=[];const e=this._rectGeometry.getPoints3d(this._transform);this._outline=this._createOutine(e,this._options.color),this._glObjects.push(this._outline)}_disposeObjects(){this._disposeLine(this._outline),this._outline=null,this._glObjects=null}}class Jr extends IS{constructor(e,t){super();let n=e.length;if(n<3)throw new Tn("A polygon must have three or more positions.");if(e[0][0]!==e[n-1][0]||e[0][1]!==e[n-1][1])throw new Tn("First and last positions must be equivalent.");this._polygon=[];for(let i of e){if(i[0]<0||i[0]>1||i[1]<0||i[1]>1)throw new Tn("Basic coordinates of polygon must be on the interval [0, 1].");this._polygon.push(i.slice())}if(this._holes=[],t!=null)for(let i=0;i<t.length;i++){let s=t[i],a=s.length;if(a<3)throw new Tn("A polygon hole must have three or more positions.");if(s[0][0]!==s[a-1][0]||s[0][1]!==s[a-1][1])throw new Tn("First and last positions of hole must be equivalent.");this._holes.push([]);for(let o of s){if(o[0]<0||o[0]>1||o[1]<0||o[1]>1)throw new Tn("Basic coordinates of hole must be on the interval [0, 1].");this._holes[i].push(o.slice())}}}get polygon(){return this._polygon}get holes(){return this._holes}addVertex2d(e){let t=[Math.max(0,Math.min(1,e[0])),Math.max(0,Math.min(1,e[1]))];this._polygon.splice(this._polygon.length-1,0,t),this._notifyChanged$.next(this)}getVertex2d(e){return this._polygon[e].slice()}removeVertex2d(e){if(e<0||e>=this._polygon.length||this._polygon.length<4)throw new Tn("Index for removed vertex must be valid.");if(e>0&&e<this._polygon.length-1)this._polygon.splice(e,1);else{this._polygon.splice(0,1),this._polygon.pop();let t=this._polygon[0].slice();this._polygon.push(t)}this._notifyChanged$.next(this)}setVertex2d(e,t,n){let i=[Math.max(0,Math.min(1,t[0])),Math.max(0,Math.min(1,t[1]))];e===0||e===this._polygon.length-1?(this._polygon[0]=i.slice(),this._polygon[this._polygon.length-1]=i.slice()):this._polygon[e]=i.slice(),this._notifyChanged$.next(this)}setCentroid2d(e,t){let n=this._polygon.map(_=>_[0]),i=this._polygon.map(_=>_[1]),s=Math.min.apply(Math,n),a=Math.max.apply(Math,n),o=Math.min.apply(Math,i),c=Math.max.apply(Math,i),l=this.getCentroid2d(),h=-s,u=1-a,d=-o,f=1-c,p=Math.max(h,Math.min(u,e[0]-l[0])),g=Math.max(d,Math.min(f,e[1]-l[1]));for(let _ of this._polygon)_[0]+=p,_[1]+=g;this._notifyChanged$.next(this)}getPoints3d(e){return this._getPoints3d(this._subsample(this._polygon),e)}getVertex3d(e,t){return t.unprojectBasic(this._polygon[e],200)}getVertices2d(){return this._polygon.slice()}getVertices3d(e){return this._getPoints3d(this._polygon,e)}getHolePoints3d(e){return this._holes.map(t=>this._getPoints3d(this._subsample(t),e))}getHoleVertices3d(e){return this._holes.map(t=>this._getPoints3d(t,e))}getCentroid2d(){let e=this._polygon,t=0,n=0,i=0;for(let s=0;s<e.length-1;s++){let a=e[s][0],o=e[s][1],c=e[s+1][0],l=e[s+1][1],h=a*l-c*o;t+=h,n+=(a+c)*h,i+=(o+l)*h}return t/=2,n/=6*t,i/=6*t,[n,i]}getCentroid3d(e){let t=this.getCentroid2d();return e.unprojectBasic(t,200)}get3dDomainTriangles3d(e){return this._triangulate(this._project(this._polygon,e),this.getVertices3d(e),this._holes.map(t=>this._project(t,e)),this.getHoleVertices3d(e))}getTriangles3d(e){if(tt(e.cameraType))return this._triangulateSpherical(this._polygon.slice(),this.holes.slice(),e);const t=this._project(this._subsample(this._polygon),e),n=this.getPoints3d(e),i=this._holes.map(a=>this._project(this._subsample(a),e)),s=this.getHolePoints3d(e);return this._triangulate(t,n,i,s)}getPoleOfInaccessibility2d(){return this._getPoleOfInaccessibility2d(this._polygon.slice())}getPoleOfInaccessibility3d(e){let t=this._getPoleOfInaccessibility2d(this._polygon.slice());return e.unprojectBasic(t,200)}_getPoints3d(e,t){return e.map(n=>t.unprojectBasic(n,200))}}class ax extends bS{constructor(e,t,n,i){super(e,n,i),this._options={color:t.color==null?16777215:t.color},this._createGlObjects()}create(){if(this._geometry instanceof xi)this._created$.next(this);else if(this._geometry instanceof Jr){const e=this._geometry;e.removeVertex2d(e.polygon.length-2),this._created$.next(this)}}dispose(){super.dispose(),this._disposeLine(this._outline),this._disposeObjects()}getDOMObjects(e,t){const n=[],i={offsetHeight:t.height,offsetWidth:t.width},s=a=>{a.stopPropagation(),this._aborted$.next(this)};if(this._geometry instanceof xi){const a=this._geometry.anchorIndex,o=a===void 0?1:a,[c,l]=this._geometry.getVertex2d(o),h=this._viewportCoords.basicToCanvasSafe(c,l,i,this._transform,e);if(h!=null){const u=this._colorToBackground(this._options.color),d=this._canvasToTransform(h),f={style:{background:u,transform:d}},p={onclick:s,style:{transform:d}};n.push(ve.h("div.mapillary-tag-interactor",p,[])),n.push(ve.h("div.mapillary-tag-vertex",f,[]))}}else if(this._geometry instanceof Jr){const a=this._geometry,[o,c]=a.getVertex2d(0),l=this._viewportCoords.basicToCanvasSafe(o,c,i,this._transform,e);if(l!=null){const u=a.polygon.length>4?g=>{g.stopPropagation(),a.removeVertex2d(a.polygon.length-2),this._created$.next(this)}:s,d=this._canvasToTransform(l),f={onclick:u,style:{transform:d}},p=a.polygon.length>4?"mapillary-tag-completer":"mapillary-tag-interactor";n.push(ve.h("div."+p,f,[]))}if(a.polygon.length>3){const[u,d]=a.getVertex2d(a.polygon.length-3),f=this._viewportCoords.basicToCanvasSafe(u,d,i,this._transform,e);if(f!=null){const p=m=>{m.stopPropagation(),a.removeVertex2d(a.polygon.length-3)},g=this._canvasToTransform(f),_={onclick:p,style:{transform:g}};n.push(ve.h("div.mapillary-tag-interactor",_,[]))}}const h=a.polygon.slice();h.splice(-2,2);for(const u of h){const d=this._viewportCoords.basicToCanvasSafe(u[0],u[1],i,this._transform,e);if(d!=null){const f=this._colorToBackground(this._options.color),p=this._canvasToTransform(d),g={style:{background:f,transform:p}};n.push(ve.h("div.mapillary-tag-vertex",g,[]))}}}return n}addPoint(e){if(this._geometry instanceof xi){if(!this._geometry.validate(e))return;this._created$.next(this)}else this._geometry instanceof Jr&&this._geometry.addVertex2d(e)}_onGeometryChanged(){this._disposeLine(this._outline),this._disposeObjects(),this._createGlObjects()}_disposeObjects(){this._outline=null,this._glObjects=[]}_createGlObjects(){const e=this._geometry instanceof xi?this._geometry.getPoints3d(this._transform):this._geometry.getVertices3d(this._transform);this._outline=this._createOutine(e,this._options.color),this._glObjects=[this._outline]}}class kz{constructor(e,t){this._component=e,this._navigator=t,this._tagOperation$=new De,this._createPoints$=new De,this._createPolygon$=new De,this._createRect$=new De,this._delete$=new De,this._tag$=this._tagOperation$.pipe(cn((n,i)=>i(n),null),vt()),this._replayedTag$=this._tag$.pipe(Ke(1),Ue()),this._replayedTag$.subscribe(),this._createPoints$.pipe(at(this._component.configuration$,this._navigator.stateService.currentTransform$),V(([n,i,s])=>()=>{const a=new Hk([[n[0],n[1]],[n[0],n[1]]]);return new $z(a,{color:i.createColor,indicateCompleter:i.indicatePointsCompleter},s)})).subscribe(this._tagOperation$),this._createRect$.pipe(at(this._component.configuration$,this._navigator.stateService.currentTransform$),V(([n,i,s])=>()=>{const a=new xi([n[0],n[1],n[0],n[1]]);return new ax(a,{color:i.createColor},s)})).subscribe(this._tagOperation$),this._createPolygon$.pipe(at(this._component.configuration$,this._navigator.stateService.currentTransform$),V(([n,i,s])=>()=>{const a=new Jr([[n[0],n[1]],[n[0],n[1]],[n[0],n[1]]]);return new ax(a,{color:i.createColor},s)})).subscribe(this._tagOperation$),this._delete$.pipe(V(()=>()=>null)).subscribe(this._tagOperation$)}get createRect$(){return this._createRect$}get createPolygon$(){return this._createPolygon$}get createPoints$(){return this._createPoints$}get delete$(){return this._delete$}get tag$(){return this._tag$}get replayedTag$(){return this._replayedTag$}}class zz{render(e,t,n,i,s){let a=[];for(const o of e)a=a.concat(o.getDOMObjects(n,i,s));return t!=null&&(a=a.concat(t.getDOMObjects(i,s))),ve.h("div.mapillary-tag-container",{},a)}clear(){return ve.h("div",{},[])}}class Vz{constructor(e,t){this._createTag=null,this._needsRender=!1,this._raycaster=t||new Pu,this._scene=e||new Zr,this._objectTags={},this._retrievableObjects=[],this._tags={}}get needsRender(){return this._needsRender}add(e){for(let t of e)t.tag.id in this._tags&&this._remove(t.tag.id),this._add(t);this._needsRender=!0}addCreateTag(e){for(const t of e.glObjects)this._scene.add(t);this._createTag={tag:e,objects:e.glObjects},this._needsRender=!0}clear(){for(const e of Object.keys(this._tags))this._remove(e);this._needsRender=!1}get(e){return this.has(e)?this._tags[e].tag:void 0}has(e){return e in this._tags}hasCreateTag(){return this._createTag!=null}intersectObjects([e,t],n){this._raycaster.setFromCamera(new Ne(e,t),n);const i=this._raycaster.intersectObjects(this._retrievableObjects),s=[];for(const a of i)a.object.uuid in this._objectTags&&s.push(this._objectTags[a.object.uuid]);return s}remove(e){for(const t of e)this._remove(t);this._needsRender=!0}removeAll(){for(const e of Object.keys(this._tags))this._remove(e);this._needsRender=!0}removeCreateTag(){if(this._createTag!=null){for(const e of this._createTag.objects)this._scene.remove(e);this._createTag.tag.dispose(),this._createTag=null,this._needsRender=!0}}render(e,t){t.render(this._scene,e),this._needsRender=!1}update(){this._needsRender=!0}updateCreateTagObjects(e){if(this._createTag.tag!==e)throw new Error("Create tags do not have the same reference.");for(let t of this._createTag.objects)this._scene.remove(t);for(const t of e.glObjects)this._scene.add(t);this._createTag.objects=e.glObjects,this._needsRender=!0}updateObjects(e){const t=e.tag.id;if(this._tags[t].tag!==e)throw new Error("Tags do not have the same reference.");const n=this._tags[t];this._removeObjects(n),delete this._tags[t],this._add(e),this._needsRender=!0}_add(e){const t=e.tag.id,n={tag:e,objects:[],retrievableObjects:[]};this._tags[t]=n;for(const i of e.getGLObjects())n.objects.push(i),this._scene.add(i);for(const i of e.getRetrievableObjects())n.retrievableObjects.push(i),this._retrievableObjects.push(i),this._objectTags[i.uuid]=e.tag.id}_remove(e){const t=this._tags[e];this._removeObjects(t),t.tag.dispose(),delete this._tags[e]}_removeObjects(e){for(const t of e.objects)this._scene.remove(t);for(const t of e.retrievableObjects){const n=this._retrievableObjects.indexOf(t);n!==-1&&this._retrievableObjects.splice(n,1)}}}var yo;(function(r){r[r.Default=0]="Default",r[r.CreatePoint=1]="CreatePoint",r[r.CreatePoints=2]="CreatePoints",r[r.CreatePolygon=3]="CreatePolygon",r[r.CreateRect=4]="CreateRect",r[r.CreateRectDrag=5]="CreateRectDrag"})(yo||(yo={}));var Pi;(function(r){r[r.None=0]="None",r[r.Centroid=1]="Centroid",r[r.Vertex=2]="Vertex"})(Pi||(Pi={}));class LS{constructor(e,t,n){this._tag=e,this._transform=t,this._viewportCoords=n||new ei,this._glObjectsChanged$=new De,this._interact$=new De}get glObjectsChanged$(){return this._glObjectsChanged$}get interact$(){return this._interact$}get tag(){return this._tag}}class DS extends LS{constructor(e,t){super(e,t),this._geometryChangedSubscription=this._tag.geometry.changed$.subscribe(()=>{this._onGeometryChanged()}),this._changedSubscription=this._tag.changed$.subscribe(()=>{this._onTagChanged()&&this._glObjectsChanged$.next(this)})}dispose(){this._changedSubscription.unsubscribe(),this._geometryChangedSubscription.unsubscribe()}_colorToCss(e){return"#"+("000000"+e.toString(16)).substr(-6)}_createFill(){let e=this._getTriangles(),t=new Float32Array(e),n=new kt;n.setAttribute("position",new Ct(t,3)),n.computeBoundingSphere();let i=new xl({side:si,transparent:!0});return this._updateFillMaterial(i),new sn(n,i)}_createLine(e){let t=this._getLinePositions(e),n=new kt;n.setAttribute("position",new Ct(t,3)),n.computeBoundingSphere();let i=new as;this._updateLineBasicMaterial(i);const s=new Sa(n,i);return s.renderOrder=1,s}_createOutline(){return this._createLine(this._getPoints3d())}_disposeFill(){this._fill!=null&&(this._fill.geometry.dispose(),this._fill.material.dispose(),this._fill=null)}_disposeOutline(){this._outline!=null&&(this._outline.geometry.dispose(),this._outline.material.dispose(),this._outline=null)}_getLinePositions(e){let t=e.length,n=new Float32Array(t*3);for(let i=0;i<t;++i){let s=3*i,a=e[i];n[s+0]=a[0],n[s+1]=a[1],n[s+2]=a[2]}return n}_interact(e,t,n){return i=>{let s=i.offsetX-i.target.offsetWidth/2,a=i.offsetY-i.target.offsetHeight/2;this._interact$.next({cursor:t,offsetX:s,offsetY:a,operation:e,tag:this._tag,vertexIndex:n})}}_updateFillGeometry(){let e=this._getTriangles(),t=new Float32Array(e),n=this._fill.geometry,i=n.getAttribute("position");i.array.length===t.length?(i.set(t),i.needsUpdate=!0):(n.deleteAttribute("position"),n.setAttribute("position",new Ct(t,3))),n.computeBoundingSphere()}_updateLine(e,t){let n=this._getLinePositions(t),i=e.geometry,s=i.getAttribute("position");s.set(n),s.needsUpdate=!0,i.computeBoundingSphere()}_updateOulineGeometry(){this._updateLine(this._outline,this._getPoints3d())}}class Hz extends DS{constructor(e,t){super(e,t),this._rectGeometry=new xi(this._tag.geometry.getRect2d(t)),this._fill=tt(t.cameraType)?null:this._createFill(),this._outline=this._tag.lineWidth>=1?this._createOutline():null}dispose(){super.dispose(),this._disposeFill(),this._disposeOutline()}getDOMObjects(e,t,n){const i=[],s={offsetHeight:n.height,offsetWidth:n.width};if(!this._tag.editable)return i;const a=this._colorToCss(this._tag.lineColor),o=this._tag.geometry.getPoints2d();for(let c=0;c<o.length;c++){const[l,h]=o[c],u=this._viewportCoords.basicToCanvasSafe(l,h,s,this._transform,t);if(u==null)continue;const d="crosshair",f=this._interact(Pi.Vertex,d,c),p=Math.round(u[0]),g=Math.round(u[1]),_=`translate(-50%, -50%) translate(${p}px,${g}px)`,m={onpointerdown:f,style:{background:a,transform:_,cursor:d}};if(i.push(ve.h("div.mapillary-tag-resizer",m,[])),!this._tag.indicateVertices)continue;const v={style:{background:a,transform:_}};i.push(ve.h("div.mapillary-tag-vertex",v,[]))}return i}getGLObjects(){const e=[];return this._fill!=null&&e.push(this._fill),this._outline!=null&&e.push(this._outline),e}getRetrievableObjects(){return this._fill!=null?[this._fill]:[]}_onGeometryChanged(){this._rectGeometry=new xi(this._tag.geometry.getRect2d(this._transform)),this._fill!=null&&this._updateFillGeometry(),this._outline!=null&&this._updateOulineGeometry()}_onTagChanged(){let e=!1;return this._fill!=null&&this._updateFillMaterial(this._fill.material),this._outline==null?this._tag.lineWidth>=1&&(this._outline=this._createOutline(),e=!0):this._updateOutlineMaterial(),e}_getPoints3d(){return this._rectGeometry.getPoints3d(this._transform)}_getTriangles(){return this._rectGeometry.getTriangles3d(this._transform)}_updateFillMaterial(e){e.color=new st(this._tag.fillColor),e.opacity=this._tag.fillOpacity,e.needsUpdate=!0}_updateLineBasicMaterial(e){e.color=new st(this._tag.lineColor),e.linewidth=Math.max(this._tag.lineWidth,1),e.visible=this._tag.lineWidth>=1&&this._tag.lineOpacity>0,e.opacity=this._tag.lineOpacity,e.transparent=this._tag.lineOpacity<1,e.needsUpdate=!0}_updateOutlineMaterial(){let e=this._outline.material;this._updateLineBasicMaterial(e)}}class Fg extends ud{constructor(e,t){super(),this._id=e,this._geometry=t,this._notifyChanged$=new De,this._notifyChanged$.subscribe(n=>{const i="tag",s={target:this,type:i};this.fire(i,s)}),this._geometry.changed$.subscribe(n=>{const i="geometry",s={target:this,type:i};this.fire(i,s)})}get id(){return this._id}get geometry(){return this._geometry}get changed$(){return this._notifyChanged$}get geometryChanged$(){return this._geometry.changed$.pipe(V(()=>this),vt())}fire(e,t){super.fire(e,t)}off(e,t){super.off(e,t)}on(e,t){super.on(e,t)}}class ox extends Fg{constructor(e,t,n){super(e,t),n=n||{},this._editable=n.editable==null?!1:n.editable,this._fillColor=n.fillColor==null?16777215:n.fillColor,this._fillOpacity=n.fillOpacity==null?0:n.fillOpacity,this._indicateVertices=n.indicateVertices==null?!0:n.indicateVertices,this._lineColor=n.lineColor==null?16777215:n.lineColor,this._lineOpacity=n.lineOpacity==null?1:n.lineOpacity,this._lineWidth=n.lineWidth==null?1:n.lineWidth}get editable(){return this._editable}set editable(e){this._editable=e,this._notifyChanged$.next(this)}get fillColor(){return this._fillColor}set fillColor(e){this._fillColor=e,this._notifyChanged$.next(this)}get fillOpacity(){return this._fillOpacity}set fillOpacity(e){this._fillOpacity=e,this._notifyChanged$.next(this)}get geometry(){return this._geometry}get indicateVertices(){return this._indicateVertices}set indicateVertices(e){this._indicateVertices=e,this._notifyChanged$.next(this)}get lineColor(){return this._lineColor}set lineColor(e){this._lineColor=e,this._notifyChanged$.next(this)}get lineOpacity(){return this._lineOpacity}set lineOpacity(e){this._lineOpacity=e,this._notifyChanged$.next(this)}get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this._notifyChanged$.next(this)}setOptions(e){this._editable=e.editable==null?this._editable:e.editable,this._indicateVertices=e.indicateVertices==null?this._indicateVertices:e.indicateVertices,this._lineColor=e.lineColor==null?this._lineColor:e.lineColor,this._lineWidth=e.lineWidth==null?this._lineWidth:e.lineWidth,this._fillColor=e.fillColor==null?this._fillColor:e.fillColor,this._fillOpacity=e.fillOpacity==null?this._fillOpacity:e.fillOpacity,this._notifyChanged$.next(this)}}var zo;(function(r){r[r.TwoDimensional=0]="TwoDimensional",r[r.ThreeDimensional=1]="ThreeDimensional"})(zo||(zo={}));class Gz extends DS{constructor(e,t){super(e,t),this._fill=tt(t.cameraType)?e.domain===zo.TwoDimensional&&e.geometry instanceof Jr?this._createFill():null:this._createFill(),this._holes=this._tag.lineWidth>=1?this._createHoles():[],this._outline=this._tag.lineWidth>=1?this._createOutline():null}dispose(){super.dispose(),this._disposeFill(),this._disposeHoles(),this._disposeOutline()}getDOMObjects(e,t,n){const i=[],s=this._tag.geometry instanceof xi,a=!tt(this._transform.cameraType),o={offsetHeight:n.height,offsetWidth:n.width};if(this._tag.icon!=null&&(s||a)){const[h,u]=this._tag.geometry instanceof xi?this._tag.geometry.getVertex2d(this._tag.iconIndex):this._tag.geometry.getPoleOfInaccessibility2d(),d=this._viewportCoords.basicToCanvasSafe(h,u,o,this._transform,t);if(d!=null){const f=()=>{this._interact$.next({offsetX:0,offsetY:0,operation:Pi.None,tag:this._tag})};if(e.loaded){const p=e.getDOMSprite(this._tag.icon,this._tag.iconFloat),g=Math.round(d[0]),_=Math.round(d[1]),m=`translate(${g}px,${_}px)`,y={onclick:x=>{x.stopPropagation(),this._tag.click$.next(this._tag)},onpointerdown:f,style:{transform:m}};i.push(ve.h("div.mapillary-tag-symbol",y,[p]))}}}else if(this._tag.text!=null&&(s||a)){const[h,u]=this._tag.geometry instanceof xi?this._tag.geometry.getVertex2d(3):this._tag.geometry.getPoleOfInaccessibility2d(),d=this._viewportCoords.basicToCanvasSafe(h,u,o,this._transform,t);if(d!=null){const f=Math.round(d[0]),p=Math.round(d[1]),g=this._tag.geometry instanceof xi?`translate(${f}px,${p}px)`:`translate(-50%, -50%) translate(${f}px,${p}px)`,m={onpointerdown:()=>{this._interact$.next({offsetX:0,offsetY:0,operation:Pi.None,tag:this._tag})},style:{color:this._colorToCss(this._tag.textColor),transform:g},textContent:this._tag.text};i.push(ve.h("span.mapillary-tag-symbol",m,[]))}}if(!this._tag.editable)return i;const c=this._colorToCss(this._tag.lineColor);if(this._tag.geometry instanceof xi){const[h,u]=this._tag.geometry.getCentroid2d(),d=this._viewportCoords.basicToCanvasSafe(h,u,o,this._transform,t);if(d!=null){const f=this._interact(Pi.Centroid,"move"),p=Math.round(d[0]),g=Math.round(d[1]),_=`translate(-50%, -50%) translate(${p}px,${g}px)`,m={onpointerdown:f,style:{background:c,transform:_}};i.push(ve.h("div.mapillary-tag-mover",m,[]))}}const l=this._tag.geometry.getVertices2d();for(let h=0;h<l.length-1;h++){if(s&&(this._tag.icon!=null&&h===this._tag.iconIndex||this._tag.icon==null&&this._tag.text!=null&&h===3))continue;const[u,d]=l[h],f=this._viewportCoords.basicToCanvasSafe(u,d,o,this._transform,t);if(f==null)continue;const p=s?h%2===0?"nesw-resize":"nwse-resize":"crosshair",g=this._interact(Pi.Vertex,p,h),_=Math.round(f[0]),m=Math.round(f[1]),v=`translate(-50%, -50%) translate(${_}px,${m}px)`,y={onpointerdown:g,style:{background:c,transform:v,cursor:p}};if(i.push(ve.h("div.mapillary-tag-resizer",y,[])),!this._tag.indicateVertices)continue;const x={style:{background:c,transform:v}};i.push(ve.h("div.mapillary-tag-vertex",x,[]))}return i}getGLObjects(){const e=[];this._fill!=null&&e.push(this._fill);for(const t of this._holes)e.push(t);return this._outline!=null&&e.push(this._outline),e}getRetrievableObjects(){return this._fill!=null?[this._fill]:[]}_onGeometryChanged(){this._fill!=null&&this._updateFillGeometry(),this._holes.length>0&&this._updateHoleGeometries(),this._outline!=null&&this._updateOulineGeometry()}_onTagChanged(){let e=!1;return this._fill!=null&&this._updateFillMaterial(this._fill.material),this._outline==null?this._tag.lineWidth>=1&&(this._holes=this._createHoles(),this._outline=this._createOutline(),e=!0):(this._updateHoleMaterials(),this._updateOutlineMaterial()),e}_getPoints3d(){return this._in3dDomain()?this._tag.geometry.getVertices3d(this._transform):this._tag.geometry.getPoints3d(this._transform)}_getTriangles(){return this._in3dDomain()?this._tag.geometry.get3dDomainTriangles3d(this._transform):this._tag.geometry.getTriangles3d(this._transform)}_updateFillMaterial(e){e.color=new st(this._tag.fillColor),e.opacity=this._tag.fillOpacity,e.needsUpdate=!0}_updateLineBasicMaterial(e){e.color=new st(this._tag.lineColor),e.linewidth=Math.max(this._tag.lineWidth,1),e.visible=this._tag.lineWidth>=1&&this._tag.lineOpacity>0,e.opacity=this._tag.lineOpacity,e.transparent=this._tag.lineOpacity<1,e.needsUpdate=!0}_createHoles(){let e=[];if(this._tag.geometry instanceof Jr){let t=this._getHoles3d();for(let n of t){let i=this._createLine(n);e.push(i)}}return e}_disposeHoles(){for(let e of this._holes)e.geometry.dispose(),e.material.dispose();this._holes=[]}_getHoles3d(){const e=this._tag.geometry;return this._in3dDomain()?e.getHoleVertices3d(this._transform):e.getHolePoints3d(this._transform)}_in3dDomain(){return this._tag.geometry instanceof Jr&&this._tag.domain===zo.ThreeDimensional}_updateHoleGeometries(){let e=this._getHoles3d();if(e.length!==this._holes.length)throw new Error("Changing the number of holes is not supported.");for(let t=0;t<this._holes.length;t++){let n=e[t],i=this._holes[t];this._updateLine(i,n)}}_updateHoleMaterials(){for(const e of this._holes)this._updateLineBasicMaterial(e.material)}_updateOutlineMaterial(){this._updateLineBasicMaterial(this._outline.material)}}var gn;(function(r){r[r.Bottom=0]="Bottom",r[r.BottomLeft=1]="BottomLeft",r[r.BottomRight=2]="BottomRight",r[r.Center=3]="Center",r[r.Left=4]="Left",r[r.Right=5]="Right",r[r.Top=6]="Top",r[r.TopLeft=7]="TopLeft",r[r.TopRight=8]="TopRight"})(gn||(gn={}));class cx extends Fg{constructor(e,t,n){super(e,t),n=n||{};const i=n.domain!=null&&t instanceof Jr?n.domain:zo.TwoDimensional,s=this._twoDimensionalPolygon(i,t);this._domain=i,this._editable=n.editable==null||s?!1:n.editable,this._fillColor=n.fillColor==null?16777215:n.fillColor,this._fillOpacity=n.fillOpacity==null?0:n.fillOpacity,this._icon=n.icon===void 0?null:n.icon,this._iconFloat=n.iconFloat==null?gn.Center:n.iconFloat,this._iconIndex=n.iconIndex==null?3:n.iconIndex,this._indicateVertices=n.indicateVertices==null?!0:n.indicateVertices,this._lineColor=n.lineColor==null?16777215:n.lineColor,this._lineOpacity=n.lineOpacity==null?1:n.lineOpacity,this._lineWidth=n.lineWidth==null?1:n.lineWidth,this._text=n.text===void 0?null:n.text,this._textColor=n.textColor==null?16777215:n.textColor,this._click$=new De,this._click$.subscribe(()=>{const a="click",o={target:this,type:a};this.fire(a,o)})}get click$(){return this._click$}get domain(){return this._domain}get editable(){return this._editable}set editable(e){this._twoDimensionalPolygon(this._domain,this._geometry)||(this._editable=e,this._notifyChanged$.next(this))}get fillColor(){return this._fillColor}set fillColor(e){this._fillColor=e,this._notifyChanged$.next(this)}get fillOpacity(){return this._fillOpacity}set fillOpacity(e){this._fillOpacity=e,this._notifyChanged$.next(this)}get geometry(){return this._geometry}get icon(){return this._icon}set icon(e){this._icon=e,this._notifyChanged$.next(this)}get iconFloat(){return this._iconFloat}set iconFloat(e){this._iconFloat=e,this._notifyChanged$.next(this)}get iconIndex(){return this._iconIndex}set iconIndex(e){this._iconIndex=e,this._notifyChanged$.next(this)}get indicateVertices(){return this._indicateVertices}set indicateVertices(e){this._indicateVertices=e,this._notifyChanged$.next(this)}get lineColor(){return this._lineColor}set lineColor(e){this._lineColor=e,this._notifyChanged$.next(this)}get lineOpacity(){return this._lineOpacity}set lineOpacity(e){this._lineOpacity=e,this._notifyChanged$.next(this)}get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this._notifyChanged$.next(this)}get text(){return this._text}set text(e){this._text=e,this._notifyChanged$.next(this)}get textColor(){return this._textColor}set textColor(e){this._textColor=e,this._notifyChanged$.next(this)}fire(e,t){super.fire(e,t)}off(e,t){super.off(e,t)}on(e,t){super.on(e,t)}setOptions(e){const t=this._twoDimensionalPolygon(this._domain,this._geometry);this._editable=t||e.editable==null?this._editable:e.editable,this._icon=e.icon===void 0?this._icon:e.icon,this._iconFloat=e.iconFloat==null?this._iconFloat:e.iconFloat,this._iconIndex=e.iconIndex==null?this._iconIndex:e.iconIndex,this._indicateVertices=e.indicateVertices==null?this._indicateVertices:e.indicateVertices,this._lineColor=e.lineColor==null?this._lineColor:e.lineColor,this._lineWidth=e.lineWidth==null?this._lineWidth:e.lineWidth,this._fillColor=e.fillColor==null?this._fillColor:e.fillColor,this._fillOpacity=e.fillOpacity==null?this._fillOpacity:e.fillOpacity,this._text=e.text===void 0?this._text:e.text,this._textColor=e.textColor==null?this._textColor:e.textColor,this._notifyChanged$.next(this)}_twoDimensionalPolygon(e,t){return e!==zo.ThreeDimensional&&t instanceof Jr}}class Wz extends LS{dispose(){}getDOMObjects(e,t,n){const i=this._tag,s={offsetHeight:n.height,offsetWidth:n.width},a=[],[o,c]=i.geometry.getCentroid2d(),l=this._viewportCoords.basicToCanvasSafe(o,c,s,this._transform,t);if(l!=null){const h=m=>{this._interact$.next({offsetX:0,offsetY:0,operation:Pi.None,tag:i})},u=Math.round(l[0]),d=Math.round(l[1]);if(i.icon!=null){if(e.loaded){const m=e.getDOMSprite(i.icon,gn.Bottom),v=`translate(${u}px,${d+8}px)`,y={onpointerdown:h,style:{pointerEvents:"all",transform:v}};a.push(ve.h("div",y,[m]))}}else if(i.text!=null){const m=`translate(-50%,0%) translate(${u}px,${d+8}px)`,v={onpointerdown:h,style:{color:this._colorToCss(i.textColor),transform:m},textContent:i.text};a.push(ve.h("span.mapillary-tag-symbol",v,[]))}const f=this._interact(Pi.Centroid,i,"move"),p=this._colorToCss(i.color),g=`translate(-50%,-50%) translate(${u}px,${d}px)`;if(i.editable){let m={onpointerdown:f,style:{background:p,transform:g}};a.push(ve.h("div.mapillary-tag-spot-interactor",m,[]))}const _={style:{background:p,transform:g}};a.push(ve.h("div.mapillary-tag-vertex",_,[]))}return a}getGLObjects(){return[]}getRetrievableObjects(){return[]}_colorToCss(e){return"#"+("000000"+e.toString(16)).substr(-6)}_interact(e,t,n,i){return s=>{const a=s.offsetX-s.target.offsetWidth/2,o=s.offsetY-s.target.offsetHeight/2;this._interact$.next({cursor:n,offsetX:a,offsetY:o,operation:e,tag:t,vertexIndex:i})}}}class lx extends Fg{constructor(e,t,n){super(e,t),n=n||{},this._color=n.color==null?16777215:n.color,this._editable=n.editable==null?!1:n.editable,this._icon=n.icon===void 0?null:n.icon,this._text=n.text===void 0?null:n.text,this._textColor=n.textColor==null?16777215:n.textColor}get color(){return this._color}set color(e){this._color=e,this._notifyChanged$.next(this)}get editable(){return this._editable}set editable(e){this._editable=e,this._notifyChanged$.next(this)}get icon(){return this._icon}set icon(e){this._icon=e,this._notifyChanged$.next(this)}get text(){return this._text}set text(e){this._text=e,this._notifyChanged$.next(this)}get textColor(){return this._textColor}set textColor(e){this._textColor=e,this._notifyChanged$.next(this)}setOptions(e){this._color=e.color==null?this._color:e.color,this._editable=e.editable==null?this._editable:e.editable,this._icon=e.icon===void 0?this._icon:e.icon,this._text=e.text===void 0?this._text:e.text,this._textColor=e.textColor==null?this._textColor:e.textColor,this._notifyChanged$.next(this)}}class qz{constructor(){this._active=!1,this._hash={},this._hashDeactivated={},this._notifyChanged$=new De}get active(){return this._active}get changed$(){return this._notifyChanged$}activate(e){if(!this._active){for(const t in this._hashDeactivated){if(!this._hashDeactivated.hasOwnProperty(t))continue;const n=this._hashDeactivated[t];this._add(n,e)}this._hashDeactivated={},this._active=!0,this._notifyChanged$.next(this)}}deactivate(){if(this._active){for(const e in this._hash)this._hash.hasOwnProperty(e)&&(this._hashDeactivated[e]=this._hash[e].tag);this._hash={},this._active=!1}}add(e,t){this._assertActivationState(!0);for(const n of e)this._add(n,t);this._notifyChanged$.next(this)}addDeactivated(e){this._assertActivationState(!1);for(const t of e){if(!(t instanceof cx||t instanceof lx||t instanceof ox))throw new Error("Tag type not supported");this._hashDeactivated[t.id]=t}}get(e){return this.has(e)?this._hash[e]:void 0}getAll(){const e=this._hash;return Object.keys(e).map(t=>e[t])}getAllDeactivated(){const e=this._hashDeactivated;return Object.keys(e).map(t=>e[t])}getDeactivated(e){return this.hasDeactivated(e)?this._hashDeactivated[e]:void 0}has(e){return e in this._hash}hasDeactivated(e){return e in this._hashDeactivated}remove(e){this._assertActivationState(!0);const t=this._hash;for(const n of e)n in t&&delete t[n];this._notifyChanged$.next(this)}removeAll(){this._assertActivationState(!0),this._hash={},this._notifyChanged$.next(this)}removeAllDeactivated(){this._assertActivationState(!1),this._hashDeactivated={}}removeDeactivated(e){this._assertActivationState(!1);const t=this._hashDeactivated;for(const n of e)n in t&&delete t[n]}_add(e,t){if(e instanceof cx)this._hash[e.id]=new Gz(e,t);else if(e instanceof lx)this._hash[e.id]=new Wz(e,t);else if(e instanceof ox)this._hash[e.id]=new Hz(e,t);else throw new Error("Tag type not supported")}_assertActivationState(e){if(e!==this._active)throw new Error("Tag set not in correct state for operation.")}}class jz extends Rg{constructor(e){super();let t=e[0],n=e[1];if(t<0||t>1||n<0||n>1)throw new Tn("Basic coordinates must be on the interval [0, 1].");this._point=e.slice()}get point(){return this._point}getCentroid2d(){return this._point.slice()}getCentroid3d(e){return e.unprojectBasic(this._point,200)}setCentroid2d(e,t){let n=[Math.max(0,Math.min(1,e[0])),Math.max(0,Math.min(1,e[1]))];this._point[0]=n[0],this._point[1]=n[1],this._notifyChanged$.next(this)}}class FS extends Er{constructor(e,t,n,i){super(e,t,n),this._name=`${this._component.name}-${this._getNameExtension()}`,this._viewportCoords=i}_getConfiguration(e){return{}}_mouseEventToBasic(e,t,n,i,s,a){s=s??0,a=a??0;const[o,c]=this._viewportCoords.canvasPosition(e,t);return this._viewportCoords.canvasToBasic(o-s,c-a,t,i,n.perspective)}}class Ng extends FS{constructor(e,t,n,i,s){super(e,t,n,i),this._tagCreator=s,this._geometryCreated$=new De}get geometryCreated$(){return this._geometryCreated$}_enable(){this._enableCreate(),this._container.container.classList.add("component-tag-create")}_disable(){this._container.container.classList.remove("component-tag-create"),this._disableCreate()}_validateBasic(e){const t=e[0],n=e[1];return 0<=t&&t<=1&&0<=n&&n<=1}_mouseEventToBasic$(e){return e.pipe(at(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$),V(([t,n,i])=>this._mouseEventToBasic(t,this._container.container,n,i)))}}class Xz extends Ng{_enableCreate(){this._container.mouseService.deferPixels(this._name,4),this._geometryCreatedSubscription=this._mouseEventToBasic$(this._container.mouseService.proximateClick$).pipe(Fe(this._validateBasic),V(e=>new jz(e))).subscribe(this._geometryCreated$)}_disableCreate(){this._container.mouseService.undeferPixels(this._name),this._geometryCreatedSubscription.unsubscribe()}_getNameExtension(){return"create-point"}}class Og extends Ng{_enableCreate(){this._container.mouseService.deferPixels(this._name,4);const e=this._navigator.stateService.currentTransform$.pipe(V(()=>{}),Ke(1),Ue());this._deleteSubscription=e.pipe(In(1)).subscribe(this._tagCreator.delete$);const t=this._mouseEventToBasic$(this._container.mouseService.proximateClick$).pipe(vt());this._createSubscription=e.pipe(we(()=>t.pipe(Fe(this._validateBasic),Hi(1)))).subscribe(this._create$),this._setVertexSubscription=this._tagCreator.tag$.pipe(we(n=>n?He(Ze(n),xt(this._container.mouseService.mouseMove$,this._container.mouseService.domMouseMove$),this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$):rt())).subscribe(([n,i,s,a])=>{const o=this._mouseEventToBasic(i,this._container.container,s,a);this._setVertex2d(n,o,a)}),this._addPointSubscription=this._tagCreator.tag$.pipe(we(n=>n?He(Ze(n),t):rt())).subscribe(([n,i])=>{this._addPoint(n,i)}),this._geometryCreateSubscription=this._tagCreator.tag$.pipe(we(n=>n?n.created$.pipe(V(i=>i.geometry)):rt())).subscribe(this._geometryCreated$)}_disableCreate(){this._container.mouseService.undeferPixels(this._name),this._tagCreator.delete$.next(null),this._addPointSubscription.unsubscribe(),this._createSubscription.unsubscribe(),this._deleteSubscription.unsubscribe(),this._geometryCreateSubscription.unsubscribe(),this._setVertexSubscription.unsubscribe()}}class Yz extends Og{get _create$(){return this._tagCreator.createPoints$}_addPoint(e,t){e.geometry.addPoint2d(t)}_getNameExtension(){return"create-points"}_setVertex2d(e,t,n){e.geometry.setPoint2d(e.geometry.points.length-1,t,n)}}class Zz extends Og{get _create$(){return this._tagCreator.createPolygon$}_addPoint(e,t){e.addPoint(t)}_getNameExtension(){return"create-polygon"}_setVertex2d(e,t,n){e.geometry.setVertex2d(e.geometry.polygon.length-2,t,n)}}class Kz extends Og{get _create$(){return this._tagCreator.createRect$}_addPoint(e,t){const n=e.geometry;n.validate(t)||(t=n.getNonAdjustedVertex2d(3)),e.addPoint(t)}_enable(){super._enable(),this._initializeAnchorIndexingSubscription=this._tagCreator.tag$.pipe(Fe(e=>!!e)).subscribe(e=>{e.geometry.initializeAnchorIndexing()})}_disable(){super._disable(),this._initializeAnchorIndexingSubscription.unsubscribe()}_getNameExtension(){return"create-rect"}_setVertex2d(e,t,n){e.geometry.setOppositeVertex2d(t,n)}}class Jz extends Ng{_enableCreate(){this._container.mouseService.claimMouse(this._name,2),this._deleteSubscription=this._navigator.stateService.currentTransform$.pipe(V(n=>null),In(1)).subscribe(this._tagCreator.delete$),this._createSubscription=this._mouseEventToBasic$(this._container.mouseService.filtered$(this._name,this._container.mouseService.mouseDragStart$)).pipe(Fe(this._validateBasic)).subscribe(this._tagCreator.createRect$),this._initializeAnchorIndexingSubscription=this._tagCreator.tag$.pipe(Fe(n=>!!n)).subscribe(n=>{n.geometry.initializeAnchorIndexing()});const e=He(xt(this._container.mouseService.filtered$(this._name,this._container.mouseService.mouseMove$),this._container.mouseService.filtered$(this._name,this._container.mouseService.domMouseMove$)),this._container.renderService.renderCamera$).pipe(at(this._navigator.stateService.currentTransform$),V(([[n,i],s])=>this._mouseEventToBasic(n,this._container.container,i,s)));this._setVertexSubscription=this._tagCreator.tag$.pipe(we(n=>n?He(Ze(n),e,this._navigator.stateService.currentTransform$):rt())).subscribe(([n,i,s])=>{n.geometry.setOppositeVertex2d(i,s)});const t=this._container.mouseService.mouseDragEnd$.pipe(at(this._mouseEventToBasic$(this._container.mouseService.filtered$(this._name,this._container.mouseService.mouseDrag$)).pipe(Fe(this._validateBasic)),(n,i)=>i),vt());this._addPointSubscription=this._tagCreator.tag$.pipe(we(n=>n?He(Ze(n),t):rt())).subscribe(([n,i])=>{const s=n.geometry;s.validate(i)||(i=s.getNonAdjustedVertex2d(3)),n.addPoint(i)}),this._geometryCreatedSubscription=this._tagCreator.tag$.pipe(we(n=>n?n.created$.pipe(V(i=>i.geometry)):rt())).subscribe(this._geometryCreated$)}_disableCreate(){this._container.mouseService.unclaimMouse(this._name),this._tagCreator.delete$.next(null),this._addPointSubscription.unsubscribe(),this._createSubscription.unsubscribe(),this._deleteSubscription.unsubscribe(),this._geometryCreatedSubscription.unsubscribe(),this._initializeAnchorIndexingSubscription.unsubscribe(),this._setVertexSubscription.unsubscribe()}_getNameExtension(){return"create-rect-drag"}}class Qz extends FS{constructor(e,t,n,i,s){super(e,t,n,i),this._tagSet=s}_enable(){const e=this._tagSet.changed$.pipe(V(t=>t.getAll()),we(t=>on(t).pipe(ct(n=>n.interact$))),we(t=>Wi(Ze(t),this._container.mouseService.documentMouseUp$.pipe(V(()=>({offsetX:0,offsetY:0,operation:Pi.None,tag:null})),Ve()))),vt());xt(this._container.mouseService.mouseMove$,this._container.mouseService.domMouseMove$).pipe(vt()),this._claimMouseSubscription=e.pipe(we(t=>t.tag?this._container.mouseService.domMouseDragStart$:rt())).subscribe(()=>{this._container.mouseService.claimMouse(this._name,3)}),this._cursorSubscription=e.pipe(V(t=>t.cursor),Be()).subscribe(t=>{const n=["crosshair","move","nesw-resize","nwse-resize"];for(const i of n)this._container.container.classList.remove(`component-tag-edit-${i}`);t&&this._container.container.classList.add(`component-tag-edit-${t}`)}),this._unclaimMouseSubscription=this._container.mouseService.filtered$(this._name,this._container.mouseService.domMouseDragEnd$).subscribe(t=>{this._container.mouseService.unclaimMouse(this._name)}),this._preventDefaultSubscription=e.pipe(we(t=>t.tag?this._container.mouseService.documentMouseMove$:rt())).subscribe(t=>{t.preventDefault()}),this._updateGeometrySubscription=e.pipe(we(t=>{if(t.operation===Pi.None||!t.tag)return rt();const n=this._container.mouseService.filtered$(this._name,this._container.mouseService.domMouseDrag$).pipe(Fe(i=>this._viewportCoords.insideElement(i,this._container.container)));return He(n,this._container.renderService.renderCamera$).pipe(at(Ze(t),this._navigator.stateService.currentTransform$,([i,s],a,o)=>[i,s,a,o]))})).subscribe(([t,n,i,s])=>{const a=this._mouseEventToBasic(t,this._container.container,n,s,i.offsetX,i.offsetY),o=i.tag.geometry;i.operation===Pi.Centroid?o.setCentroid2d(a,s):i.operation===Pi.Vertex&&o.setVertex2d(i.vertexIndex,a,s)})}_disable(){this._claimMouseSubscription.unsubscribe(),this._cursorSubscription.unsubscribe(),this._preventDefaultSubscription.unsubscribe(),this._unclaimMouseSubscription.unsubscribe(),this._updateGeometrySubscription.unsubscribe()}_getNameExtension(){return"edit-vertex"}}class NS extends Wn{constructor(e,t,n){super(e,t,n),this._tagDomRenderer=new zz,this._tagScene=new Vz,this._tagSet=new qz,this._tagCreator=new kz(this,n),this._viewportCoords=new ei,this._createHandlers={CreatePoint:new Xz(this,t,n,this._viewportCoords,this._tagCreator),CreatePoints:new Yz(this,t,n,this._viewportCoords,this._tagCreator),CreatePolygon:new Zz(this,t,n,this._viewportCoords,this._tagCreator),CreateRect:new Kz(this,t,n,this._viewportCoords,this._tagCreator),CreateRectDrag:new Jz(this,t,n,this._viewportCoords,this._tagCreator),Default:void 0},this._editVertexHandler=new Qz(this,t,n,this._viewportCoords,this._tagSet),this._renderTags$=this._tagSet.changed$.pipe(V(i=>{const s=i.getAll();return s.sort((a,o)=>{const c=a.tag.id,l=o.tag.id;return c<l?-1:c>l?1:0}),s}),vt()),this._tagChanged$=this._renderTags$.pipe(we(i=>on(i).pipe(ct(s=>xt(s.tag.changed$,s.tag.geometryChanged$)))),vt()),this._renderTagGLChanged$=this._renderTags$.pipe(we(i=>on(i).pipe(ct(s=>s.glObjectsChanged$))),vt()),this._createGeometryChanged$=this._tagCreator.tag$.pipe(we(i=>i!=null?i.geometryChanged$:rt()),vt()),this._createGLObjectsChanged$=this._tagCreator.tag$.pipe(we(i=>i!=null?i.glObjectsChanged$:rt()),vt()),this._creatingConfiguration$=this._configuration$.pipe(Be((i,s)=>i.mode===s.mode,i=>({createColor:i.createColor,mode:i.mode})),Ke(1),Ue()),this._creatingConfiguration$.subscribe(i=>{const s="tagmode",a={mode:i.mode,target:this,type:s};this.fire(s,a)})}add(e){this._activated?this._navigator.stateService.currentTransform$.pipe(Ve()).subscribe(t=>{this._tagSet.add(e,t);const n=e.map(i=>this._tagSet.get(i.id));this._tagScene.add(n)}):this._tagSet.addDeactivated(e)}calculateRect(e){return new Promise((t,n)=>{this._navigator.stateService.currentTransform$.pipe(Ve(),V(i=>e.getRect2d(i))).subscribe(i=>{t(i)},i=>{n(i)})})}create(){this._tagCreator.replayedTag$.pipe(Ve(),Fe(e=>!!e)).subscribe(e=>{e.create()})}changeMode(e){this.configure({mode:e})}fire(e,t){super.fire(e,t)}get(e){if(this._activated){const t=this._tagSet.get(e);return t!==void 0?t.tag:void 0}else return this._tagSet.getDeactivated(e)}getAll(){return this.activated?this._tagSet.getAll().map(e=>e.tag):this._tagSet.getAllDeactivated()}getTagIdsAt(e){return new Promise((t,n)=>{this._container.renderService.renderCamera$.pipe(Ve(),V(i=>{const s=this._viewportCoords.canvasToViewport(e[0],e[1],this._container.container);return this._tagScene.intersectObjects(s,i.perspective)})).subscribe(i=>{t(i)},i=>{n(i)})})}has(e){return this._activated?this._tagSet.has(e):this._tagSet.hasDeactivated(e)}off(e,t){super.off(e,t)}on(e,t){super.on(e,t)}remove(e){this._activated?(this._tagSet.remove(e),this._tagScene.remove(e)):this._tagSet.removeDeactivated(e)}removeAll(){this._activated?(this._tagSet.removeAll(),this._tagScene.removeAll()):this._tagSet.removeAllDeactivated()}_activate(){this._editVertexHandler.enable();const e=on(Object.keys(this._createHandlers)).pipe(V(n=>this._createHandlers[n]),Fe(n=>!!n),ct(n=>n.geometryCreated$),vt()),t=this._subscriptions;t.push(e.subscribe(n=>{const i="geometrycreate",s={geometry:n,target:this,type:i};this.fire(i,s)})),t.push(this._tagCreator.tag$.pipe(Yp(n=>n==null),Be()).subscribe(n=>{const i=n!=null?"tagcreatestart":"tagcreateend",s={target:this,type:i};this.fire(i,s)})),t.push(e.subscribe(()=>{this.changeMode(yo.Default)})),t.push(this._creatingConfiguration$.subscribe(n=>{this._disableCreateHandlers();const i=yo[n.mode],s=this._createHandlers[i];s&&s.enable()})),t.push(this._renderTags$.subscribe(()=>{const n="tags",i={target:this,type:n};this.fire(n,i)})),t.push(this._tagCreator.tag$.pipe(we(n=>n!=null?n.aborted$.pipe(V(()=>null)):rt())).subscribe(()=>{this.changeMode(yo.Default)})),t.push(this._tagCreator.tag$.subscribe(n=>{this._tagScene.hasCreateTag()&&this._tagScene.removeCreateTag(),n!=null&&this._tagScene.addCreateTag(n)})),t.push(this._createGLObjectsChanged$.subscribe(n=>{this._tagScene.updateCreateTagObjects(n)})),t.push(this._renderTagGLChanged$.subscribe(n=>{this._tagScene.updateObjects(n)})),t.push(this._tagChanged$.subscribe(()=>{this._tagScene.update()})),t.push(He(this._renderTags$.pipe(At([]),an(()=>{this._container.domRenderer.render$.next({name:this._name,vNode:this._tagDomRenderer.clear()})})),this._container.renderService.renderCamera$,this._container.spriteService.spriteAtlas$,this._container.renderService.size$,this._tagChanged$.pipe(At(null)),xt(this._tagCreator.tag$,this._createGeometryChanged$).pipe(At(null))).pipe(V(([n,i,s,a,,o])=>({name:this._name,vNode:this._tagDomRenderer.render(n,o,s,i.perspective,a)}))).subscribe(this._container.domRenderer.render$)),t.push(this._navigator.stateService.currentState$.pipe(V(n=>{const i=this._tagScene;return{name:this._name,renderer:{frameId:n.id,needsRender:i.needsRender,render:i.render.bind(i),pass:os.Opaque}}})).subscribe(this._container.glRenderer.render$)),this._navigator.stateService.currentTransform$.pipe(Ve()).subscribe(n=>{this._tagSet.activate(n),this._tagScene.add(this._tagSet.getAll())})}_deactivate(){this._editVertexHandler.disable(),this._disableCreateHandlers(),this._tagScene.clear(),this._tagSet.deactivate(),this._tagCreator.delete$.next(null),this._subscriptions.unsubscribe(),this._container.container.classList.remove("component-tag-create")}_getDefaultConfiguration(){return{createColor:16777215,indicatePointsCompleter:!0,mode:yo.Default}}_disableCreateHandlers(){const e=this._createHandlers;for(const t in e){if(!e.hasOwnProperty(t))continue;const n=e[t];n&&n.disable()}}}NS.componentName="tag";class OS extends Wn{constructor(e,t,n){super(e,t,n),this._viewportCoords=new ei,this._zoomDelta$=new De}_activate(){const e=this._subscriptions;e.push(He(this._navigator.stateService.currentState$,this._navigator.stateService.state$,this._configuration$,this._container.renderService.size$).pipe(V(([t,n,i,s])=>{const a=t.state.zoom,o=ve.h("div.mapillary-zoom-in-icon",[]),c=a>=3||n===it.Waiting?ve.h("div.mapillary-zoom-in-button-inactive",[o]):ve.h("div.mapillary-zoom-in-button",{onclick:()=>{this._zoomDelta$.next(1)}},[o]),l=ve.h("div.mapillary-zoom-out-icon",[]),h=a<=0||n===it.Waiting?ve.h("div.mapillary-zoom-out-button-inactive",[l]):ve.h("div.mapillary-zoom-out-button",{onclick:()=>{this._zoomDelta$.next(-1)}},[l]),u=i.size===Os.Small||i.size===Os.Automatic&&s.width<640?".mapillary-zoom-compact":"";return{name:this._name,vNode:ve.h("div.mapillary-zoom-container"+u,{oncontextmenu:d=>{d.preventDefault()}},[c,h])}})).subscribe(this._container.domRenderer.render$)),e.push(this._zoomDelta$.pipe(at(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$)).subscribe(([t,n,i])=>{const s=this._viewportCoords.unprojectFromViewport(0,0,n.perspective),a=i.projectBasic(s.toArray());this._navigator.stateService.zoomIn(t,a)}))}_deactivate(){this._subscriptions.unsubscribe()}_getDefaultConfiguration(){return{size:Os.Automatic}}}OS.componentName="zoom";class US extends Wn{constructor(e,t,n,i){super(e,t,n),this._canvasId=`${t.id}-${this._name}`,this._dom=i||new Cg}_activate(){const e=this._container.domRenderer.element$.pipe(V(()=>this._dom.document.getElementById(this._canvasId)),Fe(t=>!!t),V(t=>{const n=t.parentElement,i=n.offsetWidth,s=n.offsetHeight;return[t,{height:s,width:i}]}),Be((t,n)=>t.height===n.height&&t.width===n.width,([,t])=>t));this._subscriptions.push(He(e,this._navigator.stateService.currentImage$).subscribe(([[t,n],i])=>{t.width=n.width,t.height=n.height,t.getContext("2d").drawImage(i.image,0,0,n.width,n.height)})),this._container.domRenderer.renderAdaptive$.next({name:this._name,vNode:ve.h(`canvas#${this._canvasId}`,[])})}_deactivate(){this._subscriptions.unsubscribe()}_getDefaultConfiguration(){return{}}}US.componentName="imagefallback";class BS extends Wn{constructor(e,t,n){super(e,t,n),this._seqNames={},this._seqNames[ue[ue.Prev]]="-prev",this._seqNames[ue[ue.Next]]="-next",this._spaTopNames={},this._spaTopNames[ue[ue.TurnLeft]]="-turn-left",this._spaTopNames[ue[ue.StepLeft]]="-left",this._spaTopNames[ue[ue.StepForward]]="-forward",this._spaTopNames[ue[ue.StepRight]]="-right",this._spaTopNames[ue[ue.TurnRight]]="-turn-right",this._spaBottomNames={},this._spaBottomNames[ue[ue.TurnU]]="-turn-around",this._spaBottomNames[ue[ue.StepBackward]]="-backward"}_activate(){this._subscriptions.push(He(this._navigator.stateService.currentImage$,this._configuration$).pipe(we(([e,t])=>{const n=t.sequence?e.sequenceEdges$.pipe(V(s=>s.edges.map(a=>a.data.direction))):Ze([]),i=!tt(e.cameraType)&&t.spatial?e.spatialEdges$.pipe(V(s=>s.edges.map(a=>a.data.direction))):Ze([]);return He(n,i).pipe(V(([s,a])=>s.concat(a)))}),V(e=>{const t=this._createArrowRow(this._seqNames,e),n=this._createArrowRow(this._spaTopNames,e),i=this._createArrowRow(this._spaBottomNames,e),s=ve.h("div.mapillary-navigation-sequence",t),a=ve.h("div.NavigationSpatialTop",n),o=ve.h("div.mapillary-navigation-spatial-bottom",i),c=ve.h("div.mapillary-navigation-spatial",[a,o]);return{name:this._name,vNode:ve.h("div.NavigationContainer",[s,c])}})).subscribe(this._container.domRenderer.render$))}_deactivate(){this._subscriptions.unsubscribe()}_getDefaultConfiguration(){return{sequence:!0,spatial:!0}}_createArrowRow(e,t){const n=[];for(const i in e){if(!e.hasOwnProperty(i))continue;const s=ue[i];t.indexOf(s)!==-1?n.push(this._createVNode(s,e[i],"visible")):n.push(this._createVNode(s,e[i],"hidden"))}return n}_createVNode(e,t,n){return ve.h(`span.mapillary-navigation-button.mapillary-navigation${t}`,{onclick:()=>{this._navigator.moveDir$(e).subscribe(void 0,i=>{i instanceof Gi||console.error(i)})},style:{visibility:n}},[])}}BS.componentName="navigationfallback";function Qo(r){let e=r.length;for(;--e>=0;)r[e]=0}const eV=3,tV=258,$S=29,nV=256,iV=nV+1+$S,kS=30,rV=512,sV=new Array((iV+2)*2);Qo(sV);const aV=new Array(kS*2);Qo(aV);const oV=new Array(rV);Qo(oV);const cV=new Array(tV-eV+1);Qo(cV);const lV=new Array($S);Qo(lV);const hV=new Array(kS);Qo(hV);const uV=(r,e,t,n)=>{let i=r&65535|0,s=r>>>16&65535|0,a=0;for(;t!==0;){a=t>2e3?2e3:t,t-=a;do i=i+e[n++]|0,s=s+i|0;while(--a);i%=65521,s%=65521}return i|s<<16|0};var bm=uV;const dV=()=>{let r,e=[];for(var t=0;t<256;t++){r=t;for(var n=0;n<8;n++)r=r&1?3988292384^r>>>1:r>>>1;e[t]=r}return e},fV=new Uint32Array(dV()),pV=(r,e,t,n)=>{const i=fV,s=n+t;r^=-1;for(let a=n;a<s;a++)r=r>>>8^i[(r^e[a])&255];return r^-1};var dr=pV,Mm={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},zS={Z_NO_FLUSH:0,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_DEFLATED:8};const mV=(r,e)=>Object.prototype.hasOwnProperty.call(r,e);var gV=function(r){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const t=e.shift();if(t){if(typeof t!="object")throw new TypeError(t+"must be non-object");for(const n in t)mV(t,n)&&(r[n]=t[n])}}return r},_V=r=>{let e=0;for(let n=0,i=r.length;n<i;n++)e+=r[n].length;const t=new Uint8Array(e);for(let n=0,i=0,s=r.length;n<s;n++){let a=r[n];t.set(a,i),i+=a.length}return t},VS={assign:gV,flattenChunks:_V};let HS=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{HS=!1}const cl=new Uint8Array(256);for(let r=0;r<256;r++)cl[r]=r>=252?6:r>=248?5:r>=240?4:r>=224?3:r>=192?2:1;cl[254]=cl[254]=1;var vV=r=>{if(typeof TextEncoder=="function"&&TextEncoder.prototype.encode)return new TextEncoder().encode(r);let e,t,n,i,s,a=r.length,o=0;for(i=0;i<a;i++)t=r.charCodeAt(i),(t&64512)===55296&&i+1<a&&(n=r.charCodeAt(i+1),(n&64512)===56320&&(t=65536+(t-55296<<10)+(n-56320),i++)),o+=t<128?1:t<2048?2:t<65536?3:4;for(e=new Uint8Array(o),s=0,i=0;s<o;i++)t=r.charCodeAt(i),(t&64512)===55296&&i+1<a&&(n=r.charCodeAt(i+1),(n&64512)===56320&&(t=65536+(t-55296<<10)+(n-56320),i++)),t<128?e[s++]=t:t<2048?(e[s++]=192|t>>>6,e[s++]=128|t&63):t<65536?(e[s++]=224|t>>>12,e[s++]=128|t>>>6&63,e[s++]=128|t&63):(e[s++]=240|t>>>18,e[s++]=128|t>>>12&63,e[s++]=128|t>>>6&63,e[s++]=128|t&63);return e};const xV=(r,e)=>{if(e<65534&&r.subarray&&HS)return String.fromCharCode.apply(null,r.length===e?r:r.subarray(0,e));let t="";for(let n=0;n<e;n++)t+=String.fromCharCode(r[n]);return t};var yV=(r,e)=>{const t=e||r.length;if(typeof TextDecoder=="function"&&TextDecoder.prototype.decode)return new TextDecoder().decode(r.subarray(0,e));let n,i;const s=new Array(t*2);for(i=0,n=0;n<t;){let a=r[n++];if(a<128){s[i++]=a;continue}let o=cl[a];if(o>4){s[i++]=65533,n+=o-1;continue}for(a&=o===2?31:o===3?15:7;o>1&&n<t;)a=a<<6|r[n++]&63,o--;if(o>1){s[i++]=65533;continue}a<65536?s[i++]=a:(a-=65536,s[i++]=55296|a>>10&1023,s[i++]=56320|a&1023)}return xV(s,i)},bV=(r,e)=>{e=e||r.length,e>r.length&&(e=r.length);let t=e-1;for(;t>=0&&(r[t]&192)===128;)t--;return t<0||t===0?e:t+cl[r[t]]>e?t:e},Sm={string2buf:vV,buf2string:yV,utf8border:bV};function MV(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var SV=MV;const jh=30,wV=12;var TV=function(e,t){let n,i,s,a,o,c,l,h,u,d,f,p,g,_,m,v,y,x,w,E,M,A,T,S;const b=e.state;n=e.next_in,T=e.input,i=n+(e.avail_in-5),s=e.next_out,S=e.output,a=s-(t-e.avail_out),o=s+(e.avail_out-257),c=b.dmax,l=b.wsize,h=b.whave,u=b.wnext,d=b.window,f=b.hold,p=b.bits,g=b.lencode,_=b.distcode,m=(1<<b.lenbits)-1,v=(1<<b.distbits)-1;e:do{p<15&&(f+=T[n++]<<p,p+=8,f+=T[n++]<<p,p+=8),y=g[f&m];t:for(;;){if(x=y>>>24,f>>>=x,p-=x,x=y>>>16&255,x===0)S[s++]=y&65535;else if(x&16){w=y&65535,x&=15,x&&(p<x&&(f+=T[n++]<<p,p+=8),w+=f&(1<<x)-1,f>>>=x,p-=x),p<15&&(f+=T[n++]<<p,p+=8,f+=T[n++]<<p,p+=8),y=_[f&v];n:for(;;){if(x=y>>>24,f>>>=x,p-=x,x=y>>>16&255,x&16){if(E=y&65535,x&=15,p<x&&(f+=T[n++]<<p,p+=8,p<x&&(f+=T[n++]<<p,p+=8)),E+=f&(1<<x)-1,E>c){e.msg="invalid distance too far back",b.mode=jh;break e}if(f>>>=x,p-=x,x=s-a,E>x){if(x=E-x,x>h&&b.sane){e.msg="invalid distance too far back",b.mode=jh;break e}if(M=0,A=d,u===0){if(M+=l-x,x<w){w-=x;do S[s++]=d[M++];while(--x);M=s-E,A=S}}else if(u<x){if(M+=l+u-x,x-=u,x<w){w-=x;do S[s++]=d[M++];while(--x);if(M=0,u<w){x=u,w-=x;do S[s++]=d[M++];while(--x);M=s-E,A=S}}}else if(M+=u-x,x<w){w-=x;do S[s++]=d[M++];while(--x);M=s-E,A=S}for(;w>2;)S[s++]=A[M++],S[s++]=A[M++],S[s++]=A[M++],w-=3;w&&(S[s++]=A[M++],w>1&&(S[s++]=A[M++]))}else{M=s-E;do S[s++]=S[M++],S[s++]=S[M++],S[s++]=S[M++],w-=3;while(w>2);w&&(S[s++]=S[M++],w>1&&(S[s++]=S[M++]))}}else if((x&64)===0){y=_[(y&65535)+(f&(1<<x)-1)];continue n}else{e.msg="invalid distance code",b.mode=jh;break e}break}}else if((x&64)===0){y=g[(y&65535)+(f&(1<<x)-1)];continue t}else if(x&32){b.mode=wV;break e}else{e.msg="invalid literal/length code",b.mode=jh;break e}break}}while(n<i&&s<o);w=p>>3,n-=w,p-=w<<3,f&=(1<<p)-1,e.next_in=n,e.next_out=s,e.avail_in=n<i?5+(i-n):5-(n-i),e.avail_out=s<o?257+(o-s):257-(s-o),b.hold=f,b.bits=p};const oo=15,hx=852,ux=592,dx=0,qf=1,fx=2,EV=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),CV=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),AV=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),RV=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),PV=(r,e,t,n,i,s,a,o)=>{const c=o.bits;let l=0,h=0,u=0,d=0,f=0,p=0,g=0,_=0,m=0,v=0,y,x,w,E,M,A=null,T=0,S;const b=new Uint16Array(oo+1),U=new Uint16Array(oo+1);let L=null,N=0,k,B,z;for(l=0;l<=oo;l++)b[l]=0;for(h=0;h<n;h++)b[e[t+h]]++;for(f=c,d=oo;d>=1&&b[d]===0;d--);if(f>d&&(f=d),d===0)return i[s++]=1<<24|64<<16|0,i[s++]=1<<24|64<<16|0,o.bits=1,0;for(u=1;u<d&&b[u]===0;u++);for(f<u&&(f=u),_=1,l=1;l<=oo;l++)if(_<<=1,_-=b[l],_<0)return-1;if(_>0&&(r===dx||d!==1))return-1;for(U[1]=0,l=1;l<oo;l++)U[l+1]=U[l]+b[l];for(h=0;h<n;h++)e[t+h]!==0&&(a[U[e[t+h]]++]=h);if(r===dx?(A=L=a,S=19):r===qf?(A=EV,T-=257,L=CV,N-=257,S=256):(A=AV,L=RV,S=-1),v=0,h=0,l=u,M=s,p=f,g=0,w=-1,m=1<<f,E=m-1,r===qf&&m>hx||r===fx&&m>ux)return 1;for(;;){k=l-g,a[h]<S?(B=0,z=a[h]):a[h]>S?(B=L[N+a[h]],z=A[T+a[h]]):(B=96,z=0),y=1<<l-g,x=1<<p,u=x;do x-=y,i[M+(v>>g)+x]=k<<24|B<<16|z|0;while(x!==0);for(y=1<<l-1;v&y;)y>>=1;if(y!==0?(v&=y-1,v+=y):v=0,h++,--b[l]===0){if(l===d)break;l=e[t+a[h]]}if(l>f&&(v&E)!==w){for(g===0&&(g=f),M+=u,p=l-g,_=1<<p;p+g<d&&(_-=b[p+g],!(_<=0));)p++,_<<=1;if(m+=1<<p,r===qf&&m>hx||r===fx&&m>ux)return 1;w=v&E,i[w]=f<<24|p<<16|M-s|0}}return v!==0&&(i[M+v]=l-g<<24|64<<16|0),o.bits=f,0};var Uc=PV;const IV=0,GS=1,WS=2,{Z_FINISH:px,Z_BLOCK:LV,Z_TREES:Xh,Z_OK:va,Z_STREAM_END:DV,Z_NEED_DICT:FV,Z_STREAM_ERROR:ji,Z_DATA_ERROR:qS,Z_MEM_ERROR:jS,Z_BUF_ERROR:NV,Z_DEFLATED:mx}=zS,XS=1,gx=2,_x=3,vx=4,xx=5,yx=6,bx=7,Mx=8,Sx=9,wx=10,zu=11,kr=12,jf=13,Tx=14,Xf=15,Ex=16,Cx=17,Ax=18,Rx=19,Yh=20,Zh=21,Px=22,Ix=23,Lx=24,Dx=25,Fx=26,Yf=27,Nx=28,Ox=29,dn=30,YS=31,OV=32,UV=852,BV=592,$V=15,kV=$V,Ux=r=>(r>>>24&255)+(r>>>8&65280)+((r&65280)<<8)+((r&255)<<24);function zV(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const ZS=r=>{if(!r||!r.state)return ji;const e=r.state;return r.total_in=r.total_out=e.total=0,r.msg="",e.wrap&&(r.adler=e.wrap&1),e.mode=XS,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(UV),e.distcode=e.distdyn=new Int32Array(BV),e.sane=1,e.back=-1,va},KS=r=>{if(!r||!r.state)return ji;const e=r.state;return e.wsize=0,e.whave=0,e.wnext=0,ZS(r)},JS=(r,e)=>{let t;if(!r||!r.state)return ji;const n=r.state;return e<0?(t=0,e=-e):(t=(e>>4)+1,e<48&&(e&=15)),e&&(e<8||e>15)?ji:(n.window!==null&&n.wbits!==e&&(n.window=null),n.wrap=t,n.wbits=e,KS(r))},QS=(r,e)=>{if(!r)return ji;const t=new zV;r.state=t,t.window=null;const n=JS(r,e);return n!==va&&(r.state=null),n},VV=r=>QS(r,kV);let Bx=!0,Zf,Kf;const HV=r=>{if(Bx){Zf=new Int32Array(512),Kf=new Int32Array(32);let e=0;for(;e<144;)r.lens[e++]=8;for(;e<256;)r.lens[e++]=9;for(;e<280;)r.lens[e++]=7;for(;e<288;)r.lens[e++]=8;for(Uc(GS,r.lens,0,288,Zf,0,r.work,{bits:9}),e=0;e<32;)r.lens[e++]=5;Uc(WS,r.lens,0,32,Kf,0,r.work,{bits:5}),Bx=!1}r.lencode=Zf,r.lenbits=9,r.distcode=Kf,r.distbits=5},ew=(r,e,t,n)=>{let i;const s=r.state;return s.window===null&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),n>=s.wsize?(s.window.set(e.subarray(t-s.wsize,t),0),s.wnext=0,s.whave=s.wsize):(i=s.wsize-s.wnext,i>n&&(i=n),s.window.set(e.subarray(t-n,t-n+i),s.wnext),n-=i,n?(s.window.set(e.subarray(t-n,t),0),s.wnext=n,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0},GV=(r,e)=>{let t,n,i,s,a,o,c,l,h,u,d,f,p,g,_=0,m,v,y,x,w,E,M,A;const T=new Uint8Array(4);let S,b;const U=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!r||!r.state||!r.output||!r.input&&r.avail_in!==0)return ji;t=r.state,t.mode===kr&&(t.mode=jf),a=r.next_out,i=r.output,c=r.avail_out,s=r.next_in,n=r.input,o=r.avail_in,l=t.hold,h=t.bits,u=o,d=c,A=va;e:for(;;)switch(t.mode){case XS:if(t.wrap===0){t.mode=jf;break}for(;h<16;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if(t.wrap&2&&l===35615){t.check=0,T[0]=l&255,T[1]=l>>>8&255,t.check=dr(t.check,T,2,0),l=0,h=0,t.mode=gx;break}if(t.flags=0,t.head&&(t.head.done=!1),!(t.wrap&1)||(((l&255)<<8)+(l>>8))%31){r.msg="incorrect header check",t.mode=dn;break}if((l&15)!==mx){r.msg="unknown compression method",t.mode=dn;break}if(l>>>=4,h-=4,M=(l&15)+8,t.wbits===0)t.wbits=M;else if(M>t.wbits){r.msg="invalid window size",t.mode=dn;break}t.dmax=1<<t.wbits,r.adler=t.check=1,t.mode=l&512?wx:kr,l=0,h=0;break;case gx:for(;h<16;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if(t.flags=l,(t.flags&255)!==mx){r.msg="unknown compression method",t.mode=dn;break}if(t.flags&57344){r.msg="unknown header flags set",t.mode=dn;break}t.head&&(t.head.text=l>>8&1),t.flags&512&&(T[0]=l&255,T[1]=l>>>8&255,t.check=dr(t.check,T,2,0)),l=0,h=0,t.mode=_x;case _x:for(;h<32;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}t.head&&(t.head.time=l),t.flags&512&&(T[0]=l&255,T[1]=l>>>8&255,T[2]=l>>>16&255,T[3]=l>>>24&255,t.check=dr(t.check,T,4,0)),l=0,h=0,t.mode=vx;case vx:for(;h<16;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}t.head&&(t.head.xflags=l&255,t.head.os=l>>8),t.flags&512&&(T[0]=l&255,T[1]=l>>>8&255,t.check=dr(t.check,T,2,0)),l=0,h=0,t.mode=xx;case xx:if(t.flags&1024){for(;h<16;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}t.length=l,t.head&&(t.head.extra_len=l),t.flags&512&&(T[0]=l&255,T[1]=l>>>8&255,t.check=dr(t.check,T,2,0)),l=0,h=0}else t.head&&(t.head.extra=null);t.mode=yx;case yx:if(t.flags&1024&&(f=t.length,f>o&&(f=o),f&&(t.head&&(M=t.head.extra_len-t.length,t.head.extra||(t.head.extra=new Uint8Array(t.head.extra_len)),t.head.extra.set(n.subarray(s,s+f),M)),t.flags&512&&(t.check=dr(t.check,n,f,s)),o-=f,s+=f,t.length-=f),t.length))break e;t.length=0,t.mode=bx;case bx:if(t.flags&2048){if(o===0)break e;f=0;do M=n[s+f++],t.head&&M&&t.length<65536&&(t.head.name+=String.fromCharCode(M));while(M&&f<o);if(t.flags&512&&(t.check=dr(t.check,n,f,s)),o-=f,s+=f,M)break e}else t.head&&(t.head.name=null);t.length=0,t.mode=Mx;case Mx:if(t.flags&4096){if(o===0)break e;f=0;do M=n[s+f++],t.head&&M&&t.length<65536&&(t.head.comment+=String.fromCharCode(M));while(M&&f<o);if(t.flags&512&&(t.check=dr(t.check,n,f,s)),o-=f,s+=f,M)break e}else t.head&&(t.head.comment=null);t.mode=Sx;case Sx:if(t.flags&512){for(;h<16;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if(l!==(t.check&65535)){r.msg="header crc mismatch",t.mode=dn;break}l=0,h=0}t.head&&(t.head.hcrc=t.flags>>9&1,t.head.done=!0),r.adler=t.check=0,t.mode=kr;break;case wx:for(;h<32;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}r.adler=t.check=Ux(l),l=0,h=0,t.mode=zu;case zu:if(t.havedict===0)return r.next_out=a,r.avail_out=c,r.next_in=s,r.avail_in=o,t.hold=l,t.bits=h,FV;r.adler=t.check=1,t.mode=kr;case kr:if(e===LV||e===Xh)break e;case jf:if(t.last){l>>>=h&7,h-=h&7,t.mode=Yf;break}for(;h<3;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}switch(t.last=l&1,l>>>=1,h-=1,l&3){case 0:t.mode=Tx;break;case 1:if(HV(t),t.mode=Yh,e===Xh){l>>>=2,h-=2;break e}break;case 2:t.mode=Cx;break;case 3:r.msg="invalid block type",t.mode=dn}l>>>=2,h-=2;break;case Tx:for(l>>>=h&7,h-=h&7;h<32;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if((l&65535)!==(l>>>16^65535)){r.msg="invalid stored block lengths",t.mode=dn;break}if(t.length=l&65535,l=0,h=0,t.mode=Xf,e===Xh)break e;case Xf:t.mode=Ex;case Ex:if(f=t.length,f){if(f>o&&(f=o),f>c&&(f=c),f===0)break e;i.set(n.subarray(s,s+f),a),o-=f,s+=f,c-=f,a+=f,t.length-=f;break}t.mode=kr;break;case Cx:for(;h<14;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if(t.nlen=(l&31)+257,l>>>=5,h-=5,t.ndist=(l&31)+1,l>>>=5,h-=5,t.ncode=(l&15)+4,l>>>=4,h-=4,t.nlen>286||t.ndist>30){r.msg="too many length or distance symbols",t.mode=dn;break}t.have=0,t.mode=Ax;case Ax:for(;t.have<t.ncode;){for(;h<3;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}t.lens[U[t.have++]]=l&7,l>>>=3,h-=3}for(;t.have<19;)t.lens[U[t.have++]]=0;if(t.lencode=t.lendyn,t.lenbits=7,S={bits:t.lenbits},A=Uc(IV,t.lens,0,19,t.lencode,0,t.work,S),t.lenbits=S.bits,A){r.msg="invalid code lengths set",t.mode=dn;break}t.have=0,t.mode=Rx;case Rx:for(;t.have<t.nlen+t.ndist;){for(;_=t.lencode[l&(1<<t.lenbits)-1],m=_>>>24,v=_>>>16&255,y=_&65535,!(m<=h);){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if(y<16)l>>>=m,h-=m,t.lens[t.have++]=y;else{if(y===16){for(b=m+2;h<b;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if(l>>>=m,h-=m,t.have===0){r.msg="invalid bit length repeat",t.mode=dn;break}M=t.lens[t.have-1],f=3+(l&3),l>>>=2,h-=2}else if(y===17){for(b=m+3;h<b;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}l>>>=m,h-=m,M=0,f=3+(l&7),l>>>=3,h-=3}else{for(b=m+7;h<b;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}l>>>=m,h-=m,M=0,f=11+(l&127),l>>>=7,h-=7}if(t.have+f>t.nlen+t.ndist){r.msg="invalid bit length repeat",t.mode=dn;break}for(;f--;)t.lens[t.have++]=M}}if(t.mode===dn)break;if(t.lens[256]===0){r.msg="invalid code -- missing end-of-block",t.mode=dn;break}if(t.lenbits=9,S={bits:t.lenbits},A=Uc(GS,t.lens,0,t.nlen,t.lencode,0,t.work,S),t.lenbits=S.bits,A){r.msg="invalid literal/lengths set",t.mode=dn;break}if(t.distbits=6,t.distcode=t.distdyn,S={bits:t.distbits},A=Uc(WS,t.lens,t.nlen,t.ndist,t.distcode,0,t.work,S),t.distbits=S.bits,A){r.msg="invalid distances set",t.mode=dn;break}if(t.mode=Yh,e===Xh)break e;case Yh:t.mode=Zh;case Zh:if(o>=6&&c>=258){r.next_out=a,r.avail_out=c,r.next_in=s,r.avail_in=o,t.hold=l,t.bits=h,TV(r,d),a=r.next_out,i=r.output,c=r.avail_out,s=r.next_in,n=r.input,o=r.avail_in,l=t.hold,h=t.bits,t.mode===kr&&(t.back=-1);break}for(t.back=0;_=t.lencode[l&(1<<t.lenbits)-1],m=_>>>24,v=_>>>16&255,y=_&65535,!(m<=h);){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if(v&&(v&240)===0){for(x=m,w=v,E=y;_=t.lencode[E+((l&(1<<x+w)-1)>>x)],m=_>>>24,v=_>>>16&255,y=_&65535,!(x+m<=h);){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}l>>>=x,h-=x,t.back+=x}if(l>>>=m,h-=m,t.back+=m,t.length=y,v===0){t.mode=Fx;break}if(v&32){t.back=-1,t.mode=kr;break}if(v&64){r.msg="invalid literal/length code",t.mode=dn;break}t.extra=v&15,t.mode=Px;case Px:if(t.extra){for(b=t.extra;h<b;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}t.length+=l&(1<<t.extra)-1,l>>>=t.extra,h-=t.extra,t.back+=t.extra}t.was=t.length,t.mode=Ix;case Ix:for(;_=t.distcode[l&(1<<t.distbits)-1],m=_>>>24,v=_>>>16&255,y=_&65535,!(m<=h);){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if((v&240)===0){for(x=m,w=v,E=y;_=t.distcode[E+((l&(1<<x+w)-1)>>x)],m=_>>>24,v=_>>>16&255,y=_&65535,!(x+m<=h);){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}l>>>=x,h-=x,t.back+=x}if(l>>>=m,h-=m,t.back+=m,v&64){r.msg="invalid distance code",t.mode=dn;break}t.offset=y,t.extra=v&15,t.mode=Lx;case Lx:if(t.extra){for(b=t.extra;h<b;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}t.offset+=l&(1<<t.extra)-1,l>>>=t.extra,h-=t.extra,t.back+=t.extra}if(t.offset>t.dmax){r.msg="invalid distance too far back",t.mode=dn;break}t.mode=Dx;case Dx:if(c===0)break e;if(f=d-c,t.offset>f){if(f=t.offset-f,f>t.whave&&t.sane){r.msg="invalid distance too far back",t.mode=dn;break}f>t.wnext?(f-=t.wnext,p=t.wsize-f):p=t.wnext-f,f>t.length&&(f=t.length),g=t.window}else g=i,p=a-t.offset,f=t.length;f>c&&(f=c),c-=f,t.length-=f;do i[a++]=g[p++];while(--f);t.length===0&&(t.mode=Zh);break;case Fx:if(c===0)break e;i[a++]=t.length,c--,t.mode=Zh;break;case Yf:if(t.wrap){for(;h<32;){if(o===0)break e;o--,l|=n[s++]<<h,h+=8}if(d-=c,r.total_out+=d,t.total+=d,d&&(r.adler=t.check=t.flags?dr(t.check,i,d,a-d):bm(t.check,i,d,a-d)),d=c,(t.flags?l:Ux(l))!==t.check){r.msg="incorrect data check",t.mode=dn;break}l=0,h=0}t.mode=Nx;case Nx:if(t.wrap&&t.flags){for(;h<32;){if(o===0)break e;o--,l+=n[s++]<<h,h+=8}if(l!==(t.total&4294967295)){r.msg="incorrect length check",t.mode=dn;break}l=0,h=0}t.mode=Ox;case Ox:A=DV;break e;case dn:A=qS;break e;case YS:return jS;case OV:default:return ji}return r.next_out=a,r.avail_out=c,r.next_in=s,r.avail_in=o,t.hold=l,t.bits=h,(t.wsize||d!==r.avail_out&&t.mode<dn&&(t.mode<Yf||e!==px))&&ew(r,r.output,r.next_out,d-r.avail_out),u-=r.avail_in,d-=r.avail_out,r.total_in+=u,r.total_out+=d,t.total+=d,t.wrap&&d&&(r.adler=t.check=t.flags?dr(t.check,i,d,r.next_out-d):bm(t.check,i,d,r.next_out-d)),r.data_type=t.bits+(t.last?64:0)+(t.mode===kr?128:0)+(t.mode===Yh||t.mode===Xf?256:0),(u===0&&d===0||e===px)&&A===va&&(A=NV),A},WV=r=>{if(!r||!r.state)return ji;let e=r.state;return e.window&&(e.window=null),r.state=null,va},qV=(r,e)=>{if(!r||!r.state)return ji;const t=r.state;return(t.wrap&2)===0?ji:(t.head=e,e.done=!1,va)},jV=(r,e)=>{const t=e.length;let n,i,s;return!r||!r.state||(n=r.state,n.wrap!==0&&n.mode!==zu)?ji:n.mode===zu&&(i=1,i=bm(i,e,t,0),i!==n.check)?qS:(s=ew(r,e,t,t),s?(n.mode=YS,jS):(n.havedict=1,va))};var XV=KS,YV=JS,ZV=ZS,KV=VV,JV=QS,QV=GV,e4=WV,t4=qV,n4=jV,i4="pako inflate (from Nodeca project)",Wr={inflateReset:XV,inflateReset2:YV,inflateResetKeep:ZV,inflateInit:KV,inflateInit2:JV,inflate:QV,inflateEnd:e4,inflateGetHeader:t4,inflateSetDictionary:n4,inflateInfo:i4};function r4(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var s4=r4;const tw=Object.prototype.toString,{Z_NO_FLUSH:a4,Z_FINISH:o4,Z_OK:ll,Z_STREAM_END:Jf,Z_NEED_DICT:Qf,Z_STREAM_ERROR:c4,Z_DATA_ERROR:$x,Z_MEM_ERROR:l4}=zS;function pd(r){this.options=VS.assign({chunkSize:1024*64,windowBits:15,to:""},r||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,e.windowBits===0&&(e.windowBits=-15)),e.windowBits>=0&&e.windowBits<16&&!(r&&r.windowBits)&&(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&(e.windowBits&15)===0&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new SV,this.strm.avail_out=0;let t=Wr.inflateInit2(this.strm,e.windowBits);if(t!==ll)throw new Error(Mm[t]);if(this.header=new s4,Wr.inflateGetHeader(this.strm,this.header),e.dictionary&&(typeof e.dictionary=="string"?e.dictionary=Sm.string2buf(e.dictionary):tw.call(e.dictionary)==="[object ArrayBuffer]"&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(t=Wr.inflateSetDictionary(this.strm,e.dictionary),t!==ll)))throw new Error(Mm[t])}pd.prototype.push=function(r,e){const t=this.strm,n=this.options.chunkSize,i=this.options.dictionary;let s,a,o;if(this.ended)return!1;for(e===~~e?a=e:a=e===!0?o4:a4,tw.call(r)==="[object ArrayBuffer]"?t.input=new Uint8Array(r):t.input=r,t.next_in=0,t.avail_in=t.input.length;;){for(t.avail_out===0&&(t.output=new Uint8Array(n),t.next_out=0,t.avail_out=n),s=Wr.inflate(t,a),s===Qf&&i&&(s=Wr.inflateSetDictionary(t,i),s===ll?s=Wr.inflate(t,a):s===$x&&(s=Qf));t.avail_in>0&&s===Jf&&t.state.wrap>0&&r[t.next_in]!==0;)Wr.inflateReset(t),s=Wr.inflate(t,a);switch(s){case c4:case $x:case Qf:case l4:return this.onEnd(s),this.ended=!0,!1}if(o=t.avail_out,t.next_out&&(t.avail_out===0||s===Jf))if(this.options.to==="string"){let c=Sm.utf8border(t.output,t.next_out),l=t.next_out-c,h=Sm.buf2string(t.output,c);t.next_out=l,t.avail_out=n-l,l&&t.output.set(t.output.subarray(c,c+l),0),this.onData(h)}else this.onData(t.output.length===t.next_out?t.output:t.output.subarray(0,t.next_out));if(!(s===ll&&o===0)){if(s===Jf)return s=Wr.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(t.avail_in===0)break}}return!0};pd.prototype.onData=function(r){this.chunks.push(r)};pd.prototype.onEnd=function(r){r===ll&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=VS.flattenChunks(this.chunks)),this.chunks=[],this.err=r,this.msg=this.strm.msg};function h4(r,e){const t=new pd(e);if(t.push(r),t.err)throw t.msg||Mm[t.err];return t.result}var u4=h4,d4={inflate:u4};const{inflate:f4}=d4;var p4=f4,Ug={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */Ug.read=function(r,e,t,n,i){var s,a,o=i*8-n-1,c=(1<<o)-1,l=c>>1,h=-7,u=t?i-1:0,d=t?-1:1,f=r[e+u];for(u+=d,s=f&(1<<-h)-1,f>>=-h,h+=o;h>0;s=s*256+r[e+u],u+=d,h-=8);for(a=s&(1<<-h)-1,s>>=-h,h+=n;h>0;a=a*256+r[e+u],u+=d,h-=8);if(s===0)s=1-l;else{if(s===c)return a?NaN:(f?-1:1)*(1/0);a=a+Math.pow(2,n),s=s-l}return(f?-1:1)*a*Math.pow(2,s-n)};Ug.write=function(r,e,t,n,i,s){var a,o,c,l=s*8-i-1,h=(1<<l)-1,u=h>>1,d=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:s-1,p=n?1:-1,g=e<0||e===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,a=h):(a=Math.floor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-a))<1&&(a--,c*=2),a+u>=1?e+=d/c:e+=d*Math.pow(2,1-u),e*c>=2&&(a++,c/=2),a+u>=h?(o=0,a=h):a+u>=1?(o=(e*c-1)*Math.pow(2,i),a=a+u):(o=e*Math.pow(2,u-1)*Math.pow(2,i),a=0));i>=8;r[t+f]=o&255,f+=p,o/=256,i-=8);for(a=a<<i|o,l+=i;l>0;r[t+f]=a&255,f+=p,a/=256,l-=8);r[t+f-p]|=g*128};var m4=Vt,Kh=Ug;function Vt(r){this.buf=ArrayBuffer.isView&&ArrayBuffer.isView(r)?r:new Uint8Array(r||0),this.pos=0,this.type=0,this.length=this.buf.length}Vt.Varint=0;Vt.Fixed64=1;Vt.Bytes=2;Vt.Fixed32=5;var wm=65536*65536,kx=1/wm,g4=12,nw=typeof TextDecoder>"u"?null:new TextDecoder("utf8");Vt.prototype={destroy:function(){this.buf=null},readFields:function(r,e,t){for(t=t||this.length;this.pos<t;){var n=this.readVarint(),i=n>>3,s=this.pos;this.type=n&7,r(i,e,this),this.pos===s&&this.skip(n)}return e},readMessage:function(r,e){return this.readFields(r,e,this.readVarint()+this.pos)},readFixed32:function(){var r=Jh(this.buf,this.pos);return this.pos+=4,r},readSFixed32:function(){var r=Vx(this.buf,this.pos);return this.pos+=4,r},readFixed64:function(){var r=Jh(this.buf,this.pos)+Jh(this.buf,this.pos+4)*wm;return this.pos+=8,r},readSFixed64:function(){var r=Jh(this.buf,this.pos)+Vx(this.buf,this.pos+4)*wm;return this.pos+=8,r},readFloat:function(){var r=Kh.read(this.buf,this.pos,!0,23,4);return this.pos+=4,r},readDouble:function(){var r=Kh.read(this.buf,this.pos,!0,52,8);return this.pos+=8,r},readVarint:function(r){var e=this.buf,t,n;return n=e[this.pos++],t=n&127,n<128||(n=e[this.pos++],t|=(n&127)<<7,n<128)||(n=e[this.pos++],t|=(n&127)<<14,n<128)||(n=e[this.pos++],t|=(n&127)<<21,n<128)?t:(n=e[this.pos],t|=(n&15)<<28,_4(t,r,this))},readVarint64:function(){return this.readVarint(!0)},readSVarint:function(){var r=this.readVarint();return r%2===1?(r+1)/-2:r/2},readBoolean:function(){return!!this.readVarint()},readString:function(){var r=this.readVarint()+this.pos,e=this.pos;return this.pos=r,r-e>=g4&&nw?I4(this.buf,e,r):P4(this.buf,e,r)},readBytes:function(){var r=this.readVarint()+this.pos,e=this.buf.subarray(this.pos,r);return this.pos=r,e},readPackedVarint:function(r,e){if(this.type!==Vt.Bytes)return r.push(this.readVarint(e));var t=zr(this);for(r=r||[];this.pos<t;)r.push(this.readVarint(e));return r},readPackedSVarint:function(r){if(this.type!==Vt.Bytes)return r.push(this.readSVarint());var e=zr(this);for(r=r||[];this.pos<e;)r.push(this.readSVarint());return r},readPackedBoolean:function(r){if(this.type!==Vt.Bytes)return r.push(this.readBoolean());var e=zr(this);for(r=r||[];this.pos<e;)r.push(this.readBoolean());return r},readPackedFloat:function(r){if(this.type!==Vt.Bytes)return r.push(this.readFloat());var e=zr(this);for(r=r||[];this.pos<e;)r.push(this.readFloat());return r},readPackedDouble:function(r){if(this.type!==Vt.Bytes)return r.push(this.readDouble());var e=zr(this);for(r=r||[];this.pos<e;)r.push(this.readDouble());return r},readPackedFixed32:function(r){if(this.type!==Vt.Bytes)return r.push(this.readFixed32());var e=zr(this);for(r=r||[];this.pos<e;)r.push(this.readFixed32());return r},readPackedSFixed32:function(r){if(this.type!==Vt.Bytes)return r.push(this.readSFixed32());var e=zr(this);for(r=r||[];this.pos<e;)r.push(this.readSFixed32());return r},readPackedFixed64:function(r){if(this.type!==Vt.Bytes)return r.push(this.readFixed64());var e=zr(this);for(r=r||[];this.pos<e;)r.push(this.readFixed64());return r},readPackedSFixed64:function(r){if(this.type!==Vt.Bytes)return r.push(this.readSFixed64());var e=zr(this);for(r=r||[];this.pos<e;)r.push(this.readSFixed64());return r},skip:function(r){var e=r&7;if(e===Vt.Varint)for(;this.buf[this.pos++]>127;);else if(e===Vt.Bytes)this.pos=this.readVarint()+this.pos;else if(e===Vt.Fixed32)this.pos+=4;else if(e===Vt.Fixed64)this.pos+=8;else throw new Error("Unimplemented type: "+e)},writeTag:function(r,e){this.writeVarint(r<<3|e)},realloc:function(r){for(var e=this.length||16;e<this.pos+r;)e*=2;if(e!==this.length){var t=new Uint8Array(e);t.set(this.buf),this.buf=t,this.length=e}},finish:function(){return this.length=this.pos,this.pos=0,this.buf.subarray(0,this.length)},writeFixed32:function(r){this.realloc(4),lo(this.buf,r,this.pos),this.pos+=4},writeSFixed32:function(r){this.realloc(4),lo(this.buf,r,this.pos),this.pos+=4},writeFixed64:function(r){this.realloc(8),lo(this.buf,r&-1,this.pos),lo(this.buf,Math.floor(r*kx),this.pos+4),this.pos+=8},writeSFixed64:function(r){this.realloc(8),lo(this.buf,r&-1,this.pos),lo(this.buf,Math.floor(r*kx),this.pos+4),this.pos+=8},writeVarint:function(r){if(r=+r||0,r>268435455||r<0){v4(r,this);return}this.realloc(4),this.buf[this.pos++]=r&127|(r>127?128:0),!(r<=127)&&(this.buf[this.pos++]=(r>>>=7)&127|(r>127?128:0),!(r<=127)&&(this.buf[this.pos++]=(r>>>=7)&127|(r>127?128:0),!(r<=127)&&(this.buf[this.pos++]=r>>>7&127)))},writeSVarint:function(r){this.writeVarint(r<0?-r*2-1:r*2)},writeBoolean:function(r){this.writeVarint(!!r)},writeString:function(r){r=String(r),this.realloc(r.length*4),this.pos++;var e=this.pos;this.pos=L4(this.buf,r,this.pos);var t=this.pos-e;t>=128&&zx(e,t,this),this.pos=e-1,this.writeVarint(t),this.pos+=t},writeFloat:function(r){this.realloc(4),Kh.write(this.buf,r,this.pos,!0,23,4),this.pos+=4},writeDouble:function(r){this.realloc(8),Kh.write(this.buf,r,this.pos,!0,52,8),this.pos+=8},writeBytes:function(r){var e=r.length;this.writeVarint(e),this.realloc(e);for(var t=0;t<e;t++)this.buf[this.pos++]=r[t]},writeRawMessage:function(r,e){this.pos++;var t=this.pos;r(e,this);var n=this.pos-t;n>=128&&zx(t,n,this),this.pos=t-1,this.writeVarint(n),this.pos+=n},writeMessage:function(r,e,t){this.writeTag(r,Vt.Bytes),this.writeRawMessage(e,t)},writePackedVarint:function(r,e){e.length&&this.writeMessage(r,b4,e)},writePackedSVarint:function(r,e){e.length&&this.writeMessage(r,M4,e)},writePackedBoolean:function(r,e){e.length&&this.writeMessage(r,T4,e)},writePackedFloat:function(r,e){e.length&&this.writeMessage(r,S4,e)},writePackedDouble:function(r,e){e.length&&this.writeMessage(r,w4,e)},writePackedFixed32:function(r,e){e.length&&this.writeMessage(r,E4,e)},writePackedSFixed32:function(r,e){e.length&&this.writeMessage(r,C4,e)},writePackedFixed64:function(r,e){e.length&&this.writeMessage(r,A4,e)},writePackedSFixed64:function(r,e){e.length&&this.writeMessage(r,R4,e)},writeBytesField:function(r,e){this.writeTag(r,Vt.Bytes),this.writeBytes(e)},writeFixed32Field:function(r,e){this.writeTag(r,Vt.Fixed32),this.writeFixed32(e)},writeSFixed32Field:function(r,e){this.writeTag(r,Vt.Fixed32),this.writeSFixed32(e)},writeFixed64Field:function(r,e){this.writeTag(r,Vt.Fixed64),this.writeFixed64(e)},writeSFixed64Field:function(r,e){this.writeTag(r,Vt.Fixed64),this.writeSFixed64(e)},writeVarintField:function(r,e){this.writeTag(r,Vt.Varint),this.writeVarint(e)},writeSVarintField:function(r,e){this.writeTag(r,Vt.Varint),this.writeSVarint(e)},writeStringField:function(r,e){this.writeTag(r,Vt.Bytes),this.writeString(e)},writeFloatField:function(r,e){this.writeTag(r,Vt.Fixed32),this.writeFloat(e)},writeDoubleField:function(r,e){this.writeTag(r,Vt.Fixed64),this.writeDouble(e)},writeBooleanField:function(r,e){this.writeVarintField(r,!!e)}};function _4(r,e,t){var n=t.buf,i,s;if(s=n[t.pos++],i=(s&112)>>4,s<128||(s=n[t.pos++],i|=(s&127)<<3,s<128)||(s=n[t.pos++],i|=(s&127)<<10,s<128)||(s=n[t.pos++],i|=(s&127)<<17,s<128)||(s=n[t.pos++],i|=(s&127)<<24,s<128)||(s=n[t.pos++],i|=(s&1)<<31,s<128))return co(r,i,e);throw new Error("Expected varint not more than 10 bytes")}function zr(r){return r.type===Vt.Bytes?r.readVarint()+r.pos:r.pos+1}function co(r,e,t){return t?e*4294967296+(r>>>0):(e>>>0)*4294967296+(r>>>0)}function v4(r,e){var t,n;if(r>=0?(t=r%4294967296|0,n=r/4294967296|0):(t=~(-r%4294967296),n=~(-r/4294967296),t^4294967295?t=t+1|0:(t=0,n=n+1|0)),r>=18446744073709552e3||r<-18446744073709552e3)throw new Error("Given varint doesn't fit into 10 bytes");e.realloc(10),x4(t,n,e),y4(n,e)}function x4(r,e,t){t.buf[t.pos++]=r&127|128,r>>>=7,t.buf[t.pos++]=r&127|128,r>>>=7,t.buf[t.pos++]=r&127|128,r>>>=7,t.buf[t.pos++]=r&127|128,r>>>=7,t.buf[t.pos]=r&127}function y4(r,e){var t=(r&7)<<4;e.buf[e.pos++]|=t|((r>>>=3)?128:0),r&&(e.buf[e.pos++]=r&127|((r>>>=7)?128:0),r&&(e.buf[e.pos++]=r&127|((r>>>=7)?128:0),r&&(e.buf[e.pos++]=r&127|((r>>>=7)?128:0),r&&(e.buf[e.pos++]=r&127|((r>>>=7)?128:0),r&&(e.buf[e.pos++]=r&127)))))}function zx(r,e,t){var n=e<=16383?1:e<=2097151?2:e<=268435455?3:Math.floor(Math.log(e)/(Math.LN2*7));t.realloc(n);for(var i=t.pos-1;i>=r;i--)t.buf[i+n]=t.buf[i]}function b4(r,e){for(var t=0;t<r.length;t++)e.writeVarint(r[t])}function M4(r,e){for(var t=0;t<r.length;t++)e.writeSVarint(r[t])}function S4(r,e){for(var t=0;t<r.length;t++)e.writeFloat(r[t])}function w4(r,e){for(var t=0;t<r.length;t++)e.writeDouble(r[t])}function T4(r,e){for(var t=0;t<r.length;t++)e.writeBoolean(r[t])}function E4(r,e){for(var t=0;t<r.length;t++)e.writeFixed32(r[t])}function C4(r,e){for(var t=0;t<r.length;t++)e.writeSFixed32(r[t])}function A4(r,e){for(var t=0;t<r.length;t++)e.writeFixed64(r[t])}function R4(r,e){for(var t=0;t<r.length;t++)e.writeSFixed64(r[t])}function Jh(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16)+r[e+3]*16777216}function lo(r,e,t){r[t]=e,r[t+1]=e>>>8,r[t+2]=e>>>16,r[t+3]=e>>>24}function Vx(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16)+(r[e+3]<<24)}function P4(r,e,t){for(var n="",i=e;i<t;){var s=r[i],a=null,o=s>239?4:s>223?3:s>191?2:1;if(i+o>t)break;var c,l,h;o===1?s<128&&(a=s):o===2?(c=r[i+1],(c&192)===128&&(a=(s&31)<<6|c&63,a<=127&&(a=null))):o===3?(c=r[i+1],l=r[i+2],(c&192)===128&&(l&192)===128&&(a=(s&15)<<12|(c&63)<<6|l&63,(a<=2047||a>=55296&&a<=57343)&&(a=null))):o===4&&(c=r[i+1],l=r[i+2],h=r[i+3],(c&192)===128&&(l&192)===128&&(h&192)===128&&(a=(s&15)<<18|(c&63)<<12|(l&63)<<6|h&63,(a<=65535||a>=1114112)&&(a=null))),a===null?(a=65533,o=1):a>65535&&(a-=65536,n+=String.fromCharCode(a>>>10&1023|55296),a=56320|a&1023),n+=String.fromCharCode(a),i+=o}return n}function I4(r,e,t){return nw.decode(r.subarray(e,t))}function L4(r,e,t){for(var n=0,i,s;n<e.length;n++){if(i=e.charCodeAt(n),i>55295&&i<57344)if(s)if(i<56320){r[t++]=239,r[t++]=191,r[t++]=189,s=i;continue}else i=s-55296<<10|i-56320|65536,s=null;else{i>56319||n+1===e.length?(r[t++]=239,r[t++]=191,r[t++]=189):s=i;continue}else s&&(r[t++]=239,r[t++]=191,r[t++]=189,s=null);i<128?r[t++]=i:(i<2048?r[t++]=i>>6|192:(i<65536?r[t++]=i>>12|224:(r[t++]=i>>18|240,r[t++]=i>>12&63|128),r[t++]=i>>6&63|128),r[t++]=i&63|128)}return t}function D4(r){const e=p4(r,{to:"string"});return JSON.parse(e)}function ep(r,e){return iw(r,"GET","arraybuffer",[],null,e)}function iw(r,e,t,n,i,s){const a=new XMLHttpRequest,o=new Promise((c,l)=>{a.open(e,r,!0);for(const h of n)a.setRequestHeader(h.name,h.value);a.responseType=t,a.timeout=15e3,a.onload=()=>{var h;if(a.status!==200){const u=(h=a.response)!==null&&h!==void 0?h:new Zt(`Response status error: ${r}`);l(u)}a.response||l(new Zt(`Response empty: ${r}`)),c(a.response)},a.onerror=()=>{l(new Zt(`Request error: ${r}`))},a.ontimeout=()=>{l(new Zt(`Request timeout: ${r}`))},a.onabort=()=>{l(new Zt(`Request aborted: ${r}`))},a.send(e==="POST"?i:null)});return s&&s.catch(()=>{a.abort()}),o}function F4(r){const e=new m4(r),t={faces:[],vertices:[]};return e.readFields(N4,t)}function N4(r,e,t){r===1?e.vertices.push(t.readFloat()):r===2?e.faces.push(t.readVarint()):console.warn(`Unsupported pbf tag (${r})`)}class O4 extends ud{constructor(e){super(),this._geometry=e}get geometry(){return this._geometry}fire(e,t){super.fire(e,t)}getCoreImages(e){return Promise.reject(new Zt("Not implemented"))}getCluster(e,t){return Promise.reject(new Zt("Not implemented"))}getSpatialImages(e){return Promise.reject(new Zt("Not implemented"))}getImages(e){return Promise.reject(new Zt("Not implemented"))}getImageBuffer(e,t){return Promise.reject(new Zt("Not implemented"))}getImageTiles(e){return Promise.reject(new Zt("Not implemented"))}getMesh(e,t){return Promise.reject(new Zt("Not implemented"))}getSequence(e){return Promise.reject(new Zt("Not implemented"))}off(e,t){super.off(e,t)}on(e,t){super.on(e,t)}setAccessToken(e){throw new Zt("Not implemented")}}class U4{constructor(){}bboxToCellIds(e,t){throw new Zt("Not implemented")}getAdjacent(e){throw new Zt("Not implemented")}getVertices(e){throw new Zt("Not implemented")}lngLatToCellId(e){throw new Zt("Not implemented")}_approxBboxToCellIds(e,t){if(t.lat<=e.lat||t.lng<=e.lng)throw new Zt("North east needs to be top right of south west");const n=(e.lat+t.lat)/2,i=(e.lng+t.lng)/2,s=Zn(t.lng,t.lat,0,i,n,0),a=Math.max(s[0],s[1]);return this._lngLatToCellIds({lat:n,lng:i},a)}_enuToGeodetic(e,t){const[n,i]=ga(e[0],e[1],e[2],t.lng,t.lat,0);return{lat:i,lng:n}}_getLngLatBoundingBoxCorners(e,t){return[[-t,t,0],[t,t,0],[t,-t,0],[-t,-t,0]].map(n=>this._enuToGeodetic(n,e))}_lngLatToCellIds(e,t){const n=this.lngLatToCellId(e),i=this._getLngLatBoundingBoxCorners(e,t);for(const s of i)if(this.lngLatToCellId(s)!==n)return[n,...this.getAdjacent(n)];return[n]}}var Hr={exports:{}},mu={exports:{}};(function(r){/**
 * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/long.js for details
 */(function(e,t){typeof iU=="function"&&r&&r.exports?r.exports=t():(e.dcodeIO=e.dcodeIO||{}).Long=t()})(tl,function(){function e(S,b,U){this.low=S|0,this.high=b|0,this.unsigned=!!U}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0,enumerable:!1,configurable:!1});function t(S){return(S&&S.__isLong__)===!0}e.isLong=t;var n={},i={};function s(S,b){var U,L,N;return b?(S>>>=0,(N=0<=S&&S<256)&&(L=i[S],L)?L:(U=o(S,(S|0)<0?-1:0,!0),N&&(i[S]=U),U)):(S|=0,(N=-128<=S&&S<128)&&(L=n[S],L)?L:(U=o(S,S<0?-1:0,!1),N&&(n[S]=U),U))}e.fromInt=s;function a(S,b){if(isNaN(S)||!isFinite(S))return b?v:m;if(b){if(S<0)return v;if(S>=p)return M}else{if(S<=-9223372036854776e3)return A;if(S+1>=g)return E}return S<0?a(-S,b).neg():o(S%f|0,S/f|0,b)}e.fromNumber=a;function o(S,b,U){return new e(S,b,U)}e.fromBits=o;var c=Math.pow;function l(S,b,U){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return m;if(typeof b=="number"?(U=b,b=!1):b=!!b,U=U||10,U<2||36<U)throw RangeError("radix");var L;if((L=S.indexOf("-"))>0)throw Error("interior hyphen");if(L===0)return l(S.substring(1),b,U).neg();for(var N=a(c(U,8)),k=m,B=0;B<S.length;B+=8){var z=Math.min(8,S.length-B),H=parseInt(S.substring(B,B+z),U);if(z<8){var ee=a(c(U,z));k=k.mul(ee).add(a(H))}else k=k.mul(N),k=k.add(a(H))}return k.unsigned=b,k}e.fromString=l;function h(S){return S instanceof e?S:typeof S=="number"?a(S):typeof S=="string"?l(S):o(S.low,S.high,S.unsigned)}e.fromValue=h;var u=65536,d=1<<24,f=u*u,p=f*f,g=p/2,_=s(d),m=s(0);e.ZERO=m;var v=s(0,!0);e.UZERO=v;var y=s(1);e.ONE=y;var x=s(1,!0);e.UONE=x;var w=s(-1);e.NEG_ONE=w;var E=o(-1,2147483647,!1);e.MAX_VALUE=E;var M=o(-1,-1,!0);e.MAX_UNSIGNED_VALUE=M;var A=o(0,-2147483648,!1);e.MIN_VALUE=A;var T=e.prototype;return T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},T.toString=function(b){if(b=b||10,b<2||36<b)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(A)){var U=a(b),L=this.div(U),N=L.mul(U).sub(this);return L.toString(b)+N.toInt().toString(b)}else return"-"+this.neg().toString(b);for(var k=a(c(b,6),this.unsigned),B=this,z="";;){var H=B.div(k),ee=B.sub(H.mul(k)).toInt()>>>0,de=ee.toString(b);if(B=H,B.isZero())return de+z;for(;de.length<6;)de="0"+de;z=""+de+z}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(A)?64:this.neg().getNumBitsAbs();for(var b=this.high!=0?this.high:this.low,U=31;U>0&&(b&1<<U)==0;U--);return this.high!=0?U+33:U+1},T.isZero=function(){return this.high===0&&this.low===0},T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return(this.low&1)===1},T.isEven=function(){return(this.low&1)===0},T.equals=function(b){return t(b)||(b=h(b)),this.unsigned!==b.unsigned&&this.high>>>31===1&&b.high>>>31===1?!1:this.high===b.high&&this.low===b.low},T.eq=T.equals,T.notEquals=function(b){return!this.eq(b)},T.neq=T.notEquals,T.lessThan=function(b){return this.comp(b)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(b){return this.comp(b)<=0},T.lte=T.lessThanOrEqual,T.greaterThan=function(b){return this.comp(b)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(b){return this.comp(b)>=0},T.gte=T.greaterThanOrEqual,T.compare=function(b){if(t(b)||(b=h(b)),this.eq(b))return 0;var U=this.isNegative(),L=b.isNegative();return U&&!L?-1:!U&&L?1:this.unsigned?b.high>>>0>this.high>>>0||b.high===this.high&&b.low>>>0>this.low>>>0?-1:1:this.sub(b).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(A)?A:this.not().add(y)},T.neg=T.negate,T.add=function(b){t(b)||(b=h(b));var U=this.high>>>16,L=this.high&65535,N=this.low>>>16,k=this.low&65535,B=b.high>>>16,z=b.high&65535,H=b.low>>>16,ee=b.low&65535,de=0,ce=0,Ce=0,me=0;return me+=k+ee,Ce+=me>>>16,me&=65535,Ce+=N+H,ce+=Ce>>>16,Ce&=65535,ce+=L+z,de+=ce>>>16,ce&=65535,de+=U+B,de&=65535,o(Ce<<16|me,de<<16|ce,this.unsigned)},T.subtract=function(b){return t(b)||(b=h(b)),this.add(b.neg())},T.sub=T.subtract,T.multiply=function(b){if(this.isZero()||(t(b)||(b=h(b)),b.isZero()))return m;if(this.eq(A))return b.isOdd()?A:m;if(b.eq(A))return this.isOdd()?A:m;if(this.isNegative())return b.isNegative()?this.neg().mul(b.neg()):this.neg().mul(b).neg();if(b.isNegative())return this.mul(b.neg()).neg();if(this.lt(_)&&b.lt(_))return a(this.toNumber()*b.toNumber(),this.unsigned);var U=this.high>>>16,L=this.high&65535,N=this.low>>>16,k=this.low&65535,B=b.high>>>16,z=b.high&65535,H=b.low>>>16,ee=b.low&65535,de=0,ce=0,Ce=0,me=0;return me+=k*ee,Ce+=me>>>16,me&=65535,Ce+=N*ee,ce+=Ce>>>16,Ce&=65535,Ce+=k*H,ce+=Ce>>>16,Ce&=65535,ce+=L*ee,de+=ce>>>16,ce&=65535,ce+=N*H,de+=ce>>>16,ce&=65535,ce+=k*z,de+=ce>>>16,ce&=65535,de+=U*ee+L*H+N*z+k*B,de&=65535,o(Ce<<16|me,de<<16|ce,this.unsigned)},T.mul=T.multiply,T.divide=function(b){if(t(b)||(b=h(b)),b.isZero())throw Error("division by zero");if(this.isZero())return this.unsigned?v:m;var U,L,N;if(this.unsigned){if(b.unsigned||(b=b.toUnsigned()),b.gt(this))return v;if(b.gt(this.shru(1)))return x;N=v}else{if(this.eq(A)){if(b.eq(y)||b.eq(w))return A;if(b.eq(A))return y;var k=this.shr(1);return U=k.div(b).shl(1),U.eq(m)?b.isNegative()?y:w:(L=this.sub(b.mul(U)),N=U.add(L.div(b)),N)}else if(b.eq(A))return this.unsigned?v:m;if(this.isNegative())return b.isNegative()?this.neg().div(b.neg()):this.neg().div(b).neg();if(b.isNegative())return this.div(b.neg()).neg();N=m}for(L=this;L.gte(b);){U=Math.max(1,Math.floor(L.toNumber()/b.toNumber()));for(var B=Math.ceil(Math.log(U)/Math.LN2),z=B<=48?1:c(2,B-48),H=a(U),ee=H.mul(b);ee.isNegative()||ee.gt(L);)U-=z,H=a(U,this.unsigned),ee=H.mul(b);H.isZero()&&(H=y),N=N.add(H),L=L.sub(ee)}return N},T.div=T.divide,T.modulo=function(b){return t(b)||(b=h(b)),this.sub(this.div(b).mul(b))},T.mod=T.modulo,T.not=function(){return o(~this.low,~this.high,this.unsigned)},T.and=function(b){return t(b)||(b=h(b)),o(this.low&b.low,this.high&b.high,this.unsigned)},T.or=function(b){return t(b)||(b=h(b)),o(this.low|b.low,this.high|b.high,this.unsigned)},T.xor=function(b){return t(b)||(b=h(b)),o(this.low^b.low,this.high^b.high,this.unsigned)},T.shiftLeft=function(b){return t(b)&&(b=b.toInt()),(b&=63)===0?this:b<32?o(this.low<<b,this.high<<b|this.low>>>32-b,this.unsigned):o(0,this.low<<b-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(b){return t(b)&&(b=b.toInt()),(b&=63)===0?this:b<32?o(this.low>>>b|this.high<<32-b,this.high>>b,this.unsigned):o(this.high>>b-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(b){if(t(b)&&(b=b.toInt()),b&=63,b===0)return this;var U=this.high;if(b<32){var L=this.low;return o(L>>>b|U<<32-b,U>>>b,this.unsigned)}else return b===32?o(U,0,this.unsigned):o(U>>>b-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?o(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:o(this.low,this.high,!0)},T.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var S=this.high,b=this.low;return[b&255,b>>>8&255,b>>>16&255,b>>>24&255,S&255,S>>>8&255,S>>>16&255,S>>>24&255]},T.toBytesBE=function(){var S=this.high,b=this.low;return[S>>>24&255,S>>>16&255,S>>>8&255,S&255,b>>>24&255,b>>>16&255,b>>>8&255,b&255]},e})})(mu);(function(r){(function(e){var t=e.S2={L:{}};t.L.LatLng=function(l,h,u){var d=parseFloat(l,10),f=parseFloat(h,10);if(isNaN(d)||isNaN(f))throw new Error("Invalid LatLng object: ("+l+", "+h+")");return u!==!0&&(d=Math.max(Math.min(d,90),-90),f=(f+180)%360+(f<-180||f===180?180:-180)),{lat:d,lng:f}},t.L.LatLng.DEG_TO_RAD=Math.PI/180,t.L.LatLng.RAD_TO_DEG=180/Math.PI,t.LatLngToXYZ=function(l){var h=t.L.LatLng.DEG_TO_RAD,u=l.lat*h,d=l.lng*h,f=Math.cos(u);return[Math.cos(d)*f,Math.sin(d)*f,Math.sin(u)]},t.XYZToLatLng=function(l){var h=t.L.LatLng.RAD_TO_DEG,u=Math.atan2(l[2],Math.sqrt(l[0]*l[0]+l[1]*l[1])),d=Math.atan2(l[1],l[0]);return t.L.LatLng(u*h,d*h)};var n=function(l){var h=[Math.abs(l[0]),Math.abs(l[1]),Math.abs(l[2])];return h[0]>h[1]?h[0]>h[2]?0:2:h[1]>h[2]?1:2},i=function(l,h){var u,d;switch(l){case 0:u=h[1]/h[0],d=h[2]/h[0];break;case 1:u=-h[0]/h[1],d=h[2]/h[1];break;case 2:u=-h[0]/h[2],d=-h[1]/h[2];break;case 3:u=h[2]/h[0],d=h[1]/h[0];break;case 4:u=h[2]/h[1],d=-h[0]/h[1];break;case 5:u=-h[1]/h[2],d=-h[0]/h[2];break;default:throw{error:"Invalid face"}}return[u,d]};t.XYZToFaceUV=function(l){var h=n(l);l[h]<0&&(h+=3);var u=i(h,l);return[h,u]},t.FaceUVToXYZ=function(l,h){var u=h[0],d=h[1];switch(l){case 0:return[1,u,d];case 1:return[-u,1,d];case 2:return[-u,-d,1];case 3:return[-1,-d,-u];case 4:return[d,-1,-u];case 5:return[d,u,-1];default:throw{error:"Invalid face"}}};var s=function(l){return l>=.5?1/3*(4*l*l-1):1/3*(1-4*(1-l)*(1-l))};t.STToUV=function(l){return[s(l[0]),s(l[1])]};var a=function(l){return l>=0?.5*Math.sqrt(1+3*l):1-.5*Math.sqrt(1-3*l)};t.UVToST=function(l){return[a(l[0]),a(l[1])]},t.STToIJ=function(l,h){var u=1<<h,d=function(f){var p=Math.floor(f*u);return Math.max(0,Math.min(u-1,p))};return[d(l[0]),d(l[1])]},t.IJToST=function(l,h,u){var d=1<<h;return[(l[0]+u[0])/d,(l[1]+u[1])/d]};var o=function(l,h,u,d){if(d==0){u==1&&(h.x=l-1-h.x,h.y=l-1-h.y);var f=h.x;h.x=h.y,h.y=f}},c=function(l,h,u,d){var f={a:[[0,"d"],[1,"a"],[3,"b"],[2,"a"]],b:[[2,"b"],[1,"b"],[3,"a"],[0,"c"]],c:[[2,"c"],[3,"d"],[1,"c"],[0,"b"]],d:[[0,"a"],[3,"c"],[1,"d"],[2,"d"]]};typeof d!="number"&&console.warn(new Error("called pointToHilbertQuadList without face value, defaulting to '0'").stack);for(var p=d%2?"d":"a",g=[],_=u-1;_>=0;_--){var m=1<<_,v=l&m?1:0,y=h&m?1:0,x=f[p][v*2+y];g.push(x[0]),p=x[1]}return g};t.S2Cell=function(){},t.S2Cell.FromHilbertQuadKey=function(l){var h=l.split("/"),u=parseInt(h[0]),d=h[1],f=d.length,p={x:0,y:0},g,_,m,v,y,x;for(g=f-1;g>=0;g--)_=f-g,m=d[g],v=0,y=0,m==="1"?y=1:m==="2"?(v=1,y=1):m==="3"&&(v=1),x=Math.pow(2,_-1),o(x,p,v,y),p.x+=x*v,p.y+=x*y;if(u%2===1){var w=p.x;p.x=p.y,p.y=w}return t.S2Cell.FromFaceIJ(parseInt(u),[p.x,p.y],_)},t.S2Cell.FromLatLng=function(l,h){if(!l.lat&&l.lat!==0||!l.lng&&l.lng!==0)throw new Error("Pass { lat: lat, lng: lng } to S2.S2Cell.FromLatLng");var u=t.LatLngToXYZ(l),d=t.XYZToFaceUV(u),f=t.UVToST(d[1]),p=t.STToIJ(f,h);return t.S2Cell.FromFaceIJ(d[0],p,h)},t.S2Cell.FromFaceIJ=function(l,h,u){var d=new t.S2Cell;return d.face=l,d.ij=h,d.level=u,d},t.S2Cell.prototype.toString=function(){return"F"+this.face+"ij["+this.ij[0]+","+this.ij[1]+"]@"+this.level},t.S2Cell.prototype.getLatLng=function(){var l=t.IJToST(this.ij,this.level,[.5,.5]),h=t.STToUV(l),u=t.FaceUVToXYZ(this.face,h);return t.XYZToLatLng(u)},t.S2Cell.prototype.getCornerLatLngs=function(){for(var l=[],h=[[0,0],[0,1],[1,1],[1,0]],u=0;u<4;u++){var d=t.IJToST(this.ij,this.level,h[u]),f=t.STToUV(d),p=t.FaceUVToXYZ(this.face,f);l.push(t.XYZToLatLng(p))}return l},t.S2Cell.prototype.getFaceAndQuads=function(){var l=c(this.ij[0],this.ij[1],this.level,this.face);return[this.face,l]},t.S2Cell.prototype.toHilbertQuadkey=function(){var l=c(this.ij[0],this.ij[1],this.level,this.face);return this.face.toString(10)+"/"+l.join("")},t.latLngToNeighborKeys=t.S2Cell.latLngToNeighborKeys=function(l,h,u){return t.S2Cell.FromLatLng({lat:l,lng:h},u).getNeighbors().map(function(d){return d.toHilbertQuadkey()})},t.S2Cell.prototype.getNeighbors=function(){var l=function(p,g,_){var m=1<<_;if(g[0]>=0&&g[1]>=0&&g[0]<m&&g[1]<m)return t.S2Cell.FromFaceIJ(p,g,_);var v=t.IJToST(g,_,[.5,.5]),y=t.STToUV(v),x=t.FaceUVToXYZ(p,y),w=t.XYZToFaceUV(x);return p=w[0],y=w[1],v=t.UVToST(y),g=t.STToIJ(v,_),t.S2Cell.FromFaceIJ(p,g,_)},h=this.face,u=this.ij[0],d=this.ij[1],f=this.level;return[l(h,[u-1,d],f),l(h,[u,d-1],f),l(h,[u+1,d],f),l(h,[u,d+1],f)]},t.FACE_BITS=3,t.MAX_LEVEL=30,t.POS_BITS=2*t.MAX_LEVEL+1,t.facePosLevelToId=t.S2Cell.facePosLevelToId=t.fromFacePosLevel=function(l,h,u){var d=e.dcodeIO&&e.dcodeIO.Long||mu.exports,f,p,g;for(u||(u=h.length),h.length>u&&(h=h.substr(0,u)),f=d.fromString(l.toString(10),!0,10).toString(2);f.length<t.FACE_BITS;)f="0"+f;for(p=d.fromString(h,!0,4).toString(2);p.length<2*u;)p="0"+p;for(g=f+p,g+="1";g.length<t.FACE_BITS+t.POS_BITS;)g+="0";return d.fromString(g,!0,2).toString(10)},t.keyToId=t.S2Cell.keyToId=t.toId=t.toCellId=t.fromKey=function(l){var h=l.split("/");return t.fromFacePosLevel(h[0],h[1],h[1].length)},t.idToKey=t.S2Cell.idToKey=t.S2Cell.toKey=t.toKey=t.fromId=t.fromCellId=t.S2Cell.toHilbertQuadkey=t.toHilbertQuadkey=function(l){for(var h=e.dcodeIO&&e.dcodeIO.Long||mu.exports,u=h.fromString(l,!0,10).toString(2);u.length<t.FACE_BITS+t.POS_BITS;)u="0"+u;for(var d=u.lastIndexOf("1"),f=u.substring(0,3),p=u.substring(3,d),g=p.length/2,_=h.fromString(f,!0,2).toString(10),m=h.fromString(p,!0,2).toString(4);m.length<g;)m="0"+m;return _+"/"+m},t.keyToLatLng=t.S2Cell.keyToLatLng=function(l){var h=t.S2Cell.FromHilbertQuadKey(l);return h.getLatLng()},t.idToLatLng=t.S2Cell.idToLatLng=function(l){var h=t.idToKey(l);return t.keyToLatLng(h)},t.S2Cell.latLngToKey=t.latLngToKey=t.latLngToQuadkey=function(l,h,u){if(isNaN(u)||u<1||u>30)throw new Error("'level' is not a number between 1 and 30 (but it should be)");return t.S2Cell.FromLatLng({lat:l,lng:h},u).toHilbertQuadkey()},t.stepKey=function(l,h){var u=e.dcodeIO&&e.dcodeIO.Long||mu.exports,d=l.split("/"),f=d[0],p=d[1],g=d[1].length,_=u.fromString(p,!0,4),m;h>0?m=_.add(Math.abs(h)):h<0&&(m=_.subtract(Math.abs(h)));var v=m.toString(4);for(v==="0"&&console.warning(new Error("face/position wrapping is not yet supported"));v.length<g;)v="0"+v;return f+"/"+v},t.S2Cell.prevKey=t.prevKey=function(l){return t.stepKey(l,-1)},t.S2Cell.nextKey=t.nextKey=function(l){return t.stepKey(l,1)}})(r.exports)})(Hr);class B4 extends U4{constructor(e=17){super(),this._level=e}bboxToCellIds(e,t){return this._approxBboxToCellIds(e,t)}getAdjacent(e){const t=Hr.exports.S2.idToKey(e),i=t.split("/")[1].length,[s,a,o,c]=this._getNeighbors(t,i),l=[t,s,a,o,c],h=Array.from(new Set([...this._getNeighbors(s,i),...this._getNeighbors(a,i),...this._getNeighbors(o,i),...this._getNeighbors(c,i)].filter(d=>!l.includes(d)))),u=[s,a,o,c];for(const d of h){let f=0;for(const p of this._getNeighbors(d,i))l.includes(p)&&f++;f===2&&u.push(d)}return u.map(d=>Hr.exports.S2.keyToId(d))}getVertices(e){const t=Hr.exports.S2.idToKey(e);return Hr.exports.S2.S2Cell.FromHilbertQuadKey(t).getCornerLatLngs().map(i=>({lat:i.lat,lng:i.lng}))}lngLatToCellId(e){return this._lngLatToId(e,this._level)}_getNeighbors(e,t){const n=Hr.exports.S2.keyToLatLng(e);return Hr.exports.S2.latLngToNeighborKeys(n.lat,n.lng,t)}_lngLatToId(e,t){const n=Hr.exports.S2.latLngToKey(e.lat,e.lng,t);return Hr.exports.S2.keyToId(n)}}function $4(r){switch(r){case"equirectangular":case"spherical":return"spherical";case"fisheye":return"fisheye";default:return"perspective"}}class k4{clusterReconstruction(e){const n=e.points,i=1/255;for(const o in n){if(!n.hasOwnProperty(o))continue;const c=n[o].color;c[0]*=i,c[1]*=i,c[2]*=i}const s=e.reference_lla,a={alt:s.altitude,lat:s.latitude,lng:s.longitude};return{id:null,points:n,reference:a}}coreImage(e){const t=this._geometry(e.geometry),n=this._geometry(e.computed_geometry),i={id:e.sequence},s=e.id;return{computed_geometry:n,geometry:t,id:s,sequence:i}}spatialImage(e){var t,n,i,s,a;e.camera_type=$4(e.camera_type),e.merge_id=e.merge_cc?e.merge_cc.toString():null,e.private=null;const o=e.camera_type==="spherical"?e.thumb_2048_url:e.thumb_1024_url;return e.thumb=(t=e.thumb)!==null&&t!==void 0?t:{id:null,url:o},e.cluster=(n=e.sfm_cluster)!==null&&n!==void 0?n:{id:null,url:null},e.creator=(i=e.creator)!==null&&i!==void 0?i:{id:null,username:null},e.owner=(s=e.organization)!==null&&s!==void 0?s:{id:null},e.mesh=(a=e.mesh)!==null&&a!==void 0?a:{id:null,url:null},e}_geometry(e){const t=e==null?void 0:e.coordinates;return t?{lat:t[1],lng:t[0]}:null}}class z4{constructor(){this.imagesPath="images",this.sequencePath="image_ids",this._imageTilesPath="tiles",this.coreFields=["computed_geometry","geometry","sequence"],this.idFields=["id"],this.spatialFields=["altitude","atomic_scale","camera_parameters","camera_type","captured_at","compass_angle","computed_altitude","computed_compass_angle","computed_rotation","creator","exif_orientation","height","merge_cc","mesh","organization","quality_score","sfm_cluster","thumb_1024_url","thumb_2048_url","width"],this.imageTileFields=["url","z","x","y"]}images(e,t){return`image_ids=${e.join(",")}&fields=${t.join(",")}`}imagesS2(e,t){return`s2=${e}&fields=${t.join(",")}`}imageTiles(e,t){return`z=${e}&fields=${t.join(",")}`}imageTilesPath(e){return`${e}/${this._imageTilesPath}`}sequence(e){return`sequence_id=${e}`}}class V4 extends O4{constructor(e,t,n,i){var s;super(t??new B4),this._convert=n??new k4,this._query=i??new z4,this._method="GET";const a=e??{};this._endpoint=(s=a.endpoint)!==null&&s!==void 0?s:"https://graph.mapillary.com",this._accessToken=a.accessToken}getCluster(e,t){return ep(e,t).then(n=>{const i=D4(n);if(i.length<1)throw new Error("Cluster reconstruction empty");return this._convert.clusterReconstruction(i[0])})}getCoreImages(e){const t=[...this._query.idFields,...this._query.coreFields],n=this._query.imagesS2(e,t),i=new URL(this._query.imagesPath,this._endpoint).href;return this._fetchGraphContract(n,i).then(s=>{const a={cell_id:e,images:[]},o=s.data;for(const c of o){const l=this._convert.coreImage(c);a.images.push(l)}return a})}getImageBuffer(e,t){return ep(e,t)}getImages(e){const t=[...this._query.idFields,...this._query.coreFields,...this._query.spatialFields],n=this._query.images(e,t),i=new URL(this._query.imagesPath,this._endpoint).href;return this._fetchGraphContract(n,i).then(s=>{const a=[],o=s.data;for(const c of o){const l=this._convert.coreImage(c),h=this._convert.spatialImage(c),d={node:Object.assign({},h,l),node_id:c.id};a.push(d)}return a})}getImageTiles(e){const t=[...this._query.imageTileFields],n=this._query.imageTiles(e.z,t),i=new URL(this._query.imageTilesPath(e.imageId),this._endpoint).href;return this._fetchGraphContract(n,i).then(s=>({node:s.data,node_id:e.imageId}))}getMesh(e,t){return ep(e,t).then(n=>F4(n))}getSequence(e){const t=this._query.sequence(e),n=new URL(this._query.sequencePath,this._endpoint).href;return this._fetchGraphContract(t,n).then(i=>({id:e,image_ids:i.data.map(a=>a.id)}))}getSpatialImages(e){const t=[...this._query.idFields,...this._query.coreFields,...this._query.spatialFields],n=this._query.images(e,t),i=new URL(this._query.imagesPath,this._endpoint).href;return this._fetchGraphContract(n,i).then(s=>{const a=[],o=s.data;for(const c of o){const h={node:this._convert.spatialImage(c),node_id:c.id};a.push(h)}return a})}setAccessToken(e){this._accessToken=e}_createHeaders(){const e=[{name:"Accept",value:"application/json"},{name:"Content-Type",value:"application/x-www-form-urlencoded"}];return this._accessToken&&e.push({name:"Authorization",value:`OAuth ${this._accessToken}`}),e}_fetchGraphContract(e,t){const n=this._method,i=this._createHeaders(),s=`${t}?${e}`;return iw(s,n,"json",i,null,null).catch(a=>{const o=this._makeErrorMessage(a);throw new Zt(o)})}_makeErrorMessage(e){const t=e.error;return t?`${t.code} (${t.type}, ${t.fbtrace_id}): ${t.message}`:"Failed to fetch data"}}var Qr;(function(r){r[r.Custom=0]="Custom",r[r.Earth=1]="Earth",r[r.Street=2]="Street"})(Qr||(Qr={}));var Vo;(function(r){r[r.Letterbox=0]="Letterbox",r[r.Fill=1]="Fill"})(Vo||(Vo={}));var Tm;(function(r){r[r.Opaque=0]="Opaque"})(Tm||(Tm={}));var Vu;(function(r){r[r.Default=0]="Default",r[r.Instantaneous=1]="Instantaneous"})(Vu||(Vu={}));class H4{constructor(e,t,n,i,s,a){this._container=e,this._observer=n,this._navigator=t,this._options=s??{},this._key=i,this._navigable=i==null,this._componentService=a||new nn(this._container,this._navigator),this._coverComponent=this._componentService.getCover(),this._initializeComponents(),i?(this._initilizeCoverComponent(),this._subscribeCoverComponent()):this._navigator.movedToId$.pipe(Ve(o=>o!=null)).subscribe(o=>{this._key=o,this._componentService.deactivateCover(),this._coverComponent.configure({id:this._key,state:oi.Hidden}),this._subscribeCoverComponent(),this._navigator.stateService.start(),this._navigator.cacheService.start(),this._navigator.panService.start(),this._observer.startEmit()})}get navigable(){return this._navigable}get(e){return this._componentService.get(e)}activate(e){this._componentService.activate(e)}activateCover(){this._coverComponent.configure({state:oi.Visible})}deactivate(e){this._componentService.deactivate(e)}deactivateCover(){this._coverComponent.configure({state:oi.Loading})}remove(){this._componentService.remove(),this._configurationSubscription!=null&&this._configurationSubscription.unsubscribe()}_initializeComponents(){var e,t;const n=this._options;this._uFalse((e=n.fallback)===null||e===void 0?void 0:e.image,"imagefallback"),this._uFalse((t=n.fallback)===null||t===void 0?void 0:t.navigation,"navigationfallback"),this._uFalse(n.marker,"marker"),this._uFalse(n.popup,"popup"),this._uFalse(n.slider,"slider"),this._uFalse(n.spatial,"spatial"),this._uFalse(n.tag,"tag"),this._uTrue(n.attribution,"attribution"),this._uTrue(n.bearing,"bearing"),this._uTrue(n.cache,"cache"),this._uTrue(n.direction,"direction"),this._uTrue(n.image,"image"),this._uTrue(n.keyboard,"keyboard"),this._uTrue(n.pointer,"pointer"),this._uTrue(n.sequence,"sequence"),this._uTrue(n.zoom,"zoom")}_initilizeCoverComponent(){let e=this._options;this._coverComponent.configure({id:this._key}),e.cover===void 0||e.cover?this.activateCover():this.deactivateCover()}_setNavigable(e){this._navigable!==e&&(this._navigable=e,this._observer.navigable$.next(e))}_subscribeCoverComponent(){this._configurationSubscription=this._coverComponent.configuration$.pipe(Be(void 0,e=>e.state)).subscribe(e=>{e.state===oi.Loading?this._navigator.stateService.currentId$.pipe(Ve(),we(t=>{const n=t==null||t!==e.id;return n&&this._setNavigable(!1),n?this._navigator.moveTo$(e.id):this._navigator.stateService.currentImage$.pipe(Ve())})).subscribe(()=>{this._navigator.stateService.start(),this._navigator.cacheService.start(),this._navigator.panService.start(),this._observer.startEmit(),this._coverComponent.configure({state:oi.Hidden}),this._componentService.deactivateCover(),this._setNavigable(!0)},t=>{console.error("Failed to deactivate cover.",t),this._coverComponent.configure({state:oi.Visible})}):e.state===oi.Visible&&(this._observer.stopEmit(),this._navigator.stateService.stop(),this._navigator.cacheService.stop(),this._navigator.playService.stop(),this._navigator.panService.stop(),this._componentService.activateCover(),this._setNavigable(e.id==null))})}_uFalse(e,t){if(e===void 0){this._componentService.deactivate(t);return}if(typeof e=="boolean"){e?this._componentService.activate(t):this._componentService.deactivate(t);return}this._componentService.configure(t,e),this._componentService.activate(t)}_uTrue(e,t){if(e===void 0){this._componentService.activate(t);return}if(typeof e=="boolean"){e?this._componentService.activate(t):this._componentService.deactivate(t);return}this._componentService.configure(t,e),this._componentService.activate(t)}}class G4{constructor(e,t,n){this._adaptiveOperation$=new De,this._render$=new De,this._renderAdaptive$=new De,this._subscriptions=new Gn,this._renderService=t,this._currentFrame$=n;const i=this._subscriptions,s=ve.create(ve.h("div.mapillary-dom-renderer",[]));e.appendChild(s),this._offset$=this._adaptiveOperation$.pipe(cn((c,l)=>l(c),{elementHeight:e.offsetHeight,elementWidth:e.offsetWidth,imageAspect:0,renderMode:Vo.Fill}),Fe(c=>c.imageAspect>0&&c.elementWidth>0&&c.elementHeight>0),V(c=>{const l=c.elementWidth/c.elementHeight,h=c.imageAspect/l;let u=0,d=0;return c.renderMode===Vo.Letterbox?c.imageAspect>l?u=c.elementHeight*(1-1/h)/2:d=c.elementWidth*(1-h)/2:c.imageAspect>l?d=-c.elementWidth*(h-1)/2:u=-c.elementHeight*(1/h-1)/2,{bottom:u,left:d,right:d,top:u}}));const a=this._currentFrame$.pipe(Fe(c=>c.state.currentImage!=null),Be((c,l)=>c===l,c=>c.state.currentImage.id),V(c=>c.state.currentTransform.basicAspect),V(c=>l=>(l.imageAspect=c,l))).subscribe(this._adaptiveOperation$),o=He(this._renderAdaptive$.pipe(cn((c,l)=>(l.vNode==null?delete c[l.name]:c[l.name]=l.vNode,c),{})),this._offset$).pipe(V(c=>{const l=[],h=c[0];for(const f in h)h.hasOwnProperty(f)&&l.push(h[f]);const u=c[1],d={style:{bottom:u.bottom+"px",left:u.left+"px","pointer-events":"none",position:"absolute",right:u.right+"px",top:u.top+"px"}};return{name:"mapillary-dom-adaptive-renderer",vNode:ve.h("div.mapillary-dom-adaptive-renderer",d,l)}})).subscribe(this._render$);this._vNode$=this._render$.pipe(cn((c,l)=>(l.vNode==null?delete c[l.name]:c[l.name]=l.vNode,c),{}),V(c=>{const l=[];for(const h in c)c.hasOwnProperty(h)&&l.push(c[h]);return ve.h("div.mapillary-dom-renderer",l)})),this._vPatch$=this._vNode$.pipe(cn((c,l)=>(c.vpatch=ve.diff(c.vNode,l),c.vNode=l,c),{vNode:ve.h("div.mapillary-dom-renderer",[]),vpatch:null}),R2("vpatch")),this._element$=this._vPatch$.pipe(cn((c,l)=>ve.patch(c,l),s),Ke(1),Ue()),i.push(a),i.push(o),i.push(this._element$.subscribe(()=>{})),i.push(this._renderService.size$.pipe(V(c=>l=>(l.elementWidth=c.width,l.elementHeight=c.height,l))).subscribe(this._adaptiveOperation$)),i.push(this._renderService.renderMode$.pipe(V(c=>l=>(l.renderMode=c,l))).subscribe(this._adaptiveOperation$))}get element$(){return this._element$}get render$(){return this._render$}get renderAdaptive$(){return this._renderAdaptive$}clear(e){this._renderAdaptive$.next({name:e,vNode:null}),this._render$.next({name:e,vNode:null})}remove(){this._subscriptions.unsubscribe()}}class W4{constructor(e,t,n){this._renderFrame$=new De,this._renderCameraOperation$=new De,this._render$=new De,this._clear$=new De,this._renderOperation$=new De,this._rendererOperation$=new De,this._eraserOperation$=new De,this._triggerOperation$=new De,this._subscriptions=new Gn,this._opaqueRender$=new De,this._renderService=n;const i=this._subscriptions;this._renderer$=this._rendererOperation$.pipe(cn((p,g)=>g(p),{needsRender:!1,renderer:null}),Fe(p=>!!p.renderer)),this._renderCollection$=this._renderOperation$.pipe(cn((p,g)=>g(p),{}),vt()),this._renderCamera$=this._renderCameraOperation$.pipe(cn((p,g)=>g(p),{frameId:-1,needsRender:!1,perspective:null})),this._eraser$=this._eraserOperation$.pipe(At(p=>p),cn((p,g)=>g(p),{needsRender:!1}));const s=this._triggerOperation$.pipe(At(p=>p),cn((p,g)=>g(p),{needsRender:!1})),a=new st(986895),o=He(this._renderer$,this._renderCollection$,this._renderCamera$,this._eraser$,s).pipe(V(([p,g,_,m,v])=>{const y=Object.keys(g).map(x=>g[x]);return{camera:_,eraser:m,trigger:v,renderer:p,renders:y}}),Fe(p=>{let g=p.renderer.needsRender||p.camera.needsRender||p.eraser.needsRender||p.trigger.needsRender;const _=p.camera.frameId;for(const m of p.renders){if(m.frameId!==_)return!1;g=g||m.needsRender}return g}),Be((p,g)=>p===g,p=>p.eraser.needsRender||p.trigger.needsRender?-p.camera.frameId:p.camera.frameId)).subscribe(p=>{p.renderer.needsRender=!1,p.camera.needsRender=!1,p.eraser.needsRender=!1,p.trigger.needsRender=!1;const g=p.camera.perspective,_=[],m=[];for(const y of p.renders)y.pass===os.Background?_.push(y.render):y.pass===os.Opaque&&m.push(y.render);const v=p.renderer.renderer;v.resetState(),v.setClearColor(a,1),v.clear();for(const y of _)y(g,v);v.clearDepth();for(const y of m)y(g,v);v.resetState(),this._opaqueRender$.next()});i.push(o),i.push(this._renderFrame$.pipe(V(p=>g=>(g.frameId=p.frameId,g.perspective=p.perspective,p.changed===!0&&(g.needsRender=!0),g))).subscribe(this._renderCameraOperation$)),this._renderFrameSubscribe();const c=this._render$.pipe(V(p=>g=>(g[p.name]=p.renderer,g))),l=this._clear$.pipe(V(p=>g=>(delete g[p],g)));i.push(xt(c,l).subscribe(this._renderOperation$)),this._webGLRenderer$=this._render$.pipe(Ve(),V(()=>{t.appendChild(e);const p=n.element,g=new Kt({canvas:e});return g.setPixelRatio(window.devicePixelRatio),g.setSize(p.offsetWidth,p.offsetHeight),g.autoClear=!1,g}),Ke(1),Ue()),i.push(this._webGLRenderer$.subscribe(()=>{}));const h=this._webGLRenderer$.pipe(Ve(),V(p=>g=>(g.needsRender=!0,g.renderer=p,g))),u=this._renderService.size$.pipe(V(p=>g=>(g.renderer==null||(g.renderer.setSize(p.width,p.height),g.needsRender=!0),g))),d=this._clear$.pipe(V(()=>p=>(p.renderer==null||(p.needsRender=!0),p)));i.push(xt(h,u,d).subscribe(this._rendererOperation$));const f=this._renderCollection$.pipe(Fe(p=>Object.keys(p).length===0),vt());i.push(f.subscribe(()=>{this._renderFrameSubscription!=null&&(this._renderFrameSubscription.unsubscribe(),this._renderFrameSubscription=null,this._renderFrameSubscribe())})),i.push(f.pipe(V(()=>p=>(p.needsRender=!0,p))).subscribe(this._eraserOperation$))}get render$(){return this._render$}get opaqueRender$(){return this._opaqueRender$}get webGLRenderer$(){return this._webGLRenderer$}clear(e){this._clear$.next(e)}remove(){this._rendererOperation$.next(e=>{if(e.renderer!=null){const t=e.renderer.getContext().getExtension("WEBGL_lose_context");t&&t.loseContext(),e.renderer=null}return e}),this._renderFrameSubscription!=null&&this._renderFrameSubscription.unsubscribe(),this._subscriptions.unsubscribe()}triggerRerender(){this._renderService.renderCameraFrame$.pipe(In(1),Ve()).subscribe(()=>{this._triggerOperation$.next(e=>(e.needsRender=!0,e))})}_renderFrameSubscribe(){this._render$.pipe(Ve(),V(()=>e=>(e.needsRender=!0,e))).subscribe(e=>{this._renderCameraOperation$.next(e)}),this._renderFrameSubscription=this._render$.pipe(Ve(),ct(()=>this._renderService.renderCameraFrame$)).subscribe(this._renderFrame$)}}class Rs{constructor(e){e!=null?(this._position=new D().fromArray(e.unprojectSfM([0,0],0)),this._lookat=new D().fromArray(e.unprojectSfM([0,0],10)),this._up=e.upVector(),this._focal=this._getFocal(e)):(this._position=new D(0,0,0),this._lookat=new D(1,0,0),this._up=new D(0,0,1),this._focal=1)}get position(){return this._position}get lookat(){return this._lookat}get up(){return this._up}get focal(){return this._focal}set focal(e){this._focal=e}lerpCameras(e,t,n){this._position.subVectors(t.position,e.position).multiplyScalar(n).add(e.position),this._lookat.subVectors(t.lookat,e.lookat).multiplyScalar(n).add(e.lookat),this._up.subVectors(t.up,e.up).multiplyScalar(n).add(e.up),this._focal=(1-n)*e.focal+n*t.focal}copy(e){this._position.copy(e.position),this._lookat.copy(e.lookat),this._up.copy(e.up),this._focal=e.focal}clone(){let e=new Rs;return e.position.copy(this._position),e.lookat.copy(this._lookat),e.up.copy(this._up),e.focal=this._focal,e}diff(e){let t=this._position.distanceToSquared(e.position),n=this._lookat.distanceToSquared(e.lookat),i=this._up.distanceToSquared(e.up),s=100*Math.abs(this._focal-e.focal);return Math.max(t,n,i,s)}_getFocal(e){return tt(e.cameraType)?.5/Math.tan(Math.PI/2):e.focal}}class q4{constructor(e,t,n){this._spatial=new Hn,this._viewportCoords=new ei,this._size={width:e,height:t},this._initialFov=60,this._alpha=-1,this._stateTransitionAlpha=-1,this._stateTransitionFov=-1,this._renderMode=n,this._zoom=0,this._frameId=-1,this._changed=!1,this._changedForFrame=-1,this._currentImageId=null,this._previousImageId=null,this._currentSpherical=!1,this._previousSpherical=!1,this._state=null,this._currentProjectedPoints=[],this._previousProjectedPoints=[],this._currentFov=this._initialFov,this._previousFov=this._initialFov,this._camera=new Rs,this._perspective=new li(this._initialFov,this._computeAspect(e,t),.1,1e4),this._perspective.position.copy(this._camera.position),this._perspective.up.copy(this._camera.up),this._perspective.lookAt(this._camera.lookat),this._perspective.updateMatrixWorld(!0),this._perspective.matrixAutoUpdate=!1,this._rotation={phi:0,theta:0}}get alpha(){return this._alpha}get camera(){return this._camera}get changed(){return this._frameId===this._changedForFrame}get frameId(){return this._frameId}get perspective(){return this._perspective}get renderMode(){return this._renderMode}get rotation(){return this._rotation}get zoom(){return this._zoom}get size(){return this._size}getTilt(){return 90-this._spatial.radToDeg(this._rotation.theta)}fovToZoom(e){e=Math.min(90,Math.max(0,e));const t=this._computeCurrentFov(0),n=this._alpha===1?t:this._interpolateFov(t,this._computePreviousFov(0),this._alpha),i=Math.tan(n/2*Math.PI/180),s=Math.tan(e/2*Math.PI/180);return Math.log(i/s)/Math.log(2)}setFrame(e){const t=e.state;if(t.state!==this._state){if(this._state=t.state,this._state!==it.Custom&&(this.setRenderMode(this._renderMode),this.setSize(this._size)),this._state===it.Earth){const l=this._fovToY(this._perspective.fov,this._zoom);this._stateTransitionFov=this._yToFov(l,0)}this._changed=!0}const n=t.currentImage.id,i=t.previousImage?t.previousImage.id:null;n!==this._currentImageId&&(this._currentImageId=n,this._currentSpherical=tt(t.currentTransform.cameraType),this._currentProjectedPoints=this._computeProjectedPoints(t.currentTransform),this._changed=!0),i!==this._previousImageId&&(this._previousImageId=i,this._previousSpherical=tt(t.previousTransform.cameraType),this._previousProjectedPoints=this._computeProjectedPoints(t.previousTransform),this._changed=!0);const s=t.zoom;s!==this._zoom&&(this._changed=!0),this._changed&&(this._currentFov=this._computeCurrentFov(s),this._previousFov=this._computePreviousFov(s));const a=t.alpha,o=t.stateTransitionAlpha;if(this._changed||a!==this._alpha||o!==this._stateTransitionAlpha){switch(this._alpha=a,this._stateTransitionAlpha=o,this._state){case it.Earth:{const l=this._stateTransitionFov,h=this._focalToFov(t.camera.focal),u=No.lerp(l,h,o),d=this._fovToY(u,0);this._perspective.fov=this._yToFov(d,s);break}case it.Custom:break;default:this._perspective.fov=this._interpolateFov(this._currentFov,this._previousFov,this._alpha),this._changed=!0;break}this._zoom=s,this._state!==it.Custom&&this._perspective.updateProjectionMatrix()}const c=t.camera;this._camera.diff(c)>1e-9&&(this._camera.copy(c),this._rotation=this._computeRotation(c),this._perspective.up.copy(c.up),this._perspective.position.copy(c.position),this._perspective.matrixAutoUpdate=!0,this._perspective.lookAt(c.lookat),this._perspective.matrixAutoUpdate=!1,this._perspective.updateMatrix(),this._perspective.updateMatrixWorld(!1),this._changed=!0),this._setFrameId(e.id)}setProjectionMatrix(e){this._perspective.fov=this._focalToFov(e[5]/2),this._perspective.projectionMatrix.fromArray(e),this._perspective.projectionMatrixInverse.copy(this._perspective.projectionMatrix).invert(),this._changed=!0}setRenderMode(e){this._renderMode=e,this._state!==it.Custom&&(this._perspective.fov=this._computeFov(),this._perspective.updateProjectionMatrix(),this._changed=!0)}setSize(e){this._size=e,this._state!==it.Custom&&(this._perspective.aspect=this._computeAspect(e.width,e.height),this._perspective.fov=this._computeFov(),this._perspective.updateProjectionMatrix(),this._changed=!0)}_computeAspect(e,t){return e===0?0:e/t}_computeCurrentFov(e){return this._perspective.aspect===0?0:this._currentImageId?this._currentSpherical?this._yToFov(1,e):this._computeVerticalFov(this._currentProjectedPoints,this._renderMode,e,this.perspective.aspect):this._initialFov}_computeFov(){return this._currentFov=this._computeCurrentFov(this._zoom),this._previousFov=this._computePreviousFov(this._zoom),this._interpolateFov(this._currentFov,this._previousFov,this._alpha)}_computePreviousFov(e){return this._perspective.aspect===0?0:this._currentImageId?this._previousImageId?this._previousSpherical?this._yToFov(1,e):this._computeVerticalFov(this._previousProjectedPoints,this._renderMode,e,this.perspective.aspect):this._currentFov:this._initialFov}_computeProjectedPoints(e){return _g(e,[[.5,0],[1,0]],[[.5,0],[0,.5]],100,this._viewportCoords)}_computeRequiredVerticalFov(e,t,n){const i=Math.max(e[0]/n,e[1]);return this._yToFov(i,t)}_computeRotation(e){let t=e.lookat.clone().sub(e.position),n=e.up.clone(),i=this._spatial.azimuthal(t.toArray(),n.toArray()),s=Math.PI/2-this._spatial.angleToPlane(t.toArray(),[0,0,1]);return{phi:i,theta:s}}_computeVerticalFov(e,t,n,i){const s=e.map(o=>this._computeRequiredVerticalFov(o,n,i));return t===Vo.Fill?Math.min(...s)*.995:Math.max(...s)}_yToFov(e,t){return 2*Math.atan(e/Math.pow(2,t))*180/Math.PI}_focalToFov(e){return 2*Math.atan2(1,2*e)*180/Math.PI}_fovToY(e,t){return Math.pow(2,t)*Math.tan(Math.PI*e/360)}_interpolateFov(e,t,n){return n*e+(1-n)*t}_setFrameId(e){this._frameId=e,this._changed&&(this._changed=!1,this._changedForFrame=e)}}class j4{constructor(e,t,n,i){this._subscriptions=new Gn,this._element=e,this._currentFrame$=t,this._spatial=new Hn,n=n??Vo.Fill,this._resize$=new De,this._projectionMatrix$=new De,this._renderCameraOperation$=new De,this._size$=new ss({height:this._element.offsetHeight,width:this._element.offsetWidth});const s=this._subscriptions;s.push(this._resize$.pipe(V(()=>({height:this._element.offsetHeight,width:this._element.offsetWidth}))).subscribe(this._size$)),this._renderMode$=new ss(n),this._renderCameraHolder$=this._renderCameraOperation$.pipe(At(a=>a),cn((a,o)=>o(a),i??new q4(this._element.offsetWidth,this._element.offsetHeight,n)),Ke(1),Ue()),this._renderCameraFrame$=this._currentFrame$.pipe(at(this._renderCameraHolder$),an(([a,o])=>{o.setFrame(a)}),V(a=>a[1]),Ke(1),Ue()),this._renderCamera$=this._renderCameraFrame$.pipe(Fe(a=>a.changed),Ke(1),Ue()),this._bearing$=this._renderCamera$.pipe(V(a=>{let o=this._spatial.radToDeg(this._spatial.azimuthalToBearing(a.rotation.phi));return this._spatial.wrap(o,0,360)}),Ke(1),Ue()),s.push(this._size$.pipe(In(1),V(a=>o=>(o.setSize(a),o))).subscribe(this._renderCameraOperation$)),s.push(this._renderMode$.pipe(In(1),V(a=>o=>(o.setRenderMode(a),o))).subscribe(this._renderCameraOperation$)),s.push(this._projectionMatrix$.pipe(V(a=>o=>(o.setProjectionMatrix(a),o))).subscribe(this._renderCameraOperation$)),s.push(this._bearing$.subscribe(()=>{})),s.push(this._renderCameraHolder$.subscribe(()=>{})),s.push(this._size$.subscribe(()=>{})),s.push(this._renderMode$.subscribe(()=>{})),s.push(this._renderCamera$.subscribe(()=>{})),s.push(this._renderCameraFrame$.subscribe(()=>{}))}get bearing$(){return this._bearing$}get element(){return this._element}get projectionMatrix$(){return this._projectionMatrix$}get renderCamera$(){return this._renderCamera$}get renderCameraFrame$(){return this._renderCameraFrame$}get renderMode$(){return this._renderMode$}get resize$(){return this._resize$}get size$(){return this._size$}dispose(){this._subscriptions.unsubscribe()}}class X4{constructor(e){this._keyDown$=tn(e,"keydown"),this._keyUp$=tn(e,"keyup")}get keyDown$(){return this._keyDown$}get keyUp$(){return this._keyUp$}}const po=0,Rc=2,Y4={[po]:1,[Rc]:2};class Z4{constructor(e,t,n,i){this._subscriptions=new Gn;const s=this._subscriptions;this._activeSubject$=new ss(!1),this._active$=this._activeSubject$.pipe(Be(),Ke(1),Ue()),this._claimMouse$=new De,this._claimWheel$=new De,this._deferPixelClaims$=new De,this._deferPixels$=this._deferPixelClaims$.pipe(cn((u,d)=>(d.deferPixels==null?delete u[d.name]:u[d.name]=d.deferPixels,u),{}),V(u=>{let d=-1;for(const f in u){if(!u.hasOwnProperty(f))continue;const p=u[f];p>d&&(d=p)}return d}),At(-1),Ke(1),Ue()),s.push(this._deferPixels$.subscribe(()=>{})),this._documentMouseMove$=tn(i,"pointermove").pipe(Fe(this._isMousePen)),this._documentMouseUp$=tn(i,"pointerup").pipe(Fe(this._isMousePen)),this._mouseDown$=tn(t,"pointerdown").pipe(Fe(this._isMousePen)),this._mouseEnter$=tn(t,"pointerenter").pipe(Fe(this._isMousePen)),this._mouseLeave$=tn(t,"pointerleave").pipe(Fe(this._isMousePen)),this._mouseMove$=tn(t,"pointermove").pipe(Fe(this._isMousePen)),this._mouseUp$=tn(t,"pointerup").pipe(Fe(this._isMousePen)),this._mouseOut$=tn(t,"pointerout").pipe(Fe(this._isMousePen)),this._mouseOver$=tn(t,"pointerover").pipe(Fe(this._isMousePen)),this._domMouseDown$=tn(n,"pointerdown").pipe(Fe(this._isMousePen)),this._domMouseMove$=tn(n,"pointermove").pipe(Fe(this._isMousePen)),this._click$=tn(t,"click"),this._contextMenu$=tn(t,"contextmenu"),this._windowBlur$=tn(window,"blur"),this._dblClick$=xt(tn(e,"click"),tn(t,"dblclick")).pipe(Mu(3,1),Fe(u=>{const d=u[0],f=u[1],p=u[2];return d.type==="click"&&f.type==="click"&&p.type==="dblclick"&&d.target.parentNode===t&&f.target.parentNode===t}),V(u=>u[2]),vt()),s.push(xt(this._domMouseDown$,this._domMouseMove$,this._dblClick$,this._contextMenu$).subscribe(u=>{u.preventDefault()})),this._mouseWheel$=xt(tn(t,"wheel"),tn(n,"wheel")).pipe(vt()),this._consistentContextMenu$=xt(this._mouseDown$,this._mouseMove$,this._mouseOut$,this._mouseUp$,this._contextMenu$).pipe(Mu(3,1),Fe(u=>u[0].type==="pointerdown"&&u[1].type==="contextmenu"&&u[2].type==="pointerup"),V(u=>u[1]),vt());const a=xt(this._windowBlur$,this._documentMouseMove$.pipe(Fe(u=>this._buttonReleased(u,po))),this._documentMouseUp$.pipe(Fe(u=>this._mouseButton(u)===po))).pipe(vt()),o=this._createMouseDragInitiate$(po,this._mouseDown$,a,!0).pipe(vt());this._mouseDragStart$=this._createMouseDragStart$(o).pipe(vt()),this._mouseDrag$=this._createMouseDrag$(o,a).pipe(vt()),this._mouseDragEnd$=this._createMouseDragEnd$(this._mouseDragStart$,a).pipe(vt());const c=this._createMouseDragInitiate$(po,this._domMouseDown$,a,!1).pipe(vt());this._domMouseDragStart$=this._createMouseDragStart$(c).pipe(vt()),this._domMouseDrag$=this._createMouseDrag$(c,a).pipe(vt()),this._domMouseDragEnd$=this._createMouseDragEnd$(this._domMouseDragStart$,a).pipe(vt());const l=xt(this._windowBlur$,this._documentMouseMove$.pipe(Fe(u=>this._buttonReleased(u,Rc))),this._documentMouseUp$.pipe(Fe(u=>this._mouseButton(u)===Rc))).pipe(vt()),h=this._createMouseDragInitiate$(Rc,this._mouseDown$,l,!0).pipe(vt());this._mouseRightDragStart$=this._createMouseDragStart$(h).pipe(vt()),this._mouseRightDrag$=this._createMouseDrag$(h,l).pipe(vt()),this._mouseRightDragEnd$=this._createMouseDragEnd$(this._mouseRightDragStart$,l).pipe(vt()),this._proximateClick$=this._mouseDown$.pipe(we(u=>this._click$.pipe(As(this._createDeferredMouseMove$(u,this._documentMouseMove$)),Hi(1))),vt()),this._staticClick$=this._mouseDown$.pipe(we(()=>this._click$.pipe(As(this._documentMouseMove$),Hi(1))),vt()),s.push(this._mouseDragStart$.subscribe()),s.push(this._mouseDrag$.subscribe()),s.push(this._mouseDragEnd$.subscribe()),s.push(this._domMouseDragStart$.subscribe()),s.push(this._domMouseDrag$.subscribe()),s.push(this._domMouseDragEnd$.subscribe()),s.push(this._mouseRightDragStart$.subscribe()),s.push(this._mouseRightDrag$.subscribe()),s.push(this._mouseRightDragEnd$.subscribe()),s.push(this._staticClick$.subscribe()),this._mouseOwner$=this._createOwner$(this._claimMouse$).pipe(Ke(1),Ue()),this._wheelOwner$=this._createOwner$(this._claimWheel$).pipe(Ke(1),Ue()),s.push(this._mouseOwner$.subscribe(()=>{})),s.push(this._wheelOwner$.subscribe(()=>{}))}get active$(){return this._active$}get activate$(){return this._activeSubject$}get documentMouseMove$(){return this._documentMouseMove$}get documentMouseUp$(){return this._documentMouseUp$}get domMouseDragStart$(){return this._domMouseDragStart$}get domMouseDrag$(){return this._domMouseDrag$}get domMouseDragEnd$(){return this._domMouseDragEnd$}get domMouseDown$(){return this._domMouseDown$}get domMouseMove$(){return this._domMouseMove$}get mouseOwner$(){return this._mouseOwner$}get mouseDown$(){return this._mouseDown$}get mouseEnter$(){return this._mouseEnter$}get mouseMove$(){return this._mouseMove$}get mouseLeave$(){return this._mouseLeave$}get mouseOut$(){return this._mouseOut$}get mouseOver$(){return this._mouseOver$}get mouseUp$(){return this._mouseUp$}get click$(){return this._click$}get dblClick$(){return this._dblClick$}get contextMenu$(){return this._consistentContextMenu$}get mouseWheel$(){return this._mouseWheel$}get mouseDragStart$(){return this._mouseDragStart$}get mouseDrag$(){return this._mouseDrag$}get mouseDragEnd$(){return this._mouseDragEnd$}get mouseRightDragStart$(){return this._mouseRightDragStart$}get mouseRightDrag$(){return this._mouseRightDrag$}get mouseRightDragEnd$(){return this._mouseRightDragEnd$}get proximateClick$(){return this._proximateClick$}get staticClick$(){return this._staticClick$}get windowBlur$(){return this._windowBlur$}dispose(){this._subscriptions.unsubscribe()}claimMouse(e,t){this._claimMouse$.next({name:e,zindex:t})}unclaimMouse(e){this._claimMouse$.next({name:e,zindex:null})}deferPixels(e,t){this._deferPixelClaims$.next({name:e,deferPixels:t})}undeferPixels(e){this._deferPixelClaims$.next({name:e,deferPixels:null})}claimWheel(e,t){this._claimWheel$.next({name:e,zindex:t})}unclaimWheel(e){this._claimWheel$.next({name:e,zindex:null})}filtered$(e,t){return this._filtered(e,t,this._mouseOwner$)}filteredWheel$(e,t){return this._filtered(e,t,this._wheelOwner$)}_createDeferredMouseMove$(e,t){return t.pipe(V(n=>{const i=n.clientX-e.clientX,s=n.clientY-e.clientY;return[n,Math.sqrt(i*i+s*s)]}),at(this._deferPixels$),Fe(([[,n],i])=>n>i),V(([[n]])=>n))}_createMouseDrag$(e,t){return e.pipe(V(([,n])=>n),we(n=>Wi(Ze(n),this._documentMouseMove$).pipe(As(t))))}_createMouseDragEnd$(e,t){return e.pipe(we(()=>t.pipe(Ve())))}_createMouseDragStart$(e){return e.pipe(V(([t])=>t))}_createMouseDragInitiate$(e,t,n,i){return t.pipe(Fe(s=>this._mouseButton(s)===e),we(s=>He(Ze(s),i?this._createDeferredMouseMove$(s,this._documentMouseMove$):this._documentMouseMove$).pipe(As(n),Hi(1))))}_createOwner$(e){return e.pipe(cn((t,n)=>(n.zindex==null?delete t[n.name]:t[n.name]=n.zindex,t),{}),V(t=>{let n=null,i=-1;for(const s in t)t.hasOwnProperty(s)&&t[s]>i&&(i=t[s],n=s);return n}),At(null))}_filtered(e,t,n){return t.pipe(at(n),Fe(([,i])=>i===e),V(([i])=>i))}_mouseButton(e){const t=e.type==="pointerdown"||e.type==="pointerup",n=window.InstallTrigger;return t&&typeof n<"u"&&e.button===Rc&&e.ctrlKey&&window.navigator.platform.toUpperCase().indexOf("MAC")>=0?po:e.button}_buttonReleased(e,t){const n=Y4[t];return e.buttons===void 0||(e.buttons&n)!==n}_isMousePen(e){const t=e.pointerType;return t==="mouse"||t==="pen"}}class K4{set json(e){this._json=e}set image(e){this._image=e,this._texture=new Cn(this._image),this._texture.minFilter=Rn}get loaded(){return!!(this._image&&this._json)}getGLSprite(e){if(!this.loaded)throw new Error("Sprites cannot be retrieved before the atlas is loaded.");let t=this._json[e];if(!t)return console.warn("Sprite with key"+e+"does not exist in sprite definition."),new Dt;let n=this._texture.clone();n.needsUpdate=!0;let i=this._image.width,s=this._image.height;n.offset.x=t.x/i,n.offset.y=(s-t.y-t.height)/s,n.repeat.x=t.width/i,n.repeat.y=t.height/s;let a=new rg({map:n});return new Kb(a)}getDOMSprite(e,t){if(!this.loaded)throw new Error("Sprites cannot be retrieved before the atlas is loaded.");t==null&&(t=gn.Center);let n=this._json[e];if(!n)return console.warn("Sprite with key"+e+"does not exist in sprite definition."),ve.h("div",{},[]);let i=n.y,s=n.x+n.width,a=n.y+n.height,o=n.x,c=-n.x,l=-n.y,h=this._image.height,u=this._image.width;switch(t){case gn.Bottom:case gn.Center:case gn.Top:c-=n.width/2;break;case gn.BottomLeft:case gn.Left:case gn.TopLeft:c-=n.width;break;case gn.BottomRight:case gn.Right:case gn.TopRight:}switch(t){case gn.Center:case gn.Left:case gn.Right:l-=n.height/2;break;case gn.Top:case gn.TopLeft:case gn.TopRight:l-=n.height;break;case gn.Bottom:case gn.BottomLeft:case gn.BottomRight:}let d=1/n.pixelRatio;i*=d,s*=d,a*=d,o*=d,c*=d,l*=d,h*=d,u*=d;let f={src:this._image.src,style:{clip:`rect(${i}px, ${s}px, ${a}px, ${o}px)`,height:`${h}px`,left:`${c}px`,position:"absolute",top:`${l}px`,width:`${u}px`}};return ve.h("img",f,[])}}class J4{constructor(e){if(this._retina=window.devicePixelRatio>1,this._spriteAtlasOperation$=new De,this._spriteAtlas$=this._spriteAtlasOperation$.pipe(At(s=>s),cn((s,a)=>a(s),new K4),Ke(1),Ue()),this._atlasSubscription=this._spriteAtlas$.subscribe(()=>{}),e==null)return;let t=this._retina?"@2x":"",n=new XMLHttpRequest;n.open("GET",e+t+".png",!0),n.responseType="arraybuffer",n.onload=()=>{let s=new Image;s.onload=()=>{this._spriteAtlasOperation$.next(o=>(o.image=s,o))};let a=new Blob([n.response]);s.src=window.URL.createObjectURL(a)},n.onerror=s=>{console.error(new Error(`Failed to fetch sprite sheet (${e}${t}.png)`))},n.send();let i=new XMLHttpRequest;i.open("GET",e+t+".json",!0),i.responseType="text",i.onload=()=>{let s=JSON.parse(i.response);this._spriteAtlasOperation$.next(a=>(a.json=s,a))},i.onerror=s=>{console.error(new Error(`Failed to fetch sheet (${e}${t}.json)`))},i.send()}get spriteAtlas$(){return this._spriteAtlas$}dispose(){this._atlasSubscription.unsubscribe()}}class Q4{constructor(e,t){this._subscriptions=new Gn;const n=this._subscriptions;this._activeSubject$=new ss(!1),this._active$=this._activeSubject$.pipe(Be(),Ke(1),Ue()),n.push(tn(t,"touchmove").subscribe(h=>{h.preventDefault()})),this._touchStart$=tn(e,"touchstart"),this._touchMove$=tn(e,"touchmove"),this._touchEnd$=tn(e,"touchend"),this._touchCancel$=tn(e,"touchcancel");const i=this._touchStart$.pipe(Fe(h=>h.touches.length===1&&h.targetTouches.length===1),vt());this._doubleTap$=i.pipe(w2(()=>i.pipe(Ve(),we(()=>xt(Xm(300),i).pipe(Hi(1))))),Fe(h=>h.length===2),V(h=>h[h.length-1]),vt()),n.push(this._doubleTap$.subscribe(h=>{h.preventDefault()})),this._singleTouchMove$=this._touchMove$.pipe(Fe(h=>h.touches.length===1&&h.targetTouches.length===1),vt());let s=xt(this._touchStart$,this._touchEnd$,this._touchCancel$).pipe(Fe(h=>h.touches.length===1&&h.targetTouches.length===1)),a=xt(this._touchStart$,this._touchEnd$,this._touchCancel$).pipe(Fe(h=>h.touches.length>=1)),o=xt(this._touchEnd$,this._touchCancel$).pipe(Fe(h=>h.touches.length===0));this._singleTouchDragStart$=s.pipe(ct(()=>this._singleTouchMove$.pipe(As(xt(o,a)),Hi(1)))),this._singleTouchDragEnd$=s.pipe(ct(()=>xt(o,a).pipe(Ve()))),this._singleTouchDrag$=s.pipe(we(()=>this._singleTouchMove$.pipe(In(1),As(xt(a,o)))));let c=xt(this._touchStart$,this._touchEnd$,this._touchCancel$);this._pinchStart$=c.pipe(Fe(h=>h.touches.length===2&&h.targetTouches.length===2)),this._pinchEnd$=c.pipe(Fe(h=>h.touches.length!==2||h.targetTouches.length!==2)),this._pinchOperation$=new De,this._pinch$=this._pinchOperation$.pipe(cn((h,u)=>u(h),{changeX:0,changeY:0,clientX:0,clientY:0,distance:0,distanceChange:0,distanceX:0,distanceY:0,originalEvent:null,pageX:0,pageY:0,screenX:0,screenY:0,touch1:null,touch2:null}));const l=this._touchMove$.pipe(Fe(h=>h.touches.length===2&&h.targetTouches.length===2),V(h=>u=>{let d=h.touches[0],f=h.touches[1],p=Math.min(d.clientX,f.clientX),g=Math.max(d.clientX,f.clientX),_=Math.min(d.clientY,f.clientY),m=Math.max(d.clientY,f.clientY),v=p+(g-p)/2,y=_+(m-_)/2,x=v+d.pageX-d.clientX,w=y+d.pageY-d.clientY,E=v+d.screenX-d.clientX,M=y+d.screenY-d.clientY,A=Math.abs(d.clientX-f.clientX),T=Math.abs(d.clientY-f.clientY),S=Math.sqrt(A*A+T*T),b=S-u.distance,U=A-u.distanceX,L=T-u.distanceY;return{changeX:U,changeY:L,clientX:v,clientY:y,distance:S,distanceChange:b,distanceX:A,distanceY:T,originalEvent:h,pageX:x,pageY:w,screenX:E,screenY:M,touch1:d,touch2:f}})).subscribe(this._pinchOperation$);n.push(l),this._pinchChange$=this._pinchStart$.pipe(we(()=>this._pinch$.pipe(In(1),As(this._pinchEnd$))))}get active$(){return this._active$}get activate$(){return this._activeSubject$}get doubleTap$(){return this._doubleTap$}get touchStart$(){return this._touchStart$}get touchMove$(){return this._touchMove$}get touchEnd$(){return this._touchEnd$}get touchCancel$(){return this._touchCancel$}get singleTouchDragStart$(){return this._singleTouchDragStart$}get singleTouchDrag$(){return this._singleTouchDrag$}get singleTouchDragEnd$(){return this._singleTouchDragEnd$}get pinch$(){return this._pinchChange$}get pinchStart$(){return this._pinchStart$}get pinchEnd$(){return this._pinchEnd$}dispose(){this._subscriptions.unsubscribe()}}class eH{constructor(e){var t,n,i,s;const a=(n=(t=e==null?void 0:e.url)===null||t===void 0?void 0:t.exploreHost)!==null&&n!==void 0?n:"www.mapillary.com",c=`${(s=(i=e==null?void 0:e.url)===null||i===void 0?void 0:i.scheme)!==null&&s!==void 0?s:"https"}://${a}`;this._exploreUrl$=Ze(c);const l=(e==null?void 0:e.imageTiling)!==!1;this._imageTiling$=Ze(l)}get exploreUrl$(){return this._exploreUrl$}get imageTiling$(){return this._imageTiling$}}class tH{constructor(e,t,n){var i;if(this._onWindowResize=()=>{this._trackResize&&this.renderService.resize$.next()},this._dom=n??new Cg,typeof e.container=="string"){if(this._container=this._dom.document.getElementById(e.container),!this._container)throw new Error(`Container "${e.container}" not found.`)}else if(e.container instanceof HTMLElement)this._container=e.container;else throw new Error('Invalid type: "container" must be a String or HTMLElement.');this._trackResize=e.trackResize!==!1,this.id=(i=this._container.id)!==null&&i!==void 0?i:"mapillary-fallback-container-id",this._container.classList.add("mapillary-viewer"),this._canvasContainer=this._dom.createElement("div","mapillary-interactive",this._container),this._canvas=this._dom.createElement("canvas","mapillary-canvas"),this._canvas.style.position="absolute",this._canvas.setAttribute("tabindex","0"),this._domContainer=this._dom.createElement("div","mapillary-dom",this._container),this.configurationService=new eH(e),this.renderService=new j4(this._container,t.currentState$,e.renderMode),this.glRenderer=new W4(this._canvas,this._canvasContainer,this.renderService),this.domRenderer=new G4(this._domContainer,this.renderService,t.currentState$),this.keyboardService=new X4(this._canvasContainer),this.mouseService=new Z4(this._container,this._canvasContainer,this._domContainer,document),this.touchService=new Q4(this._canvasContainer,this._domContainer),this.spriteService=new J4(e.sprite),window.addEventListener("resize",this._onWindowResize,!1)}get canvas(){return this._canvas.parentNode?this._canvas:null}get canvasContainer(){return this._canvasContainer}get container(){return this._container}get domContainer(){return this._domContainer}remove(){window.removeEventListener("resize",this._onWindowResize,!1),this.spriteService.dispose(),this.touchService.dispose(),this.mouseService.dispose(),this.glRenderer.remove(),this.domRenderer.remove(),this.renderService.dispose(),this._removeNode(this._canvasContainer),this._removeNode(this._domContainer),this._container.classList.remove("mapillary-viewer")}_removeNode(e){e.parentNode&&e.parentNode.removeChild(e)}}class nH{constructor(e,t,n){this._graphService=e,this._stateService=t,this._api=n,this._subscriptions=new Gn,this._started=!1,this._cellDepth=1}get started(){return this._started}configure(e){if(!e){this._cellDepth=1;return}this._cellDepth=Math.max(1,Math.min(3,e.cellDepth))}start(){if(this._started)return;const e=this._subscriptions;e.push(this._stateService.currentState$.pipe(Be(void 0,t=>t.state.currentImage.id),V(t=>{const n=t.state,i=n.trajectory,s=i.map(o=>o.id),a=i[i.length-1].sequenceId;return[s,n.currentImage.originalLngLat,a]}),Mu(1,5),at(this._graphService.graphMode$),we(([t,n])=>{const i=t[0][0],s=t[0][1],a=this._api.data.geometry,o=a.lngLatToCellId(s),c=fm(o,this._cellDepth,a),l=n===hi.Sequence?t[0][2]:void 0;return this._graphService.uncache$(i,c,l)})).subscribe(()=>{})),e.push(this._graphService.graphMode$.pipe(In(1),at(this._stateService.currentState$),we(([t,n])=>t===hi.Sequence?this._keyToEdges(n.state.currentImage.id,i=>i.sequenceEdges$):on(n.state.trajectory.map(i=>i.id).slice(n.state.currentIndex)).pipe(ct(i=>this._keyToEdges(i,s=>s.spatialEdges$),6)))).subscribe(()=>{})),e.push(this._graphService.dataAdded$.pipe(at(this._stateService.currentId$),we(([t,n])=>this._graphService.cacheImage$(n))).subscribe(()=>{})),this._started=!0}stop(){this._started&&(this._subscriptions.unsubscribe(),this._started=!1)}_keyToEdges(e,t){return this._graphService.cacheImage$(e).pipe(we(t),Ve(n=>n.cached),qp(15e3),$t(n=>(console.error(`Failed to cache edges (${e}).`,n),rt())))}}class iH{constructor(){this._loadersSubject$=new De,this._loaders$=this._loadersSubject$.pipe(cn((e,t)=>(t.task!==void 0&&(e[t.task]=t.loading),e),{}),At({}),Ke(1),Ue())}get loading$(){return this._loaders$.pipe(V(e=>{for(const t in e)if(e.hasOwnProperty(t)&&e[t])return!0;return!1}),Wc(100),Be())}taskLoading$(e){return this._loaders$.pipe(V(t=>!!t[e]),Wc(100),Be())}startLoading(e){this._loadersSubject$.next({loading:!0,task:e})}stopLoading(e){this._loadersSubject$.next({loading:!1,task:e})}}var $i;(function(r){r[r.Disabled=0]="Disabled",r[r.Enabled=1]="Enabled",r[r.Started=2]="Started"})($i||($i={}));class rH{constructor(e,t,n,i,s,a){this._subscriptions=new Gn,this._graphService=e,this._stateService=t,this._graphCalculator=i??new gg,this._spatial=s??new Hn,this._viewportCoords=a??new ei,this._mode=n!==!1?$i.Enabled:$i.Disabled,this._panImagesSubject$=new De,this._panImages$=this._panImagesSubject$.pipe(At([]),Ke(1),Ue()),this._subscriptions.push(this._panImages$.subscribe())}get panImages$(){return this._panImages$}dispose(){this.stop(),this._panImagesSubscription!=null&&this._panImagesSubscription.unsubscribe(),this._subscriptions.unsubscribe()}enable(){this._mode===$i.Disabled&&(this._mode=$i.Enabled,this.start())}disable(){this._mode!==$i.Disabled&&(this.stop(),this._mode=$i.Disabled)}start(){if(this._mode!==$i.Enabled)return;const e=this._stateService.currentImage$.pipe(we(t=>{if(!t.merged||tt(t.cameraType))return Ze([]);const n=Ze(t),i=this._graphCalculator.boundingBoxCorners(t.lngLat,20),s=this._graphService.cacheBoundingBox$(i[0],i[1]).pipe($t(a=>(console.error(`Failed to cache periphery bounding box (${t.id})`,a),rt())),V(a=>{if(tt(t.cameraType))return[];const o=[];for(const c of a)c.id!==t.id&&c.mergeId===t.mergeId&&(tt(c.cameraType)||this._distance(c,t)>4||o.push(c));return o}));return He(n,s).pipe(at(this._stateService.reference$),V(([[a,o],c])=>{const l=this._spatial.viewingDirection(a.rotation),h=Lu({lat:a.lngLat.lat,lng:a.lngLat.lng,alt:a.computedAltitude},a.rotation,c),u=this._createTransform(a,h),d=this._spatial.wrap(this._spatial.azimuthal(l.toArray(),u.upVector().toArray()),0,2*Math.PI),f=this._computeProjectedPoints(u),p=this._computeHorizontalFov(f)/180*Math.PI,g=Math.PI/8;let _,m;for(const y of o){const x=Lu({lat:y.lngLat.lat,lng:y.lngLat.lng,alt:y.computedAltitude},y.rotation,c),w=this._createTransform(y,x),E=this._computeProjectedPoints(w),M=this._computeHorizontalFov(E)/180*Math.PI,A=this._spatial.viewingDirection(y.rotation),T=this._spatial.wrap(this._spatial.azimuthal(A.toArray(),w.upVector().toArray()),0,2*Math.PI),S=this._spatial.angleBetweenVector2(l.x,l.y,A.x,A.y);let b=Number.NEGATIVE_INFINITY;S>0?d>T?b=d-2*Math.PI+p/2-(T-M/2):b=d+p/2-(T-M/2):d<T?b=T+M/2-(d+2*Math.PI-p/2):b=T+M/2-(d-p/2);const U=Math.abs(M-b),L=this._distance(y,a),N=Math.min(this._timeDifference(y,a),4),k=20*Math.abs(b-g),B=Math.min(5,1/Math.min(M/p,1)),z=b>0?-2*U:0,H=L+N+k+B+z;b>0&&b<.5*p&&b<.5*M&&U>.5*p&&(S>0?_?H<_[0]&&(_=[H,y,w,M]):_=[H,y,w,M]:m?H<m[0]&&(m=[H,y,w,M]):m=[H,y,w,M])}const v=[];return _&&v.push([_[1],_[2],_[3]]),m&&v.push([m[1],m[2],m[3]]),v}),At([]))}));this._panImagesSubscription=this._stateService.currentState$.pipe(V(t=>t.state.imagesAhead>0),Be(),we(t=>t?Ze([]):e)).subscribe(t=>{this._panImagesSubject$.next(t)}),this._mode=$i.Started}stop(){this._mode===$i.Started&&(this._panImagesSubscription.unsubscribe(),this._panImagesSubject$.next([]),this._mode=$i.Enabled)}_distance(e,t){const[n,i,s]=Zn(e.lngLat.lng,e.lngLat.lat,e.computedAltitude,t.lngLat.lng,t.lngLat.lat,t.computedAltitude);return Math.sqrt(n*n+i*i+s*s)}_timeDifference(e,t){return Math.abs(e.capturedAt-t.capturedAt)/2592e6}_createTransform(e,t){return new Co(e.exifOrientation,e.width,e.height,e.scale,e.rotation,t,e.assetsCached?e.image:void 0,void 0,e.cameraParameters,e.cameraType)}_computeProjectedPoints(e){return _g(e,[[1,0]],[[0,.5]],20,this._viewportCoords)}_computeHorizontalFov(e){const t=e.map(i=>this._coordToFov(i[0]));return Math.min(...t)}_coordToFov(e){return 2*Math.atan(e)*180/Math.PI}}class Hx{constructor(e){this._data=e}get data(){return this._data}getCoreImages$(e){return this._wrap$(this._data.getCoreImages(e))}getImages$(e){return this._wrap$(this._data.getImages(e))}getImageTiles$(e){return this._wrap$(this._data.getImageTiles(e))}getSequence$(e){return this._wrap$(this._data.getSequence(e))}getSpatialImages$(e){return this._wrap$(this._data.getSpatialImages(e))}setAccessToken(e){this._data.setAccessToken(e)}_wrap$(e){return Qt.create(t=>{e.then(n=>{t.next(n),t.complete()},n=>{t.error(n)})})}}class sH{constructor(e){this._dataAdded$=new De,this._subscriptions=new Gn,this._onDataAdded=n=>{this._graph$.pipe(Ve(),ct(i=>i.updateCells$(n.cellIds).pipe(an(()=>{i.resetSpatialEdges()})))).subscribe(i=>{this._dataAdded$.next(i)})};const t=this._subscriptions;this._graph$=Wi(Ze(e),e.changed$).pipe(Ke(1),Ue()),t.push(this._graph$.subscribe(()=>{})),this._graphMode=hi.Spatial,this._graphModeSubject$=new De,this._graphMode$=this._graphModeSubject$.pipe(At(this._graphMode),Ke(1),Ue()),t.push(this._graphMode$.subscribe(()=>{})),this._firstGraphSubjects$=[],this._initializeCacheSubscriptions=[],this._sequenceSubscriptions=[],this._spatialSubscriptions=[],e.api.data.on("datacreate",this._onDataAdded)}get dataAdded$(){return this._dataAdded$}get filter$(){return this._graph$.pipe(Ve(),ct(e=>e.filter$))}get graphMode$(){return this._graphMode$}cacheBoundingBox$(e,t){return this._graph$.pipe(Ve(),ct(n=>n.cacheBoundingBox$(e,t)))}cacheCell$(e){return this._graph$.pipe(Ve(),ct(t=>t.cacheCell$(e)))}cacheImage$(e){const t=new De;this._firstGraphSubjects$.push(t);const n=t.pipe(Ke(1),Ue()),i=n.pipe(V(c=>c.getNode(e)),ct(c=>c.assetsCached?Ze(c):c.cacheAssets$()),Ke(1),Ue());i.subscribe(void 0,c=>{console.error(`Failed to cache image (${e}).`,c)});let s;s=this._graph$.pipe(Ve(),ct(c=>c.isCachingFull(e)||!c.hasNode(e)?c.cacheFull$(e):c.isCachingFill(e)||!c.getNode(e).complete?c.cacheFill$(e):Ze(c)),an(c=>{if(!c.hasNode(e))throw new Xt(`Failed to cache image (${e})`);c.hasInitializedCache(e)||c.initializeCache(e)}),_i(()=>{s!=null&&(this._removeFromArray(s,this._initializeCacheSubscriptions),this._removeFromArray(t,this._firstGraphSubjects$))})).subscribe(c=>{t.next(c),t.complete()},c=>{t.error(c)}),s.closed||this._initializeCacheSubscriptions.push(s);const a=n.pipe($t(()=>rt()),ct(c=>c.isCachingNodeSequence(e)||!c.hasNodeSequence(e)?c.cacheNodeSequence$(e):Ze(c)),Ke(1),Ue());let o;if(o=a.pipe(an(c=>{c.getNode(e).sequenceEdges.cached||c.cacheSequenceEdges(e)}),_i(()=>{o!=null&&this._removeFromArray(o,this._sequenceSubscriptions)})).subscribe(()=>{},c=>{console.error(`Failed to cache sequence edges (${e}).`,c)}),o.closed||this._sequenceSubscriptions.push(o),this._graphMode===hi.Spatial){let c;c=n.pipe($t(()=>rt()),pb(l=>l.hasTiles(e)?rt():on(l.cacheTiles$(e)).pipe(ct(h=>h.pipe(ct(u=>u.isCachingTiles(e)?rt():Ze(u)),$t(u=>(console.error(`Failed to cache tile data (${e}).`,u),rt())))))),jp(1),ct(l=>l.hasSpatialArea(e)?Ze(l):on(l.cacheSpatialArea$(e)).pipe(ct(h=>h.pipe($t(u=>(console.error(`Failed to cache spatial images (${e}).`,u),rt())))))),jp(1),ct(l=>l.hasNodeSequence(e)?Ze(l):l.cacheNodeSequence$(e)),an(l=>{l.getNode(e).spatialEdges.cached||l.cacheSpatialEdges(e)}),_i(()=>{c!=null&&this._removeFromArray(c,this._spatialSubscriptions)})).subscribe(()=>{},l=>{const h=`Failed to cache spatial edges (${e}).`;console.error(h,l)}),c.closed||this._spatialSubscriptions.push(c)}return i.pipe(Ve(c=>c.assetsCached))}cacheSequence$(e){return this._graph$.pipe(Ve(),ct(t=>t.isCachingSequence(e)||!t.hasSequence(e)?t.cacheSequence$(e):Ze(t)),V(t=>t.getSequence(e)))}cacheSequenceImages$(e,t){return this._graph$.pipe(Ve(),ct(n=>n.isCachingSequence(e)||!n.hasSequence(e)?n.cacheSequence$(e):Ze(n)),ct(n=>n.isCachingSequenceNodes(e)||!n.hasSequenceNodes(e)?n.cacheSequenceNodes$(e,t):Ze(n)),V(n=>n.getSequence(e)))}dispose(){this._graph$.pipe(Ve()).subscribe(e=>{e.unsubscribe()}),this._subscriptions.unsubscribe()}setFilter$(e){return this._resetSubscriptions(this._spatialSubscriptions),this._graph$.pipe(Ve(),an(t=>{t.resetSpatialEdges(),t.setFilter(e)}),V(()=>{}))}setGraphMode(e){this._graphMode!==e&&(e===hi.Sequence&&this._resetSubscriptions(this._spatialSubscriptions),this._graphMode=e,this._graphModeSubject$.next(this._graphMode))}reset$(e){return this._abortSubjects(this._firstGraphSubjects$),this._resetSubscriptions(this._initializeCacheSubscriptions),this._resetSubscriptions(this._sequenceSubscriptions),this._resetSubscriptions(this._spatialSubscriptions),this._graph$.pipe(Ve(),an(t=>{t.reset(e)}),V(()=>{}))}uncache$(e,t,n){return this._graph$.pipe(Ve(),an(i=>{i.uncache(e,t,n)}),V(()=>{}))}_abortSubjects(e){for(const t of e.slice())this._removeFromArray(t,e),t.error(new Error("Cache image request was aborted."))}_removeFromArray(e,t){const n=t.indexOf(e);n!==-1&&t.splice(n,1)}_resetSubscriptions(e){for(const t of e.slice())this._removeFromArray(t,e),t.closed||t.unsubscribe()}}class aH{constructor(e){e.requestAnimationFrame?(this._cancelAnimationFrame=e.cancelAnimationFrame.bind(e),this._requestAnimationFrame=e.requestAnimationFrame.bind(e)):e.mozRequestAnimationFrame?(this._cancelAnimationFrame=e.mozCancelAnimationFrame.bind(e),this._requestAnimationFrame=e.mozRequestAnimationFrame.bind(e)):e.webkitRequestAnimationFrame?(this._cancelAnimationFrame=e.webkitCancelAnimationFrame.bind(e),this._requestAnimationFrame=e.webkitRequestAnimationFrame.bind(e)):e.msRequestAnimationFrame?(this._cancelAnimationFrame=e.msCancelAnimationFrame.bind(e),this._requestAnimationFrame=e.msRequestAnimationFrame.bind(e)):e.oRequestAnimationFrame?(this._cancelAnimationFrame=e.oCancelAnimationFrame.bind(e),this._requestAnimationFrame=e.oRequestAnimationFrame.bind(e)):(this._cancelAnimationFrame=e.clearTimeout.bind(e),this._requestAnimationFrame=t=>e.setTimeout(t,1e3/60))}get cancelAnimationFrame(){return this._cancelAnimationFrame}get requestAnimationFrame(){return this._requestAnimationFrame}}class md{constructor(e){this._spatial=new Hn,this._referenceThreshold=.01,this._transitionMode=e.transitionMode,this._reference=e.reference,this._alpha=e.alpha,this._stateTransitionAlpha=0,this._camera=e.camera.clone(),this._zoom=e.zoom,this._currentIndex=e.currentIndex,this._trajectory=e.trajectory.slice(),this._trajectoryTransforms=[],this._trajectoryCameras=[];for(let t of this._trajectory){let n=this._imageToTranslation(t,this._reference),i=new Co(t.exifOrientation,t.width,t.height,t.scale,t.rotation,n,t.image,void 0,t.cameraParameters,t.cameraType);this._trajectoryTransforms.push(i),this._trajectoryCameras.push(new Rs(i))}this._currentImage=this._trajectory.length>0?this._trajectory[this._currentIndex]:null,this._previousImage=this._trajectory.length>1&&this.currentIndex>0?this._trajectory[this._currentIndex-1]:null,this._currentCamera=this._trajectoryCameras.length>0?this._trajectoryCameras[this._currentIndex].clone():new Rs,this._previousCamera=this._trajectoryCameras.length>1&&this.currentIndex>0?this._trajectoryCameras[this._currentIndex-1].clone():this._currentCamera.clone()}get reference(){return this._reference}get alpha(){return this._getAlpha()}get stateTransitionAlpha(){return this._getStateTransitionAlpha()}get camera(){return this._camera}get zoom(){return this._zoom}get trajectory(){return this._trajectory}get currentIndex(){return this._currentIndex}get currentImage(){return this._currentImage}get previousImage(){return this._previousImage}get currentCamera(){return this._currentCamera}get currentTransform(){return this._trajectoryTransforms.length>0?this._trajectoryTransforms[this.currentIndex]:null}get previousTransform(){return this._trajectoryTransforms.length>1&&this.currentIndex>0?this._trajectoryTransforms[this.currentIndex-1]:null}get motionless(){return this._motionless}get transitionMode(){return this._transitionMode}move(e){}moveTo(e){}rotate(e){}rotateUnbounded(e){}rotateWithoutInertia(e){}rotateBasic(e){}rotateBasicUnbounded(e){}rotateBasicWithoutInertia(e){}rotateToBasic(e){}setSpeed(e){}zoomIn(e,t){}update(e){}setCenter(e){}setZoom(e){}dolly(e){}orbit(e){}setViewMatrix(e){}truck(e){}append(e){if(e.length<1)throw Error("Trajectory can not be empty");this._currentIndex<0?this.set(e):(this._trajectory=this._trajectory.concat(e),this._appendToTrajectories(e))}prepend(e){if(e.length<1)throw Error("Trajectory can not be empty");this._trajectory=e.slice().concat(this._trajectory),this._currentIndex+=e.length,this._setCurrentImage(),this._setReference(this._currentImage)?this._setTrajectories():this._prependToTrajectories(e),this._setCurrentCamera()}remove(e){if(e<0)throw Error("n must be a positive integer");if(this._currentIndex-1<e)throw Error("Current and previous images can not be removed");for(let t=0;t<e;t++)this._trajectory.shift(),this._trajectoryTransforms.shift(),this._trajectoryCameras.shift(),this._currentIndex--;this._setCurrentImage()}clearPrior(){this._currentIndex>0&&this.remove(this._currentIndex-1)}clear(){this.cut(),this._currentIndex>0&&this.remove(this._currentIndex-1)}cut(){for(;this._trajectory.length-1>this._currentIndex;)this._trajectory.pop(),this._trajectoryTransforms.pop(),this._trajectoryCameras.pop()}set(e){this._setTrajectory(e),this._setCurrentImage(),this._setReference(this._currentImage),this._setTrajectories(),this._setCurrentCamera()}getCenter(){return this._currentImage!=null?this.currentTransform.projectBasic(this._camera.lookat.toArray()):[.5,.5]}setTransitionMode(e){this._transitionMode=e}_getAlpha(){return 1}_getStateTransitionAlpha(){return 1}_setCurrent(){this._setCurrentImage(),this._setReference(this._currentImage)&&this._setTrajectories(),this._setCurrentCamera()}_setCurrentCamera(){this._currentCamera=this._trajectoryCameras[this._currentIndex].clone(),this._previousCamera=this._currentIndex>0?this._trajectoryCameras[this._currentIndex-1].clone():this._currentCamera.clone()}_motionlessTransition(){return this._currentImage!=null&&this._previousImage!=null&&(this._transitionMode===Vu.Instantaneous||!(this._currentImage.merged&&this._previousImage.merged&&this._withinOriginalDistance()&&this._sameConnectedComponent()))}_setReference(e){return Math.abs(e.lngLat.lat-this.reference.lat)<this._referenceThreshold&&Math.abs(e.lngLat.lng-this.reference.lng)<this._referenceThreshold||this._previousImage!=null&&!this._motionlessTransition()?!1:(this._reference.lat=e.lngLat.lat,this._reference.lng=e.lngLat.lng,this._reference.alt=e.computedAltitude,!0)}_setCurrentImage(){this._currentImage=this._trajectory.length>0?this._trajectory[this._currentIndex]:null,this._previousImage=this._currentIndex>0?this._trajectory[this._currentIndex-1]:null}_setTrajectory(e){if(e.length<1)throw new gi("Trajectory can not be empty");this._currentImage!=null?(this._trajectory=[this._currentImage].concat(e),this._currentIndex=1):(this._trajectory=e.slice(),this._currentIndex=0)}_setTrajectories(){this._trajectoryTransforms.length=0,this._trajectoryCameras.length=0,this._appendToTrajectories(this._trajectory)}_appendToTrajectories(e){for(let t of e){if(!t.assetsCached)throw new gi("Assets must be cached when image is added to trajectory");let n=this._imageToTranslation(t,this.reference),i=new Co(t.exifOrientation,t.width,t.height,t.scale,t.rotation,n,t.image,void 0,t.cameraParameters,t.cameraType);this._trajectoryTransforms.push(i),this._trajectoryCameras.push(new Rs(i))}}_prependToTrajectories(e){for(let t of e.reverse()){if(!t.assetsCached)throw new gi("Assets must be cached when added to trajectory");let n=this._imageToTranslation(t,this.reference),i=new Co(t.exifOrientation,t.width,t.height,t.scale,t.rotation,n,t.image,void 0,t.cameraParameters,t.cameraType);this._trajectoryTransforms.unshift(i),this._trajectoryCameras.unshift(new Rs(i))}}_imageToTranslation(e,t){return Lu({alt:e.computedAltitude,lat:e.lngLat.lat,lng:e.lngLat.lng},e.rotation,t)}_sameConnectedComponent(){let e=this._currentImage,t=this._previousImage;return!!e&&!!t&&e.mergeId===t.mergeId}_withinOriginalDistance(){let e=this._currentImage,t=this._previousImage;return!e||!t?!0:this._spatial.distanceFromLngLat(e.originalLngLat.lng,e.originalLngLat.lat,t.originalLngLat.lng,t.originalLngLat.lat)<25}}class Gx extends md{constructor(e){super(e)}setViewMatrix(e){const n=new et().fromArray(e).invert().elements,i=new D(n[12],n[13],n[14]),s=new D(-n[8],-n[9],-n[10]),a=new D(n[4],n[5],n[6]),o=this._camera;o.position.copy(i),o.lookat.copy(i.clone().add(s)),o.up.copy(a);const c=.5/Math.tan(Math.PI/3);o.focal=c}}class Wx extends md{constructor(e){super(e),this._transition=0;const t=this._camera.position.clone(),n=this._camera.lookat.clone().sub(t).normalize(),i=Math.sqrt(n.x*n.x+n.y*n.y),s=Math.atan2(n.z,i),a=new D;if(s>-Math.PI/45)a.copy(t),t.add(new D(n.x,n.y,0).multiplyScalar(-50)),t.z=30;else{const y=t.clone(),x=new D(0,0,1),w=new D(0,0,-2),E=new D().subVectors(w,y).dot(x)/n.dot(x),A=y.clone().add(n.clone().multiplyScalar(Math.min(1e4,E)));a.copy(A);const T=t.clone().sub(A).normalize();t.copy(A.add(T.multiplyScalar(Math.max(50,T.length()))))}const o=this._camera.position.clone(),c=o.clone().add(n.clone().normalize().multiplyScalar(10)),l=this._camera.up.clone(),h=c.clone(),u=h.clone().add(n.clone().normalize().multiplyScalar(10)),d=l.clone(),f=t.clone(),p=a.clone(),g=new D(0,0,1),_=t.clone().add(p.clone().sub(f).normalize().multiplyScalar(-10)),m=p.clone(),v=g.clone();this._curveE=new Fc([h,o,f,_]),this._curveL=new Fc([u,c,p,m]),this._curveU=new Fc([d,l,g,v]),this._zoom0=this._zoom,this._zoom1=0,this._camera.focal=.5/Math.tan(Math.PI/4)}get _isTransitioning(){return this._transition<1}dolly(e){if(this._isTransitioning)return;const t=this._camera,n=t.position.clone().sub(t.lookat),s=n.length()*Math.pow(2,-e),a=Math.max(1,Math.min(s,4e3));n.normalize(),n.multiplyScalar(a),t.position.copy(t.lookat).add(n)}orbit(e){if(this._isTransitioning)return;const t=this._camera,n=new Vn().setFromUnitVectors(t.up,new D(0,0,1)),i=n.clone().invert(),s=t.position.clone().sub(t.lookat);s.applyQuaternion(n);const a=s.length();let o=Math.atan2(s.y,s.x);o+=e.phi;let c=Math.atan2(Math.sqrt(s.x*s.x+s.y*s.y),s.z);c+=e.theta;const l=Math.PI/36;c=Math.max(l,Math.min(Math.PI/2-l,c)),s.x=Math.sin(c)*Math.cos(o),s.y=Math.sin(c)*Math.sin(o),s.z=Math.cos(c),s.applyQuaternion(i),t.position.copy(t.lookat).add(s.multiplyScalar(a))}truck(e){if(this._isTransitioning)return;const t=this._camera;t.position.add(new D().fromArray(e)),t.lookat.add(new D().fromArray(e))}update(e){if(!this._isTransitioning)return;this._transition=Math.min(this._transition+2*e/3,1);const t=No.smootherstep(this._transition,0,1),n=(t+1)/3,i=this._curveE.getPoint(n),s=this._curveL.getPoint(n),a=this._curveU.getPoint(n);this._camera.position.copy(i),this._camera.lookat.copy(s),this._camera.up.copy(a),this._zoom=No.lerp(this._zoom0,this._zoom1,t),this._stateTransitionAlpha=t}_getStateTransitionAlpha(){return this._stateTransitionAlpha}}class qx{constructor(e,t){this._phi=e,this._theta=t}get phi(){return this._phi}set phi(e){this._phi=e}get theta(){return this._theta}set theta(e){this._theta=e}get isZero(){return this._phi===0&&this._theta===0}copy(e){this._phi=e.phi,this._theta=e.theta}lerp(e,t){this._phi=(1-t)*this._phi+t*e.phi,this._theta=(1-t)*this._theta+t*e.theta}multiply(e){this._phi*=e,this._theta*=e}threshold(e){this._phi=Math.abs(this._phi)>e?this._phi:0,this._theta=Math.abs(this._theta)>e?this._theta:0}lengthSquared(){return this._phi*this._phi+this._theta*this._theta}reset(){this._phi=0,this._theta=0}}class rw extends md{constructor(e){super(e),this._animationSpeed=1/40,this._rotationDelta=new qx(0,0),this._requestedRotationDelta=null,this._basicRotation=[0,0],this._requestedBasicRotation=null,this._requestedBasicRotationUnbounded=null,this._rotationAcceleration=.86,this._rotationIncreaseAlpha=.97,this._rotationDecreaseAlpha=.9,this._rotationThreshold=.001,this._unboundedRotationAlpha=.8,this._desiredZoom=e.zoom,this._minZoom=0,this._maxZoom=3,this._lookatDepth=10,this._desiredLookat=null,this._desiredCenter=null}rotate(e){this._currentImage!=null&&(e.phi===0&&e.theta===0||(this._desiredZoom=this._zoom,this._desiredLookat=null,this._requestedBasicRotation=null,this._requestedRotationDelta!=null?(this._requestedRotationDelta.phi=this._requestedRotationDelta.phi+e.phi,this._requestedRotationDelta.theta=this._requestedRotationDelta.theta+e.theta):this._requestedRotationDelta=new qx(e.phi,e.theta)))}rotateUnbounded(e){if(this._currentImage==null||(this._requestedBasicRotation=null,this._requestedRotationDelta=null,this._applyRotation(e,this._currentCamera),this._applyRotation(e,this._previousCamera),!this._desiredLookat))return;const t=new Vn().setFromUnitVectors(this._currentCamera.up,new D(0,0,1)),n=t.clone().invert(),i=new D().copy(this._desiredLookat).sub(this._camera.position).applyQuaternion(t),s=i.length();let a=Math.atan2(i.y,i.x);a+=e.phi;let o=Math.atan2(Math.sqrt(i.x*i.x+i.y*i.y),i.z);o+=e.theta,o=Math.max(.1,Math.min(Math.PI-.1,o)),i.x=Math.sin(o)*Math.cos(a),i.y=Math.sin(o)*Math.sin(a),i.z=Math.cos(o),i.applyQuaternion(n),this._desiredLookat.copy(this._camera.position).add(i.multiplyScalar(s))}rotateWithoutInertia(e){if(this._currentImage==null)return;this._desiredZoom=this._zoom,this._desiredLookat=null,this._requestedBasicRotation=null,this._requestedRotationDelta=null;const t=Math.PI/(10*Math.pow(2,this._zoom)),n={phi:this._spatial.clamp(e.phi,-t,t),theta:this._spatial.clamp(e.theta,-t,t)};this._applyRotation(n,this._currentCamera),this._applyRotation(n,this._previousCamera)}rotateBasic(e){if(this._currentImage!=null)if(this._desiredZoom=this._zoom,this._desiredLookat=null,this._requestedRotationDelta=null,this._requestedBasicRotation!=null){this._requestedBasicRotation[0]+=e[0],this._requestedBasicRotation[1]+=e[1];let t=.05/Math.pow(2,this._zoom);this._requestedBasicRotation[0]=this._spatial.clamp(this._requestedBasicRotation[0],-t,t),this._requestedBasicRotation[1]=this._spatial.clamp(this._requestedBasicRotation[1],-t,t)}else this._requestedBasicRotation=e.slice()}rotateBasicUnbounded(e){this._currentImage!=null&&(this._requestedBasicRotationUnbounded!=null?(this._requestedBasicRotationUnbounded[0]+=e[0],this._requestedBasicRotationUnbounded[1]+=e[1]):this._requestedBasicRotationUnbounded=e.slice())}rotateBasicWithoutInertia(e){if(this._currentImage==null)return;this._desiredZoom=this._zoom,this._desiredLookat=null,this._requestedRotationDelta=null,this._requestedBasicRotation=null;const t=.05/Math.pow(2,this._zoom),n=e.slice();n[0]=this._spatial.clamp(n[0],-t,t),n[1]=this._spatial.clamp(n[1],-t,t),this._applyRotationBasic(n)}rotateToBasic(e){if(this._currentImage==null)return;this._desiredZoom=this._zoom,this._desiredLookat=null,e[0]=this._spatial.clamp(e[0],0,1),e[1]=this._spatial.clamp(e[1],0,1);let t=this.currentTransform.unprojectBasic(e,this._lookatDepth);this._currentCamera.lookat.fromArray(t)}zoomIn(e,t){if(this._currentImage==null)return;this._desiredZoom=Math.max(this._minZoom,Math.min(this._maxZoom,this._desiredZoom+e));let n=this.currentTransform.projectBasic(this._currentCamera.lookat.toArray()),i=n[0],s=n[1],a=Math.pow(2,this._zoom),o=Math.pow(2,this._desiredZoom),c=t[0],l=t[1];tt(this.currentTransform.cameraType)&&(c-i>.5?c=c-1:i-c>.5&&(c=1+c));let h=c-a/o*(c-i),u=l-a/o*(l-s);tt(this._currentImage.cameraType)?(h=this._spatial.wrap(h+this._basicRotation[0],0,1),u=this._spatial.clamp(u+this._basicRotation[1],.05,.95)):(h=this._spatial.clamp(h,0,1),u=this._spatial.clamp(u,0,1)),this._desiredLookat=new D().fromArray(this.currentTransform.unprojectBasic([h,u],this._lookatDepth))}setCenter(e){this._desiredLookat=null,this._requestedRotationDelta=null,this._requestedBasicRotation=null,this._desiredZoom=this._zoom;let t=[this._spatial.clamp(e[0],0,1),this._spatial.clamp(e[1],0,1)];if(this._currentImage==null){this._desiredCenter=t;return}this._desiredCenter=null;let n=new D().fromArray(this.currentTransform.unprojectBasic(t,this._lookatDepth)),i=this.previousTransform!=null?this.previousTransform:this.currentTransform,s=new D().fromArray(i.unprojectBasic(t,this._lookatDepth));this._currentCamera.lookat.copy(n),this._previousCamera.lookat.copy(s)}setZoom(e){this._desiredLookat=null,this._requestedRotationDelta=null,this._requestedBasicRotation=null,this._zoom=this._spatial.clamp(e,this._minZoom,this._maxZoom),this._desiredZoom=this._zoom}_applyRotation(e,t){if(t==null)return;let n=new Vn().setFromUnitVectors(t.up,new D(0,0,1)),i=n.clone().invert(),s=new D;s.copy(t.lookat).sub(t.position),s.applyQuaternion(n);let a=s.length(),o=Math.atan2(s.y,s.x);o+=e.phi;let c=Math.atan2(Math.sqrt(s.x*s.x+s.y*s.y),s.z);c+=e.theta,c=Math.max(.1,Math.min(Math.PI-.1,c)),s.x=Math.sin(c)*Math.cos(o),s.y=Math.sin(c)*Math.sin(o),s.z=Math.cos(c),s.applyQuaternion(i),t.lookat.copy(t.position).add(s.multiplyScalar(a))}_applyRotationBasic(e){let t=this._currentImage,n=this._previousImage!=null?this.previousImage:this.currentImage,i=this._currentCamera,s=this._previousCamera,a=this.currentTransform,o=this.previousTransform!=null?this.previousTransform:this.currentTransform,c=a.projectBasic(i.lookat.toArray()),l=o.projectBasic(s.lookat.toArray());tt(t.cameraType)?(c[0]=this._spatial.wrap(c[0]+e[0],0,1),c[1]=this._spatial.clamp(c[1]+e[1],.05,.95)):(c[0]=this._spatial.clamp(c[0]+e[0],0,1),c[1]=this._spatial.clamp(c[1]+e[1],0,1)),tt(n.cameraType)?(l[0]=this._spatial.wrap(l[0]+e[0],0,1),l[1]=this._spatial.clamp(l[1]+e[1],.05,.95)):(l[0]=this._spatial.clamp(l[0]+e[0],0,1),l[1]=this._spatial.clamp(c[1]+e[1],0,1));let h=a.unprojectBasic(c,this._lookatDepth);i.lookat.fromArray(h);let u=o.unprojectBasic(l,this._lookatDepth);s.lookat.fromArray(u)}_updateZoom(e){let t=this._desiredZoom-this._zoom,n=t>0?1:t<0?-1:0;t!==0&&(Math.abs(t)<.002?(this._zoom=this._desiredZoom,this._desiredLookat!=null&&(this._desiredLookat=null)):this._zoom+=n*Math.max(Math.abs(5*e*t),.002))}_updateLookat(e){if(this._desiredLookat===null)return;let t=this._desiredLookat.distanceToSquared(this._currentCamera.lookat);Math.abs(t)<1e-6?(this._currentCamera.lookat.copy(this._desiredLookat),this._desiredLookat=null):this._currentCamera.lookat.lerp(this._desiredLookat,5*e)}_updateRotation(){if(this._requestedRotationDelta!=null){let t=this._rotationDelta.lengthSquared();this._requestedRotationDelta.lengthSquared()>t?this._rotationDelta.lerp(this._requestedRotationDelta,this._rotationIncreaseAlpha):this._rotationDelta.lerp(this._requestedRotationDelta,this._rotationDecreaseAlpha),this._requestedRotationDelta=null;return}if(this._rotationDelta.isZero)return;const e=tt(this.currentImage.cameraType)?1:this._alpha;this._rotationDelta.multiply(this._rotationAcceleration*e),this._rotationDelta.threshold(this._rotationThreshold)}_updateRotationBasic(){if(this._requestedBasicRotation!=null){let e=this._basicRotation[0],t=this._basicRotation[1],n=this._requestedBasicRotation[0],i=this._requestedBasicRotation[1];Math.abs(n)>Math.abs(e)?this._basicRotation[0]=(1-this._rotationIncreaseAlpha)*e+this._rotationIncreaseAlpha*n:this._basicRotation[0]=(1-this._rotationDecreaseAlpha)*e+this._rotationDecreaseAlpha*n,Math.abs(i)>Math.abs(t)?this._basicRotation[1]=(1-this._rotationIncreaseAlpha)*t+this._rotationIncreaseAlpha*i:this._basicRotation[1]=(1-this._rotationDecreaseAlpha)*t+this._rotationDecreaseAlpha*i,this._requestedBasicRotation=null;return}if(this._requestedBasicRotationUnbounded!=null){let e=this._requestedBasicRotationUnbounded[0],t=this._requestedBasicRotationUnbounded[1];if(Math.abs(e)>0&&(this._basicRotation[0]=(1-this._unboundedRotationAlpha)*this._basicRotation[0]+this._unboundedRotationAlpha*e),Math.abs(t)>0&&(this._basicRotation[1]=(1-this._unboundedRotationAlpha)*this._basicRotation[1]+this._unboundedRotationAlpha*t),this._desiredLookat!=null){let n=this.currentTransform.projectBasic(this._desiredLookat.toArray());n[0]+=e,n[1]+=t,this._desiredLookat=new D().fromArray(this.currentTransform.unprojectBasic(n,this._lookatDepth))}this._requestedBasicRotationUnbounded=null}this._basicRotation[0]===0&&this._basicRotation[1]===0||(this._basicRotation[0]=this._rotationAcceleration*this._basicRotation[0],this._basicRotation[1]=this._rotationAcceleration*this._basicRotation[1],Math.abs(this._basicRotation[0])<this._rotationThreshold/Math.pow(2,this._zoom)&&Math.abs(this._basicRotation[1])<this._rotationThreshold/Math.pow(2,this._zoom)&&(this._basicRotation=[0,0]))}_clearRotation(){tt(this._currentImage.cameraType)||(this._requestedRotationDelta!=null&&(this._requestedRotationDelta=null),this._rotationDelta.isZero||this._rotationDelta.reset(),this._requestedBasicRotation!=null&&(this._requestedBasicRotation=null),(this._basicRotation[0]>0||this._basicRotation[1]>0)&&(this._basicRotation=[0,0]))}_setDesiredCenter(){if(this._desiredCenter==null)return;let e=new D().fromArray(this.currentTransform.unprojectBasic(this._desiredCenter,this._lookatDepth)).sub(this._currentCamera.position);this._currentCamera.lookat.copy(this._currentCamera.position.clone().add(e)),this._previousCamera.lookat.copy(this._previousCamera.position.clone().add(e)),this._desiredCenter=null}_setDesiredZoom(){this._desiredZoom=tt(this._currentImage.cameraType)||this._previousImage==null?this._zoom:0}}class jx extends rw{constructor(e){super(e),this._adjustCameras(),this._motionless=this._motionlessTransition()}prepend(e){super.prepend(e),this._motionless=this._motionlessTransition()}set(e){super.set(e),this._motionless=this._motionlessTransition()}move(e){this._alpha=Math.max(0,Math.min(1,this._alpha+e))}moveTo(e){this._alpha=Math.max(0,Math.min(1,e))}update(e){this._updateRotation(),this._rotationDelta.isZero||(this._applyRotation(this._rotationDelta,this._previousCamera),this._applyRotation(this._rotationDelta,this._currentCamera)),this._updateRotationBasic(),(this._basicRotation[0]!==0||this._basicRotation[1]!==0)&&this._applyRotationBasic(this._basicRotation);let t=this._animationSpeed*e/.1*6;this._updateZoom(t),this._updateLookat(t),this._camera.lerpCameras(this._previousCamera,this._currentCamera,this.alpha)}_getAlpha(){return this._motionless?Math.round(this._alpha):this._alpha}_setCurrentCamera(){super._setCurrentCamera(),this._adjustCameras()}_adjustCameras(){if(this._previousImage!=null){if(tt(this._currentImage.cameraType)){let e=this._camera.lookat.clone().sub(this._camera.position);this._currentCamera.lookat.copy(e.clone().add(this._currentCamera.position))}if(tt(this._previousImage.cameraType)){let e=this._currentCamera.lookat.clone().sub(this._currentCamera.position);this._previousCamera.lookat.copy(e.clone().add(this._previousCamera.position))}}}}class Xx extends rw{constructor(e){super(e),this._adjustCameras(),this._motionless=this._motionlessTransition(),this._baseAlpha=this._alpha,this._speedCoefficient=1,this._smoothing=!1}append(e){let t=this._trajectory.length===0;t&&this._resetTransition(),super.append(e),t&&(this._setDesiredCenter(),this._setDesiredZoom())}prepend(e){let t=this._trajectory.length===0;t&&this._resetTransition(),super.prepend(e),t&&(this._setDesiredCenter(),this._setDesiredZoom())}set(e){super.set(e),this._desiredLookat=null,this._resetTransition(),this._clearRotation(),this._setDesiredCenter(),this._setDesiredZoom(),this._trajectory.length<3&&(this._smoothing=!0)}setSpeed(e){this._speedCoefficient=this._spatial.clamp(e,0,10)}update(e){this._alpha===1&&this._currentIndex+this._alpha<this._trajectory.length&&(this._currentIndex+=1,this._smoothing=this._trajectory.length<3&&this._currentIndex+1===this._trajectory.length,this._setCurrent(),this._resetTransition(),this._clearRotation(),this._desiredZoom=tt(this._currentImage.cameraType)?this._zoom:0,this._desiredLookat=null);let t=this._animationSpeed*e/.1*6;this._baseAlpha=Math.min(1,this._baseAlpha+this._speedCoefficient*t),this._smoothing?this._alpha=No.smootherstep(this._baseAlpha,0,1):this._alpha=this._baseAlpha,this._updateRotation(),this._rotationDelta.isZero||(this._applyRotation(this._rotationDelta,this._previousCamera),this._applyRotation(this._rotationDelta,this._currentCamera)),this._updateRotationBasic(),(this._basicRotation[0]!==0||this._basicRotation[1]!==0)&&this._applyRotationBasic(this._basicRotation),this._updateZoom(t),this._updateLookat(t),this._camera.lerpCameras(this._previousCamera,this._currentCamera,this.alpha)}_getAlpha(){return this._motionless?Math.ceil(this._alpha):this._alpha}_setCurrentCamera(){super._setCurrentCamera(),this._adjustCameras()}_adjustCameras(){if(this._previousImage==null)return;let e=this._camera.lookat.clone().sub(this._camera.position);this._previousCamera.lookat.copy(e.clone().add(this._previousCamera.position)),tt(this._currentImage.cameraType)&&this._currentCamera.lookat.copy(e.clone().add(this._currentCamera.position))}_resetTransition(){this._alpha=0,this._baseAlpha=0,this._motionless=this._motionlessTransition()}}class Yx extends md{constructor(e){super(e),this._zoom=0,this._adjustCameras(),this._motionless=this._motionlessTransition()}prepend(e){super.prepend(e),this._motionless=this._motionlessTransition()}set(e){super.set(e),this._motionless=this._motionlessTransition()}move(e){this._alpha=Math.max(0,Math.min(1,this._alpha+e))}moveTo(e){this._alpha=Math.max(0,Math.min(1,e))}update(){this._camera.lerpCameras(this._previousCamera,this._currentCamera,this.alpha)}_getAlpha(){return this._motionless?Math.round(this._alpha):this._alpha}_setCurrentCamera(){super._setCurrentCamera(),this._adjustCameras()}_adjustCameras(){if(this._previousImage!=null){if(tt(this._currentImage.cameraType)){let e=this._camera.lookat.clone().sub(this._camera.position);this._currentCamera.lookat.copy(e.clone().add(this._currentCamera.position))}if(tt(this._previousImage.cameraType)){let e=this._currentCamera.lookat.clone().sub(this._currentCamera.position);this._previousCamera.lookat.copy(e.clone().add(this._previousCamera.position))}}}}class oH{constructor(){const e=it[it.Custom],t=it[it.Earth],n=it[it.Traversing],i=it[it.Waiting],s=it[it.WaitingInteractively];this._creators=new Map;const a=this._creators;a.set(e,Gx),a.set(t,Wx),a.set(n,Xx),a.set(i,Yx),a.set(s,jx),this._transitions=new Map;const o=this._transitions;o.set(e,[t,n]),o.set(t,[e,n]),o.set(n,[e,t,i,s]),o.set(i,[n,s]),o.set(s,[n,i])}getState(e){if(e instanceof Gx)return it.Custom;if(e instanceof Wx)return it.Earth;if(e instanceof Xx)return it.Traversing;if(e instanceof Yx)return it.Waiting;if(e instanceof jx)return it.WaitingInteractively;throw new Error("Invalid state instance")}generate(e,t){const n=this._creators.get(it[e]);return new n(t)}transition(e,t){if(!this.validate(e,t))throw new Error("Invalid transition");return this.generate(t,e)}validate(e,t){const n=it[this.getState(e)],i=it[t],s=this._transitions;return s.has(n)&&s.get(n).includes(i)}}class cH{constructor(e,t){this._transitions=new oH,this._state=this._transitions.generate(e,{alpha:1,camera:new Rs,currentIndex:-1,reference:{alt:0,lat:0,lng:0},trajectory:[],transitionMode:t??Vu.Default,zoom:0})}get state(){return this._transitions.getState(this._state)}get reference(){return this._state.reference}get alpha(){return this._state.alpha}get stateTransitionAlpha(){return this._state.stateTransitionAlpha}get camera(){return this._state.camera}get zoom(){return this._state.zoom}get currentImage(){return this._state.currentImage}get previousImage(){return this._state.previousImage}get currentCamera(){return this._state.currentCamera}get currentTransform(){return this._state.currentTransform}get previousTransform(){return this._state.previousTransform}get trajectory(){return this._state.trajectory}get currentIndex(){return this._state.currentIndex}get lastImage(){return this._state.trajectory[this._state.trajectory.length-1]}get imagesAhead(){return this._state.trajectory.length-1-this._state.currentIndex}get motionless(){return this._state.motionless}custom(){this._transition(it.Custom)}earth(){this._transition(it.Earth)}traverse(){this._transition(it.Traversing)}wait(){this._transition(it.Waiting)}waitInteractively(){this._transition(it.WaitingInteractively)}getCenter(){return this._state.getCenter()}setCenter(e){this._state.setCenter(e)}setZoom(e){this._state.setZoom(e)}update(e){this._state.update(e)}append(e){this._state.append(e)}prepend(e){this._state.prepend(e)}remove(e){this._state.remove(e)}clear(){this._state.clear()}clearPrior(){this._state.clearPrior()}cut(){this._state.cut()}set(e){this._state.set(e)}setViewMatrix(e){this._state.setViewMatrix(e)}rotate(e){this._state.rotate(e)}rotateUnbounded(e){this._state.rotateUnbounded(e)}rotateWithoutInertia(e){this._state.rotateWithoutInertia(e)}rotateBasic(e){this._state.rotateBasic(e)}rotateBasicUnbounded(e){this._state.rotateBasicUnbounded(e)}rotateBasicWithoutInertia(e){this._state.rotateBasicWithoutInertia(e)}rotateToBasic(e){this._state.rotateToBasic(e)}move(e){this._state.move(e)}moveTo(e){this._state.moveTo(e)}zoomIn(e,t){this._state.zoomIn(e,t)}setSpeed(e){this._state.setSpeed(e)}setTransitionMode(e){this._state.setTransitionMode(e)}dolly(e){this._state.dolly(e)}orbit(e){this._state.orbit(e)}truck(e){this._state.truck(e)}_transition(e){if(!this._transitions.validate(this._state,e)){const n=this._transitions.getState(this._state);console.warn(`Transition not valid (${it[n]} - ${it[e]})`);return}const t=this._transitions.transition(this._state,e);this._state=t}}class lH{constructor(e,t){this._appendImage$=new De,this._clock=new yO,this._subscriptions=new Gn;const n=this._subscriptions;this._start$=new De,this._frame$=new De,this._contextOperation$=new ss(a=>a),this._context$=this._contextOperation$.pipe(cn((a,o)=>o(a),new cH(e,t)),Ke(1),Ue()),this._state$=this._context$.pipe(V(a=>a.state),Be(),Ke(1),Ue()),this._currentState$=this._frame$.pipe(at(this._context$,(a,o)=>[a,o]),Fe(a=>a[1].currentImage!=null),an(a=>{a[1].update(this._clock.getDelta())}),V(a=>({fps:60,id:a[0],state:a[1]})),vt()),this._lastState$=this._currentState$.pipe(Ke(1),Ue());let i=this._currentState$.pipe(Be(void 0,a=>a.state.currentImage.id),Ke(1),Ue()),s=new De;n.push(i.subscribe(s)),this._currentId$=new ss(null),n.push(s.pipe(V(a=>a.state.currentImage.id)).subscribe(this._currentId$)),this._currentImage$=s.pipe(V(a=>a.state.currentImage),Ke(1),Ue()),this._currentCamera$=s.pipe(V(a=>a.state.currentCamera),Ke(1),Ue()),this._currentTransform$=s.pipe(V(a=>a.state.currentTransform),Ke(1),Ue()),this._reference$=s.pipe(V(a=>a.state.reference),Be((a,o)=>a.lat===o.lat&&a.lng===o.lng,a=>({lat:a.lat,lng:a.lng})),Ke(1),Ue()),this._currentImageExternal$=i.pipe(V(a=>a.state.currentImage),Ke(1),Ue()),n.push(this._appendImage$.pipe(V(a=>o=>(o.append([a]),o))).subscribe(this._contextOperation$)),this._inMotionOperation$=new De,n.push(i.pipe(V(()=>!0)).subscribe(this._inMotionOperation$)),n.push(this._inMotionOperation$.pipe(Be(),Fe(a=>a),we(()=>this._currentState$.pipe(Fe(a=>a.state.imagesAhead===0),V(a=>[a.state.camera.clone(),a.state.zoom]),Ri(),V(a=>{let o=a[0][0],c=a[1][0],l=a[0][1],h=a[1][1];return o.diff(c)>1e-5||Math.abs(l-h)>1e-5}),Ve(a=>!a)))).subscribe(this._inMotionOperation$)),this._inMotion$=this._inMotionOperation$.pipe(Be(),Ke(1),Ue()),this._inTranslationOperation$=new De,n.push(i.pipe(V(()=>!0)).subscribe(this._inTranslationOperation$)),n.push(this._inTranslationOperation$.pipe(Be(),Fe(a=>a),we(()=>this._currentState$.pipe(Fe(a=>a.state.imagesAhead===0),V(a=>a.state.camera.position.clone()),Ri(),V(a=>a[0].distanceToSquared(a[1])!==0),Ve(a=>!a)))).subscribe(this._inTranslationOperation$)),this._inTranslation$=this._inTranslationOperation$.pipe(Be(),Ke(1),Ue()),n.push(this._state$.subscribe(()=>{})),n.push(this._currentImage$.subscribe(()=>{})),n.push(this._currentCamera$.subscribe(()=>{})),n.push(this._currentTransform$.subscribe(()=>{})),n.push(this._reference$.subscribe(()=>{})),n.push(this._currentImageExternal$.subscribe(()=>{})),n.push(this._lastState$.subscribe(()=>{})),n.push(this._inMotion$.subscribe(()=>{})),n.push(this._inTranslation$.subscribe(()=>{})),this._frameId=null,this._frameGenerator=new aH(window)}get currentState$(){return this._currentState$}get currentImage$(){return this._currentImage$}get currentId$(){return this._currentId$}get currentImageExternal$(){return this._currentImageExternal$}get currentCamera$(){return this._currentCamera$}get currentTransform$(){return this._currentTransform$}get state$(){return this._state$}get reference$(){return this._reference$}get inMotion$(){return this._inMotion$}get inTranslation$(){return this._inTranslation$}get appendImage$(){return this._appendImage$}dispose(){this.stop(),this._subscriptions.unsubscribe()}custom(){this._inMotionOperation$.next(!0),this._invokeContextOperation(e=>{e.custom()})}earth(){this._inMotionOperation$.next(!0),this._invokeContextOperation(e=>{e.earth()})}traverse(){this._inMotionOperation$.next(!0),this._invokeContextOperation(e=>{e.traverse()})}wait(){this._invokeContextOperation(e=>{e.wait()})}waitInteractively(){this._invokeContextOperation(e=>{e.waitInteractively()})}appendImagess(e){this._invokeContextOperation(t=>{t.append(e)})}prependImages(e){this._invokeContextOperation(t=>{t.prepend(e)})}removeImages(e){this._invokeContextOperation(t=>{t.remove(e)})}clearImages(){this._invokeContextOperation(e=>{e.clear()})}clearPriorImages(){this._invokeContextOperation(e=>{e.clearPrior()})}cutImages(){this._invokeContextOperation(e=>{e.cut()})}setImages(e){this._invokeContextOperation(t=>{t.set(e)})}setViewMatrix(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.setViewMatrix(e)})}rotate(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.rotate(e)})}rotateUnbounded(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.rotateUnbounded(e)})}rotateWithoutInertia(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.rotateWithoutInertia(e)})}rotateBasic(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.rotateBasic(e)})}rotateBasicUnbounded(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.rotateBasicUnbounded(e)})}rotateBasicWithoutInertia(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.rotateBasicWithoutInertia(e)})}rotateToBasic(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.rotateToBasic(e)})}move(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.move(e)})}moveTo(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.moveTo(e)})}dolly(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.dolly(e)})}orbit(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.orbit(e)})}truck(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.truck(e)})}zoomIn(e,t){this._inMotionOperation$.next(!0),this._invokeContextOperation(n=>{n.zoomIn(e,t)})}getCenter(){return this._lastState$.pipe(Ve(),V(e=>e.state.getCenter()))}getZoom(){return this._lastState$.pipe(Ve(),V(e=>e.state.zoom))}setCenter(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.setCenter(e)})}setSpeed(e){this._invokeContextOperation(t=>{t.setSpeed(e)})}setTransitionMode(e){this._invokeContextOperation(t=>{t.setTransitionMode(e)})}setZoom(e){this._inMotionOperation$.next(!0),this._invokeContextOperation(t=>{t.setZoom(e)})}start(){this._clock.start(),this._frameId==null&&(this._start$.next(null),this._frameId=this._frameGenerator.requestAnimationFrame(this._frame.bind(this)),this._frame$.next(this._frameId))}stop(){this._clock.stop(),this._frameId!=null&&(this._frameGenerator.cancelAnimationFrame(this._frameId),this._frameId=null)}_invokeContextOperation(e){this._contextOperation$.next(t=>(e(t),t))}_frame(){this._frameId=this._frameGenerator.requestAnimationFrame(this._frame.bind(this)),this._frame$.next(this._frameId)}}function sw(r){switch(r){case Qr.Custom:return it.Custom;case Qr.Earth:return it.Earth;case Qr.Street:return it.Traversing;default:return null}}class hH{constructor(e,t,n,i,s,a,o,c){var l;t?this._api=t:e.dataProvider?this._api=new Hx(e.dataProvider):this._api=new Hx(new V4({accessToken:e.accessToken})),this._graphService=n??new sH(new Qc(this.api)),this._loadingName="navigator",this._loadingService=i??new iH;const h=(l=e.cameraControls)!==null&&l!==void 0?l:Qr.Street;this._stateService=s??new lH(sw(h),e.transitionMode),this._cacheService=a??new nH(this._graphService,this._stateService,this._api),this._playService=o??new Al(this._graphService,this._stateService),this._panService=c??new rH(this._graphService,this._stateService,e.combinedPanning),this._idRequested$=new ss(null),this._movedToId$=new ss(null),this._request$=null,this._requestSubscription=null,this._imageRequestSubscription=null}get api(){return this._api}get cacheService(){return this._cacheService}get graphService(){return this._graphService}get loadingService(){return this._loadingService}get movedToId$(){return this._movedToId$}get panService(){return this._panService}get playService(){return this._playService}get stateService(){return this._stateService}dispose(){this._abortRequest("viewer removed"),this._cacheService.stop(),this._graphService.dispose(),this._panService.dispose(),this._playService.dispose(),this._stateService.dispose()}moveTo$(e){this._abortRequest(`to id ${e}`),this._loadingService.startLoading(this._loadingName);const t=this._moveTo$(e);return this._makeRequest$(t)}moveDir$(e){this._abortRequest(`in dir ${ue[e]}`),this._loadingService.startLoading(this._loadingName);const t=this.stateService.currentImage$.pipe(Ve(),ct(n=>([ue.Next,ue.Prev].indexOf(e)>-1?n.sequenceEdges$:n.spatialEdges$).pipe(Ve(),V(i=>{for(let s of i.edges)if(s.data.direction===e)return s.target;return null}))),ct(n=>n==null?(this._loadingService.stopLoading(this._loadingName),hu(new Error(`Direction (${e}) does not exist for current image.`))):this._moveTo$(n)));return this._makeRequest$(t)}setFilter$(e){return this._stateService.clearImages(),this._movedToId$.pipe(Ve(),ct(t=>t!=null?this._trajectoryIds$().pipe(ct(n=>this._graphService.setFilter$(e).pipe(ct(()=>this._cacheIds$(n)))),Do()):this._idRequested$.pipe(Ve(),ct(n=>n!=null?this._graphService.setFilter$(e).pipe(ct(()=>this._graphService.cacheImage$(n))):this._graphService.setFilter$(e).pipe(V(()=>{}))))),V(()=>{}))}setAccessToken$(e){return this._abortRequest("to set user token"),this._stateService.clearImages(),this._movedToId$.pipe(Ve(),an(()=>{this._api.setAccessToken(e)}),ct(t=>t==null?this._graphService.reset$([]):this._trajectoryIds$().pipe(ct(n=>this._graphService.reset$(n).pipe(ct(()=>this._cacheIds$(n)))),Do(),V(()=>{}))))}_cacheIds$(e){const t=e.map(n=>this._graphService.cacheImage$(n));return on(t).pipe(ua())}_abortRequest(e){this._requestSubscription!=null&&(this._requestSubscription.unsubscribe(),this._requestSubscription=null),this._imageRequestSubscription!=null&&(this._imageRequestSubscription.unsubscribe(),this._imageRequestSubscription=null),this._request$!=null&&(this._request$.isStopped||this._request$.hasError||this._request$.error(new Gi(`Request aborted by a subsequent request ${e}.`)),this._request$=null)}_makeRequest$(e){const t=new Wy(1);return this._requestSubscription=t.subscribe(void 0,()=>{}),this._request$=t,this._imageRequestSubscription=e.subscribe(n=>{this._request$=null,t.next(n),t.complete()},n=>{this._request$=null,t.error(n)}),t}_moveTo$(e){return this._idRequested$.next(e),this._graphService.cacheImage$(e).pipe(an(t=>{this._stateService.setImages([t]),this._movedToId$.next(t.id)}),_i(()=>{this._loadingService.stopLoading(this._loadingName)}))}_trajectoryIds$(){return this._stateService.currentState$.pipe(Ve(),V(e=>e.state.trajectory.map(t=>t.id)))}}class uH{constructor(e,t){this._spatial=t??new Hn,this._viewportCoords=e??new ei}basicToCanvas(e,t,n,i){return this._viewportCoords.basicToCanvasSafe(e[0],e[1],t,i,n.perspective)}canvasToBasic(e,t,n,i){let s=this._viewportCoords.canvasToBasic(e[0],e[1],t,i,n.perspective);return(s[0]<0||s[0]>1||s[1]<0||s[1]>1)&&(s=null),s}eventToUnprojection(e,t,n,i,s){const a=this._viewportCoords.canvasPosition(e,t);return this.canvasToUnprojection(a,t,n,i,s)}canvasToUnprojection(e,t,n,i,s){const a=e[0],o=e[1],[c,l]=this._viewportCoords.canvasToViewport(a,o,t),h=new D(c,l,1).unproject(n.perspective);let u=s.projectBasic(h.toArray());(u[0]<0||u[0]>1||u[1]<0||u[1]>1)&&(u=null);const d=h.clone().sub(n.camera.position).normalize(),f=-2/d.z;let p=null;if(f>0&&f<100&&u){const _=d.clone().multiplyScalar(f).add(n.camera.position),[m,v]=ga(_.x,_.y,_.z,i.lng,i.lat,i.alt);p={lat:v,lng:m}}return{basicPoint:u,lngLat:p,pixelPoint:[a,o]}}cameraToLngLat(e,t){const n=e.camera.position,[i,s]=ga(n.x,n.y,n.z,t.lng,t.lat,t.alt);return{lat:s,lng:i}}lngLatToCanvas(e,t,n,i){const s=Zn(e.lng,e.lat,0,i.lng,i.lat,i.alt);return this._viewportCoords.projectToCanvasSafe(s,t,n.perspective)}distanceBetweenLngLats(e,t){return this._spatial.distanceFromLngLat(e.lng,e.lat,t.lng,t.lat)}}class dH{constructor(e,t,n){this._subscriptions=new Gn,this._emitSubscriptions=new Gn,this._container=n,this._viewer=e,this._navigator=t,this._projection=new uH,this._started=!1,this._navigable$=new De;const i=this._subscriptions;i.push(this._navigable$.subscribe(s=>{const a="navigable",o={navigable:s,target:this._viewer,type:a};this._viewer.fire(a,o)})),i.push(this._navigator.loadingService.loading$.subscribe(s=>{const a="dataloading",o={loading:s,target:this._viewer,type:a};this._viewer.fire(a,o)})),i.push(this._container.glRenderer.opaqueRender$.pipe(Ve()).subscribe(()=>{const s="load",a={target:this._viewer,type:s};this._viewer.fire(s,a)}))}get started(){return this._started}get navigable$(){return this._navigable$}get projection(){return this._projection}dispose(){this.stopEmit(),this._subscriptions.unsubscribe()}project$(e){return He(this._container.renderService.renderCamera$,this._navigator.stateService.currentImage$,this._navigator.stateService.reference$).pipe(Ve(),V(([t,n,i])=>{if(this._projection.distanceBetweenLngLats(e,n.lngLat)>1e3)return null;const s=this._projection.lngLatToCanvas(e,this._container.container,t,i);return s?[Math.round(s[0]),Math.round(s[1])]:null}))}projectBasic$(e){return He(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$).pipe(Ve(),V(([t,n])=>{const i=this._projection.basicToCanvas(e,this._container.container,t,n);return i?[Math.round(i[0]),Math.round(i[1])]:null}))}startEmit(){if(this._started)return;this._started=!0;const e=this._emitSubscriptions;e.push(this._navigator.stateService.currentImageExternal$.subscribe(n=>{const i="image",s={image:n,target:this._viewer,type:i};this._viewer.fire(i,s)})),e.push(this._navigator.stateService.currentImageExternal$.pipe(we(n=>n.sequenceEdges$)).subscribe(n=>{const i="sequenceedges",s={status:n,target:this._viewer,type:i};this._viewer.fire(i,s)})),e.push(this._navigator.stateService.currentImageExternal$.pipe(we(n=>n.spatialEdges$)).subscribe(n=>{const i="spatialedges",s={status:n,target:this._viewer,type:i};this._viewer.fire(i,s)})),e.push(this._navigator.stateService.reference$.subscribe(n=>{const i="reference",s={reference:n,target:this._viewer,type:i};this._viewer.fire(i,s)})),e.push(He(this._navigator.stateService.inMotion$,this._container.mouseService.active$,this._container.touchService.active$).pipe(V(n=>n[0]||n[1]||n[2]),Be()).subscribe(n=>{const i=n?"movestart":"moveend",s={target:this._viewer,type:i};this._viewer.fire(i,s)})),e.push(this._container.renderService.bearing$.pipe(lb(100),Be((n,i)=>Math.abs(i-n)<1)).subscribe(n=>{const i="bearing",s={bearing:n,target:this._viewer,type:i};this._viewer.fire(i,s)}));const t=this._container.mouseService.active$.pipe(we(n=>n?rt():this._container.mouseService.mouseMove$));e.push(xt(this._mapMouseEvent$("click",this._container.mouseService.staticClick$),this._mapMouseEvent$("contextmenu",this._container.mouseService.contextMenu$),this._mapMouseEvent$("dblclick",this._container.mouseService.dblClick$),this._mapMouseEvent$("mousedown",this._container.mouseService.mouseDown$),this._mapMouseEvent$("mousemove",t),this._mapMouseEvent$("mouseout",this._container.mouseService.mouseOut$),this._mapMouseEvent$("mouseover",this._container.mouseService.mouseOver$),this._mapMouseEvent$("mouseup",this._container.mouseService.mouseUp$)).pipe(at(this._container.renderService.renderCamera$,this._navigator.stateService.reference$,this._navigator.stateService.currentTransform$,this._navigator.stateService.state$),V(([[n,i],s,a,o,c])=>{const l=this._projection.eventToUnprojection(i,this._container.container,s,a,o);return{basicPoint:c===it.Traversing?l.basicPoint:null,lngLat:l.lngLat,originalEvent:i,pixelPoint:l.pixelPoint,target:this._viewer,type:n}})).subscribe(n=>{this._viewer.fire(n.type,n)})),e.push(this._container.renderService.renderCamera$.pipe(Be(([n,i],[s,a])=>this._closeTo(n,s,.01)&&this._closeTo(i,a,.01),n=>n.camera.position.toArray())).subscribe(()=>{const n="position",i={target:this._viewer,type:n};this._viewer.fire(n,i)})),e.push(this._container.renderService.renderCamera$.pipe(Be(([n,i],[s,a])=>this._closeTo(n,s,.001)&&this._closeTo(i,a,.001),n=>[n.rotation.phi,n.rotation.theta])).subscribe(()=>{const n="pov",i={target:this._viewer,type:n};this._viewer.fire(n,i)})),e.push(this._container.renderService.renderCamera$.pipe(Be((n,i)=>this._closeTo(n,i,.01),n=>n.perspective.fov)).subscribe(()=>{const n="fov",i={target:this._viewer,type:n};this._viewer.fire(n,i)}))}stopEmit(){this.started&&(this._emitSubscriptions.unsubscribe(),this._started=!1)}unproject$(e){return He(this._container.renderService.renderCamera$,this._navigator.stateService.reference$,this._navigator.stateService.currentTransform$).pipe(Ve(),V(([t,n,i])=>this._projection.canvasToUnprojection(e,this._container.container,t,n,i).lngLat))}unprojectBasic$(e){return He(this._container.renderService.renderCamera$,this._navigator.stateService.currentTransform$).pipe(Ve(),V(([t,n])=>this._projection.canvasToBasic(e,this._container.container,t,n)))}_closeTo(e,t,n){return Math.abs(e-t)<=n}_mapMouseEvent$(e,t){return t.pipe(V(n=>[e,n]))}}class fH{constructor(e,t){this._container=e,this._navigator=t,this._renderers={}}add(e,t){const n=new Gn;this._renderers[e.id]={subs:n,renderer:e},n.push(He([this._container.glRenderer.webGLRenderer$,this._navigator.stateService.reference$]).pipe(Hi(1)).subscribe(([i,s])=>{e.onAdd(t,s,i.getContext())})),n.push(this._container.glRenderer.opaqueRender$.pipe(at(this._container.renderService.renderCamera$,this._container.glRenderer.webGLRenderer$)).subscribe(([,i,s])=>{const a=s.getContext(),o=i.perspective.matrixWorldInverse,c=i.perspective.projectionMatrix;e.render(a,o.toArray(),c.toArray())})),n.push(this._navigator.stateService.reference$.pipe(In(1)).subscribe(i=>{e.onReference(t,i)}))}dispose(e){for(const t of Object.keys(this._renderers))this.remove(t,e)}has(e){return e in this._renderers}remove(e,t){this._renderers[e].subs.unsubscribe();const n=this._renderers[e].renderer;delete this._renderers[e],this._container.glRenderer.webGLRenderer$.subscribe(i=>{n.onRemove(t,i.getContext())})}}class pH{constructor(e,t){this._container=e,this._navigator=t,this._controls=null,this._subscriptions=new Gn}attach(e,t){if(this._controls)throw new Zt("Custom camera controls already attached");this._controls=e;const n=new De,i=n.pipe(we(()=>this._navigator.stateService.state$),V(a=>a===it.Custom),Be()),s=this._subscriptions;s.push(i.pipe(At(!1),Ri(),at(this._navigator.stateService.reference$,this._container.renderService.renderCamera$)).subscribe(([[a,o],c,l])=>{o?e.onActivate(t,l.perspective.matrixWorldInverse.toArray(),l.perspective.projectionMatrix.toArray(),c):a&&e.onDeactivate(t)})),s.push(i.pipe(we(a=>a?this._navigator.stateService.currentState$.pipe(In(1)):rt())).subscribe(a=>{e.onAnimationFrame(t,a.id)})),s.push(i.pipe(we(a=>a?this._navigator.stateService.reference$.pipe(In(1)):rt())).subscribe(a=>e.onReference(t,a))),s.push(i.pipe(we(a=>a?this._container.renderService.size$.pipe(In(1)):rt())).subscribe(()=>e.onResize(t))),s.push(He([this._container.glRenderer.webGLRenderer$,this._container.renderService.renderCamera$,this._navigator.stateService.reference$,this._navigator.stateService.state$]).pipe(Ve()).subscribe(()=>{const a=c=>{!this._controls||e!==this._controls||this._updateProjectionMatrix(c)},o=c=>{!this._controls||e!==this._controls||this._updateViewMatrix(c)};e.onAttach(t,o,a),n.next(),n.complete()}))}detach(e){const t=this._controls;return this._controls=null,this._subscriptions.unsubscribe(),new Promise(n=>{this._navigator.stateService.state$.pipe(Hi(1)).subscribe(i=>{if(!t){n(null);return}i===it.Custom&&t.onDeactivate(e),t.onDetach(e),n(t)})})}dispose(e){this.detach(e)}has(e){return!!this._controls&&e===this._controls}_updateProjectionMatrix(e){this._navigator.stateService.state$.pipe(Ve()).subscribe(t=>{if(t!==it.Custom){console.warn("Incorrect camera control mode for projection matrix update");return}this._container.renderService.projectionMatrix$.next(e)})}_updateViewMatrix(e){this._navigator.stateService.state$.pipe(Ve()).subscribe(t=>{if(t!==it.Custom){console.warn("Incorrect camera control mode for view matrix update");return}this._navigator.stateService.setViewMatrix(e)})}}class mH extends ud{constructor(e){super(),this._navigator=new hH(e),this._container=new tH(e,this._navigator.stateService),this._observer=new dH(this,this._navigator,this._container),this._componentController=new H4(this._container,this._navigator,this._observer,e.imageId,e.component),this._customRenderer=new fH(this._container,this._navigator),this._customCameraControls=new pH(this._container,this._navigator)}get dataProvider(){return this._navigator.api.data}get isNavigable(){return this._componentController.navigable}activateCombinedPanning(){this._navigator.panService.enable()}activateComponent(e){this._componentController.activate(e)}activateCover(){this._componentController.activateCover()}addCustomRenderer(e){this._customRenderer.add(e,this)}attachCustomCameraControls(e){this._customCameraControls.attach(e,this)}deactivateCombinedPanning(){this._navigator.panService.disable()}deactivateComponent(e){this._componentController.deactivate(e)}deactivateCover(){this._componentController.deactivateCover()}detachCustomCameraControls(){return this._customCameraControls.detach(this)}fire(e,t){super.fire(e,t)}getBearing(){return new Promise((e,t)=>{this._container.renderService.bearing$.pipe(Ve()).subscribe(n=>{e(n)},n=>{t(n)})})}getCameraControls(){return new Promise((e,t)=>{this._navigator.stateService.state$.pipe(Ve()).subscribe(n=>{switch(n){case it.Custom:e(Qr.Custom);break;case it.Earth:e(Qr.Earth);break;default:e(Qr.Street);break}},n=>{t(n)})})}getCanvas(){return this._container.canvas}getCanvasContainer(){return this._container.canvasContainer}getCenter(){return new Promise((e,t)=>{this._navigator.stateService.getCenter().subscribe(n=>{e(n)},n=>{t(n)})})}getComponent(e){return this._componentController.get(e)}getContainer(){return this._container.container}getFieldOfView(){return new Promise((e,t)=>{this._container.renderService.renderCamera$.pipe(Ve()).subscribe(n=>{e(n.perspective.fov)},n=>{t(n)})})}getImage(){return new Promise((e,t)=>{this._navigator.stateService.currentImage$.pipe(Ve()).subscribe(n=>{e(n)},n=>{t(n)})})}getPointOfView(){return new Promise((e,t)=>{He(this._container.renderService.renderCamera$,this._container.renderService.bearing$).pipe(Ve()).subscribe(([n,i])=>{e({bearing:i,tilt:n.getTilt()})},n=>{t(n)})})}getPosition(){return new Promise((e,t)=>{He(this._container.renderService.renderCamera$,this._navigator.stateService.reference$).pipe(Ve()).subscribe(([n,i])=>{e(this._observer.projection.cameraToLngLat(n,i))},n=>{t(n)})})}getReference(){return new Promise((e,t)=>{this._navigator.stateService.reference$.pipe(Ve()).subscribe(n=>{e(n)},n=>{t(n)})})}getZoom(){return new Promise((e,t)=>{this._navigator.stateService.getZoom().subscribe(n=>{e(n)},n=>{t(n)})})}hasCustomCameraControls(e){return this._customCameraControls.has(e)}hasCustomRenderer(e){return this._customRenderer.has(e)}moveDir(e){const t=this.isNavigable?this._navigator.moveDir$(e):hu(new Error("Calling moveDir is not supported when viewer is not navigable."));return new Promise((n,i)=>{t.subscribe(s=>{n(s)},s=>{i(s)})})}moveTo(e){const t=this.isNavigable?this._navigator.moveTo$(e):hu(new Error("Calling moveTo is not supported when viewer is not navigable."));return new Promise((n,i)=>{t.subscribe(s=>{n(s)},s=>{i(s)})})}off(e,t){super.off(e,t)}on(e,t){super.on(e,t)}project(e){return new Promise((t,n)=>{this._observer.project$(e).subscribe(i=>{t(i)},i=>{n(i)})})}projectFromBasic(e){return new Promise((t,n)=>{this._observer.projectBasic$(e).subscribe(i=>{t(i)},i=>{n(i)})})}remove(){this._customRenderer.dispose(this),this._customCameraControls.dispose(this),this._observer.dispose(),this._componentController.remove(),this._navigator.dispose(),this._container.remove();const e="remove",t={target:this,type:e};this.fire(e,t)}removeCustomRenderer(e){this._customRenderer.remove(e,this)}resize(){this._container.renderService.resize$.next()}setCameraControls(e){const t=sw(e);t===it.Traversing?this._navigator.stateService.traverse():t===it.Earth?this._navigator.stateService.earth():t===it.Custom?this._navigator.stateService.custom():console.warn(`Unsupported camera control transition (${e})`)}setCenter(e){this._navigator.stateService.setCenter(e)}setFieldOfView(e){this._container.renderService.renderCamera$.pipe(Ve()).subscribe(t=>{const n=t.fovToZoom(e);this._navigator.stateService.setZoom(n)})}setFilter(e){return new Promise((t,n)=>{this._navigator.setFilter$(e).subscribe(()=>{t(void 0)},i=>{n(i)})})}setRenderMode(e){this._container.renderService.renderMode$.next(e)}setTransitionMode(e){this._navigator.stateService.setTransitionMode(e)}setAccessToken(e){const t=this.isNavigable?this._navigator.setAccessToken$(e):hu(new Error("Calling setAccessToken is not supported when viewer is not navigable."));return new Promise((n,i)=>{t.subscribe(()=>{n(void 0)},s=>{i(s)})})}setZoom(e){this._navigator.stateService.setZoom(e)}triggerRerender(){this._container.glRenderer.triggerRerender()}unproject(e){return new Promise((t,n)=>{this._observer.unproject$(e).subscribe(i=>{t(i)},i=>{n(i)})})}unprojectToBasic(e){return new Promise((t,n)=>{this._observer.unprojectBasic$(e).subscribe(i=>{t(i)},i=>{n(i)})})}}Qc.register(yM);el.register(yM);nn.registerCover(JM);nn.register(QM);nn.register(eS);nn.register(tS);nn.register(nS);nn.register(hS);nn.register(uS);nn.register(dS);nn.register(pS);nn.register(mS);nn.register(gS);nn.register(_S);nn.register(yS);nn.register(NS);nn.register(OS);nn.register(US);nn.register(BS);var Zx,tp,gH=new N1(16777215,2);const _H=new F1(16777215,1);var vH=new CR;vH.load("assets/hamcamap.mtl",r=>{r.preload();var e=new ER;e.setMaterials(r),e.load("assets/hamcamap.obj",function(t){Zx=t,tp=Zx.children[0],console.log(tp.position);function n(h,u){return Zn(h.lng,h.lat,h.alt,u.lng,u.lat,u.alt)}function i(){const h=new Gu(1,1,1);console.log(h);const u=[new ws({color:16776960}),new ws({color:16711935}),new ws({color:65280}),new ws({color:255}),new ws({color:16777215}),new ws({color:16711680})];let d=new Vi(h,u);return console.log(d.position),tp}class s{constructor(u){this.id="three-cube-renderer",this.renderPass=Tm.Opaque,this.cube=u}onAdd(u,d,f){const p=n(this.cube.geoPosition,d);this.cube.mesh.position.fromArray(p);const g=u.getCanvas();this.renderer=new yR({canvas:g,context:f}),this.renderer.autoClear=!1,this.camera=new Om,this.camera.matrixAutoUpdate=!1,this.scene=new M1,this.scene.add(this.cube.mesh),this.scene.add(gH),this.scene.add(_H)}onReference(u,d){const f=n(this.cube.geoPosition,d);this.cube.mesh.position.fromArray(f)}onRemove(u,d){this.cube.mesh.geometry.dispose(),this.cube.mesh.material.forEach(f=>f.dispose()),this.renderer.dispose()}render(u,d,f){const{camera:p,scene:g,renderer:_}=this;p.matrix.fromArray(d).invert(),p.updateMatrixWorld(!0),p.projectionMatrix.fromArray(f),_.resetState(),_.render(g,p)}}const a=document.createElement("div");a.style.width="100vw",a.style.height="100vh",document.body.appendChild(a);const o={geoPosition:{alt:0,lat:21.03200536,lng:105.8520476},mesh:i()},c=new s(o);new mH({accessToken:"MLY|4463150933761310|5995ca3757fc4f9a9c8f5e96b2efaa03",container:a,imageId:"364368760104630"}).addCustomRenderer(c)})});
