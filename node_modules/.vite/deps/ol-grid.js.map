{
  "version": 3,
  "sources": ["../../ol-grid/dist/ol-grid.umd.js"],
  "sourcesContent": ["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.olGrid = factory());\n})(this, (function () { 'use strict';\n\n    /**\n     * @module ol/events/Event\n     */\n    /**\n     * @classdesc\n     * Stripped down implementation of the W3C DOM Level 2 Event interface.\n     * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n     *\n     * This implementation only provides `type` and `target` properties, and\n     * `stopPropagation` and `preventDefault` methods. It is meant as base class\n     * for higher level events defined in the library, and works with\n     * {@link module:ol/events/Target~Target}.\n     */\n    var BaseEvent = /** @class */ (function () {\n        /**\n         * @param {string} type Type.\n         */\n        function BaseEvent(type) {\n            /**\n             * @type {boolean}\n             */\n            this.propagationStopped;\n            /**\n             * @type {boolean}\n             */\n            this.defaultPrevented;\n            /**\n             * The event type.\n             * @type {string}\n             * @api\n             */\n            this.type = type;\n            /**\n             * The event target.\n             * @type {Object}\n             * @api\n             */\n            this.target = null;\n        }\n        /**\n         * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n         * will be fired.\n         * @api\n         */\n        BaseEvent.prototype.preventDefault = function () {\n            this.defaultPrevented = true;\n        };\n        /**\n         * Stop event propagation.\n         * @api\n         */\n        BaseEvent.prototype.stopPropagation = function () {\n            this.propagationStopped = true;\n        };\n        return BaseEvent;\n    }());\n    var Event = BaseEvent;\n\n    /**\n     * @module ol/ObjectEventType\n     */\n    /**\n     * @enum {string}\n     */\n    var ObjectEventType = {\n        /**\n         * Triggered when a property is changed.\n         * @event module:ol/Object.ObjectEvent#propertychange\n         * @api\n         */\n        PROPERTYCHANGE: 'propertychange',\n    };\n    /**\n     * @typedef {'propertychange'} Types\n     */\n\n    /**\n     * @module ol/Disposable\n     */\n    /**\n     * @classdesc\n     * Objects that need to clean up after themselves.\n     */\n    var Disposable = /** @class */ (function () {\n        function Disposable() {\n            /**\n             * The object has already been disposed.\n             * @type {boolean}\n             * @protected\n             */\n            this.disposed = false;\n        }\n        /**\n         * Clean up.\n         */\n        Disposable.prototype.dispose = function () {\n            if (!this.disposed) {\n                this.disposed = true;\n                this.disposeInternal();\n            }\n        };\n        /**\n         * Extension point for disposable objects.\n         * @protected\n         */\n        Disposable.prototype.disposeInternal = function () { };\n        return Disposable;\n    }());\n    var Disposable$1 = Disposable;\n\n    /**\n     * @module ol/array\n     */\n    /**\n     * Compare function for array sort that is safe for numbers.\n     * @param {*} a The first object to be compared.\n     * @param {*} b The second object to be compared.\n     * @return {number} A negative number, zero, or a positive number as the first\n     *     argument is less than, equal to, or greater than the second.\n     */\n    function numberSafeCompareFunction(a, b) {\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n    /**\n     * @param {Array<*>} arr Array.\n     * @param {number} begin Begin index.\n     * @param {number} end End index.\n     */\n    function reverseSubArray(arr, begin, end) {\n        while (begin < end) {\n            var tmp = arr[begin];\n            arr[begin] = arr[end];\n            arr[end] = tmp;\n            ++begin;\n            --end;\n        }\n    }\n    /**\n     * @param {Array<VALUE>} arr The array to modify.\n     * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n     * @template VALUE\n     */\n    function extend$1(arr, data) {\n        var extension = Array.isArray(data) ? data : [data];\n        var length = extension.length;\n        for (var i = 0; i < length; i++) {\n            arr[arr.length] = extension[i];\n        }\n    }\n    /**\n     * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n     * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n     * @return {boolean} Whether the two arrays are equal.\n     */\n    function equals$1(arr1, arr2) {\n        var len1 = arr1.length;\n        if (len1 !== arr2.length) {\n            return false;\n        }\n        for (var i = 0; i < len1; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @module ol/functions\n     */\n    /**\n     * Always returns true.\n     * @return {boolean} true.\n     */\n    function TRUE() {\n        return true;\n    }\n    /**\n     * A reusable function, used e.g. as a default for callbacks.\n     *\n     * @return {void} Nothing.\n     */\n    function VOID() { }\n    /**\n     * Wrap a function in another function that remembers the last return.  If the\n     * returned function is called twice in a row with the same arguments and the same\n     * this object, it will return the value from the first call in the second call.\n     *\n     * @param {function(...any): ReturnType} fn The function to memoize.\n     * @return {function(...any): ReturnType} The memoized function.\n     * @template ReturnType\n     */\n    function memoizeOne(fn) {\n        var called = false;\n        /** @type {ReturnType} */\n        var lastResult;\n        /** @type {Array<any>} */\n        var lastArgs;\n        var lastThis;\n        return function () {\n            var nextArgs = Array.prototype.slice.call(arguments);\n            if (!called || this !== lastThis || !equals$1(nextArgs, lastArgs)) {\n                called = true;\n                lastThis = this;\n                lastArgs = nextArgs;\n                lastResult = fn.apply(this, arguments);\n            }\n            return lastResult;\n        };\n    }\n\n    /**\n     * @module ol/obj\n     */\n    /**\n     * Polyfill for Object.assign().  Assigns enumerable and own properties from\n     * one or more source objects to a target object.\n     * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n     *\n     * @param {!Object} target The target object.\n     * @param {...Object} var_sources The source object(s).\n     * @return {!Object} The modified target object.\n     */\n    var assign = typeof Object.assign === 'function'\n        ? Object.assign\n        : function (target, var_sources) {\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n            var output = Object(target);\n            for (var i = 1, ii = arguments.length; i < ii; ++i) {\n                var source = arguments[i];\n                if (source !== undefined && source !== null) {\n                    for (var key in source) {\n                        if (source.hasOwnProperty(key)) {\n                            output[key] = source[key];\n                        }\n                    }\n                }\n            }\n            return output;\n        };\n    /**\n     * Removes all properties from an object.\n     * @param {Object} object The object to clear.\n     */\n    function clear(object) {\n        for (var property in object) {\n            delete object[property];\n        }\n    }\n    /**\n     * Polyfill for Object.values().  Get an array of property values from an object.\n     * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n     *\n     * @param {!Object<K,V>} object The object from which to get the values.\n     * @return {!Array<V>} The property values.\n     * @template K,V\n     */\n    var getValues = typeof Object.values === 'function'\n        ? Object.values\n        : function (object) {\n            var values = [];\n            for (var property in object) {\n                values.push(object[property]);\n            }\n            return values;\n        };\n    /**\n     * Determine if an object has any properties.\n     * @param {Object} object The object to check.\n     * @return {boolean} The object is empty.\n     */\n    function isEmpty(object) {\n        var property;\n        for (property in object) {\n            return false;\n        }\n        return !property;\n    }\n\n    var __extends$y = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @typedef {EventTarget|Target} EventTargetLike\n     */\n    /**\n     * @classdesc\n     * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n     * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n     *\n     * There are two important simplifications compared to the specification:\n     *\n     * 1. The handling of `useCapture` in `addEventListener` and\n     *    `removeEventListener`. There is no real capture model.\n     * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n     *    There is no event target hierarchy. When a listener calls\n     *    `stopPropagation` or `preventDefault` on an event object, it means that no\n     *    more listeners after this one will be called. Same as when the listener\n     *    returns false.\n     */\n    var Target = /** @class */ (function (_super) {\n        __extends$y(Target, _super);\n        /**\n         * @param {*} [opt_target] Default event target for dispatched events.\n         */\n        function Target(opt_target) {\n            var _this = _super.call(this) || this;\n            /**\n             * @private\n             * @type {*}\n             */\n            _this.eventTarget_ = opt_target;\n            /**\n             * @private\n             * @type {Object<string, number>}\n             */\n            _this.pendingRemovals_ = null;\n            /**\n             * @private\n             * @type {Object<string, number>}\n             */\n            _this.dispatching_ = null;\n            /**\n             * @private\n             * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n             */\n            _this.listeners_ = null;\n            return _this;\n        }\n        /**\n         * @param {string} type Type.\n         * @param {import(\"../events.js\").Listener} listener Listener.\n         */\n        Target.prototype.addEventListener = function (type, listener) {\n            if (!type || !listener) {\n                return;\n            }\n            var listeners = this.listeners_ || (this.listeners_ = {});\n            var listenersForType = listeners[type] || (listeners[type] = []);\n            if (listenersForType.indexOf(listener) === -1) {\n                listenersForType.push(listener);\n            }\n        };\n        /**\n         * Dispatches an event and calls all listeners listening for events\n         * of this type. The event parameter can either be a string or an\n         * Object with a `type` property.\n         *\n         * @param {import(\"./Event.js\").default|string} event Event object.\n         * @return {boolean|undefined} `false` if anyone called preventDefault on the\n         *     event object or if any of the listeners returned false.\n         * @api\n         */\n        Target.prototype.dispatchEvent = function (event) {\n            var isString = typeof event === 'string';\n            var type = isString ? event : event.type;\n            var listeners = this.listeners_ && this.listeners_[type];\n            if (!listeners) {\n                return;\n            }\n            var evt = isString ? new Event(event) : /** @type {Event} */ (event);\n            if (!evt.target) {\n                evt.target = this.eventTarget_ || this;\n            }\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            var propagate;\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            if (--dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        };\n        /**\n         * Clean up.\n         */\n        Target.prototype.disposeInternal = function () {\n            this.listeners_ && clear(this.listeners_);\n        };\n        /**\n         * Get the listeners for a specified event type. Listeners are returned in the\n         * order that they will be called in.\n         *\n         * @param {string} type Type.\n         * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n         */\n        Target.prototype.getListeners = function (type) {\n            return (this.listeners_ && this.listeners_[type]) || undefined;\n        };\n        /**\n         * @param {string} [opt_type] Type. If not provided,\n         *     `true` will be returned if this event target has any listeners.\n         * @return {boolean} Has listeners.\n         */\n        Target.prototype.hasListener = function (opt_type) {\n            if (!this.listeners_) {\n                return false;\n            }\n            return opt_type\n                ? opt_type in this.listeners_\n                : Object.keys(this.listeners_).length > 0;\n        };\n        /**\n         * @param {string} type Type.\n         * @param {import(\"../events.js\").Listener} listener Listener.\n         */\n        Target.prototype.removeEventListener = function (type, listener) {\n            var listeners = this.listeners_ && this.listeners_[type];\n            if (listeners) {\n                var index = listeners.indexOf(listener);\n                if (index !== -1) {\n                    if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                        // make listener a no-op, and remove later in #dispatchEvent()\n                        listeners[index] = VOID;\n                        ++this.pendingRemovals_[type];\n                    }\n                    else {\n                        listeners.splice(index, 1);\n                        if (listeners.length === 0) {\n                            delete this.listeners_[type];\n                        }\n                    }\n                }\n            }\n        };\n        return Target;\n    }(Disposable$1));\n    var EventTarget = Target;\n\n    /**\n     * @module ol/events/EventType\n     */\n    /**\n     * @enum {string}\n     * @const\n     */\n    var EventType = {\n        /**\n         * Generic change event. Triggered when the revision counter is increased.\n         * @event module:ol/events/Event~BaseEvent#change\n         * @api\n         */\n        CHANGE: 'change',\n        /**\n         * Generic error event. Triggered when an error occurs.\n         * @event module:ol/events/Event~BaseEvent#error\n         * @api\n         */\n        ERROR: 'error',\n        BLUR: 'blur',\n        CLEAR: 'clear',\n        CONTEXTMENU: 'contextmenu',\n        CLICK: 'click',\n        DBLCLICK: 'dblclick',\n        DRAGENTER: 'dragenter',\n        DRAGOVER: 'dragover',\n        DROP: 'drop',\n        FOCUS: 'focus',\n        KEYDOWN: 'keydown',\n        KEYPRESS: 'keypress',\n        LOAD: 'load',\n        RESIZE: 'resize',\n        TOUCHMOVE: 'touchmove',\n        WHEEL: 'wheel',\n    };\n\n    /**\n     * @module ol/events\n     */\n    /**\n     * Key to use with {@link module:ol/Observable.unByKey}.\n     * @typedef {Object} EventsKey\n     * @property {ListenerFunction} listener Listener.\n     * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n     * @property {string} type Type.\n     * @api\n     */\n    /**\n     * Listener function. This function is called with an event object as argument.\n     * When the function returns `false`, event propagation will stop.\n     *\n     * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n     * @api\n     */\n    /**\n     * @typedef {Object} ListenerObject\n     * @property {ListenerFunction} handleEvent HandleEvent listener function.\n     */\n    /**\n     * @typedef {ListenerFunction|ListenerObject} Listener\n     */\n    /**\n     * Registers an event listener on an event target. Inspired by\n     * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n     *\n     * This function efficiently binds a `listener` to a `this` object, and returns\n     * a key for use with {@link module:ol/events.unlistenByKey}.\n     *\n     * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n     * @param {string} type Event type.\n     * @param {ListenerFunction} listener Listener.\n     * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n     *     listener. Default is the `target`.\n     * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n     * @return {EventsKey} Unique key for the listener.\n     */\n    function listen(target, type, listener, opt_this, opt_once) {\n        if (opt_this && opt_this !== target) {\n            listener = listener.bind(opt_this);\n        }\n        if (opt_once) {\n            var originalListener_1 = listener;\n            listener = function () {\n                target.removeEventListener(type, listener);\n                originalListener_1.apply(this, arguments);\n            };\n        }\n        var eventsKey = {\n            target: target,\n            type: type,\n            listener: listener,\n        };\n        target.addEventListener(type, listener);\n        return eventsKey;\n    }\n    /**\n     * Registers a one-off event listener on an event target. Inspired by\n     * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n     *\n     * This function efficiently binds a `listener` as self-unregistering listener\n     * to a `this` object, and returns a key for use with\n     * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n     * unregistered before it is called.\n     *\n     * When {@link module:ol/events.listen} is called with the same arguments after this\n     * function, the self-unregistering listener will be turned into a permanent\n     * listener.\n     *\n     * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n     * @param {string} type Event type.\n     * @param {ListenerFunction} listener Listener.\n     * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n     *     listener. Default is the `target`.\n     * @return {EventsKey} Key for unlistenByKey.\n     */\n    function listenOnce(target, type, listener, opt_this) {\n        return listen(target, type, listener, opt_this, true);\n    }\n    /**\n     * Unregisters event listeners on an event target. Inspired by\n     * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n     *\n     * The argument passed to this function is the key returned from\n     * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n     *\n     * @param {EventsKey} key The key.\n     */\n    function unlistenByKey(key) {\n        if (key && key.target) {\n            key.target.removeEventListener(key.type, key.listener);\n            clear(key);\n        }\n    }\n\n    var __extends$x = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /***\n     * @template {string} Type\n     * @template {Event|import(\"./events/Event.js\").default} EventClass\n     * @template Return\n     * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n     */\n    /***\n     * @template {string} Type\n     * @template Return\n     * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n     */\n    /**\n     * @typedef {'change'|'error'} EventTypes\n     */\n    /***\n     * @template Return\n     * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n     */\n    /**\n     * @classdesc\n     * Abstract base class; normally only used for creating subclasses and not\n     * instantiated in apps.\n     * An event target providing convenient methods for listener registration\n     * and unregistration. A generic `change` event is always available through\n     * {@link module:ol/Observable~Observable#changed}.\n     *\n     * @fires import(\"./events/Event.js\").default\n     * @api\n     */\n    var Observable = /** @class */ (function (_super) {\n        __extends$x(Observable, _super);\n        function Observable() {\n            var _this = _super.call(this) || this;\n            _this.on =\n                /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onInternal);\n            _this.once =\n                /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onceInternal);\n            _this.un = /** @type {ObservableOnSignature<void>} */ (_this.unInternal);\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.revision_ = 0;\n            return _this;\n        }\n        /**\n         * Increases the revision counter and dispatches a 'change' event.\n         * @api\n         */\n        Observable.prototype.changed = function () {\n            ++this.revision_;\n            this.dispatchEvent(EventType.CHANGE);\n        };\n        /**\n         * Get the version number for this object.  Each time the object is modified,\n         * its version number will be incremented.\n         * @return {number} Revision.\n         * @api\n         */\n        Observable.prototype.getRevision = function () {\n            return this.revision_;\n        };\n        /**\n         * @param {string|Array<string>} type Type.\n         * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n         * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n         * @protected\n         */\n        Observable.prototype.onInternal = function (type, listener) {\n            if (Array.isArray(type)) {\n                var len = type.length;\n                var keys = new Array(len);\n                for (var i = 0; i < len; ++i) {\n                    keys[i] = listen(this, type[i], listener);\n                }\n                return keys;\n            }\n            else {\n                return listen(this, /** @type {string} */ (type), listener);\n            }\n        };\n        /**\n         * @param {string|Array<string>} type Type.\n         * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n         * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n         * @protected\n         */\n        Observable.prototype.onceInternal = function (type, listener) {\n            var key;\n            if (Array.isArray(type)) {\n                var len = type.length;\n                key = new Array(len);\n                for (var i = 0; i < len; ++i) {\n                    key[i] = listenOnce(this, type[i], listener);\n                }\n            }\n            else {\n                key = listenOnce(this, /** @type {string} */ (type), listener);\n            }\n            /** @type {Object} */ (listener).ol_key = key;\n            return key;\n        };\n        /**\n         * Unlisten for a certain type of event.\n         * @param {string|Array<string>} type Type.\n         * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n         * @protected\n         */\n        Observable.prototype.unInternal = function (type, listener) {\n            var key = /** @type {Object} */ (listener).ol_key;\n            if (key) {\n                unByKey(key);\n            }\n            else if (Array.isArray(type)) {\n                for (var i = 0, ii = type.length; i < ii; ++i) {\n                    this.removeEventListener(type[i], listener);\n                }\n            }\n            else {\n                this.removeEventListener(type, listener);\n            }\n        };\n        return Observable;\n    }(EventTarget));\n    /**\n     * Listen for a certain type of event.\n     * @function\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on;\n    /**\n     * Listen once for a certain type of event.\n     * @function\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once;\n    /**\n     * Unlisten for a certain type of event.\n     * @function\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un;\n    /**\n     * Removes an event listener using the key returned by `on()` or `once()`.\n     * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n     *     or `once()` (or an array of keys).\n     * @api\n     */\n    function unByKey(key) {\n        if (Array.isArray(key)) {\n            for (var i = 0, ii = key.length; i < ii; ++i) {\n                unlistenByKey(key[i]);\n            }\n        }\n        else {\n            unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n        }\n    }\n    var Observable$1 = Observable;\n\n    /**\n     * @module ol/util\n     */\n    /**\n     * @return {?} Any return.\n     */\n    function abstract() {\n        return /** @type {?} */ ((function () {\n            throw new Error('Unimplemented abstract method.');\n        })());\n    }\n    /**\n     * Counter for getUid.\n     * @type {number}\n     * @private\n     */\n    var uidCounter_ = 0;\n    /**\n     * Gets a unique ID for an object. This mutates the object so that further calls\n     * with the same object as a parameter returns the same value. Unique IDs are generated\n     * as a strictly increasing sequence. Adapted from goog.getUid.\n     *\n     * @param {Object} obj The object to get the unique ID for.\n     * @return {string} The unique ID for the object.\n     * @api\n     */\n    function getUid(obj) {\n        return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n    }\n    /**\n     * OpenLayers version.\n     * @type {string}\n     */\n    var VERSION = '6.14.1';\n\n    var __extends$w = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @classdesc\n     * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n     */\n    var ObjectEvent = /** @class */ (function (_super) {\n        __extends$w(ObjectEvent, _super);\n        /**\n         * @param {string} type The event type.\n         * @param {string} key The property name.\n         * @param {*} oldValue The old value for `key`.\n         */\n        function ObjectEvent(type, key, oldValue) {\n            var _this = _super.call(this, type) || this;\n            /**\n             * The name of the property whose value is changing.\n             * @type {string}\n             * @api\n             */\n            _this.key = key;\n            /**\n             * The old value. To get the new value use `e.target.get(e.key)` where\n             * `e` is the event object.\n             * @type {*}\n             * @api\n             */\n            _this.oldValue = oldValue;\n            return _this;\n        }\n        return ObjectEvent;\n    }(Event));\n    /***\n     * @template Return\n     * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n     *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n     *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n     */\n    /**\n     * @classdesc\n     * Abstract base class; normally only used for creating subclasses and not\n     * instantiated in apps.\n     * Most non-trivial classes inherit from this.\n     *\n     * This extends {@link module:ol/Observable~Observable} with observable\n     * properties, where each property is observable as well as the object as a\n     * whole.\n     *\n     * Classes that inherit from this have pre-defined properties, to which you can\n     * add your owns. The pre-defined properties are listed in this documentation as\n     * 'Observable Properties', and have their own accessors; for example,\n     * {@link module:ol/Map~Map} has a `target` property, accessed with\n     * `getTarget()` and changed with `setTarget()`. Not all properties are however\n     * settable. There are also general-purpose accessors `get()` and `set()`. For\n     * example, `get('target')` is equivalent to `getTarget()`.\n     *\n     * The `set` accessors trigger a change event, and you can monitor this by\n     * registering a listener. For example, {@link module:ol/View~View} has a\n     * `center` property, so `view.on('change:center', function(evt) {...});` would\n     * call the function whenever the value of the center property changes. Within\n     * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n     * would return the new center.\n     *\n     * You can add your own observable properties with\n     * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n     * You can listen for changes on that property value with\n     * `object.on('change:prop', listener)`. You can get a list of all\n     * properties with {@link module:ol/Object~BaseObject#getProperties}.\n     *\n     * Note that the observable properties are separate from standard JS properties.\n     * You can, for example, give your map object a title with\n     * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n     * first will be a `hasOwnProperty`; the second will appear in\n     * `getProperties()`. Only the second is observable.\n     *\n     * Properties can be deleted by using the unset method. E.g.\n     * object.unset('foo').\n     *\n     * @fires ObjectEvent\n     * @api\n     */\n    var BaseObject = /** @class */ (function (_super) {\n        __extends$w(BaseObject, _super);\n        /**\n         * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n         */\n        function BaseObject(opt_values) {\n            var _this = _super.call(this) || this;\n            /***\n             * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n             */\n            _this.on;\n            /***\n             * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n             */\n            _this.once;\n            /***\n             * @type {ObjectOnSignature<void>}\n             */\n            _this.un;\n            // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n            // the same as the order in which they were created.  This also helps to\n            // ensure that object properties are always added in the same order, which\n            // helps many JavaScript engines generate faster code.\n            getUid(_this);\n            /**\n             * @private\n             * @type {Object<string, *>}\n             */\n            _this.values_ = null;\n            if (opt_values !== undefined) {\n                _this.setProperties(opt_values);\n            }\n            return _this;\n        }\n        /**\n         * Gets a value.\n         * @param {string} key Key name.\n         * @return {*} Value.\n         * @api\n         */\n        BaseObject.prototype.get = function (key) {\n            var value;\n            if (this.values_ && this.values_.hasOwnProperty(key)) {\n                value = this.values_[key];\n            }\n            return value;\n        };\n        /**\n         * Get a list of object property names.\n         * @return {Array<string>} List of property names.\n         * @api\n         */\n        BaseObject.prototype.getKeys = function () {\n            return (this.values_ && Object.keys(this.values_)) || [];\n        };\n        /**\n         * Get an object of all property names and values.\n         * @return {Object<string, *>} Object.\n         * @api\n         */\n        BaseObject.prototype.getProperties = function () {\n            return (this.values_ && assign({}, this.values_)) || {};\n        };\n        /**\n         * @return {boolean} The object has properties.\n         */\n        BaseObject.prototype.hasProperties = function () {\n            return !!this.values_;\n        };\n        /**\n         * @param {string} key Key name.\n         * @param {*} oldValue Old value.\n         */\n        BaseObject.prototype.notify = function (key, oldValue) {\n            var eventType;\n            eventType = \"change:\".concat(key);\n            if (this.hasListener(eventType)) {\n                this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n            }\n            eventType = ObjectEventType.PROPERTYCHANGE;\n            if (this.hasListener(eventType)) {\n                this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n            }\n        };\n        /**\n         * @param {string} key Key name.\n         * @param {import(\"./events.js\").Listener} listener Listener.\n         */\n        BaseObject.prototype.addChangeListener = function (key, listener) {\n            this.addEventListener(\"change:\".concat(key), listener);\n        };\n        /**\n         * @param {string} key Key name.\n         * @param {import(\"./events.js\").Listener} listener Listener.\n         */\n        BaseObject.prototype.removeChangeListener = function (key, listener) {\n            this.removeEventListener(\"change:\".concat(key), listener);\n        };\n        /**\n         * Sets a value.\n         * @param {string} key Key name.\n         * @param {*} value Value.\n         * @param {boolean} [opt_silent] Update without triggering an event.\n         * @api\n         */\n        BaseObject.prototype.set = function (key, value, opt_silent) {\n            var values = this.values_ || (this.values_ = {});\n            if (opt_silent) {\n                values[key] = value;\n            }\n            else {\n                var oldValue = values[key];\n                values[key] = value;\n                if (oldValue !== value) {\n                    this.notify(key, oldValue);\n                }\n            }\n        };\n        /**\n         * Sets a collection of key-value pairs.  Note that this changes any existing\n         * properties and adds new ones (it does not remove any existing properties).\n         * @param {Object<string, *>} values Values.\n         * @param {boolean} [opt_silent] Update without triggering an event.\n         * @api\n         */\n        BaseObject.prototype.setProperties = function (values, opt_silent) {\n            for (var key in values) {\n                this.set(key, values[key], opt_silent);\n            }\n        };\n        /**\n         * Apply any properties from another object without triggering events.\n         * @param {BaseObject} source The source object.\n         * @protected\n         */\n        BaseObject.prototype.applyProperties = function (source) {\n            if (!source.values_) {\n                return;\n            }\n            assign(this.values_ || (this.values_ = {}), source.values_);\n        };\n        /**\n         * Unsets a property.\n         * @param {string} key Key name.\n         * @param {boolean} [opt_silent] Unset without triggering an event.\n         * @api\n         */\n        BaseObject.prototype.unset = function (key, opt_silent) {\n            if (this.values_ && key in this.values_) {\n                var oldValue = this.values_[key];\n                delete this.values_[key];\n                if (isEmpty(this.values_)) {\n                    this.values_ = null;\n                }\n                if (!opt_silent) {\n                    this.notify(key, oldValue);\n                }\n            }\n        };\n        return BaseObject;\n    }(Observable$1));\n    var BaseObject$1 = BaseObject;\n\n    /**\n     * @module ol/interaction/Property\n     */\n    /**\n     * @enum {string}\n     */\n    var InteractionProperty = {\n        ACTIVE: 'active',\n    };\n\n    var __extends$v = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /***\n     * @template Return\n     * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n     *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n     *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n     *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n     *     'change:active', Return>} InteractionOnSignature\n     */\n    /**\n     * Object literal with config options for interactions.\n     * @typedef {Object} InteractionOptions\n     * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n     * Method called by the map to notify the interaction that a browser event was\n     * dispatched to the map. If the function returns a falsy value, propagation of\n     * the event to other interactions in the map's interactions chain will be\n     * prevented (this includes functions with no explicit return). The interactions\n     * are traversed in reverse order of the interactions collection of the map.\n     */\n    /**\n     * @classdesc\n     * Abstract base class; normally only used for creating subclasses and not\n     * instantiated in apps.\n     * User actions that change the state of the map. Some are similar to controls,\n     * but are not associated with a DOM element.\n     * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n     * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n     * by a keyboard event not a button element event.\n     * Although interactions do not have a DOM element, some of them do render\n     * vectors and so are visible on the screen.\n     * @api\n     */\n    var Interaction = /** @class */ (function (_super) {\n        __extends$v(Interaction, _super);\n        /**\n         * @param {InteractionOptions} [opt_options] Options.\n         */\n        function Interaction(opt_options) {\n            var _this = _super.call(this) || this;\n            /***\n             * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n             */\n            _this.on;\n            /***\n             * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n             */\n            _this.once;\n            /***\n             * @type {InteractionOnSignature<void>}\n             */\n            _this.un;\n            if (opt_options && opt_options.handleEvent) {\n                _this.handleEvent = opt_options.handleEvent;\n            }\n            /**\n             * @private\n             * @type {import(\"../PluggableMap.js\").default|null}\n             */\n            _this.map_ = null;\n            _this.setActive(true);\n            return _this;\n        }\n        /**\n         * Return whether the interaction is currently active.\n         * @return {boolean} `true` if the interaction is active, `false` otherwise.\n         * @observable\n         * @api\n         */\n        Interaction.prototype.getActive = function () {\n            return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n        };\n        /**\n         * Get the map associated with this interaction.\n         * @return {import(\"../PluggableMap.js\").default|null} Map.\n         * @api\n         */\n        Interaction.prototype.getMap = function () {\n            return this.map_;\n        };\n        /**\n         * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n         * @return {boolean} `false` to stop event propagation.\n         * @api\n         */\n        Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n            return true;\n        };\n        /**\n         * Activate or deactivate the interaction.\n         * @param {boolean} active Active.\n         * @observable\n         * @api\n         */\n        Interaction.prototype.setActive = function (active) {\n            this.set(InteractionProperty.ACTIVE, active);\n        };\n        /**\n         * Remove the interaction from its current map and attach it to the new map.\n         * Subclasses may set up event handlers to get notified about changes to\n         * the map here.\n         * @param {import(\"../PluggableMap.js\").default|null} map Map.\n         */\n        Interaction.prototype.setMap = function (map) {\n            this.map_ = map;\n        };\n        return Interaction;\n    }(BaseObject$1));\n    var Interaction$1 = Interaction;\n\n    /**\n     * @module ol/layer/Property\n     */\n    /**\n     * @enum {string}\n     */\n    var LayerProperty = {\n        OPACITY: 'opacity',\n        VISIBLE: 'visible',\n        EXTENT: 'extent',\n        Z_INDEX: 'zIndex',\n        MAX_RESOLUTION: 'maxResolution',\n        MIN_RESOLUTION: 'minResolution',\n        MAX_ZOOM: 'maxZoom',\n        MIN_ZOOM: 'minZoom',\n        SOURCE: 'source',\n        MAP: 'map',\n    };\n\n    var __extends$u = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n     * extended with a `code` property.\n     * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n     */\n    var AssertionError = /** @class */ (function (_super) {\n        __extends$u(AssertionError, _super);\n        /**\n         * @param {number} code Error code.\n         */\n        function AssertionError(code) {\n            var _this = this;\n            var path = 'v' + VERSION.split('-')[0];\n            var message = 'Assertion failed. See https://openlayers.org/en/' +\n                path +\n                '/doc/errors/#' +\n                code +\n                ' for details.';\n            _this = _super.call(this, message) || this;\n            /**\n             * Error code. The meaning of the code can be found on\n             * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n             * the version found in the OpenLayers script's header comment if a version\n             * other than the latest is used).\n             * @type {number}\n             * @api\n             */\n            _this.code = code;\n            /**\n             * @type {string}\n             */\n            _this.name = 'AssertionError';\n            // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n            _this.message = message;\n            return _this;\n        }\n        return AssertionError;\n    }(Error));\n    var AssertionError$1 = AssertionError;\n\n    /**\n     * @module ol/asserts\n     */\n    /**\n     * @param {*} assertion Assertion we expected to be truthy.\n     * @param {number} errorCode Error code.\n     */\n    function assert(assertion, errorCode) {\n        if (!assertion) {\n            throw new AssertionError$1(errorCode);\n        }\n    }\n\n    /**\n     * @module ol/math\n     */\n    /**\n     * Takes a number and clamps it to within the provided bounds.\n     * @param {number} value The input number.\n     * @param {number} min The minimum value to return.\n     * @param {number} max The maximum value to return.\n     * @return {number} The input number if it is within bounds, or the nearest\n     *     number within the bounds.\n     */\n    function clamp(value, min, max) {\n        return Math.min(Math.max(value, min), max);\n    }\n    /**\n     * Return the hyperbolic cosine of a given number. The method will use the\n     * native `Math.cosh` function if it is available, otherwise the hyperbolic\n     * cosine will be calculated via the reference implementation of the Mozilla\n     * developer network.\n     *\n     * @param {number} x X.\n     * @return {number} Hyperbolic cosine of x.\n     */\n    var cosh = (function () {\n        // Wrapped in a iife, to save the overhead of checking for the native\n        // implementation on every invocation.\n        var cosh;\n        if ('cosh' in Math) {\n            // The environment supports the native Math.cosh function, use it…\n            cosh = Math.cosh;\n        }\n        else {\n            // … else, use the reference implementation of MDN:\n            cosh = function (x) {\n                var y = /** @type {Math} */ (Math).exp(x);\n                return (y + 1 / y) / 2;\n            };\n        }\n        return cosh;\n    })();\n    /**\n     * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n     * @param {number} x1 X1.\n     * @param {number} y1 Y1.\n     * @param {number} x2 X2.\n     * @param {number} y2 Y2.\n     * @return {number} Squared distance.\n     */\n    function squaredDistance(x1, y1, x2, y2) {\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        return dx * dx + dy * dy;\n    }\n    /**\n     * Converts degrees to radians.\n     *\n     * @param {number} angleInDegrees Angle in degrees.\n     * @return {number} Angle in radians.\n     */\n    function toRadians(angleInDegrees) {\n        return (angleInDegrees * Math.PI) / 180;\n    }\n    /**\n     * Calculates the linearly interpolated value of x between a and b.\n     *\n     * @param {number} a Number\n     * @param {number} b Number\n     * @param {number} x Value to be interpolated.\n     * @return {number} Interpolated value.\n     */\n    function lerp(a, b, x) {\n        return a + x * (b - a);\n    }\n\n    var __extends$t = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * A css color, or a function called with a view resolution returning a css color.\n     *\n     * @typedef {string|function(number):string} BackgroundColor\n     * @api\n     */\n    /**\n     * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n     *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n     */\n    /***\n     * @template Return\n     * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n     *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n     *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n     */\n    /**\n     * @typedef {Object} Options\n     * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n     * @property {number} [opacity=1] Opacity (0, 1).\n     * @property {boolean} [visible=true] Visibility.\n     * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n     * rendered outside of this extent.\n     * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n     * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n     * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n     * method was used.\n     * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n     * visible.\n     * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n     * be visible.\n     * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n     * visible.\n     * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n     * be visible.\n     * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n     * will be rendered.\n     * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n     */\n    /**\n     * @classdesc\n     * Abstract base class; normally only used for creating subclasses and not\n     * instantiated in apps.\n     * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n     * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n     * is observable, and has get/set accessors.\n     *\n     * @api\n     */\n    var BaseLayer = /** @class */ (function (_super) {\n        __extends$t(BaseLayer, _super);\n        /**\n         * @param {Options} options Layer options.\n         */\n        function BaseLayer(options) {\n            var _this = _super.call(this) || this;\n            /***\n             * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n             */\n            _this.on;\n            /***\n             * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n             */\n            _this.once;\n            /***\n             * @type {BaseLayerOnSignature<void>}\n             */\n            _this.un;\n            /**\n             * @type {BackgroundColor|false}\n             * @private\n             */\n            _this.background_ = options.background;\n            /**\n             * @type {Object<string, *>}\n             */\n            var properties = assign({}, options);\n            if (typeof options.properties === 'object') {\n                delete properties.properties;\n                assign(properties, options.properties);\n            }\n            properties[LayerProperty.OPACITY] =\n                options.opacity !== undefined ? options.opacity : 1;\n            assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n            properties[LayerProperty.VISIBLE] =\n                options.visible !== undefined ? options.visible : true;\n            properties[LayerProperty.Z_INDEX] = options.zIndex;\n            properties[LayerProperty.MAX_RESOLUTION] =\n                options.maxResolution !== undefined ? options.maxResolution : Infinity;\n            properties[LayerProperty.MIN_RESOLUTION] =\n                options.minResolution !== undefined ? options.minResolution : 0;\n            properties[LayerProperty.MIN_ZOOM] =\n                options.minZoom !== undefined ? options.minZoom : -Infinity;\n            properties[LayerProperty.MAX_ZOOM] =\n                options.maxZoom !== undefined ? options.maxZoom : Infinity;\n            /**\n             * @type {string}\n             * @private\n             */\n            _this.className_ =\n                properties.className !== undefined ? properties.className : 'ol-layer';\n            delete properties.className;\n            _this.setProperties(properties);\n            /**\n             * @type {import(\"./Layer.js\").State}\n             * @private\n             */\n            _this.state_ = null;\n            return _this;\n        }\n        /**\n         * Get the background for this layer.\n         * @return {BackgroundColor|false} Layer background.\n         */\n        BaseLayer.prototype.getBackground = function () {\n            return this.background_;\n        };\n        /**\n         * @return {string} CSS class name.\n         */\n        BaseLayer.prototype.getClassName = function () {\n            return this.className_;\n        };\n        /**\n         * This method is not meant to be called by layers or layer renderers because the state\n         * is incorrect if the layer is included in a layer group.\n         *\n         * @param {boolean} [opt_managed] Layer is managed.\n         * @return {import(\"./Layer.js\").State} Layer state.\n         */\n        BaseLayer.prototype.getLayerState = function (opt_managed) {\n            /** @type {import(\"./Layer.js\").State} */\n            var state = this.state_ ||\n                /** @type {?} */ ({\n                    layer: this,\n                    managed: opt_managed === undefined ? true : opt_managed,\n                });\n            var zIndex = this.getZIndex();\n            state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n            state.visible = this.getVisible();\n            state.extent = this.getExtent();\n            state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n            state.maxResolution = this.getMaxResolution();\n            state.minResolution = Math.max(this.getMinResolution(), 0);\n            state.minZoom = this.getMinZoom();\n            state.maxZoom = this.getMaxZoom();\n            this.state_ = state;\n            return state;\n        };\n        /**\n         * @abstract\n         * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n         *     modified in place).\n         * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n         */\n        BaseLayer.prototype.getLayersArray = function (opt_array) {\n            return abstract();\n        };\n        /**\n         * @abstract\n         * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n         *     states (to be modified in place).\n         * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n         */\n        BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n            return abstract();\n        };\n        /**\n         * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n         * will be visible regardless of extent.\n         * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.getExtent = function () {\n            return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n        };\n        /**\n         * Return the maximum resolution of the layer.\n         * @return {number} The maximum resolution of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.getMaxResolution = function () {\n            return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n        };\n        /**\n         * Return the minimum resolution of the layer.\n         * @return {number} The minimum resolution of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.getMinResolution = function () {\n            return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n        };\n        /**\n         * Return the minimum zoom level of the layer.\n         * @return {number} The minimum zoom level of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.getMinZoom = function () {\n            return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n        };\n        /**\n         * Return the maximum zoom level of the layer.\n         * @return {number} The maximum zoom level of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.getMaxZoom = function () {\n            return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n        };\n        /**\n         * Return the opacity of the layer (between 0 and 1).\n         * @return {number} The opacity of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.getOpacity = function () {\n            return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n        };\n        /**\n         * @abstract\n         * @return {import(\"../source/State.js\").default} Source state.\n         */\n        BaseLayer.prototype.getSourceState = function () {\n            return abstract();\n        };\n        /**\n         * Return the visibility of the layer (`true` or `false`).\n         * @return {boolean} The visibility of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.getVisible = function () {\n            return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n        };\n        /**\n         * Return the Z-index of the layer, which is used to order layers before\n         * rendering. The default Z-index is 0.\n         * @return {number} The Z-index of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.getZIndex = function () {\n            return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n        };\n        /**\n         * Sets the background color.\n         * @param {BackgroundColor} [opt_background] Background color.\n         */\n        BaseLayer.prototype.setBackground = function (opt_background) {\n            this.background_ = opt_background;\n            this.changed();\n        };\n        /**\n         * Set the extent at which the layer is visible.  If `undefined`, the layer\n         * will be visible at all extents.\n         * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.setExtent = function (extent) {\n            this.set(LayerProperty.EXTENT, extent);\n        };\n        /**\n         * Set the maximum resolution at which the layer is visible.\n         * @param {number} maxResolution The maximum resolution of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n            this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n        };\n        /**\n         * Set the minimum resolution at which the layer is visible.\n         * @param {number} minResolution The minimum resolution of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.setMinResolution = function (minResolution) {\n            this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n        };\n        /**\n         * Set the maximum zoom (exclusive) at which the layer is visible.\n         * Note that the zoom levels for layer visibility are based on the\n         * view zoom level, which may be different from a tile source zoom level.\n         * @param {number} maxZoom The maximum zoom of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n            this.set(LayerProperty.MAX_ZOOM, maxZoom);\n        };\n        /**\n         * Set the minimum zoom (inclusive) at which the layer is visible.\n         * Note that the zoom levels for layer visibility are based on the\n         * view zoom level, which may be different from a tile source zoom level.\n         * @param {number} minZoom The minimum zoom of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.setMinZoom = function (minZoom) {\n            this.set(LayerProperty.MIN_ZOOM, minZoom);\n        };\n        /**\n         * Set the opacity of the layer, allowed values range from 0 to 1.\n         * @param {number} opacity The opacity of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.setOpacity = function (opacity) {\n            assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n            this.set(LayerProperty.OPACITY, opacity);\n        };\n        /**\n         * Set the visibility of the layer (`true` or `false`).\n         * @param {boolean} visible The visibility of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.setVisible = function (visible) {\n            this.set(LayerProperty.VISIBLE, visible);\n        };\n        /**\n         * Set Z-index of the layer, which is used to order layers before rendering.\n         * The default Z-index is 0.\n         * @param {number} zindex The z-index of the layer.\n         * @observable\n         * @api\n         */\n        BaseLayer.prototype.setZIndex = function (zindex) {\n            this.set(LayerProperty.Z_INDEX, zindex);\n        };\n        /**\n         * Clean up.\n         */\n        BaseLayer.prototype.disposeInternal = function () {\n            if (this.state_) {\n                this.state_.layer = null;\n                this.state_ = null;\n            }\n            _super.prototype.disposeInternal.call(this);\n        };\n        return BaseLayer;\n    }(BaseObject$1));\n    var BaseLayer$1 = BaseLayer;\n\n    /**\n     * @module ol/render/EventType\n     */\n    /**\n     * @enum {string}\n     */\n    var RenderEventType = {\n        /**\n         * Triggered before a layer is rendered.\n         * @event module:ol/render/Event~RenderEvent#prerender\n         * @api\n         */\n        PRERENDER: 'prerender',\n        /**\n         * Triggered after a layer is rendered.\n         * @event module:ol/render/Event~RenderEvent#postrender\n         * @api\n         */\n        POSTRENDER: 'postrender',\n        /**\n         * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n         * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n         * WebGL layers currently dispatch this event.\n         * @event module:ol/render/Event~RenderEvent#precompose\n         * @api\n         */\n        PRECOMPOSE: 'precompose',\n        /**\n         * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n         * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n         * WebGL layers currently dispatch this event.\n         * @event module:ol/render/Event~RenderEvent#postcompose\n         * @api\n         */\n        POSTCOMPOSE: 'postcompose',\n        /**\n         * Triggered when rendering is complete, i.e. all sources and tiles have\n         * finished loading for the current viewport, and all tiles are faded in.\n         * The event object will not have a `context` set.\n         * @event module:ol/render/Event~RenderEvent#rendercomplete\n         * @api\n         */\n        RENDERCOMPLETE: 'rendercomplete',\n    };\n    /**\n     * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n     */\n    /**\n     * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n     */\n\n    /**\n     * @module ol/source/State\n     */\n    /**\n     * @enum {string}\n     * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n     */\n    var SourceState = {\n        UNDEFINED: 'undefined',\n        LOADING: 'loading',\n        READY: 'ready',\n        ERROR: 'error',\n    };\n\n    var __extends$s = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n     */\n    /***\n     * @template Return\n     * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n     *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n     *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n     *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n     *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n     *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n     */\n    /**\n     * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n     * @typedef {Object} Options\n     * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n     * @property {number} [opacity=1] Opacity (0, 1).\n     * @property {boolean} [visible=true] Visibility.\n     * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n     * rendered outside of this extent.\n     * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n     * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n     * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n     * method was used.\n     * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n     * visible.\n     * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n     * be visible.\n     * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n     * visible.\n     * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n     * be visible.\n     * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n     * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n     * construction.\n     * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n     * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n     * HTML element. Will overwrite the default rendering for the layer.\n     * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n     */\n    /**\n     * @typedef {Object} State\n     * @property {import(\"./Layer.js\").default} layer Layer.\n     * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n     * @property {boolean} visible Visible.\n     * @property {boolean} managed Managed.\n     * @property {import(\"../extent.js\").Extent} [extent] Extent.\n     * @property {number} zIndex ZIndex.\n     * @property {number} maxResolution Maximum resolution.\n     * @property {number} minResolution Minimum resolution.\n     * @property {number} minZoom Minimum zoom.\n     * @property {number} maxZoom Maximum zoom.\n     */\n    /**\n     * @classdesc\n     * Base class from which all layer types are derived. This should only be instantiated\n     * in the case where a custom layer is added to the map with a custom `render` function.\n     * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n     *\n     * A visual representation of raster or vector map data.\n     * Layers group together those properties that pertain to how the data is to be\n     * displayed, irrespective of the source of that data.\n     *\n     * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n     * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n     * internally. These unmanaged layers are associated with the map using\n     * {@link module:ol/layer/Layer~Layer#setMap} instead.\n     *\n     * A generic `change` event is fired when the state of the source changes.\n     *\n     * Please note that for performance reasons several layers might get rendered to\n     * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n     * give false positives. To avoid this, apply different `className` properties to the\n     * layers at creation time.\n     *\n     * @fires import(\"../render/Event.js\").RenderEvent#prerender\n     * @fires import(\"../render/Event.js\").RenderEvent#postrender\n     *\n     * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n     * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n     * @api\n     */\n    var Layer = /** @class */ (function (_super) {\n        __extends$s(Layer, _super);\n        /**\n         * @param {Options<SourceType>} options Layer options.\n         */\n        function Layer(options) {\n            var _this = this;\n            var baseOptions = assign({}, options);\n            delete baseOptions.source;\n            _this = _super.call(this, baseOptions) || this;\n            /***\n             * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n             */\n            _this.on;\n            /***\n             * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n             */\n            _this.once;\n            /***\n             * @type {LayerOnSignature<void>}\n             */\n            _this.un;\n            /**\n             * @private\n             * @type {?import(\"../events.js\").EventsKey}\n             */\n            _this.mapPrecomposeKey_ = null;\n            /**\n             * @private\n             * @type {?import(\"../events.js\").EventsKey}\n             */\n            _this.mapRenderKey_ = null;\n            /**\n             * @private\n             * @type {?import(\"../events.js\").EventsKey}\n             */\n            _this.sourceChangeKey_ = null;\n            /**\n             * @private\n             * @type {RendererType}\n             */\n            _this.renderer_ = null;\n            /**\n             * @protected\n             * @type {boolean}\n             */\n            _this.rendered = false;\n            // Overwrite default render method with a custom one\n            if (options.render) {\n                _this.render = options.render;\n            }\n            if (options.map) {\n                _this.setMap(options.map);\n            }\n            _this.addChangeListener(LayerProperty.SOURCE, _this.handleSourcePropertyChange_);\n            var source = options.source\n                ? /** @type {SourceType} */ (options.source)\n                : null;\n            _this.setSource(source);\n            return _this;\n        }\n        /**\n         * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n         * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n         */\n        Layer.prototype.getLayersArray = function (opt_array) {\n            var array = opt_array ? opt_array : [];\n            array.push(this);\n            return array;\n        };\n        /**\n         * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n         * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n         */\n        Layer.prototype.getLayerStatesArray = function (opt_states) {\n            var states = opt_states ? opt_states : [];\n            states.push(this.getLayerState());\n            return states;\n        };\n        /**\n         * Get the layer source.\n         * @return {SourceType|null} The layer source (or `null` if not yet set).\n         * @observable\n         * @api\n         */\n        Layer.prototype.getSource = function () {\n            return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n        };\n        /**\n         * @return {SourceType|null} The source being rendered.\n         */\n        Layer.prototype.getRenderSource = function () {\n            return this.getSource();\n        };\n        /**\n         * @return {import(\"../source/State.js\").default} Source state.\n         */\n        Layer.prototype.getSourceState = function () {\n            var source = this.getSource();\n            return !source ? SourceState.UNDEFINED : source.getState();\n        };\n        /**\n         * @private\n         */\n        Layer.prototype.handleSourceChange_ = function () {\n            this.changed();\n        };\n        /**\n         * @private\n         */\n        Layer.prototype.handleSourcePropertyChange_ = function () {\n            if (this.sourceChangeKey_) {\n                unlistenByKey(this.sourceChangeKey_);\n                this.sourceChangeKey_ = null;\n            }\n            var source = this.getSource();\n            if (source) {\n                this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n            }\n            this.changed();\n        };\n        /**\n         * @param {import(\"../pixel\").Pixel} pixel Pixel.\n         * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n         * an array of features.\n         */\n        Layer.prototype.getFeatures = function (pixel) {\n            if (!this.renderer_) {\n                return new Promise(function (resolve) { return resolve([]); });\n            }\n            return this.renderer_.getFeatures(pixel);\n        };\n        /**\n         * @param {import(\"../pixel\").Pixel} pixel Pixel.\n         * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n         */\n        Layer.prototype.getData = function (pixel) {\n            if (!this.renderer_ || !this.rendered) {\n                return null;\n            }\n            return this.renderer_.getData(pixel);\n        };\n        /**\n         * In charge to manage the rendering of the layer. One layer type is\n         * bounded with one layer renderer.\n         * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n         * @param {HTMLElement} target Target which the renderer may (but need not) use\n         * for rendering its content.\n         * @return {HTMLElement} The rendered element.\n         */\n        Layer.prototype.render = function (frameState, target) {\n            var layerRenderer = this.getRenderer();\n            if (layerRenderer.prepareFrame(frameState)) {\n                this.rendered = true;\n                return layerRenderer.renderFrame(frameState, target);\n            }\n        };\n        /**\n         * Called when a layer is not visible during a map render.\n         */\n        Layer.prototype.unrender = function () {\n            this.rendered = false;\n        };\n        /**\n         * For use inside the library only.\n         * @param {import(\"../PluggableMap.js\").default|null} map Map.\n         */\n        Layer.prototype.setMapInternal = function (map) {\n            if (!map) {\n                this.unrender();\n            }\n            this.set(LayerProperty.MAP, map);\n        };\n        /**\n         * For use inside the library only.\n         * @return {import(\"../PluggableMap.js\").default|null} Map.\n         */\n        Layer.prototype.getMapInternal = function () {\n            return this.get(LayerProperty.MAP);\n        };\n        /**\n         * Sets the layer to be rendered on top of other layers on a map. The map will\n         * not manage this layer in its layers collection, and the callback in\n         * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n         * is useful for temporary layers. To remove an unmanaged layer from the map,\n         * use `#setMap(null)`.\n         *\n         * To add the layer to a map and have it managed by the map, use\n         * {@link module:ol/Map~Map#addLayer} instead.\n         * @param {import(\"../PluggableMap.js\").default|null} map Map.\n         * @api\n         */\n        Layer.prototype.setMap = function (map) {\n            if (this.mapPrecomposeKey_) {\n                unlistenByKey(this.mapPrecomposeKey_);\n                this.mapPrecomposeKey_ = null;\n            }\n            if (!map) {\n                this.changed();\n            }\n            if (this.mapRenderKey_) {\n                unlistenByKey(this.mapRenderKey_);\n                this.mapRenderKey_ = null;\n            }\n            if (map) {\n                this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                    var renderEvent = \n                    /** @type {import(\"../render/Event.js\").default} */ (evt);\n                    var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                    var layerState = this.getLayerState(false);\n                    // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                    assert(!layerStatesArray.some(function (arrayLayerState) {\n                        return arrayLayerState.layer === layerState.layer;\n                    }), 67);\n                    layerStatesArray.push(layerState);\n                }, this);\n                this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n                this.changed();\n            }\n        };\n        /**\n         * Set the layer source.\n         * @param {SourceType|null} source The layer source.\n         * @observable\n         * @api\n         */\n        Layer.prototype.setSource = function (source) {\n            this.set(LayerProperty.SOURCE, source);\n        };\n        /**\n         * Get the renderer for this layer.\n         * @return {RendererType|null} The layer renderer.\n         */\n        Layer.prototype.getRenderer = function () {\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            return this.renderer_;\n        };\n        /**\n         * @return {boolean} The layer has a renderer.\n         */\n        Layer.prototype.hasRenderer = function () {\n            return !!this.renderer_;\n        };\n        /**\n         * Create a renderer for this layer.\n         * @return {RendererType} A layer renderer.\n         * @protected\n         */\n        Layer.prototype.createRenderer = function () {\n            return null;\n        };\n        /**\n         * Clean up.\n         */\n        Layer.prototype.disposeInternal = function () {\n            if (this.renderer_) {\n                this.renderer_.dispose();\n                delete this.renderer_;\n            }\n            this.setSource(null);\n            _super.prototype.disposeInternal.call(this);\n        };\n        return Layer;\n    }(BaseLayer$1));\n    var Layer$1 = Layer;\n\n    function quickselect(arr, k, left, right, compare) {\n        quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n    }\n\n    function quickselectStep(arr, k, left, right, compare) {\n\n        while (right > left) {\n            if (right - left > 600) {\n                var n = right - left + 1;\n                var m = k - left + 1;\n                var z = Math.log(n);\n                var s = 0.5 * Math.exp(2 * z / 3);\n                var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n                var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n                var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n                quickselectStep(arr, k, newLeft, newRight, compare);\n            }\n\n            var t = arr[k];\n            var i = left;\n            var j = right;\n\n            swap(arr, left, k);\n            if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n            while (i < j) {\n                swap(arr, i, j);\n                i++;\n                j--;\n                while (compare(arr[i], t) < 0) i++;\n                while (compare(arr[j], t) > 0) j--;\n            }\n\n            if (compare(arr[left], t) === 0) swap(arr, left, j);\n            else {\n                j++;\n                swap(arr, j, right);\n            }\n\n            if (j <= k) left = j + 1;\n            if (k <= j) right = j - 1;\n        }\n    }\n\n    function swap(arr, i, j) {\n        var tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n\n    function defaultCompare(a, b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n\n    class RBush$2 {\n        constructor(maxEntries = 9) {\n            // max entries in a node is 9 by default; min node fill is 40% for best performance\n            this._maxEntries = Math.max(4, maxEntries);\n            this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n            this.clear();\n        }\n\n        all() {\n            return this._all(this.data, []);\n        }\n\n        search(bbox) {\n            let node = this.data;\n            const result = [];\n\n            if (!intersects$1(bbox, node)) return result;\n\n            const toBBox = this.toBBox;\n            const nodesToSearch = [];\n\n            while (node) {\n                for (let i = 0; i < node.children.length; i++) {\n                    const child = node.children[i];\n                    const childBBox = node.leaf ? toBBox(child) : child;\n\n                    if (intersects$1(bbox, childBBox)) {\n                        if (node.leaf) result.push(child);\n                        else if (contains(bbox, childBBox)) this._all(child, result);\n                        else nodesToSearch.push(child);\n                    }\n                }\n                node = nodesToSearch.pop();\n            }\n\n            return result;\n        }\n\n        collides(bbox) {\n            let node = this.data;\n\n            if (!intersects$1(bbox, node)) return false;\n\n            const nodesToSearch = [];\n            while (node) {\n                for (let i = 0; i < node.children.length; i++) {\n                    const child = node.children[i];\n                    const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                    if (intersects$1(bbox, childBBox)) {\n                        if (node.leaf || contains(bbox, childBBox)) return true;\n                        nodesToSearch.push(child);\n                    }\n                }\n                node = nodesToSearch.pop();\n            }\n\n            return false;\n        }\n\n        load(data) {\n            if (!(data && data.length)) return this;\n\n            if (data.length < this._minEntries) {\n                for (let i = 0; i < data.length; i++) {\n                    this.insert(data[i]);\n                }\n                return this;\n            }\n\n            // recursively build the tree with the given data from scratch using OMT algorithm\n            let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n            if (!this.data.children.length) {\n                // save as is if tree is empty\n                this.data = node;\n\n            } else if (this.data.height === node.height) {\n                // split root if trees have the same height\n                this._splitRoot(this.data, node);\n\n            } else {\n                if (this.data.height < node.height) {\n                    // swap trees if inserted one is bigger\n                    const tmpNode = this.data;\n                    this.data = node;\n                    node = tmpNode;\n                }\n\n                // insert the small tree into the large tree at appropriate level\n                this._insert(node, this.data.height - node.height - 1, true);\n            }\n\n            return this;\n        }\n\n        insert(item) {\n            if (item) this._insert(item, this.data.height - 1);\n            return this;\n        }\n\n        clear() {\n            this.data = createNode([]);\n            return this;\n        }\n\n        remove(item, equalsFn) {\n            if (!item) return this;\n\n            let node = this.data;\n            const bbox = this.toBBox(item);\n            const path = [];\n            const indexes = [];\n            let i, parent, goingUp;\n\n            // depth-first iterative tree traversal\n            while (node || path.length) {\n\n                if (!node) { // go up\n                    node = path.pop();\n                    parent = path[path.length - 1];\n                    i = indexes.pop();\n                    goingUp = true;\n                }\n\n                if (node.leaf) { // check current node\n                    const index = findItem(item, node.children, equalsFn);\n\n                    if (index !== -1) {\n                        // item found, remove the item and condense tree upwards\n                        node.children.splice(index, 1);\n                        path.push(node);\n                        this._condense(path);\n                        return this;\n                    }\n                }\n\n                if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                    path.push(node);\n                    indexes.push(i);\n                    i = 0;\n                    parent = node;\n                    node = node.children[0];\n\n                } else if (parent) { // go right\n                    i++;\n                    node = parent.children[i];\n                    goingUp = false;\n\n                } else node = null; // nothing found\n            }\n\n            return this;\n        }\n\n        toBBox(item) { return item; }\n\n        compareMinX(a, b) { return a.minX - b.minX; }\n        compareMinY(a, b) { return a.minY - b.minY; }\n\n        toJSON() { return this.data; }\n\n        fromJSON(data) {\n            this.data = data;\n            return this;\n        }\n\n        _all(node, result) {\n            const nodesToSearch = [];\n            while (node) {\n                if (node.leaf) result.push(...node.children);\n                else nodesToSearch.push(...node.children);\n\n                node = nodesToSearch.pop();\n            }\n            return result;\n        }\n\n        _build(items, left, right, height) {\n\n            const N = right - left + 1;\n            let M = this._maxEntries;\n            let node;\n\n            if (N <= M) {\n                // reached leaf level; return leaf\n                node = createNode(items.slice(left, right + 1));\n                calcBBox(node, this.toBBox);\n                return node;\n            }\n\n            if (!height) {\n                // target height of the bulk-loaded tree\n                height = Math.ceil(Math.log(N) / Math.log(M));\n\n                // target number of root entries to maximize storage utilization\n                M = Math.ceil(N / Math.pow(M, height - 1));\n            }\n\n            node = createNode([]);\n            node.leaf = false;\n            node.height = height;\n\n            // split the items into M mostly square tiles\n\n            const N2 = Math.ceil(N / M);\n            const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n            multiSelect(items, left, right, N1, this.compareMinX);\n\n            for (let i = left; i <= right; i += N1) {\n\n                const right2 = Math.min(i + N1 - 1, right);\n\n                multiSelect(items, i, right2, N2, this.compareMinY);\n\n                for (let j = i; j <= right2; j += N2) {\n\n                    const right3 = Math.min(j + N2 - 1, right2);\n\n                    // pack each entry recursively\n                    node.children.push(this._build(items, j, right3, height - 1));\n                }\n            }\n\n            calcBBox(node, this.toBBox);\n\n            return node;\n        }\n\n        _chooseSubtree(bbox, node, level, path) {\n            while (true) {\n                path.push(node);\n\n                if (node.leaf || path.length - 1 === level) break;\n\n                let minArea = Infinity;\n                let minEnlargement = Infinity;\n                let targetNode;\n\n                for (let i = 0; i < node.children.length; i++) {\n                    const child = node.children[i];\n                    const area = bboxArea(child);\n                    const enlargement = enlargedArea(bbox, child) - area;\n\n                    // choose entry with the least area enlargement\n                    if (enlargement < minEnlargement) {\n                        minEnlargement = enlargement;\n                        minArea = area < minArea ? area : minArea;\n                        targetNode = child;\n\n                    } else if (enlargement === minEnlargement) {\n                        // otherwise choose one with the smallest area\n                        if (area < minArea) {\n                            minArea = area;\n                            targetNode = child;\n                        }\n                    }\n                }\n\n                node = targetNode || node.children[0];\n            }\n\n            return node;\n        }\n\n        _insert(item, level, isNode) {\n            const bbox = isNode ? item : this.toBBox(item);\n            const insertPath = [];\n\n            // find the best node for accommodating the item, saving all nodes along the path too\n            const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n            // put the item into the node\n            node.children.push(item);\n            extend(node, bbox);\n\n            // split on node overflow; propagate upwards if necessary\n            while (level >= 0) {\n                if (insertPath[level].children.length > this._maxEntries) {\n                    this._split(insertPath, level);\n                    level--;\n                } else break;\n            }\n\n            // adjust bboxes along the insertion path\n            this._adjustParentBBoxes(bbox, insertPath, level);\n        }\n\n        // split overflowed node into two\n        _split(insertPath, level) {\n            const node = insertPath[level];\n            const M = node.children.length;\n            const m = this._minEntries;\n\n            this._chooseSplitAxis(node, m, M);\n\n            const splitIndex = this._chooseSplitIndex(node, m, M);\n\n            const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n            newNode.height = node.height;\n            newNode.leaf = node.leaf;\n\n            calcBBox(node, this.toBBox);\n            calcBBox(newNode, this.toBBox);\n\n            if (level) insertPath[level - 1].children.push(newNode);\n            else this._splitRoot(node, newNode);\n        }\n\n        _splitRoot(node, newNode) {\n            // split root node\n            this.data = createNode([node, newNode]);\n            this.data.height = node.height + 1;\n            this.data.leaf = false;\n            calcBBox(this.data, this.toBBox);\n        }\n\n        _chooseSplitIndex(node, m, M) {\n            let index;\n            let minOverlap = Infinity;\n            let minArea = Infinity;\n\n            for (let i = m; i <= M - m; i++) {\n                const bbox1 = distBBox(node, 0, i, this.toBBox);\n                const bbox2 = distBBox(node, i, M, this.toBBox);\n\n                const overlap = intersectionArea(bbox1, bbox2);\n                const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n                // choose distribution with minimum overlap\n                if (overlap < minOverlap) {\n                    minOverlap = overlap;\n                    index = i;\n\n                    minArea = area < minArea ? area : minArea;\n\n                } else if (overlap === minOverlap) {\n                    // otherwise choose distribution with minimum area\n                    if (area < minArea) {\n                        minArea = area;\n                        index = i;\n                    }\n                }\n            }\n\n            return index || M - m;\n        }\n\n        // sorts node children by the best axis for split\n        _chooseSplitAxis(node, m, M) {\n            const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n            const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n            const xMargin = this._allDistMargin(node, m, M, compareMinX);\n            const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n            // if total distributions margin value is minimal for x, sort by minX,\n            // otherwise it's already sorted by minY\n            if (xMargin < yMargin) node.children.sort(compareMinX);\n        }\n\n        // total margin of all possible split distributions where each node is at least m full\n        _allDistMargin(node, m, M, compare) {\n            node.children.sort(compare);\n\n            const toBBox = this.toBBox;\n            const leftBBox = distBBox(node, 0, m, toBBox);\n            const rightBBox = distBBox(node, M - m, M, toBBox);\n            let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n            for (let i = m; i < M - m; i++) {\n                const child = node.children[i];\n                extend(leftBBox, node.leaf ? toBBox(child) : child);\n                margin += bboxMargin(leftBBox);\n            }\n\n            for (let i = M - m - 1; i >= m; i--) {\n                const child = node.children[i];\n                extend(rightBBox, node.leaf ? toBBox(child) : child);\n                margin += bboxMargin(rightBBox);\n            }\n\n            return margin;\n        }\n\n        _adjustParentBBoxes(bbox, path, level) {\n            // adjust bboxes along the given tree path\n            for (let i = level; i >= 0; i--) {\n                extend(path[i], bbox);\n            }\n        }\n\n        _condense(path) {\n            // go through the path, removing empty nodes and updating bboxes\n            for (let i = path.length - 1, siblings; i >= 0; i--) {\n                if (path[i].children.length === 0) {\n                    if (i > 0) {\n                        siblings = path[i - 1].children;\n                        siblings.splice(siblings.indexOf(path[i]), 1);\n\n                    } else this.clear();\n\n                } else calcBBox(path[i], this.toBBox);\n            }\n        }\n    }\n\n    function findItem(item, items, equalsFn) {\n        if (!equalsFn) return items.indexOf(item);\n\n        for (let i = 0; i < items.length; i++) {\n            if (equalsFn(item, items[i])) return i;\n        }\n        return -1;\n    }\n\n    // calculate node's bbox from bboxes of its children\n    function calcBBox(node, toBBox) {\n        distBBox(node, 0, node.children.length, toBBox, node);\n    }\n\n    // min bounding rectangle of node children from k to p-1\n    function distBBox(node, k, p, toBBox, destNode) {\n        if (!destNode) destNode = createNode(null);\n        destNode.minX = Infinity;\n        destNode.minY = Infinity;\n        destNode.maxX = -Infinity;\n        destNode.maxY = -Infinity;\n\n        for (let i = k; i < p; i++) {\n            const child = node.children[i];\n            extend(destNode, node.leaf ? toBBox(child) : child);\n        }\n\n        return destNode;\n    }\n\n    function extend(a, b) {\n        a.minX = Math.min(a.minX, b.minX);\n        a.minY = Math.min(a.minY, b.minY);\n        a.maxX = Math.max(a.maxX, b.maxX);\n        a.maxY = Math.max(a.maxY, b.maxY);\n        return a;\n    }\n\n    function compareNodeMinX(a, b) { return a.minX - b.minX; }\n    function compareNodeMinY(a, b) { return a.minY - b.minY; }\n\n    function bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\n    function bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\n    function enlargedArea(a, b) {\n        return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n               (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n    }\n\n    function intersectionArea(a, b) {\n        const minX = Math.max(a.minX, b.minX);\n        const minY = Math.max(a.minY, b.minY);\n        const maxX = Math.min(a.maxX, b.maxX);\n        const maxY = Math.min(a.maxY, b.maxY);\n\n        return Math.max(0, maxX - minX) *\n               Math.max(0, maxY - minY);\n    }\n\n    function contains(a, b) {\n        return a.minX <= b.minX &&\n               a.minY <= b.minY &&\n               b.maxX <= a.maxX &&\n               b.maxY <= a.maxY;\n    }\n\n    function intersects$1(a, b) {\n        return b.minX <= a.maxX &&\n               b.minY <= a.maxY &&\n               b.maxX >= a.minX &&\n               b.maxY >= a.minY;\n    }\n\n    function createNode(children) {\n        return {\n            children,\n            height: 1,\n            leaf: true,\n            minX: Infinity,\n            minY: Infinity,\n            maxX: -Infinity,\n            maxY: -Infinity\n        };\n    }\n\n    // sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n    // combines selection algorithm with binary divide & conquer approach\n\n    function multiSelect(arr, left, right, n, compare) {\n        const stack = [left, right];\n\n        while (stack.length) {\n            right = stack.pop();\n            left = stack.pop();\n\n            if (right - left <= n) continue;\n\n            const mid = left + Math.ceil((right - left) / n / 2) * n;\n            quickselect(arr, mid, left, right, compare);\n\n            stack.push(left, mid, mid, right);\n        }\n    }\n\n    /**\n     * @module ol/ImageState\n     */\n    /**\n     * @enum {number}\n     */\n    var ImageState = {\n        IDLE: 0,\n        LOADING: 1,\n        LOADED: 2,\n        ERROR: 3,\n        EMPTY: 4,\n    };\n\n    /**\n     * @module ol/size\n     */\n    /**\n     * Returns an `Size` array for the passed in number (meaning: square) or\n     * `Size` array.\n     * (meaning: non-square),\n     * @param {number|Size} size Width and height.\n     * @param {Size} [opt_size] Optional reusable size array.\n     * @return {Size} Size.\n     * @api\n     */\n    function toSize(size, opt_size) {\n        if (Array.isArray(size)) {\n            return size;\n        }\n        else {\n            if (opt_size === undefined) {\n                opt_size = [size, size];\n            }\n            else {\n                opt_size[0] = size;\n                opt_size[1] = size;\n            }\n            return opt_size;\n        }\n    }\n\n    /**\n     * @module ol/style/Image\n     */\n    /**\n     * @typedef {Object} Options\n     * @property {number} opacity Opacity.\n     * @property {boolean} rotateWithView If the image should get rotated with the view.\n     * @property {number} rotation Rotation.\n     * @property {number|import(\"../size.js\").Size} scale Scale.\n     * @property {Array<number>} displacement Displacement.\n     */\n    /**\n     * @classdesc\n     * A base class used for creating subclasses and not instantiated in\n     * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n     * {@link module:ol/style/RegularShape~RegularShape}.\n     * @abstract\n     * @api\n     */\n    var ImageStyle = /** @class */ (function () {\n        /**\n         * @param {Options} options Options.\n         */\n        function ImageStyle(options) {\n            /**\n             * @private\n             * @type {number}\n             */\n            this.opacity_ = options.opacity;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this.rotateWithView_ = options.rotateWithView;\n            /**\n             * @private\n             * @type {number}\n             */\n            this.rotation_ = options.rotation;\n            /**\n             * @private\n             * @type {number|import(\"../size.js\").Size}\n             */\n            this.scale_ = options.scale;\n            /**\n             * @private\n             * @type {import(\"../size.js\").Size}\n             */\n            this.scaleArray_ = toSize(options.scale);\n            /**\n             * @private\n             * @type {Array<number>}\n             */\n            this.displacement_ = options.displacement;\n        }\n        /**\n         * Clones the style.\n         * @return {ImageStyle} The cloned style.\n         * @api\n         */\n        ImageStyle.prototype.clone = function () {\n            var scale = this.getScale();\n            return new ImageStyle({\n                opacity: this.getOpacity(),\n                scale: Array.isArray(scale) ? scale.slice() : scale,\n                rotation: this.getRotation(),\n                rotateWithView: this.getRotateWithView(),\n                displacement: this.getDisplacement().slice(),\n            });\n        };\n        /**\n         * Get the symbolizer opacity.\n         * @return {number} Opacity.\n         * @api\n         */\n        ImageStyle.prototype.getOpacity = function () {\n            return this.opacity_;\n        };\n        /**\n         * Determine whether the symbolizer rotates with the map.\n         * @return {boolean} Rotate with map.\n         * @api\n         */\n        ImageStyle.prototype.getRotateWithView = function () {\n            return this.rotateWithView_;\n        };\n        /**\n         * Get the symoblizer rotation.\n         * @return {number} Rotation.\n         * @api\n         */\n        ImageStyle.prototype.getRotation = function () {\n            return this.rotation_;\n        };\n        /**\n         * Get the symbolizer scale.\n         * @return {number|import(\"../size.js\").Size} Scale.\n         * @api\n         */\n        ImageStyle.prototype.getScale = function () {\n            return this.scale_;\n        };\n        /**\n         * Get the symbolizer scale array.\n         * @return {import(\"../size.js\").Size} Scale array.\n         */\n        ImageStyle.prototype.getScaleArray = function () {\n            return this.scaleArray_;\n        };\n        /**\n         * Get the displacement of the shape\n         * @return {Array<number>} Shape's center displacement\n         * @api\n         */\n        ImageStyle.prototype.getDisplacement = function () {\n            return this.displacement_;\n        };\n        /**\n         * Get the anchor point in pixels. The anchor determines the center point for the\n         * symbolizer.\n         * @abstract\n         * @return {Array<number>} Anchor.\n         */\n        ImageStyle.prototype.getAnchor = function () {\n            return abstract();\n        };\n        /**\n         * Get the image element for the symbolizer.\n         * @abstract\n         * @param {number} pixelRatio Pixel ratio.\n         * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n         */\n        ImageStyle.prototype.getImage = function (pixelRatio) {\n            return abstract();\n        };\n        /**\n         * @abstract\n         * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n         */\n        ImageStyle.prototype.getHitDetectionImage = function () {\n            return abstract();\n        };\n        /**\n         * Get the image pixel ratio.\n         * @param {number} pixelRatio Pixel ratio.\n         * @return {number} Pixel ratio.\n         */\n        ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n            return 1;\n        };\n        /**\n         * @abstract\n         * @return {import(\"../ImageState.js\").default} Image state.\n         */\n        ImageStyle.prototype.getImageState = function () {\n            return abstract();\n        };\n        /**\n         * @abstract\n         * @return {import(\"../size.js\").Size} Image size.\n         */\n        ImageStyle.prototype.getImageSize = function () {\n            return abstract();\n        };\n        /**\n         * Get the origin of the symbolizer.\n         * @abstract\n         * @return {Array<number>} Origin.\n         */\n        ImageStyle.prototype.getOrigin = function () {\n            return abstract();\n        };\n        /**\n         * Get the size of the symbolizer (in pixels).\n         * @abstract\n         * @return {import(\"../size.js\").Size} Size.\n         */\n        ImageStyle.prototype.getSize = function () {\n            return abstract();\n        };\n        /**\n         * Set the displacement.\n         *\n         * @param {Array<number>} displacement Displacement.\n         * @api\n         */\n        ImageStyle.prototype.setDisplacement = function (displacement) {\n            this.displacement_ = displacement;\n        };\n        /**\n         * Set the opacity.\n         *\n         * @param {number} opacity Opacity.\n         * @api\n         */\n        ImageStyle.prototype.setOpacity = function (opacity) {\n            this.opacity_ = opacity;\n        };\n        /**\n         * Set whether to rotate the style with the view.\n         *\n         * @param {boolean} rotateWithView Rotate with map.\n         * @api\n         */\n        ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n            this.rotateWithView_ = rotateWithView;\n        };\n        /**\n         * Set the rotation.\n         *\n         * @param {number} rotation Rotation.\n         * @api\n         */\n        ImageStyle.prototype.setRotation = function (rotation) {\n            this.rotation_ = rotation;\n        };\n        /**\n         * Set the scale.\n         *\n         * @param {number|import(\"../size.js\").Size} scale Scale.\n         * @api\n         */\n        ImageStyle.prototype.setScale = function (scale) {\n            this.scale_ = scale;\n            this.scaleArray_ = toSize(scale);\n        };\n        /**\n         * @abstract\n         * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n         */\n        ImageStyle.prototype.listenImageChange = function (listener) {\n            abstract();\n        };\n        /**\n         * Load not yet loaded URI.\n         * @abstract\n         */\n        ImageStyle.prototype.load = function () {\n            abstract();\n        };\n        /**\n         * @abstract\n         * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n         */\n        ImageStyle.prototype.unlistenImageChange = function (listener) {\n            abstract();\n        };\n        return ImageStyle;\n    }());\n    var ImageStyle$1 = ImageStyle;\n\n    /**\n     * @module ol/color\n     */\n    /**\n     * A color represented as a short array [red, green, blue, alpha].\n     * red, green, and blue should be integers in the range 0..255 inclusive.\n     * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n     * given then `1` will be used.\n     * @typedef {Array<number>} Color\n     * @api\n     */\n    /**\n     * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n     * @const\n     * @type {RegExp}\n     * @private\n     */\n    var HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n    /**\n     * Regular expression for matching potential named color style strings.\n     * @const\n     * @type {RegExp}\n     * @private\n     */\n    var NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n    /**\n     * Return the color as an rgba string.\n     * @param {Color|string} color Color.\n     * @return {string} Rgba string.\n     * @api\n     */\n    function asString(color) {\n        if (typeof color === 'string') {\n            return color;\n        }\n        else {\n            return toString$1(color);\n        }\n    }\n    /**\n     * Return named color as an rgba string.\n     * @param {string} color Named color.\n     * @return {string} Rgb string.\n     */\n    function fromNamed(color) {\n        var el = document.createElement('div');\n        el.style.color = color;\n        if (el.style.color !== '') {\n            document.body.appendChild(el);\n            var rgb = getComputedStyle(el).color;\n            document.body.removeChild(el);\n            return rgb;\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    var fromString = (function () {\n        // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n        // semantics, whenever the cache grows too large we simply delete an\n        // arbitrary 25% of the entries.\n        /**\n         * @const\n         * @type {number}\n         */\n        var MAX_CACHE_SIZE = 1024;\n        /**\n         * @type {Object<string, Color>}\n         */\n        var cache = {};\n        /**\n         * @type {number}\n         */\n        var cacheSize = 0;\n        return (\n        /**\n         * @param {string} s String.\n         * @return {Color} Color.\n         */\n        function (s) {\n            var color;\n            if (cache.hasOwnProperty(s)) {\n                color = cache[s];\n            }\n            else {\n                if (cacheSize >= MAX_CACHE_SIZE) {\n                    var i = 0;\n                    for (var key in cache) {\n                        if ((i++ & 3) === 0) {\n                            delete cache[key];\n                            --cacheSize;\n                        }\n                    }\n                }\n                color = fromStringInternal_(s);\n                cache[s] = color;\n                ++cacheSize;\n            }\n            return color;\n        });\n    })();\n    /**\n     * Return the color as an array. This function maintains a cache of calculated\n     * arrays which means the result should not be modified.\n     * @param {Color|string} color Color.\n     * @return {Color} Color.\n     * @api\n     */\n    function asArray(color) {\n        if (Array.isArray(color)) {\n            return color;\n        }\n        else {\n            return fromString(color);\n        }\n    }\n    /**\n     * @param {string} s String.\n     * @private\n     * @return {Color} Color.\n     */\n    function fromStringInternal_(s) {\n        var r, g, b, a, color;\n        if (NAMED_COLOR_RE_.exec(s)) {\n            s = fromNamed(s);\n        }\n        if (HEX_COLOR_RE_.exec(s)) {\n            // hex\n            var n = s.length - 1; // number of hex digits\n            var d = // number of digits per channel\n             void 0; // number of digits per channel\n            if (n <= 4) {\n                d = 1;\n            }\n            else {\n                d = 2;\n            }\n            var hasAlpha = n === 4 || n === 8;\n            r = parseInt(s.substr(1 + 0 * d, d), 16);\n            g = parseInt(s.substr(1 + 1 * d, d), 16);\n            b = parseInt(s.substr(1 + 2 * d, d), 16);\n            if (hasAlpha) {\n                a = parseInt(s.substr(1 + 3 * d, d), 16);\n            }\n            else {\n                a = 255;\n            }\n            if (d == 1) {\n                r = (r << 4) + r;\n                g = (g << 4) + g;\n                b = (b << 4) + b;\n                if (hasAlpha) {\n                    a = (a << 4) + a;\n                }\n            }\n            color = [r, g, b, a / 255];\n        }\n        else if (s.indexOf('rgba(') == 0) {\n            // rgba()\n            color = s.slice(5, -1).split(',').map(Number);\n            normalize(color);\n        }\n        else if (s.indexOf('rgb(') == 0) {\n            // rgb()\n            color = s.slice(4, -1).split(',').map(Number);\n            color.push(1);\n            normalize(color);\n        }\n        else {\n            assert(false, 14); // Invalid color\n        }\n        return color;\n    }\n    /**\n     * TODO this function is only used in the test, we probably shouldn't export it\n     * @param {Color} color Color.\n     * @return {Color} Clamped color.\n     */\n    function normalize(color) {\n        color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n        color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n        color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n        color[3] = clamp(color[3], 0, 1);\n        return color;\n    }\n    /**\n     * @param {Color} color Color.\n     * @return {string} String.\n     */\n    function toString$1(color) {\n        var r = color[0];\n        if (r != (r | 0)) {\n            r = (r + 0.5) | 0;\n        }\n        var g = color[1];\n        if (g != (g | 0)) {\n            g = (g + 0.5) | 0;\n        }\n        var b = color[2];\n        if (b != (b | 0)) {\n            b = (b + 0.5) | 0;\n        }\n        var a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n    }\n\n    /**\n     * @module ol/colorlike\n     */\n    /**\n     * A type accepted by CanvasRenderingContext2D.fillStyle\n     * or CanvasRenderingContext2D.strokeStyle.\n     * Represents a color, pattern, or gradient. The origin for patterns and\n     * gradients as fill style is an increment of 512 css pixels from map coordinate\n     * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n     * must be a factor of two (2, 4, 8, ..., 512).\n     *\n     * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n     * @api\n     */\n    /**\n     * @param {import(\"./color.js\").Color|ColorLike} color Color.\n     * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n     * @api\n     */\n    function asColorLike(color) {\n        if (Array.isArray(color)) {\n            return toString$1(color);\n        }\n        else {\n            return color;\n        }\n    }\n\n    /**\n     * @module ol/has\n     */\n    var ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n        ? navigator.userAgent.toLowerCase()\n        : '';\n    /**\n     * User agent string says we are dealing with Firefox as browser.\n     * @type {boolean}\n     */\n    ua.indexOf('firefox') !== -1;\n    /**\n     * User agent string says we are dealing with Safari as browser.\n     * @type {boolean}\n     */\n    var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n    /**\n     * https://bugs.webkit.org/show_bug.cgi?id=237906\n     * @type {boolean}\n     */\n    SAFARI &&\n        !!(ua.indexOf('version/15.4') >= 0 ||\n            ua.match(/cpu (os|iphone os) 15_4 like mac os x/));\n    /**\n     * User agent string says we are dealing with a WebKit engine.\n     * @type {boolean}\n     */\n    ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n    /**\n     * User agent string says we are dealing with a Mac as platform.\n     * @type {boolean}\n     */\n    ua.indexOf('macintosh') !== -1;\n    /**\n     * The execution context is a worker with OffscreenCanvas available.\n     * @const\n     * @type {boolean}\n     */\n    var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n        typeof OffscreenCanvas !== 'undefined' &&\n        self instanceof WorkerGlobalScope; //eslint-disable-line\n    /**\n     * Image.prototype.decode() is supported.\n     * @type {boolean}\n     */\n    var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n    /**\n     * @type {boolean}\n     */\n    ((function () {\n        var passive = false;\n        try {\n            var options = Object.defineProperty({}, 'passive', {\n                get: function () {\n                    passive = true;\n                },\n            });\n            window.addEventListener('_', null, options);\n            window.removeEventListener('_', null, options);\n        }\n        catch (error) {\n            // passive not supported\n        }\n        return passive;\n    }))();\n\n    /**\n     * @module ol/dom\n     */\n    //FIXME Move this function to the canvas module\n    /**\n     * Create an html canvas element and returns its 2d context.\n     * @param {number} [opt_width] Canvas width.\n     * @param {number} [opt_height] Canvas height.\n     * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n     * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n     * @return {CanvasRenderingContext2D} The context.\n     */\n    function createCanvasContext2D(opt_width, opt_height, opt_canvasPool, opt_Context2DSettings) {\n        /** @type {HTMLCanvasElement|OffscreenCanvas} */\n        var canvas;\n        if (opt_canvasPool && opt_canvasPool.length) {\n            canvas = opt_canvasPool.shift();\n        }\n        else if (WORKER_OFFSCREEN_CANVAS) {\n            canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n        }\n        else {\n            canvas = document.createElement('canvas');\n        }\n        if (opt_width) {\n            canvas.width = opt_width;\n        }\n        if (opt_height) {\n            canvas.height = opt_height;\n        }\n        //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n        return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d', opt_Context2DSettings));\n    }\n\n    /**\n     * @module ol/css\n     */\n    /**\n     * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n     * @type {RegExp}\n     */\n    var fontRegEx = new RegExp([\n        '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n        '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n        '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n        '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n        '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n        '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n        '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n    ].join(''), 'i');\n    var fontRegExMatchIndex = [\n        'style',\n        'variant',\n        'weight',\n        'size',\n        'lineHeight',\n        'family',\n    ];\n    /**\n     * Get the list of font families from a font spec.  Note that this doesn't work\n     * for font families that have commas in them.\n     * @param {string} fontSpec The CSS font property.\n     * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n     */\n    var getFontParameters = function (fontSpec) {\n        var match = fontSpec.match(fontRegEx);\n        if (!match) {\n            return null;\n        }\n        var style = /** @type {FontParameters} */ ({\n            lineHeight: 'normal',\n            size: '1.2em',\n            style: 'normal',\n            weight: 'normal',\n            variant: 'normal',\n        });\n        for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n            var value = match[i + 1];\n            if (value !== undefined) {\n                style[fontRegExMatchIndex[i]] = value;\n            }\n        }\n        style.families = style.family.split(/,\\s?/);\n        return style;\n    };\n    /**\n     * @param {number} opacity Opacity (0..1).\n     * @return {string} CSS opacity.\n     */\n    function cssOpacity(opacity) {\n        return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n    }\n\n    /**\n     * @module ol/render/canvas\n     */\n    /**\n     * @typedef {Object} FillState\n     * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n     */\n    /**\n     * @typedef Label\n     * @property {number} width Width.\n     * @property {number} height Height.\n     * @property {Array<string|number>} contextInstructions ContextInstructions.\n     */\n    /**\n     * @typedef {Object} FillStrokeState\n     * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n     * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n     * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n     * @property {Array<number>} currentLineDash Current LineDash.\n     * @property {number} [currentLineDashOffset] Current LineDashOffset.\n     * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n     * @property {number} [currentLineWidth] Current LineWidth.\n     * @property {number} [currentMiterLimit] Current MiterLimit.\n     * @property {number} [lastStroke] Last stroke.\n     * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n     * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n     * @property {CanvasLineCap} [lineCap] LineCap.\n     * @property {Array<number>} lineDash LineDash.\n     * @property {number} [lineDashOffset] LineDashOffset.\n     * @property {CanvasLineJoin} [lineJoin] LineJoin.\n     * @property {number} [lineWidth] LineWidth.\n     * @property {number} [miterLimit] MiterLimit.\n     */\n    /**\n     * @typedef {Object} StrokeState\n     * @property {CanvasLineCap} lineCap LineCap.\n     * @property {Array<number>} lineDash LineDash.\n     * @property {number} lineDashOffset LineDashOffset.\n     * @property {CanvasLineJoin} lineJoin LineJoin.\n     * @property {number} lineWidth LineWidth.\n     * @property {number} miterLimit MiterLimit.\n     * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n     */\n    /**\n     * @typedef {Object} TextState\n     * @property {string} font Font.\n     * @property {string} [textAlign] TextAlign.\n     * @property {string} textBaseline TextBaseline.\n     * @property {string} [placement] Placement.\n     * @property {number} [maxAngle] MaxAngle.\n     * @property {boolean} [overflow] Overflow.\n     * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n     * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n     * @property {import(\"../size.js\").Size} [scale] Scale.\n     * @property {Array<number>} [padding] Padding.\n     */\n    /**\n     * @typedef {Object} SerializableInstructions\n     * @property {Array<*>} instructions The rendering instructions.\n     * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n     * @property {Array<number>} coordinates The array of all coordinates.\n     * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n     * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n     * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n     */\n    /**\n     * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n     */\n    /**\n     * @const\n     * @type {string}\n     */\n    var defaultFont = '10px sans-serif';\n    /**\n     * @const\n     * @type {import(\"../colorlike.js\").ColorLike}\n     */\n    var defaultFillStyle = '#000';\n    /**\n     * @const\n     * @type {CanvasLineCap}\n     */\n    var defaultLineCap = 'round';\n    /**\n     * @const\n     * @type {Array<number>}\n     */\n    var defaultLineDash = [];\n    /**\n     * @const\n     * @type {number}\n     */\n    var defaultLineDashOffset = 0;\n    /**\n     * @const\n     * @type {CanvasLineJoin}\n     */\n    var defaultLineJoin = 'round';\n    /**\n     * @const\n     * @type {number}\n     */\n    var defaultMiterLimit = 10;\n    /**\n     * @const\n     * @type {import(\"../colorlike.js\").ColorLike}\n     */\n    var defaultStrokeStyle = '#000';\n    /**\n     * @const\n     * @type {string}\n     */\n    var defaultTextAlign = 'center';\n    /**\n     * @const\n     * @type {string}\n     */\n    var defaultTextBaseline = 'middle';\n    /**\n     * @const\n     * @type {Array<number>}\n     */\n    var defaultPadding = [0, 0, 0, 0];\n    /**\n     * @const\n     * @type {number}\n     */\n    var defaultLineWidth = 1;\n    /**\n     * @type {BaseObject}\n     */\n    var checkedFonts = new BaseObject$1();\n    /**\n     * The label cache for text rendering. To change the default cache size of 2048\n     * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n     * Deprecated - there is no label cache any more.\n     * @type {?}\n     * @api\n     * @deprecated\n     */\n    var labelCache = new EventTarget();\n    labelCache.setSize = function () {\n        console.warn('labelCache is deprecated.'); //eslint-disable-line\n    };\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    var measureContext = null;\n    /**\n     * @type {string}\n     */\n    var measureFont;\n    /**\n     * @type {!Object<string, number>}\n     */\n    var textHeights = {};\n    /**\n     * Clears the label cache when a font becomes available.\n     * @param {string} fontSpec CSS font spec.\n     */\n    var registerFont = (function () {\n        var retries = 100;\n        var size = '32px ';\n        var referenceFonts = ['monospace', 'serif'];\n        var len = referenceFonts.length;\n        var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n        var interval, referenceWidth;\n        /**\n         * @param {string} fontStyle Css font-style\n         * @param {string} fontWeight Css font-weight\n         * @param {*} fontFamily Css font-family\n         * @return {boolean} Font with style and weight is available\n         */\n        function isAvailable(fontStyle, fontWeight, fontFamily) {\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n                if (fontFamily != referenceFont) {\n                    var width = measureTextWidth(fontStyle +\n                        ' ' +\n                        fontWeight +\n                        ' ' +\n                        size +\n                        fontFamily +\n                        ',' +\n                        referenceFont, text);\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                return true;\n            }\n            return false;\n        }\n        function check() {\n            var done = true;\n            var fonts = checkedFonts.getKeys();\n            for (var i = 0, ii = fonts.length; i < ii; ++i) {\n                var font = fonts[i];\n                if (checkedFonts.get(font) < retries) {\n                    if (isAvailable.apply(this, font.split('\\n'))) {\n                        clear(textHeights);\n                        // Make sure that loaded fonts are picked up by Safari\n                        measureContext = null;\n                        measureFont = undefined;\n                        checkedFonts.set(font, retries);\n                    }\n                    else {\n                        checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                        done = false;\n                    }\n                }\n            }\n            if (done) {\n                clearInterval(interval);\n                interval = undefined;\n            }\n        }\n        return function (fontSpec) {\n            var font = getFontParameters(fontSpec);\n            if (!font) {\n                return;\n            }\n            var families = font.families;\n            for (var i = 0, ii = families.length; i < ii; ++i) {\n                var family = families[i];\n                var key = font.style + '\\n' + font.weight + '\\n' + family;\n                if (checkedFonts.get(key) === undefined) {\n                    checkedFonts.set(key, retries, true);\n                    if (!isAvailable(font.style, font.weight, family)) {\n                        checkedFonts.set(key, 0, true);\n                        if (interval === undefined) {\n                            interval = setInterval(check, 32);\n                        }\n                    }\n                }\n            }\n        };\n    })();\n    /**\n     * @param {string} font Font to use for measuring.\n     * @return {import(\"../size.js\").Size} Measurement.\n     */\n    var measureTextHeight = (function () {\n        /**\n         * @type {HTMLDivElement}\n         */\n        var measureElement;\n        return function (fontSpec) {\n            var height = textHeights[fontSpec];\n            if (height == undefined) {\n                if (WORKER_OFFSCREEN_CANVAS) {\n                    var font = getFontParameters(fontSpec);\n                    var metrics = measureText(fontSpec, 'Žg');\n                    var lineHeight = isNaN(Number(font.lineHeight))\n                        ? 1.2\n                        : Number(font.lineHeight);\n                    height =\n                        lineHeight *\n                            (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n                }\n                else {\n                    if (!measureElement) {\n                        measureElement = document.createElement('div');\n                        measureElement.innerHTML = 'M';\n                        measureElement.style.minHeight = '0';\n                        measureElement.style.maxHeight = 'none';\n                        measureElement.style.height = 'auto';\n                        measureElement.style.padding = '0';\n                        measureElement.style.border = 'none';\n                        measureElement.style.position = 'absolute';\n                        measureElement.style.display = 'block';\n                        measureElement.style.left = '-99999px';\n                    }\n                    measureElement.style.font = fontSpec;\n                    document.body.appendChild(measureElement);\n                    height = measureElement.offsetHeight;\n                    document.body.removeChild(measureElement);\n                }\n                textHeights[fontSpec] = height;\n            }\n            return height;\n        };\n    })();\n    /**\n     * @param {string} font Font.\n     * @param {string} text Text.\n     * @return {TextMetrics} Text metrics.\n     */\n    function measureText(font, text) {\n        if (!measureContext) {\n            measureContext = createCanvasContext2D(1, 1);\n        }\n        if (font != measureFont) {\n            measureContext.font = font;\n            measureFont = measureContext.font;\n        }\n        return measureContext.measureText(text);\n    }\n    /**\n     * @param {string} font Font.\n     * @param {string} text Text.\n     * @return {number} Width.\n     */\n    function measureTextWidth(font, text) {\n        return measureText(font, text).width;\n    }\n    /**\n     * Measure text width using a cache.\n     * @param {string} font The font.\n     * @param {string} text The text to measure.\n     * @param {Object<string, number>} cache A lookup of cached widths by text.\n     * @return {number} The text width.\n     */\n    function measureAndCacheTextWidth(font, text, cache) {\n        if (text in cache) {\n            return cache[text];\n        }\n        var width = measureTextWidth(font, text);\n        cache[text] = width;\n        return width;\n    }\n    /**\n     * @param {TextState} baseStyle Base style.\n     * @param {Array<string>} chunks Text chunks to measure.\n     * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n     */\n    function getTextDimensions(baseStyle, chunks) {\n        var widths = [];\n        var heights = [];\n        var lineWidths = [];\n        var width = 0;\n        var lineWidth = 0;\n        var height = 0;\n        var lineHeight = 0;\n        for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n            var text = chunks[i];\n            if (text === '\\n' || i === ii) {\n                width = Math.max(width, lineWidth);\n                lineWidths.push(lineWidth);\n                lineWidth = 0;\n                height += lineHeight;\n                continue;\n            }\n            var font = chunks[i + 1] || baseStyle.font;\n            var currentWidth = measureTextWidth(font, text);\n            widths.push(currentWidth);\n            lineWidth += currentWidth;\n            var currentHeight = measureTextHeight(font);\n            heights.push(currentHeight);\n            lineHeight = Math.max(lineHeight, currentHeight);\n        }\n        return { width: width, height: height, widths: widths, heights: heights, lineWidths: lineWidths };\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../transform.js\").Transform|null} transform Transform.\n     * @param {number} opacity Opacity.\n     * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} w Width.\n     * @param {number} h Height.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../size.js\").Size} scale Scale.\n     */\n    function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n        context.save();\n        if (opacity !== 1) {\n            context.globalAlpha *= opacity;\n        }\n        if (transform) {\n            context.setTransform.apply(context, transform);\n        }\n        if ( /** @type {*} */(labelOrImage).contextInstructions) {\n            // label\n            context.translate(x, y);\n            context.scale(scale[0], scale[1]);\n            executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n        }\n        else if (scale[0] < 0 || scale[1] < 0) {\n            // flipped image\n            context.translate(x, y);\n            context.scale(scale[0], scale[1]);\n            context.drawImage(\n            /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n        }\n        else {\n            // if image not flipped translate and scale can be avoided\n            context.drawImage(\n            /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n        }\n        context.restore();\n    }\n    /**\n     * @param {Label} label Label.\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    function executeLabelInstructions(label, context) {\n        var contextInstructions = label.contextInstructions;\n        for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n            if (Array.isArray(contextInstructions[i + 1])) {\n                context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n            }\n            else {\n                context[contextInstructions[i]] = contextInstructions[i + 1];\n            }\n        }\n    }\n\n    /**\n     * @module ol/style/RegularShape\n     */\n    var __extends$r = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * Specify radius for regular polygons, or radius1 and radius2 for stars.\n     * @typedef {Object} Options\n     * @property {import(\"./Fill.js\").default} [fill] Fill style.\n     * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n     * is the number of sides.\n     * @property {number} [radius] Radius of a regular polygon.\n     * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n     * @property {number} [radius2] Second radius of a star.\n     * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n     * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n     * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n     * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n     * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n     * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n     * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n     */\n    /**\n     * @typedef {Object} RenderOptions\n     * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n     * @property {number} strokeWidth StrokeWidth.\n     * @property {number} size Size.\n     * @property {Array<number>} lineDash LineDash.\n     * @property {number} lineDashOffset LineDashOffset.\n     * @property {CanvasLineJoin} lineJoin LineJoin.\n     * @property {number} miterLimit MiterLimit.\n     */\n    /**\n     * @classdesc\n     * Set regular shape style for vector features. The resulting shape will be\n     * a regular polygon when `radius` is provided, or a star when `radius1` and\n     * `radius2` are provided.\n     * @api\n     */\n    var RegularShape = /** @class */ (function (_super) {\n        __extends$r(RegularShape, _super);\n        /**\n         * @param {Options} options Options.\n         */\n        function RegularShape(options) {\n            var _this = this;\n            /**\n             * @type {boolean}\n             */\n            var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n            _this = _super.call(this, {\n                opacity: 1,\n                rotateWithView: rotateWithView,\n                rotation: options.rotation !== undefined ? options.rotation : 0,\n                scale: options.scale !== undefined ? options.scale : 1,\n                displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            }) || this;\n            /**\n             * @private\n             * @type {Object<number, HTMLCanvasElement>}\n             */\n            _this.canvas_ = undefined;\n            /**\n             * @private\n             * @type {HTMLCanvasElement}\n             */\n            _this.hitDetectionCanvas_ = null;\n            /**\n             * @private\n             * @type {import(\"./Fill.js\").default}\n             */\n            _this.fill_ = options.fill !== undefined ? options.fill : null;\n            /**\n             * @private\n             * @type {Array<number>}\n             */\n            _this.origin_ = [0, 0];\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.points_ = options.points;\n            /**\n             * @protected\n             * @type {number}\n             */\n            _this.radius_ =\n                options.radius !== undefined ? options.radius : options.radius1;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.radius2_ = options.radius2;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.angle_ = options.angle !== undefined ? options.angle : 0;\n            /**\n             * @private\n             * @type {import(\"./Stroke.js\").default}\n             */\n            _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n            /**\n             * @private\n             * @type {import(\"../size.js\").Size}\n             */\n            _this.size_ = null;\n            /**\n             * @private\n             * @type {RenderOptions}\n             */\n            _this.renderOptions_ = null;\n            _this.render();\n            return _this;\n        }\n        /**\n         * Clones the style.\n         * @return {RegularShape} The cloned style.\n         * @api\n         */\n        RegularShape.prototype.clone = function () {\n            var scale = this.getScale();\n            var style = new RegularShape({\n                fill: this.getFill() ? this.getFill().clone() : undefined,\n                points: this.getPoints(),\n                radius: this.getRadius(),\n                radius2: this.getRadius2(),\n                angle: this.getAngle(),\n                stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n                rotation: this.getRotation(),\n                rotateWithView: this.getRotateWithView(),\n                scale: Array.isArray(scale) ? scale.slice() : scale,\n                displacement: this.getDisplacement().slice(),\n            });\n            style.setOpacity(this.getOpacity());\n            return style;\n        };\n        /**\n         * Get the anchor point in pixels. The anchor determines the center point for the\n         * symbolizer.\n         * @return {Array<number>} Anchor.\n         * @api\n         */\n        RegularShape.prototype.getAnchor = function () {\n            var size = this.size_;\n            if (!size) {\n                return null;\n            }\n            var displacement = this.getDisplacement();\n            return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n        };\n        /**\n         * Get the angle used in generating the shape.\n         * @return {number} Shape's rotation in radians.\n         * @api\n         */\n        RegularShape.prototype.getAngle = function () {\n            return this.angle_;\n        };\n        /**\n         * Get the fill style for the shape.\n         * @return {import(\"./Fill.js\").default} Fill style.\n         * @api\n         */\n        RegularShape.prototype.getFill = function () {\n            return this.fill_;\n        };\n        /**\n         * @return {HTMLCanvasElement} Image element.\n         */\n        RegularShape.prototype.getHitDetectionImage = function () {\n            if (!this.hitDetectionCanvas_) {\n                this.createHitDetectionCanvas_(this.renderOptions_);\n            }\n            return this.hitDetectionCanvas_;\n        };\n        /**\n         * Get the image icon.\n         * @param {number} pixelRatio Pixel ratio.\n         * @return {HTMLCanvasElement} Image or Canvas element.\n         * @api\n         */\n        RegularShape.prototype.getImage = function (pixelRatio) {\n            var image = this.canvas_[pixelRatio];\n            if (!image) {\n                var renderOptions = this.renderOptions_;\n                var context = createCanvasContext2D(renderOptions.size * pixelRatio, renderOptions.size * pixelRatio);\n                this.draw_(renderOptions, context, pixelRatio);\n                image = context.canvas;\n                this.canvas_[pixelRatio] = image;\n            }\n            return image;\n        };\n        /**\n         * Get the image pixel ratio.\n         * @param {number} pixelRatio Pixel ratio.\n         * @return {number} Pixel ratio.\n         */\n        RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n            return pixelRatio;\n        };\n        /**\n         * @return {import(\"../size.js\").Size} Image size.\n         */\n        RegularShape.prototype.getImageSize = function () {\n            return this.size_;\n        };\n        /**\n         * @return {import(\"../ImageState.js\").default} Image state.\n         */\n        RegularShape.prototype.getImageState = function () {\n            return ImageState.LOADED;\n        };\n        /**\n         * Get the origin of the symbolizer.\n         * @return {Array<number>} Origin.\n         * @api\n         */\n        RegularShape.prototype.getOrigin = function () {\n            return this.origin_;\n        };\n        /**\n         * Get the number of points for generating the shape.\n         * @return {number} Number of points for stars and regular polygons.\n         * @api\n         */\n        RegularShape.prototype.getPoints = function () {\n            return this.points_;\n        };\n        /**\n         * Get the (primary) radius for the shape.\n         * @return {number} Radius.\n         * @api\n         */\n        RegularShape.prototype.getRadius = function () {\n            return this.radius_;\n        };\n        /**\n         * Get the secondary radius for the shape.\n         * @return {number|undefined} Radius2.\n         * @api\n         */\n        RegularShape.prototype.getRadius2 = function () {\n            return this.radius2_;\n        };\n        /**\n         * Get the size of the symbolizer (in pixels).\n         * @return {import(\"../size.js\").Size} Size.\n         * @api\n         */\n        RegularShape.prototype.getSize = function () {\n            return this.size_;\n        };\n        /**\n         * Get the stroke style for the shape.\n         * @return {import(\"./Stroke.js\").default} Stroke style.\n         * @api\n         */\n        RegularShape.prototype.getStroke = function () {\n            return this.stroke_;\n        };\n        /**\n         * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n         */\n        RegularShape.prototype.listenImageChange = function (listener) { };\n        /**\n         * Load not yet loaded URI.\n         */\n        RegularShape.prototype.load = function () { };\n        /**\n         * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n         */\n        RegularShape.prototype.unlistenImageChange = function (listener) { };\n        /**\n         * Calculate additional canvas size needed for the miter.\n         * @param {string} lineJoin Line join\n         * @param {number} strokeWidth Stroke width\n         * @param {number} miterLimit Miter limit\n         * @return {number} Additional canvas size needed\n         * @private\n         */\n        RegularShape.prototype.calculateLineJoinSize_ = function (lineJoin, strokeWidth, miterLimit) {\n            if (strokeWidth === 0 ||\n                this.points_ === Infinity ||\n                (lineJoin !== 'bevel' && lineJoin !== 'miter')) {\n                return strokeWidth;\n            }\n            // m  | ^\n            // i  | |\\                  .\n            // t >|  #\\\n            // e  | |\\ \\              .\n            // r      \\s\\\n            //      |  \\t\\          .                 .\n            //          \\r\\                      .   .\n            //      |    \\o\\      .          .  . . .\n            //          e \\k\\            .  .    . .\n            //      |      \\e\\  .    .  .       . .\n            //       d      \\ \\  .  .          . .\n            //      | _ _a_ _\\#  .            . .\n            //   r1          / `             . .\n            //      |                       . .\n            //       b     /               . .\n            //      |                     . .\n            //           / r2            . .\n            //      |                        .   .\n            //         /                           .   .\n            //      |α                                   .   .\n            //       /                                         .   .\n            //      ° center\n            var r1 = this.radius_;\n            var r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n            if (r1 < r2) {\n                var tmp = r1;\n                r1 = r2;\n                r2 = tmp;\n            }\n            var points = this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n            var alpha = (2 * Math.PI) / points;\n            var a = r2 * Math.sin(alpha);\n            var b = Math.sqrt(r2 * r2 - a * a);\n            var d = r1 - b;\n            var e = Math.sqrt(a * a + d * d);\n            var miterRatio = e / a;\n            if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n                return miterRatio * strokeWidth;\n            }\n            // Calculate the distnce from center to the stroke corner where\n            // it was cut short because of the miter limit.\n            //              l\n            //        ----+---- <= distance from center to here is maxr\n            //       /####|k ##\\\n            //      /#####^#####\\\n            //     /#### /+\\# s #\\\n            //    /### h/+++\\# t #\\\n            //   /### t/+++++\\# r #\\\n            //  /### a/+++++++\\# o #\\\n            // /### p/++ fill +\\# k #\\\n            ///#### /+++++^+++++\\# e #\\\n            //#####/+++++/+\\+++++\\#####\\\n            var k = strokeWidth / 2 / miterRatio;\n            var l = (strokeWidth / 2) * (d / e);\n            var maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n            var bevelAdd = maxr - r1;\n            if (this.radius2_ === undefined || lineJoin === 'bevel') {\n                return bevelAdd * 2;\n            }\n            // If outer miter is over the miter limit the inner miter may reach through the\n            // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n            var aa = r1 * Math.sin(alpha);\n            var bb = Math.sqrt(r1 * r1 - aa * aa);\n            var dd = r2 - bb;\n            var ee = Math.sqrt(aa * aa + dd * dd);\n            var innerMiterRatio = ee / aa;\n            if (innerMiterRatio <= miterLimit) {\n                var innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n                return 2 * Math.max(bevelAdd, innerLength);\n            }\n            return bevelAdd * 2;\n        };\n        /**\n         * @return {RenderOptions}  The render options\n         * @protected\n         */\n        RegularShape.prototype.createRenderOptions = function () {\n            var lineJoin = defaultLineJoin;\n            var miterLimit = 0;\n            var lineDash = null;\n            var lineDashOffset = 0;\n            var strokeStyle;\n            var strokeWidth = 0;\n            if (this.stroke_) {\n                strokeStyle = this.stroke_.getColor();\n                if (strokeStyle === null) {\n                    strokeStyle = defaultStrokeStyle;\n                }\n                strokeStyle = asColorLike(strokeStyle);\n                strokeWidth = this.stroke_.getWidth();\n                if (strokeWidth === undefined) {\n                    strokeWidth = defaultLineWidth;\n                }\n                lineDash = this.stroke_.getLineDash();\n                lineDashOffset = this.stroke_.getLineDashOffset();\n                lineJoin = this.stroke_.getLineJoin();\n                if (lineJoin === undefined) {\n                    lineJoin = defaultLineJoin;\n                }\n                miterLimit = this.stroke_.getMiterLimit();\n                if (miterLimit === undefined) {\n                    miterLimit = defaultMiterLimit;\n                }\n            }\n            var add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n            var maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n            var size = Math.ceil(2 * maxRadius + add);\n            return {\n                strokeStyle: strokeStyle,\n                strokeWidth: strokeWidth,\n                size: size,\n                lineDash: lineDash,\n                lineDashOffset: lineDashOffset,\n                lineJoin: lineJoin,\n                miterLimit: miterLimit,\n            };\n        };\n        /**\n         * @protected\n         */\n        RegularShape.prototype.render = function () {\n            this.renderOptions_ = this.createRenderOptions();\n            var size = this.renderOptions_.size;\n            this.canvas_ = {};\n            this.size_ = [size, size];\n        };\n        /**\n         * @private\n         * @param {RenderOptions} renderOptions Render options.\n         * @param {CanvasRenderingContext2D} context The rendering context.\n         * @param {number} pixelRatio The pixel ratio.\n         */\n        RegularShape.prototype.draw_ = function (renderOptions, context, pixelRatio) {\n            context.scale(pixelRatio, pixelRatio);\n            // set origin to canvas center\n            context.translate(renderOptions.size / 2, renderOptions.size / 2);\n            this.createPath_(context);\n            if (this.fill_) {\n                var color = this.fill_.getColor();\n                if (color === null) {\n                    color = defaultFillStyle;\n                }\n                context.fillStyle = asColorLike(color);\n                context.fill();\n            }\n            if (this.stroke_) {\n                context.strokeStyle = renderOptions.strokeStyle;\n                context.lineWidth = renderOptions.strokeWidth;\n                if (context.setLineDash && renderOptions.lineDash) {\n                    context.setLineDash(renderOptions.lineDash);\n                    context.lineDashOffset = renderOptions.lineDashOffset;\n                }\n                context.lineJoin = renderOptions.lineJoin;\n                context.miterLimit = renderOptions.miterLimit;\n                context.stroke();\n            }\n        };\n        /**\n         * @private\n         * @param {RenderOptions} renderOptions Render options.\n         */\n        RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n            if (this.fill_) {\n                var color = this.fill_.getColor();\n                // determine if fill is transparent (or pattern or gradient)\n                var opacity = 0;\n                if (typeof color === 'string') {\n                    color = asArray(color);\n                }\n                if (color === null) {\n                    opacity = 1;\n                }\n                else if (Array.isArray(color)) {\n                    opacity = color.length === 4 ? color[3] : 1;\n                }\n                if (opacity === 0) {\n                    // if a transparent fill style is set, create an extra hit-detection image\n                    // with a default fill style\n                    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                    this.hitDetectionCanvas_ = context.canvas;\n                    this.drawHitDetectionCanvas_(renderOptions, context);\n                }\n            }\n            if (!this.hitDetectionCanvas_) {\n                this.hitDetectionCanvas_ = this.getImage(1);\n            }\n        };\n        /**\n         * @private\n         * @param {CanvasRenderingContext2D} context The context to draw in.\n         */\n        RegularShape.prototype.createPath_ = function (context) {\n            var points = this.points_;\n            var radius = this.radius_;\n            if (points === Infinity) {\n                context.arc(0, 0, radius, 0, 2 * Math.PI);\n            }\n            else {\n                var radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n                if (this.radius2_ !== undefined) {\n                    points *= 2;\n                }\n                var startAngle = this.angle_ - Math.PI / 2;\n                var step = (2 * Math.PI) / points;\n                for (var i = 0; i < points; i++) {\n                    var angle0 = startAngle + i * step;\n                    var radiusC = i % 2 === 0 ? radius : radius2;\n                    context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n                }\n                context.closePath();\n            }\n        };\n        /**\n         * @private\n         * @param {RenderOptions} renderOptions Render options.\n         * @param {CanvasRenderingContext2D} context The context.\n         */\n        RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context) {\n            // set origin to canvas center\n            context.translate(renderOptions.size / 2, renderOptions.size / 2);\n            this.createPath_(context);\n            context.fillStyle = defaultFillStyle;\n            context.fill();\n            if (this.stroke_) {\n                context.strokeStyle = renderOptions.strokeStyle;\n                context.lineWidth = renderOptions.strokeWidth;\n                if (renderOptions.lineDash) {\n                    context.setLineDash(renderOptions.lineDash);\n                    context.lineDashOffset = renderOptions.lineDashOffset;\n                }\n                context.lineJoin = renderOptions.lineJoin;\n                context.miterLimit = renderOptions.miterLimit;\n                context.stroke();\n            }\n        };\n        return RegularShape;\n    }(ImageStyle$1));\n    var RegularShape$1 = RegularShape;\n\n    /**\n     * @module ol/style/Circle\n     */\n    var __extends$q = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @typedef {Object} Options\n     * @property {import(\"./Fill.js\").default} [fill] Fill style.\n     * @property {number} radius Circle radius.\n     * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n     * @property {Array<number>} [displacement=[0,0]] displacement\n     * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n     * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n     * @property {number} [rotation=0] Rotation in radians\n     * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n     * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n     * (meaningful only when used in conjunction with a two dimensional scale).\n     */\n    /**\n     * @classdesc\n     * Set circle style for vector features.\n     * @api\n     */\n    var CircleStyle = /** @class */ (function (_super) {\n        __extends$q(CircleStyle, _super);\n        /**\n         * @param {Options} [opt_options] Options.\n         */\n        function CircleStyle(opt_options) {\n            var options = opt_options ? opt_options : {};\n            return _super.call(this, {\n                points: Infinity,\n                fill: options.fill,\n                radius: options.radius,\n                stroke: options.stroke,\n                scale: options.scale !== undefined ? options.scale : 1,\n                rotation: options.rotation !== undefined ? options.rotation : 0,\n                rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n                displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            }) || this;\n        }\n        /**\n         * Clones the style.\n         * @return {CircleStyle} The cloned style.\n         * @api\n         */\n        CircleStyle.prototype.clone = function () {\n            var scale = this.getScale();\n            var style = new CircleStyle({\n                fill: this.getFill() ? this.getFill().clone() : undefined,\n                stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n                radius: this.getRadius(),\n                scale: Array.isArray(scale) ? scale.slice() : scale,\n                rotation: this.getRotation(),\n                rotateWithView: this.getRotateWithView(),\n                displacement: this.getDisplacement().slice(),\n            });\n            style.setOpacity(this.getOpacity());\n            return style;\n        };\n        /**\n         * Set the circle radius.\n         *\n         * @param {number} radius Circle radius.\n         * @api\n         */\n        CircleStyle.prototype.setRadius = function (radius) {\n            this.radius_ = radius;\n            this.render();\n        };\n        return CircleStyle;\n    }(RegularShape$1));\n    var CircleStyle$1 = CircleStyle;\n\n    /**\n     * @module ol/style/Fill\n     */\n    /**\n     * @typedef {Object} Options\n     * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n     * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n     * Default null; if null, the Canvas/renderer default black will be used.\n     */\n    /**\n     * @classdesc\n     * Set fill style for vector features.\n     * @api\n     */\n    var Fill = /** @class */ (function () {\n        /**\n         * @param {Options} [opt_options] Options.\n         */\n        function Fill(opt_options) {\n            var options = opt_options || {};\n            /**\n             * @private\n             * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n             */\n            this.color_ = options.color !== undefined ? options.color : null;\n        }\n        /**\n         * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n         * @return {Fill} The cloned style.\n         * @api\n         */\n        Fill.prototype.clone = function () {\n            var color = this.getColor();\n            return new Fill({\n                color: Array.isArray(color) ? color.slice() : color || undefined,\n            });\n        };\n        /**\n         * Get the fill color.\n         * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n         * @api\n         */\n        Fill.prototype.getColor = function () {\n            return this.color_;\n        };\n        /**\n         * Set the color.\n         *\n         * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n         * @api\n         */\n        Fill.prototype.setColor = function (color) {\n            this.color_ = color;\n        };\n        return Fill;\n    }());\n    var Fill$1 = Fill;\n\n    /**\n     * @module ol/geom/GeometryType\n     */\n    /**\n     * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n     * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n     * `'GeometryCollection'`, `'Circle'`.\n     * @enum {string}\n     */\n    var GeometryType = {\n        POINT: 'Point',\n        LINE_STRING: 'LineString',\n        LINEAR_RING: 'LinearRing',\n        POLYGON: 'Polygon',\n        MULTI_POINT: 'MultiPoint',\n        MULTI_LINE_STRING: 'MultiLineString',\n        MULTI_POLYGON: 'MultiPolygon',\n        GEOMETRY_COLLECTION: 'GeometryCollection',\n        CIRCLE: 'Circle',\n    };\n\n    /**\n     * @module ol/style/Stroke\n     */\n    /**\n     * @typedef {Object} Options\n     * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n     * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n     * Default null; if null, the Canvas/renderer default black will be used.\n     * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n     * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n     * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n     * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n     * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n     * @property {number} [lineDashOffset=0] Line dash offset.\n     * @property {number} [miterLimit=10] Miter limit.\n     * @property {number} [width] Width.\n     */\n    /**\n     * @classdesc\n     * Set stroke style for vector features.\n     * Note that the defaults given are the Canvas defaults, which will be used if\n     * option is not defined. The `get` functions return whatever was entered in\n     * the options; they will not return the default.\n     * @api\n     */\n    var Stroke = /** @class */ (function () {\n        /**\n         * @param {Options} [opt_options] Options.\n         */\n        function Stroke(opt_options) {\n            var options = opt_options || {};\n            /**\n             * @private\n             * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n             */\n            this.color_ = options.color !== undefined ? options.color : null;\n            /**\n             * @private\n             * @type {CanvasLineCap|undefined}\n             */\n            this.lineCap_ = options.lineCap;\n            /**\n             * @private\n             * @type {Array<number>}\n             */\n            this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            this.lineDashOffset_ = options.lineDashOffset;\n            /**\n             * @private\n             * @type {CanvasLineJoin|undefined}\n             */\n            this.lineJoin_ = options.lineJoin;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            this.miterLimit_ = options.miterLimit;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            this.width_ = options.width;\n        }\n        /**\n         * Clones the style.\n         * @return {Stroke} The cloned style.\n         * @api\n         */\n        Stroke.prototype.clone = function () {\n            var color = this.getColor();\n            return new Stroke({\n                color: Array.isArray(color) ? color.slice() : color || undefined,\n                lineCap: this.getLineCap(),\n                lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n                lineDashOffset: this.getLineDashOffset(),\n                lineJoin: this.getLineJoin(),\n                miterLimit: this.getMiterLimit(),\n                width: this.getWidth(),\n            });\n        };\n        /**\n         * Get the stroke color.\n         * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n         * @api\n         */\n        Stroke.prototype.getColor = function () {\n            return this.color_;\n        };\n        /**\n         * Get the line cap type for the stroke.\n         * @return {CanvasLineCap|undefined} Line cap.\n         * @api\n         */\n        Stroke.prototype.getLineCap = function () {\n            return this.lineCap_;\n        };\n        /**\n         * Get the line dash style for the stroke.\n         * @return {Array<number>} Line dash.\n         * @api\n         */\n        Stroke.prototype.getLineDash = function () {\n            return this.lineDash_;\n        };\n        /**\n         * Get the line dash offset for the stroke.\n         * @return {number|undefined} Line dash offset.\n         * @api\n         */\n        Stroke.prototype.getLineDashOffset = function () {\n            return this.lineDashOffset_;\n        };\n        /**\n         * Get the line join type for the stroke.\n         * @return {CanvasLineJoin|undefined} Line join.\n         * @api\n         */\n        Stroke.prototype.getLineJoin = function () {\n            return this.lineJoin_;\n        };\n        /**\n         * Get the miter limit for the stroke.\n         * @return {number|undefined} Miter limit.\n         * @api\n         */\n        Stroke.prototype.getMiterLimit = function () {\n            return this.miterLimit_;\n        };\n        /**\n         * Get the stroke width.\n         * @return {number|undefined} Width.\n         * @api\n         */\n        Stroke.prototype.getWidth = function () {\n            return this.width_;\n        };\n        /**\n         * Set the color.\n         *\n         * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n         * @api\n         */\n        Stroke.prototype.setColor = function (color) {\n            this.color_ = color;\n        };\n        /**\n         * Set the line cap.\n         *\n         * @param {CanvasLineCap|undefined} lineCap Line cap.\n         * @api\n         */\n        Stroke.prototype.setLineCap = function (lineCap) {\n            this.lineCap_ = lineCap;\n        };\n        /**\n         * Set the line dash.\n         *\n         * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n         * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n         * property will have no visual effect in these browsers.\n         *\n         * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n         *\n         * @param {Array<number>} lineDash Line dash.\n         * @api\n         */\n        Stroke.prototype.setLineDash = function (lineDash) {\n            this.lineDash_ = lineDash;\n        };\n        /**\n         * Set the line dash offset.\n         *\n         * @param {number|undefined} lineDashOffset Line dash offset.\n         * @api\n         */\n        Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n            this.lineDashOffset_ = lineDashOffset;\n        };\n        /**\n         * Set the line join.\n         *\n         * @param {CanvasLineJoin|undefined} lineJoin Line join.\n         * @api\n         */\n        Stroke.prototype.setLineJoin = function (lineJoin) {\n            this.lineJoin_ = lineJoin;\n        };\n        /**\n         * Set the miter limit.\n         *\n         * @param {number|undefined} miterLimit Miter limit.\n         * @api\n         */\n        Stroke.prototype.setMiterLimit = function (miterLimit) {\n            this.miterLimit_ = miterLimit;\n        };\n        /**\n         * Set the width.\n         *\n         * @param {number|undefined} width Width.\n         * @api\n         */\n        Stroke.prototype.setWidth = function (width) {\n            this.width_ = width;\n        };\n        return Stroke;\n    }());\n    var Stroke$1 = Stroke;\n\n    /**\n     * @module ol/style/Style\n     */\n    /**\n     * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n     * representing the view's resolution. The function should return a\n     * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n     * vector layer can be styled. If the function returns `undefined`, the\n     * feature will not be rendered.\n     *\n     * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n     */\n    /**\n     * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n     * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n     */\n    /**\n     * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n     * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n     *\n     * @typedef {function(import(\"../Feature.js\").FeatureLike):\n     *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n     */\n    /**\n     * Custom renderer function. Takes two arguments:\n     *\n     * 1. The pixel coordinates of the geometry in GeoJSON notation.\n     * 2. The {@link module:ol/render~State} of the layer renderer.\n     *\n     * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n     * RenderFunction\n     */\n    /**\n     * @typedef {Object} Options\n     * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n     * or function returning a geometry to render for this style.\n     * @property {import(\"./Fill.js\").default} [fill] Fill style.\n     * @property {import(\"./Image.js\").default} [image] Image style.\n     * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n     * ignored, and the provided function will be called with each render frame for each geometry.\n     * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n     * in hit detection rendering.\n     * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n     * @property {import(\"./Text.js\").default} [text] Text style.\n     * @property {number} [zIndex] Z index.\n     */\n    /**\n     * @classdesc\n     * Container for vector feature rendering styles. Any changes made to the style\n     * or its children through `set*()` methods will not take effect until the\n     * feature or layer that uses the style is re-rendered.\n     *\n     * ## Feature styles\n     *\n     * If no style is defined, the following default style is used:\n     * ```js\n     *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n     *\n     *  const fill = new Fill({\n     *    color: 'rgba(255,255,255,0.4)',\n     *  });\n     *  const stroke = new Stroke({\n     *    color: '#3399CC',\n     *    width: 1.25,\n     *  });\n     *  const styles = [\n     *    new Style({\n     *      image: new Circle({\n     *        fill: fill,\n     *        stroke: stroke,\n     *        radius: 5,\n     *      }),\n     *      fill: fill,\n     *      stroke: stroke,\n     *    }),\n     *  ];\n     * ```\n     *\n     * A separate editing style has the following defaults:\n     * ```js\n     *  import GeometryType from 'ol/geom/GeometryType';\n     *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n     *\n     *  const styles = {};\n     *  const white = [255, 255, 255, 1];\n     *  const blue = [0, 153, 255, 1];\n     *  const width = 3;\n     *  styles[GeometryType.POLYGON] = [\n     *    new Style({\n     *      fill: new Fill({\n     *        color: [255, 255, 255, 0.5],\n     *      }),\n     *    }),\n     *  ];\n     *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n     *\n     *  styles[GeometryType.LINE_STRING] = [\n     *    new Style({\n     *      stroke: new Stroke({\n     *        color: white,\n     *        width: width + 2,\n     *      }),\n     *    }),\n     *    new Style({\n     *      stroke: new Stroke({\n     *        color: blue,\n     *        width: width,\n     *      }),\n     *    }),\n     *  ];\n     *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n     *\n     *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n     *    styles[GeometryType.LINE_STRING]\n     *  );\n     *\n     *  styles[GeometryType.POINT] = [\n     *    new Style({\n     *      image: new Circle({\n     *        radius: width * 2,\n     *        fill: new Fill({\n     *          color: blue,\n     *        }),\n     *        stroke: new Stroke({\n     *          color: white,\n     *          width: width / 2,\n     *        }),\n     *      }),\n     *      zIndex: Infinity,\n     *    }),\n     *  ];\n     *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n     *\n     *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n     *    GeometryType.POLYGON\n     *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n     * ```\n     *\n     * @api\n     */\n    var Style = /** @class */ (function () {\n        /**\n         * @param {Options} [opt_options] Style options.\n         */\n        function Style(opt_options) {\n            var options = opt_options || {};\n            /**\n             * @private\n             * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n             */\n            this.geometry_ = null;\n            /**\n             * @private\n             * @type {!GeometryFunction}\n             */\n            this.geometryFunction_ = defaultGeometryFunction;\n            if (options.geometry !== undefined) {\n                this.setGeometry(options.geometry);\n            }\n            /**\n             * @private\n             * @type {import(\"./Fill.js\").default}\n             */\n            this.fill_ = options.fill !== undefined ? options.fill : null;\n            /**\n             * @private\n             * @type {import(\"./Image.js\").default}\n             */\n            this.image_ = options.image !== undefined ? options.image : null;\n            /**\n             * @private\n             * @type {RenderFunction|null}\n             */\n            this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n            /**\n             * @private\n             * @type {RenderFunction|null}\n             */\n            this.hitDetectionRenderer_ =\n                options.hitDetectionRenderer !== undefined\n                    ? options.hitDetectionRenderer\n                    : null;\n            /**\n             * @private\n             * @type {import(\"./Stroke.js\").default}\n             */\n            this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n            /**\n             * @private\n             * @type {import(\"./Text.js\").default}\n             */\n            this.text_ = options.text !== undefined ? options.text : null;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            this.zIndex_ = options.zIndex;\n        }\n        /**\n         * Clones the style.\n         * @return {Style} The cloned style.\n         * @api\n         */\n        Style.prototype.clone = function () {\n            var geometry = this.getGeometry();\n            if (geometry && typeof geometry === 'object') {\n                geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n            }\n            return new Style({\n                geometry: geometry,\n                fill: this.getFill() ? this.getFill().clone() : undefined,\n                image: this.getImage() ? this.getImage().clone() : undefined,\n                renderer: this.getRenderer(),\n                stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n                text: this.getText() ? this.getText().clone() : undefined,\n                zIndex: this.getZIndex(),\n            });\n        };\n        /**\n         * Get the custom renderer function that was configured with\n         * {@link #setRenderer} or the `renderer` constructor option.\n         * @return {RenderFunction|null} Custom renderer function.\n         * @api\n         */\n        Style.prototype.getRenderer = function () {\n            return this.renderer_;\n        };\n        /**\n         * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n         * and `image` options of the style will be ignored.\n         * @param {RenderFunction|null} renderer Custom renderer function.\n         * @api\n         */\n        Style.prototype.setRenderer = function (renderer) {\n            this.renderer_ = renderer;\n        };\n        /**\n         * Sets a custom renderer function for this style used\n         * in hit detection.\n         * @param {RenderFunction|null} renderer Custom renderer function.\n         * @api\n         */\n        Style.prototype.setHitDetectionRenderer = function (renderer) {\n            this.hitDetectionRenderer_ = renderer;\n        };\n        /**\n         * Get the custom renderer function that was configured with\n         * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n         * @return {RenderFunction|null} Custom renderer function.\n         * @api\n         */\n        Style.prototype.getHitDetectionRenderer = function () {\n            return this.hitDetectionRenderer_;\n        };\n        /**\n         * Get the geometry to be rendered.\n         * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         * Feature property or geometry or function that returns the geometry that will\n         * be rendered with this style.\n         * @api\n         */\n        Style.prototype.getGeometry = function () {\n            return this.geometry_;\n        };\n        /**\n         * Get the function used to generate a geometry for rendering.\n         * @return {!GeometryFunction} Function that is called with a feature\n         * and returns the geometry to render instead of the feature's geometry.\n         * @api\n         */\n        Style.prototype.getGeometryFunction = function () {\n            return this.geometryFunction_;\n        };\n        /**\n         * Get the fill style.\n         * @return {import(\"./Fill.js\").default} Fill style.\n         * @api\n         */\n        Style.prototype.getFill = function () {\n            return this.fill_;\n        };\n        /**\n         * Set the fill style.\n         * @param {import(\"./Fill.js\").default} fill Fill style.\n         * @api\n         */\n        Style.prototype.setFill = function (fill) {\n            this.fill_ = fill;\n        };\n        /**\n         * Get the image style.\n         * @return {import(\"./Image.js\").default} Image style.\n         * @api\n         */\n        Style.prototype.getImage = function () {\n            return this.image_;\n        };\n        /**\n         * Set the image style.\n         * @param {import(\"./Image.js\").default} image Image style.\n         * @api\n         */\n        Style.prototype.setImage = function (image) {\n            this.image_ = image;\n        };\n        /**\n         * Get the stroke style.\n         * @return {import(\"./Stroke.js\").default} Stroke style.\n         * @api\n         */\n        Style.prototype.getStroke = function () {\n            return this.stroke_;\n        };\n        /**\n         * Set the stroke style.\n         * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n         * @api\n         */\n        Style.prototype.setStroke = function (stroke) {\n            this.stroke_ = stroke;\n        };\n        /**\n         * Get the text style.\n         * @return {import(\"./Text.js\").default} Text style.\n         * @api\n         */\n        Style.prototype.getText = function () {\n            return this.text_;\n        };\n        /**\n         * Set the text style.\n         * @param {import(\"./Text.js\").default} text Text style.\n         * @api\n         */\n        Style.prototype.setText = function (text) {\n            this.text_ = text;\n        };\n        /**\n         * Get the z-index for the style.\n         * @return {number|undefined} ZIndex.\n         * @api\n         */\n        Style.prototype.getZIndex = function () {\n            return this.zIndex_;\n        };\n        /**\n         * Set a geometry that is rendered instead of the feature's geometry.\n         *\n         * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n         *     Feature property or geometry or function returning a geometry to render\n         *     for this style.\n         * @api\n         */\n        Style.prototype.setGeometry = function (geometry) {\n            if (typeof geometry === 'function') {\n                this.geometryFunction_ = geometry;\n            }\n            else if (typeof geometry === 'string') {\n                this.geometryFunction_ = function (feature) {\n                    return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n                };\n            }\n            else if (!geometry) {\n                this.geometryFunction_ = defaultGeometryFunction;\n            }\n            else if (geometry !== undefined) {\n                this.geometryFunction_ = function () {\n                    return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n                };\n            }\n            this.geometry_ = geometry;\n        };\n        /**\n         * Set the z-index.\n         *\n         * @param {number|undefined} zIndex ZIndex.\n         * @api\n         */\n        Style.prototype.setZIndex = function (zIndex) {\n            this.zIndex_ = zIndex;\n        };\n        return Style;\n    }());\n    /**\n     * Convert the provided object into a style function.  Functions passed through\n     * unchanged.  Arrays of Style or single style objects wrapped in a\n     * new style function.\n     * @param {StyleFunction|Array<Style>|Style} obj\n     *     A style function, a single style, or an array of styles.\n     * @return {StyleFunction} A style function.\n     */\n    function toFunction(obj) {\n        var styleFunction;\n        if (typeof obj === 'function') {\n            styleFunction = obj;\n        }\n        else {\n            /**\n             * @type {Array<Style>}\n             */\n            var styles_1;\n            if (Array.isArray(obj)) {\n                styles_1 = obj;\n            }\n            else {\n                assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n                var style = /** @type {Style} */ (obj);\n                styles_1 = [style];\n            }\n            styleFunction = function () {\n                return styles_1;\n            };\n        }\n        return styleFunction;\n    }\n    /**\n     * @type {Array<Style>|null}\n     */\n    var defaultStyles = null;\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function createDefaultStyle(feature, resolution) {\n        // We don't use an immediately-invoked function\n        // and a closure so we don't get an error at script evaluation time in\n        // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n        // canvas.getContext('2d') at construction time, which will cause an.error\n        // in such browsers.)\n        if (!defaultStyles) {\n            var fill = new Fill$1({\n                color: 'rgba(255,255,255,0.4)',\n            });\n            var stroke = new Stroke$1({\n                color: '#3399CC',\n                width: 1.25,\n            });\n            defaultStyles = [\n                new Style({\n                    image: new CircleStyle$1({\n                        fill: fill,\n                        stroke: stroke,\n                        radius: 5,\n                    }),\n                    fill: fill,\n                    stroke: stroke,\n                }),\n            ];\n        }\n        return defaultStyles;\n    }\n    /**\n     * Function that is called with a feature and returns its default geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n     * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n     */\n    function defaultGeometryFunction(feature) {\n        return feature.getGeometry();\n    }\n\n    var __extends$p = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n     * @typedef {Object} Options\n     * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n     * @property {number} [opacity=1] Opacity (0, 1).\n     * @property {boolean} [visible=true] Visibility.\n     * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n     * rendered outside of this extent.\n     * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n     * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n     * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n     * method was used.\n     * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n     * visible.\n     * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n     * be visible.\n     * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n     * visible.\n     * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n     * be visible.\n     * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n     * features before rendering. By default features are drawn in the order that they are created. Use\n     * `null` to avoid the sort, but get an undefined draw order.\n     * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n     * renderer when getting features from the vector source for the rendering or hit-detection.\n     * Recommended value: the size of the largest symbol, line width or label.\n     * @property {VectorSourceType} [source] Source.\n     * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n     * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n     * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n     * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n     * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n     * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n     * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n     * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n     * higher priority.\n     *\n     * As an optimization decluttered features from layers with the same `className` are rendered above\n     * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n     * behavior and place declutterd features with their own layer configure the layer with a `className`\n     * other than `ol-layer`.\n     * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n     * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n     * which will be used if this is not set.\n     * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n     * will be rendered.\n     * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n     * be recreated during animations. This means that no vectors will be shown clipped, but the\n     * setting will have a performance impact for large amounts of vector data. When set to `false`,\n     * batches will be recreated when no animation is active.\n     * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n     * be recreated during interactions. See also `updateWhileAnimating`.\n     * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n     */\n    /**\n     * @enum {string}\n     * @private\n     */\n    var Property$1 = {\n        RENDER_ORDER: 'renderOrder',\n    };\n    /**\n     * @classdesc\n     * Vector data that is rendered client-side.\n     * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n     * property on the layer object; for example, setting `title: 'My Title'` in the\n     * options means that `title` is observable, and has get/set accessors.\n     *\n     * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n     * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n     * @extends {Layer<VectorSourceType, RendererType>}\n     * @api\n     */\n    var BaseVectorLayer = /** @class */ (function (_super) {\n        __extends$p(BaseVectorLayer, _super);\n        /**\n         * @param {Options<VectorSourceType>} [opt_options] Options.\n         */\n        function BaseVectorLayer(opt_options) {\n            var _this = this;\n            var options = opt_options ? opt_options : {};\n            var baseOptions = assign({}, options);\n            delete baseOptions.style;\n            delete baseOptions.renderBuffer;\n            delete baseOptions.updateWhileAnimating;\n            delete baseOptions.updateWhileInteracting;\n            _this = _super.call(this, baseOptions) || this;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            _this.declutter_ =\n                options.declutter !== undefined ? options.declutter : false;\n            /**\n             * @type {number}\n             * @private\n             */\n            _this.renderBuffer_ =\n                options.renderBuffer !== undefined ? options.renderBuffer : 100;\n            /**\n             * User provided style.\n             * @type {import(\"../style/Style.js\").StyleLike}\n             * @private\n             */\n            _this.style_ = null;\n            /**\n             * Style function for use within the library.\n             * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n             * @private\n             */\n            _this.styleFunction_ = undefined;\n            _this.setStyle(options.style);\n            /**\n             * @type {boolean}\n             * @private\n             */\n            _this.updateWhileAnimating_ =\n                options.updateWhileAnimating !== undefined\n                    ? options.updateWhileAnimating\n                    : false;\n            /**\n             * @type {boolean}\n             * @private\n             */\n            _this.updateWhileInteracting_ =\n                options.updateWhileInteracting !== undefined\n                    ? options.updateWhileInteracting\n                    : false;\n            return _this;\n        }\n        /**\n         * @return {boolean} Declutter.\n         */\n        BaseVectorLayer.prototype.getDeclutter = function () {\n            return this.declutter_;\n        };\n        /**\n         * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n         * that resolves with an array of features. The array will either contain the topmost feature\n         * when a hit was detected, or it will be empty.\n         *\n         * The hit detection algorithm used for this method is optimized for performance, but is less\n         * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n         * is not considered, and icons are only represented by their bounding box instead of the exact\n         * image.\n         *\n         * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n         * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n         * @api\n         */\n        BaseVectorLayer.prototype.getFeatures = function (pixel) {\n            return _super.prototype.getFeatures.call(this, pixel);\n        };\n        /**\n         * @return {number|undefined} Render buffer.\n         */\n        BaseVectorLayer.prototype.getRenderBuffer = function () {\n            return this.renderBuffer_;\n        };\n        /**\n         * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n         *     order.\n         */\n        BaseVectorLayer.prototype.getRenderOrder = function () {\n            return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property$1.RENDER_ORDER));\n        };\n        /**\n         * Get the style for features.  This returns whatever was passed to the `style`\n         * option at construction or to the `setStyle` method.\n         * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n         * @api\n         */\n        BaseVectorLayer.prototype.getStyle = function () {\n            return this.style_;\n        };\n        /**\n         * Get the style function.\n         * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n         * @api\n         */\n        BaseVectorLayer.prototype.getStyleFunction = function () {\n            return this.styleFunction_;\n        };\n        /**\n         * @return {boolean} Whether the rendered layer should be updated while\n         *     animating.\n         */\n        BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n            return this.updateWhileAnimating_;\n        };\n        /**\n         * @return {boolean} Whether the rendered layer should be updated while\n         *     interacting.\n         */\n        BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n            return this.updateWhileInteracting_;\n        };\n        /**\n         * Render declutter items for this layer\n         * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n         */\n        BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n            if (!frameState.declutterTree) {\n                frameState.declutterTree = new RBush$2(9);\n            }\n            /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n        };\n        /**\n         * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n         *     Render order.\n         */\n        BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n            this.set(Property$1.RENDER_ORDER, renderOrder);\n        };\n        /**\n         * Set the style for features.  This can be a single style object, an array\n         * of styles, or a function that takes a feature and resolution and returns\n         * an array of styles. If set to `null`, the layer has no style (a `null` style),\n         * so only features that have their own styles will be rendered in the layer. Call\n         * `setStyle()` without arguments to reset to the default style. See\n         * {@link module:ol/style/Style~Style} for information on the default style.\n         * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n         * @api\n         */\n        BaseVectorLayer.prototype.setStyle = function (opt_style) {\n            this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n            this.styleFunction_ =\n                opt_style === null ? undefined : toFunction(this.style_);\n            this.changed();\n        };\n        return BaseVectorLayer;\n    }(Layer$1));\n    var BaseVectorLayer$1 = BaseVectorLayer;\n\n    /**\n     * @module ol/render/canvas/Instruction\n     */\n    /**\n     * @enum {number}\n     */\n    var Instruction = {\n        BEGIN_GEOMETRY: 0,\n        BEGIN_PATH: 1,\n        CIRCLE: 2,\n        CLOSE_PATH: 3,\n        CUSTOM: 4,\n        DRAW_CHARS: 5,\n        DRAW_IMAGE: 6,\n        END_GEOMETRY: 7,\n        FILL: 8,\n        MOVE_TO_LINE_TO: 9,\n        SET_FILL_STYLE: 10,\n        SET_STROKE_STYLE: 11,\n        STROKE: 12,\n    };\n    /**\n     * @type {Array<Instruction>}\n     */\n    var fillInstruction = [Instruction.FILL];\n    /**\n     * @type {Array<Instruction>}\n     */\n    var strokeInstruction = [Instruction.STROKE];\n    /**\n     * @type {Array<Instruction>}\n     */\n    var beginPathInstruction = [Instruction.BEGIN_PATH];\n    /**\n     * @type {Array<Instruction>}\n     */\n    var closePathInstruction = [Instruction.CLOSE_PATH];\n    var CanvasInstruction = Instruction;\n\n    /**\n     * @module ol/extent/Relationship\n     */\n    /**\n     * Relationship to an extent.\n     * @enum {number}\n     */\n    var Relationship = {\n        UNKNOWN: 0,\n        INTERSECTING: 1,\n        ABOVE: 2,\n        RIGHT: 4,\n        BELOW: 8,\n        LEFT: 16,\n    };\n\n    /**\n     * @module ol/render/VectorContext\n     */\n    /**\n     * @classdesc\n     * Context for drawing geometries.  A vector context is available on render\n     * events and does not need to be constructed directly.\n     * @api\n     */\n    var VectorContext = /** @class */ (function () {\n        function VectorContext() {\n        }\n        /**\n         * Render a geometry with a custom renderer.\n         *\n         * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {Function} renderer Renderer.\n         * @param {Function} hitDetectionRenderer Renderer.\n         */\n        VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) { };\n        /**\n         * Render a geometry.\n         *\n         * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n         */\n        VectorContext.prototype.drawGeometry = function (geometry) { };\n        /**\n         * Set the rendering style.\n         *\n         * @param {import(\"../style/Style.js\").default} style The rendering style.\n         */\n        VectorContext.prototype.setStyle = function (style) { };\n        /**\n         * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @param {import(\"../style/Style.js\").default} style Style.\n         */\n        VectorContext.prototype.drawFeature = function (feature, style) { };\n        /**\n         * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n        /**\n         * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         */\n        VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n        /**\n         * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         */\n        VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n        /**\n         * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         */\n        VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n        /**\n         * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         */\n        VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n        /**\n         * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         */\n        VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n        /**\n         * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         */\n        VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n        /**\n         * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         */\n        VectorContext.prototype.drawText = function (geometry, feature) { };\n        /**\n         * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n         * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n         */\n        VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n        /**\n         * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n         * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n         */\n        VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n        /**\n         * @param {import(\"../style/Text.js\").default} textStyle Text style.\n         * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n         */\n        VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n        return VectorContext;\n    }());\n    var VectorContext$1 = VectorContext;\n\n    /**\n     * @module ol/extent\n     */\n    /**\n     * Return extent increased by the provided value.\n     * @param {Extent} extent Extent.\n     * @param {number} value The amount by which the extent should be buffered.\n     * @param {Extent} [opt_extent] Extent.\n     * @return {Extent} Extent.\n     * @api\n     */\n    function buffer(extent, value, opt_extent) {\n        if (opt_extent) {\n            opt_extent[0] = extent[0] - value;\n            opt_extent[1] = extent[1] - value;\n            opt_extent[2] = extent[2] + value;\n            opt_extent[3] = extent[3] + value;\n            return opt_extent;\n        }\n        else {\n            return [\n                extent[0] - value,\n                extent[1] - value,\n                extent[2] + value,\n                extent[3] + value,\n            ];\n        }\n    }\n    /**\n     * Creates a clone of an extent.\n     *\n     * @param {Extent} extent Extent to clone.\n     * @param {Extent} [opt_extent] Extent.\n     * @return {Extent} The clone.\n     */\n    function clone(extent, opt_extent) {\n        if (opt_extent) {\n            opt_extent[0] = extent[0];\n            opt_extent[1] = extent[1];\n            opt_extent[2] = extent[2];\n            opt_extent[3] = extent[3];\n            return opt_extent;\n        }\n        else {\n            return extent.slice();\n        }\n    }\n    /**\n     * @param {Extent} extent Extent.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {number} Closest squared distance.\n     */\n    function closestSquaredDistanceXY(extent, x, y) {\n        var dx, dy;\n        if (x < extent[0]) {\n            dx = extent[0] - x;\n        }\n        else if (extent[2] < x) {\n            dx = x - extent[2];\n        }\n        else {\n            dx = 0;\n        }\n        if (y < extent[1]) {\n            dy = extent[1] - y;\n        }\n        else if (extent[3] < y) {\n            dy = y - extent[3];\n        }\n        else {\n            dy = 0;\n        }\n        return dx * dx + dy * dy;\n    }\n    /**\n     * Check if the passed coordinate is contained or on the edge of the extent.\n     *\n     * @param {Extent} extent Extent.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} The coordinate is contained in the extent.\n     * @api\n     */\n    function containsCoordinate(extent, coordinate) {\n        return containsXY(extent, coordinate[0], coordinate[1]);\n    }\n    /**\n     * Check if one extent contains another.\n     *\n     * An extent is deemed contained if it lies completely within the other extent,\n     * including if they share one or more edges.\n     *\n     * @param {Extent} extent1 Extent 1.\n     * @param {Extent} extent2 Extent 2.\n     * @return {boolean} The second extent is contained by or on the edge of the\n     *     first.\n     * @api\n     */\n    function containsExtent(extent1, extent2) {\n        return (extent1[0] <= extent2[0] &&\n            extent2[2] <= extent1[2] &&\n            extent1[1] <= extent2[1] &&\n            extent2[3] <= extent1[3]);\n    }\n    /**\n     * Check if the passed coordinate is contained or on the edge of the extent.\n     *\n     * @param {Extent} extent Extent.\n     * @param {number} x X coordinate.\n     * @param {number} y Y coordinate.\n     * @return {boolean} The x, y values are contained in the extent.\n     * @api\n     */\n    function containsXY(extent, x, y) {\n        return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n    }\n    /**\n     * Get the relationship between a coordinate and extent.\n     * @param {Extent} extent The extent.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n     * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n     *     import(\"./extent/Relationship.js\").Relationship).\n     */\n    function coordinateRelationship(extent, coordinate) {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var relationship = Relationship.UNKNOWN;\n        if (x < minX) {\n            relationship = relationship | Relationship.LEFT;\n        }\n        else if (x > maxX) {\n            relationship = relationship | Relationship.RIGHT;\n        }\n        if (y < minY) {\n            relationship = relationship | Relationship.BELOW;\n        }\n        else if (y > maxY) {\n            relationship = relationship | Relationship.ABOVE;\n        }\n        if (relationship === Relationship.UNKNOWN) {\n            relationship = Relationship.INTERSECTING;\n        }\n        return relationship;\n    }\n    /**\n     * Create an empty extent.\n     * @return {Extent} Empty extent.\n     * @api\n     */\n    function createEmpty() {\n        return [Infinity, Infinity, -Infinity, -Infinity];\n    }\n    /**\n     * Create a new extent or update the provided extent.\n     * @param {number} minX Minimum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxX Maximum X.\n     * @param {number} maxY Maximum Y.\n     * @param {Extent} [opt_extent] Destination extent.\n     * @return {Extent} Extent.\n     */\n    function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n        if (opt_extent) {\n            opt_extent[0] = minX;\n            opt_extent[1] = minY;\n            opt_extent[2] = maxX;\n            opt_extent[3] = maxY;\n            return opt_extent;\n        }\n        else {\n            return [minX, minY, maxX, maxY];\n        }\n    }\n    /**\n     * Create a new empty extent or make the provided one empty.\n     * @param {Extent} [opt_extent] Extent.\n     * @return {Extent} Extent.\n     */\n    function createOrUpdateEmpty(opt_extent) {\n        return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n    }\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {Extent} [opt_extent] Extent.\n     * @return {Extent} Extent.\n     */\n    function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n        var x = coordinate[0];\n        var y = coordinate[1];\n        return createOrUpdate(x, y, x, y, opt_extent);\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {Extent} [opt_extent] Extent.\n     * @return {Extent} Extent.\n     */\n    function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n        var extent = createOrUpdateEmpty(opt_extent);\n        return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n    }\n    /**\n     * Determine if two extents are equivalent.\n     * @param {Extent} extent1 Extent 1.\n     * @param {Extent} extent2 Extent 2.\n     * @return {boolean} The two extents are equivalent.\n     * @api\n     */\n    function equals(extent1, extent2) {\n        return (extent1[0] == extent2[0] &&\n            extent1[2] == extent2[2] &&\n            extent1[1] == extent2[1] &&\n            extent1[3] == extent2[3]);\n    }\n    /**\n     * @param {Extent} extent Extent.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     */\n    function extendCoordinate(extent, coordinate) {\n        if (coordinate[0] < extent[0]) {\n            extent[0] = coordinate[0];\n        }\n        if (coordinate[0] > extent[2]) {\n            extent[2] = coordinate[0];\n        }\n        if (coordinate[1] < extent[1]) {\n            extent[1] = coordinate[1];\n        }\n        if (coordinate[1] > extent[3]) {\n            extent[3] = coordinate[1];\n        }\n    }\n    /**\n     * @param {Extent} extent Extent.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @return {Extent} Extent.\n     */\n    function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n        for (; offset < end; offset += stride) {\n            extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        }\n        return extent;\n    }\n    /**\n     * @param {Extent} extent Extent.\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    function extendXY(extent, x, y) {\n        extent[0] = Math.min(extent[0], x);\n        extent[1] = Math.min(extent[1], y);\n        extent[2] = Math.max(extent[2], x);\n        extent[3] = Math.max(extent[3], y);\n    }\n    /**\n     * Get the bottom left coordinate of an extent.\n     * @param {Extent} extent Extent.\n     * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n     * @api\n     */\n    function getBottomLeft(extent) {\n        return [extent[0], extent[1]];\n    }\n    /**\n     * Get the bottom right coordinate of an extent.\n     * @param {Extent} extent Extent.\n     * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n     * @api\n     */\n    function getBottomRight(extent) {\n        return [extent[2], extent[1]];\n    }\n    /**\n     * Get the center coordinate of an extent.\n     * @param {Extent} extent Extent.\n     * @return {import(\"./coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    function getCenter(extent) {\n        return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n    }\n    /**\n     * Get the height of an extent.\n     * @param {Extent} extent Extent.\n     * @return {number} Height.\n     * @api\n     */\n    function getHeight(extent) {\n        return extent[3] - extent[1];\n    }\n    /**\n     * Get the top left coordinate of an extent.\n     * @param {Extent} extent Extent.\n     * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n     * @api\n     */\n    function getTopLeft(extent) {\n        return [extent[0], extent[3]];\n    }\n    /**\n     * Get the top right coordinate of an extent.\n     * @param {Extent} extent Extent.\n     * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n     * @api\n     */\n    function getTopRight(extent) {\n        return [extent[2], extent[3]];\n    }\n    /**\n     * Get the width of an extent.\n     * @param {Extent} extent Extent.\n     * @return {number} Width.\n     * @api\n     */\n    function getWidth(extent) {\n        return extent[2] - extent[0];\n    }\n    /**\n     * Determine if one extent intersects another.\n     * @param {Extent} extent1 Extent 1.\n     * @param {Extent} extent2 Extent.\n     * @return {boolean} The two extents intersect.\n     * @api\n     */\n    function intersects(extent1, extent2) {\n        return (extent1[0] <= extent2[2] &&\n            extent1[2] >= extent2[0] &&\n            extent1[1] <= extent2[3] &&\n            extent1[3] >= extent2[1]);\n    }\n    /**\n     * @param {Extent} extent Extent.\n     * @param {Extent} [opt_extent] Extent.\n     * @return {Extent} Extent.\n     */\n    function returnOrUpdate(extent, opt_extent) {\n        if (opt_extent) {\n            opt_extent[0] = extent[0];\n            opt_extent[1] = extent[1];\n            opt_extent[2] = extent[2];\n            opt_extent[3] = extent[3];\n            return opt_extent;\n        }\n        else {\n            return extent;\n        }\n    }\n    /**\n     * Modifies the provided extent in-place to be within the real world\n     * extent.\n     *\n     * @param {Extent} extent Extent.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection\n     * @return {Extent} The extent within the real world extent.\n     */\n    function wrapX$1(extent, projection) {\n        var projectionExtent = projection.getExtent();\n        var center = getCenter(extent);\n        if (projection.canWrapX() &&\n            (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n            var worldWidth = getWidth(projectionExtent);\n            var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n            var offset = worldsAway * worldWidth;\n            extent[0] -= offset;\n            extent[2] -= offset;\n        }\n        return extent;\n    }\n\n    /**\n     * @module ol/geom/flat/inflate\n     */\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n     * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n     */\n    function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n        var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n        var i = 0;\n        for (var j = offset; j < end; j += stride) {\n            coordinates[i++] = flatCoordinates.slice(j, j + stride);\n        }\n        coordinates.length = i;\n        return coordinates;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n     * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n     */\n    function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n        var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n        var i = 0;\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n            var end = ends[j];\n            coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n            offset = end;\n        }\n        coordinatess.length = i;\n        return coordinatess;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<Array<number>>} endss Endss.\n     * @param {number} stride Stride.\n     * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n     *     Coordinatesss.\n     * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n     */\n    function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n        var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n        var i = 0;\n        for (var j = 0, jj = endss.length; j < jj; ++j) {\n            var ends = endss[j];\n            coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n            offset = ends[ends.length - 1];\n        }\n        coordinatesss.length = i;\n        return coordinatesss;\n    }\n\n    var __extends$o = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var CanvasBuilder = /** @class */ (function (_super) {\n        __extends$o(CanvasBuilder, _super);\n        /**\n         * @param {number} tolerance Tolerance.\n         * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n         * @param {number} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         */\n        function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n            var _this = _super.call(this) || this;\n            /**\n             * @protected\n             * @type {number}\n             */\n            _this.tolerance = tolerance;\n            /**\n             * @protected\n             * @const\n             * @type {import(\"../../extent.js\").Extent}\n             */\n            _this.maxExtent = maxExtent;\n            /**\n             * @protected\n             * @type {number}\n             */\n            _this.pixelRatio = pixelRatio;\n            /**\n             * @protected\n             * @type {number}\n             */\n            _this.maxLineWidth = 0;\n            /**\n             * @protected\n             * @const\n             * @type {number}\n             */\n            _this.resolution = resolution;\n            /**\n             * @private\n             * @type {Array<*>}\n             */\n            _this.beginGeometryInstruction1_ = null;\n            /**\n             * @private\n             * @type {Array<*>}\n             */\n            _this.beginGeometryInstruction2_ = null;\n            /**\n             * @private\n             * @type {import(\"../../extent.js\").Extent}\n             */\n            _this.bufferedMaxExtent_ = null;\n            /**\n             * @protected\n             * @type {Array<*>}\n             */\n            _this.instructions = [];\n            /**\n             * @protected\n             * @type {Array<number>}\n             */\n            _this.coordinates = [];\n            /**\n             * @private\n             * @type {import(\"../../coordinate.js\").Coordinate}\n             */\n            _this.tmpCoordinate_ = [];\n            /**\n             * @protected\n             * @type {Array<*>}\n             */\n            _this.hitDetectionInstructions = [];\n            /**\n             * @protected\n             * @type {import(\"../canvas.js\").FillStrokeState}\n             */\n            _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n            return _this;\n        }\n        /**\n         * @protected\n         * @param {Array<number>} dashArray Dash array.\n         * @return {Array<number>} Dash array with pixel ratio applied\n         */\n        CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n            var pixelRatio = this.pixelRatio;\n            return pixelRatio == 1\n                ? dashArray\n                : dashArray.map(function (dash) {\n                    return dash * pixelRatio;\n                });\n        };\n        /**\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         * @param {number} stride Stride.\n         * @protected\n         * @return {number} My end\n         */\n        CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n            var extent = this.getBufferedMaxExtent();\n            var tmpCoord = this.tmpCoordinate_;\n            var coordinates = this.coordinates;\n            var myEnd = coordinates.length;\n            for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n                tmpCoord[0] = flatCoordinates[i];\n                tmpCoord[1] = flatCoordinates[i + 1];\n                if (containsCoordinate(extent, tmpCoord)) {\n                    coordinates[myEnd++] = tmpCoord[0];\n                    coordinates[myEnd++] = tmpCoord[1];\n                }\n            }\n            return myEnd;\n        };\n        /**\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         * @param {number} offset Offset.\n         * @param {number} end End.\n         * @param {number} stride Stride.\n         * @param {boolean} closed Last input coordinate equals first.\n         * @param {boolean} skipFirst Skip first coordinate.\n         * @protected\n         * @return {number} My end.\n         */\n        CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n            var coordinates = this.coordinates;\n            var myEnd = coordinates.length;\n            var extent = this.getBufferedMaxExtent();\n            if (skipFirst) {\n                offset += stride;\n            }\n            var lastXCoord = flatCoordinates[offset];\n            var lastYCoord = flatCoordinates[offset + 1];\n            var nextCoord = this.tmpCoordinate_;\n            var skipped = true;\n            var i, lastRel, nextRel;\n            for (i = offset + stride; i < end; i += stride) {\n                nextCoord[0] = flatCoordinates[i];\n                nextCoord[1] = flatCoordinates[i + 1];\n                nextRel = coordinateRelationship(extent, nextCoord);\n                if (nextRel !== lastRel) {\n                    if (skipped) {\n                        coordinates[myEnd++] = lastXCoord;\n                        coordinates[myEnd++] = lastYCoord;\n                        skipped = false;\n                    }\n                    coordinates[myEnd++] = nextCoord[0];\n                    coordinates[myEnd++] = nextCoord[1];\n                }\n                else if (nextRel === Relationship.INTERSECTING) {\n                    coordinates[myEnd++] = nextCoord[0];\n                    coordinates[myEnd++] = nextCoord[1];\n                    skipped = false;\n                }\n                else {\n                    skipped = true;\n                }\n                lastXCoord = nextCoord[0];\n                lastYCoord = nextCoord[1];\n                lastRel = nextRel;\n            }\n            // Last coordinate equals first or only one point to append:\n            if ((closed && skipped) || i === offset + stride) {\n                coordinates[myEnd++] = lastXCoord;\n                coordinates[myEnd++] = lastYCoord;\n            }\n            return myEnd;\n        };\n        /**\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         * @param {number} offset Offset.\n         * @param {Array<number>} ends Ends.\n         * @param {number} stride Stride.\n         * @param {Array<number>} builderEnds Builder ends.\n         * @return {number} Offset.\n         */\n        CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                var end = ends[i];\n                var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n                builderEnds.push(builderEnd);\n                offset = end;\n            }\n            return offset;\n        };\n        /**\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {Function} renderer Renderer.\n         * @param {Function} hitDetectionRenderer Renderer.\n         */\n        CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {\n            this.beginGeometry(geometry, feature);\n            var type = geometry.getType();\n            var stride = geometry.getStride();\n            var builderBegin = this.coordinates.length;\n            var flatCoordinates, builderEnd, builderEnds, builderEndss;\n            var offset;\n            switch (type) {\n                case GeometryType.MULTI_POLYGON:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n                    builderEndss = [];\n                    var endss = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                    offset = 0;\n                    for (var i = 0, ii = endss.length; i < ii; ++i) {\n                        var myEnds = [];\n                        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                        builderEndss.push(myEnds);\n                    }\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEndss,\n                        geometry,\n                        renderer,\n                        inflateMultiCoordinatesArray,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEndss,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateMultiCoordinatesArray,\n                    ]);\n                    break;\n                case GeometryType.POLYGON:\n                case GeometryType.MULTI_LINE_STRING:\n                    builderEnds = [];\n                    flatCoordinates =\n                        type == GeometryType.POLYGON\n                            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                            : geometry.getFlatCoordinates();\n                    offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n                    /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnds,\n                        geometry,\n                        renderer,\n                        inflateCoordinatesArray,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnds,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateCoordinatesArray,\n                    ]);\n                    break;\n                case GeometryType.LINE_STRING:\n                case GeometryType.CIRCLE:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        renderer,\n                        inflateCoordinates,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateCoordinates,\n                    ]);\n                    break;\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n                    if (builderEnd > builderBegin) {\n                        this.instructions.push([\n                            CanvasInstruction.CUSTOM,\n                            builderBegin,\n                            builderEnd,\n                            geometry,\n                            renderer,\n                            inflateCoordinates,\n                        ]);\n                        this.hitDetectionInstructions.push([\n                            CanvasInstruction.CUSTOM,\n                            builderBegin,\n                            builderEnd,\n                            geometry,\n                            hitDetectionRenderer || renderer,\n                            inflateCoordinates,\n                        ]);\n                    }\n                    break;\n                case GeometryType.POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n                    builderEnd = this.coordinates.length;\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        renderer,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                    ]);\n                    break;\n            }\n            this.endGeometry(feature);\n        };\n        /**\n         * @protected\n         * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         */\n        CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n            this.beginGeometryInstruction1_ = [\n                CanvasInstruction.BEGIN_GEOMETRY,\n                feature,\n                0,\n                geometry,\n            ];\n            this.instructions.push(this.beginGeometryInstruction1_);\n            this.beginGeometryInstruction2_ = [\n                CanvasInstruction.BEGIN_GEOMETRY,\n                feature,\n                0,\n                geometry,\n            ];\n            this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n        };\n        /**\n         * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n         */\n        CanvasBuilder.prototype.finish = function () {\n            return {\n                instructions: this.instructions,\n                hitDetectionInstructions: this.hitDetectionInstructions,\n                coordinates: this.coordinates,\n            };\n        };\n        /**\n         * Reverse the hit detection instructions.\n         */\n        CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n            var hitDetectionInstructions = this.hitDetectionInstructions;\n            // step 1 - reverse array\n            hitDetectionInstructions.reverse();\n            // step 2 - reverse instructions within geometry blocks\n            var i;\n            var n = hitDetectionInstructions.length;\n            var instruction;\n            var type;\n            var begin = -1;\n            for (i = 0; i < n; ++i) {\n                instruction = hitDetectionInstructions[i];\n                type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n                if (type == CanvasInstruction.END_GEOMETRY) {\n                    begin = i;\n                }\n                else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                    instruction[2] = i;\n                    reverseSubArray(this.hitDetectionInstructions, begin, i);\n                    begin = -1;\n                }\n            }\n        };\n        /**\n         * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n         * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n         */\n        CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n            var state = this.state;\n            if (fillStyle) {\n                var fillStyleColor = fillStyle.getColor();\n                state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n            }\n            else {\n                state.fillStyle = undefined;\n            }\n            if (strokeStyle) {\n                var strokeStyleColor = strokeStyle.getColor();\n                state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n                var strokeStyleLineCap = strokeStyle.getLineCap();\n                state.lineCap =\n                    strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n                var strokeStyleLineDash = strokeStyle.getLineDash();\n                state.lineDash = strokeStyleLineDash\n                    ? strokeStyleLineDash.slice()\n                    : defaultLineDash;\n                var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n                state.lineDashOffset = strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset;\n                var strokeStyleLineJoin = strokeStyle.getLineJoin();\n                state.lineJoin =\n                    strokeStyleLineJoin !== undefined\n                        ? strokeStyleLineJoin\n                        : defaultLineJoin;\n                var strokeStyleWidth = strokeStyle.getWidth();\n                state.lineWidth =\n                    strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n                var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n                state.miterLimit =\n                    strokeStyleMiterLimit !== undefined\n                        ? strokeStyleMiterLimit\n                        : defaultMiterLimit;\n                if (state.lineWidth > this.maxLineWidth) {\n                    this.maxLineWidth = state.lineWidth;\n                    // invalidate the buffered max extent cache\n                    this.bufferedMaxExtent_ = null;\n                }\n            }\n            else {\n                state.strokeStyle = undefined;\n                state.lineCap = undefined;\n                state.lineDash = null;\n                state.lineDashOffset = undefined;\n                state.lineJoin = undefined;\n                state.lineWidth = undefined;\n                state.miterLimit = undefined;\n            }\n        };\n        /**\n         * @param {import(\"../canvas.js\").FillStrokeState} state State.\n         * @return {Array<*>} Fill instruction.\n         */\n        CanvasBuilder.prototype.createFill = function (state) {\n            var fillStyle = state.fillStyle;\n            /** @type {Array<*>} */\n            var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n            if (typeof fillStyle !== 'string') {\n                // Fill is a pattern or gradient - align it!\n                fillInstruction.push(true);\n            }\n            return fillInstruction;\n        };\n        /**\n         * @param {import(\"../canvas.js\").FillStrokeState} state State.\n         */\n        CanvasBuilder.prototype.applyStroke = function (state) {\n            this.instructions.push(this.createStroke(state));\n        };\n        /**\n         * @param {import(\"../canvas.js\").FillStrokeState} state State.\n         * @return {Array<*>} Stroke instruction.\n         */\n        CanvasBuilder.prototype.createStroke = function (state) {\n            return [\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth * this.pixelRatio,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                this.applyPixelRatio(state.lineDash),\n                state.lineDashOffset * this.pixelRatio,\n            ];\n        };\n        /**\n         * @param {import(\"../canvas.js\").FillStrokeState} state State.\n         * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n         */\n        CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n            var fillStyle = state.fillStyle;\n            if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n                if (fillStyle !== undefined) {\n                    this.instructions.push(createFill.call(this, state));\n                }\n                state.currentFillStyle = fillStyle;\n            }\n        };\n        /**\n         * @param {import(\"../canvas.js\").FillStrokeState} state State.\n         * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n         */\n        CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n            var strokeStyle = state.strokeStyle;\n            var lineCap = state.lineCap;\n            var lineDash = state.lineDash;\n            var lineDashOffset = state.lineDashOffset;\n            var lineJoin = state.lineJoin;\n            var lineWidth = state.lineWidth;\n            var miterLimit = state.miterLimit;\n            if (state.currentStrokeStyle != strokeStyle ||\n                state.currentLineCap != lineCap ||\n                (lineDash != state.currentLineDash &&\n                    !equals$1(state.currentLineDash, lineDash)) ||\n                state.currentLineDashOffset != lineDashOffset ||\n                state.currentLineJoin != lineJoin ||\n                state.currentLineWidth != lineWidth ||\n                state.currentMiterLimit != miterLimit) {\n                if (strokeStyle !== undefined) {\n                    applyStroke.call(this, state);\n                }\n                state.currentStrokeStyle = strokeStyle;\n                state.currentLineCap = lineCap;\n                state.currentLineDash = lineDash;\n                state.currentLineDashOffset = lineDashOffset;\n                state.currentLineJoin = lineJoin;\n                state.currentLineWidth = lineWidth;\n                state.currentMiterLimit = miterLimit;\n            }\n        };\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         */\n        CanvasBuilder.prototype.endGeometry = function (feature) {\n            this.beginGeometryInstruction1_[2] = this.instructions.length;\n            this.beginGeometryInstruction1_ = null;\n            this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n            this.beginGeometryInstruction2_ = null;\n            var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n            this.instructions.push(endGeometryInstruction);\n            this.hitDetectionInstructions.push(endGeometryInstruction);\n        };\n        /**\n         * Get the buffered rendering extent.  Rendering will be clipped to the extent\n         * provided to the constructor.  To account for symbolizers that may intersect\n         * this extent, we calculate a buffered extent (e.g. based on stroke width).\n         * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n         * @protected\n         */\n        CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n            if (!this.bufferedMaxExtent_) {\n                this.bufferedMaxExtent_ = clone(this.maxExtent);\n                if (this.maxLineWidth > 0) {\n                    var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                    buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n                }\n            }\n            return this.bufferedMaxExtent_;\n        };\n        return CanvasBuilder;\n    }(VectorContext$1));\n    var Builder = CanvasBuilder;\n\n    var __extends$n = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var CanvasImageBuilder = /** @class */ (function (_super) {\n        __extends$n(CanvasImageBuilder, _super);\n        /**\n         * @param {number} tolerance Tolerance.\n         * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n         * @param {number} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         */\n        function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n            var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n            /**\n             * @private\n             * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n             */\n            _this.hitDetectionImage_ = null;\n            /**\n             * @private\n             * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n             */\n            _this.image_ = null;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.imagePixelRatio_ = undefined;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.anchorX_ = undefined;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.anchorY_ = undefined;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.height_ = undefined;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.opacity_ = undefined;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.originX_ = undefined;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.originY_ = undefined;\n            /**\n             * @private\n             * @type {boolean|undefined}\n             */\n            _this.rotateWithView_ = undefined;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.rotation_ = undefined;\n            /**\n             * @private\n             * @type {import(\"../../size.js\").Size|undefined}\n             */\n            _this.scale_ = undefined;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            _this.width_ = undefined;\n            /**\n             * Data shared with a text builder for combined decluttering.\n             * @private\n             * @type {import(\"../canvas.js\").DeclutterImageWithText}\n             */\n            _this.declutterImageWithText_ = undefined;\n            return _this;\n        }\n        /**\n         * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         */\n        CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n            if (!this.image_) {\n                return;\n            }\n            this.beginGeometry(pointGeometry, feature);\n            var flatCoordinates = pointGeometry.getFlatCoordinates();\n            var stride = pointGeometry.getStride();\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                myBegin,\n                myEnd,\n                this.image_,\n                // Remaining arguments to DRAW_IMAGE are in alphabetical order\n                this.anchorX_ * this.imagePixelRatio_,\n                this.anchorY_ * this.imagePixelRatio_,\n                Math.ceil(this.height_ * this.imagePixelRatio_),\n                this.opacity_,\n                this.originX_,\n                this.originY_,\n                this.rotateWithView_,\n                this.rotation_,\n                [\n                    (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                    (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n                ],\n                Math.ceil(this.width_ * this.imagePixelRatio_),\n                this.declutterImageWithText_,\n            ]);\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                myBegin,\n                myEnd,\n                this.hitDetectionImage_,\n                // Remaining arguments to DRAW_IMAGE are in alphabetical order\n                this.anchorX_,\n                this.anchorY_,\n                this.height_,\n                this.opacity_,\n                this.originX_,\n                this.originY_,\n                this.rotateWithView_,\n                this.rotation_,\n                this.scale_,\n                this.width_,\n                this.declutterImageWithText_,\n            ]);\n            this.endGeometry(feature);\n        };\n        /**\n         * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         */\n        CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n            if (!this.image_) {\n                return;\n            }\n            this.beginGeometry(multiPointGeometry, feature);\n            var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n            var stride = multiPointGeometry.getStride();\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                myBegin,\n                myEnd,\n                this.image_,\n                // Remaining arguments to DRAW_IMAGE are in alphabetical order\n                this.anchorX_ * this.imagePixelRatio_,\n                this.anchorY_ * this.imagePixelRatio_,\n                Math.ceil(this.height_ * this.imagePixelRatio_),\n                this.opacity_,\n                this.originX_,\n                this.originY_,\n                this.rotateWithView_,\n                this.rotation_,\n                [\n                    (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                    (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n                ],\n                Math.ceil(this.width_ * this.imagePixelRatio_),\n                this.declutterImageWithText_,\n            ]);\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                myBegin,\n                myEnd,\n                this.hitDetectionImage_,\n                // Remaining arguments to DRAW_IMAGE are in alphabetical order\n                this.anchorX_,\n                this.anchorY_,\n                this.height_,\n                this.opacity_,\n                this.originX_,\n                this.originY_,\n                this.rotateWithView_,\n                this.rotation_,\n                this.scale_,\n                this.width_,\n                this.declutterImageWithText_,\n            ]);\n            this.endGeometry(feature);\n        };\n        /**\n         * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n         */\n        CanvasImageBuilder.prototype.finish = function () {\n            this.reverseHitDetectionInstructions();\n            // FIXME this doesn't really protect us against further calls to draw*Geometry\n            this.anchorX_ = undefined;\n            this.anchorY_ = undefined;\n            this.hitDetectionImage_ = null;\n            this.image_ = null;\n            this.imagePixelRatio_ = undefined;\n            this.height_ = undefined;\n            this.scale_ = undefined;\n            this.opacity_ = undefined;\n            this.originX_ = undefined;\n            this.originY_ = undefined;\n            this.rotateWithView_ = undefined;\n            this.rotation_ = undefined;\n            this.width_ = undefined;\n            return _super.prototype.finish.call(this);\n        };\n        /**\n         * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n         * @param {Object} [opt_sharedData] Shared data.\n         */\n        CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n            var anchor = imageStyle.getAnchor();\n            var size = imageStyle.getSize();\n            var hitDetectionImage = imageStyle.getHitDetectionImage();\n            var image = imageStyle.getImage(this.pixelRatio);\n            var origin = imageStyle.getOrigin();\n            this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n            this.anchorX_ = anchor[0];\n            this.anchorY_ = anchor[1];\n            this.hitDetectionImage_ = hitDetectionImage;\n            this.image_ = image;\n            this.height_ = size[1];\n            this.opacity_ = imageStyle.getOpacity();\n            this.originX_ = origin[0] * this.imagePixelRatio_;\n            this.originY_ = origin[1] * this.imagePixelRatio_;\n            this.rotateWithView_ = imageStyle.getRotateWithView();\n            this.rotation_ = imageStyle.getRotation();\n            this.scale_ = imageStyle.getScaleArray();\n            this.width_ = size[0];\n            this.declutterImageWithText_ = opt_sharedData;\n        };\n        return CanvasImageBuilder;\n    }(Builder));\n    var ImageBuilder = CanvasImageBuilder;\n\n    var __extends$m = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var CanvasLineStringBuilder = /** @class */ (function (_super) {\n        __extends$m(CanvasLineStringBuilder, _super);\n        /**\n         * @param {number} tolerance Tolerance.\n         * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n         * @param {number} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         */\n        function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n            return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        }\n        /**\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         * @param {number} offset Offset.\n         * @param {number} end End.\n         * @param {number} stride Stride.\n         * @private\n         * @return {number} end.\n         */\n        CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            return end;\n        };\n        /**\n         * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         */\n        CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n            var state = this.state;\n            var strokeStyle = state.strokeStyle;\n            var lineWidth = state.lineWidth;\n            if (strokeStyle === undefined || lineWidth === undefined) {\n                return;\n            }\n            this.updateStrokeStyle(state, this.applyStroke);\n            this.beginGeometry(lineStringGeometry, feature);\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                defaultLineDash,\n                defaultLineDashOffset,\n            ], beginPathInstruction);\n            var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n            var stride = lineStringGeometry.getStride();\n            this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n            this.hitDetectionInstructions.push(strokeInstruction);\n            this.endGeometry(feature);\n        };\n        /**\n         * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         */\n        CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n            var state = this.state;\n            var strokeStyle = state.strokeStyle;\n            var lineWidth = state.lineWidth;\n            if (strokeStyle === undefined || lineWidth === undefined) {\n                return;\n            }\n            this.updateStrokeStyle(state, this.applyStroke);\n            this.beginGeometry(multiLineStringGeometry, feature);\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ], beginPathInstruction);\n            var ends = multiLineStringGeometry.getEnds();\n            var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n            var stride = multiLineStringGeometry.getStride();\n            var offset = 0;\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n                /** @type {number} */ (ends[i]), stride);\n            }\n            this.hitDetectionInstructions.push(strokeInstruction);\n            this.endGeometry(feature);\n        };\n        /**\n         * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n         */\n        CanvasLineStringBuilder.prototype.finish = function () {\n            var state = this.state;\n            if (state.lastStroke != undefined &&\n                state.lastStroke != this.coordinates.length) {\n                this.instructions.push(strokeInstruction);\n            }\n            this.reverseHitDetectionInstructions();\n            this.state = null;\n            return _super.prototype.finish.call(this);\n        };\n        /**\n         * @param {import(\"../canvas.js\").FillStrokeState} state State.\n         */\n        CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n            if (state.lastStroke != undefined &&\n                state.lastStroke != this.coordinates.length) {\n                this.instructions.push(strokeInstruction);\n                state.lastStroke = this.coordinates.length;\n            }\n            state.lastStroke = 0;\n            _super.prototype.applyStroke.call(this, state);\n            this.instructions.push(beginPathInstruction);\n        };\n        return CanvasLineStringBuilder;\n    }(Builder));\n    var LineStringBuilder = CanvasLineStringBuilder;\n\n    /**\n     * @module ol/geom/flat/simplify\n     */\n    /**\n     * @param {number} value Value.\n     * @param {number} tolerance Tolerance.\n     * @return {number} Rounded value.\n     */\n    function snap(value, tolerance) {\n        return tolerance * Math.round(value / tolerance);\n    }\n\n    var __extends$l = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var CanvasPolygonBuilder = /** @class */ (function (_super) {\n        __extends$l(CanvasPolygonBuilder, _super);\n        /**\n         * @param {number} tolerance Tolerance.\n         * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n         * @param {number} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         */\n        function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n            return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        }\n        /**\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         * @param {number} offset Offset.\n         * @param {Array<number>} ends Ends.\n         * @param {number} stride Stride.\n         * @private\n         * @return {number} End.\n         */\n        CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n            var state = this.state;\n            var fill = state.fillStyle !== undefined;\n            var stroke = state.strokeStyle !== undefined;\n            var numEnds = ends.length;\n            this.instructions.push(beginPathInstruction);\n            this.hitDetectionInstructions.push(beginPathInstruction);\n            for (var i = 0; i < numEnds; ++i) {\n                var end = ends[i];\n                var myBegin = this.coordinates.length;\n                var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n                var moveToLineToInstruction = [\n                    CanvasInstruction.MOVE_TO_LINE_TO,\n                    myBegin,\n                    myEnd,\n                ];\n                this.instructions.push(moveToLineToInstruction);\n                this.hitDetectionInstructions.push(moveToLineToInstruction);\n                if (stroke) {\n                    // Performance optimization: only call closePath() when we have a stroke.\n                    // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                    this.instructions.push(closePathInstruction);\n                    this.hitDetectionInstructions.push(closePathInstruction);\n                }\n                offset = end;\n            }\n            if (fill) {\n                this.instructions.push(fillInstruction);\n                this.hitDetectionInstructions.push(fillInstruction);\n            }\n            if (stroke) {\n                this.instructions.push(strokeInstruction);\n                this.hitDetectionInstructions.push(strokeInstruction);\n            }\n            return offset;\n        };\n        /**\n         * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n            var state = this.state;\n            var fillStyle = state.fillStyle;\n            var strokeStyle = state.strokeStyle;\n            if (fillStyle === undefined && strokeStyle === undefined) {\n                return;\n            }\n            this.setFillStrokeStyles_();\n            this.beginGeometry(circleGeometry, feature);\n            if (state.fillStyle !== undefined) {\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.SET_FILL_STYLE,\n                    defaultFillStyle,\n                ]);\n            }\n            if (state.strokeStyle !== undefined) {\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.SET_STROKE_STYLE,\n                    state.strokeStyle,\n                    state.lineWidth,\n                    state.lineCap,\n                    state.lineJoin,\n                    state.miterLimit,\n                    state.lineDash,\n                    state.lineDashOffset,\n                ]);\n            }\n            var flatCoordinates = circleGeometry.getFlatCoordinates();\n            var stride = circleGeometry.getStride();\n            var myBegin = this.coordinates.length;\n            this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n            this.instructions.push(beginPathInstruction, circleInstruction);\n            this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n            if (state.fillStyle !== undefined) {\n                this.instructions.push(fillInstruction);\n                this.hitDetectionInstructions.push(fillInstruction);\n            }\n            if (state.strokeStyle !== undefined) {\n                this.instructions.push(strokeInstruction);\n                this.hitDetectionInstructions.push(strokeInstruction);\n            }\n            this.endGeometry(feature);\n        };\n        /**\n         * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         */\n        CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n            var state = this.state;\n            var fillStyle = state.fillStyle;\n            var strokeStyle = state.strokeStyle;\n            if (fillStyle === undefined && strokeStyle === undefined) {\n                return;\n            }\n            this.setFillStrokeStyles_();\n            this.beginGeometry(polygonGeometry, feature);\n            if (state.fillStyle !== undefined) {\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.SET_FILL_STYLE,\n                    defaultFillStyle,\n                ]);\n            }\n            if (state.strokeStyle !== undefined) {\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.SET_STROKE_STYLE,\n                    state.strokeStyle,\n                    state.lineWidth,\n                    state.lineCap,\n                    state.lineJoin,\n                    state.miterLimit,\n                    state.lineDash,\n                    state.lineDashOffset,\n                ]);\n            }\n            var ends = polygonGeometry.getEnds();\n            var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n            var stride = polygonGeometry.getStride();\n            this.drawFlatCoordinatess_(flatCoordinates, 0, \n            /** @type {Array<number>} */ (ends), stride);\n            this.endGeometry(feature);\n        };\n        /**\n         * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         */\n        CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n            var state = this.state;\n            var fillStyle = state.fillStyle;\n            var strokeStyle = state.strokeStyle;\n            if (fillStyle === undefined && strokeStyle === undefined) {\n                return;\n            }\n            this.setFillStrokeStyles_();\n            this.beginGeometry(multiPolygonGeometry, feature);\n            if (state.fillStyle !== undefined) {\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.SET_FILL_STYLE,\n                    defaultFillStyle,\n                ]);\n            }\n            if (state.strokeStyle !== undefined) {\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.SET_STROKE_STYLE,\n                    state.strokeStyle,\n                    state.lineWidth,\n                    state.lineCap,\n                    state.lineJoin,\n                    state.miterLimit,\n                    state.lineDash,\n                    state.lineDashOffset,\n                ]);\n            }\n            var endss = multiPolygonGeometry.getEndss();\n            var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n            var stride = multiPolygonGeometry.getStride();\n            var offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n            }\n            this.endGeometry(feature);\n        };\n        /**\n         * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n         */\n        CanvasPolygonBuilder.prototype.finish = function () {\n            this.reverseHitDetectionInstructions();\n            this.state = null;\n            // We want to preserve topology when drawing polygons.  Polygons are\n            // simplified using quantization and point elimination. However, we might\n            // have received a mix of quantized and non-quantized geometries, so ensure\n            // that all are quantized by quantizing all coordinates in the batch.\n            var tolerance = this.tolerance;\n            if (tolerance !== 0) {\n                var coordinates = this.coordinates;\n                for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                    coordinates[i] = snap(coordinates[i], tolerance);\n                }\n            }\n            return _super.prototype.finish.call(this);\n        };\n        /**\n         * @private\n         */\n        CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n            var state = this.state;\n            var fillStyle = state.fillStyle;\n            if (fillStyle !== undefined) {\n                this.updateFillStyle(state, this.createFill);\n            }\n            if (state.strokeStyle !== undefined) {\n                this.updateStrokeStyle(state, this.applyStroke);\n            }\n        };\n        return CanvasPolygonBuilder;\n    }(Builder));\n    var PolygonBuilder = CanvasPolygonBuilder;\n\n    /**\n     * @module ol/style/TextPlacement\n     */\n    /**\n     * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n     * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n     * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n     * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n     * @enum {string}\n     */\n    var TextPlacement = {\n        POINT: 'point',\n        LINE: 'line',\n    };\n\n    /**\n     * @module ol/geom/flat/straightchunk\n     */\n    /**\n     * @param {number} maxAngle Maximum acceptable angle delta between segments.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @return {Array<number>} Start and end of the first suitable chunk of the\n     * given `flatCoordinates`.\n     */\n    function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n        var chunkStart = offset;\n        var chunkEnd = offset;\n        var chunkM = 0;\n        var m = 0;\n        var start = offset;\n        var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n        for (i = offset; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            if (x1 !== undefined) {\n                x23 = x2 - x1;\n                y23 = y2 - y1;\n                m23 = Math.sqrt(x23 * x23 + y23 * y23);\n                if (x12 !== undefined) {\n                    m += m12;\n                    acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                    if (acos > maxAngle) {\n                        if (m > chunkM) {\n                            chunkM = m;\n                            chunkStart = start;\n                            chunkEnd = i;\n                        }\n                        m = 0;\n                        start = i - stride;\n                    }\n                }\n                m12 = m23;\n                x12 = x23;\n                y12 = y23;\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n        m += m23;\n        return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n    }\n\n    var __extends$k = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @const\n     * @enum {number}\n     */\n    var TEXT_ALIGN = {\n        'left': 0,\n        'end': 0,\n        'center': 0.5,\n        'right': 1,\n        'start': 1,\n        'top': 0,\n        'middle': 0.5,\n        'hanging': 0.2,\n        'alphabetic': 0.8,\n        'ideographic': 0.8,\n        'bottom': 1,\n    };\n    var CanvasTextBuilder = /** @class */ (function (_super) {\n        __extends$k(CanvasTextBuilder, _super);\n        /**\n         * @param {number} tolerance Tolerance.\n         * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n         * @param {number} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         */\n        function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n            var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n            /**\n             * @private\n             * @type {Array<HTMLCanvasElement>}\n             */\n            _this.labels_ = null;\n            /**\n             * @private\n             * @type {string|Array<string>}\n             */\n            _this.text_ = '';\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.textOffsetX_ = 0;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.textOffsetY_ = 0;\n            /**\n             * @private\n             * @type {boolean|undefined}\n             */\n            _this.textRotateWithView_ = undefined;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.textRotation_ = 0;\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").FillState}\n             */\n            _this.textFillState_ = null;\n            /**\n             * @type {!Object<string, import(\"../canvas.js\").FillState>}\n             */\n            _this.fillStates = {};\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").StrokeState}\n             */\n            _this.textStrokeState_ = null;\n            /**\n             * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n             */\n            _this.strokeStates = {};\n            /**\n             * @private\n             * @type {import(\"../canvas.js\").TextState}\n             */\n            _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n            /**\n             * @type {!Object<string, import(\"../canvas.js\").TextState>}\n             */\n            _this.textStates = {};\n            /**\n             * @private\n             * @type {string}\n             */\n            _this.textKey_ = '';\n            /**\n             * @private\n             * @type {string}\n             */\n            _this.fillKey_ = '';\n            /**\n             * @private\n             * @type {string}\n             */\n            _this.strokeKey_ = '';\n            /**\n             * Data shared with an image builder for combined decluttering.\n             * @private\n             * @type {import(\"../canvas.js\").DeclutterImageWithText}\n             */\n            _this.declutterImageWithText_ = undefined;\n            return _this;\n        }\n        /**\n         * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n         */\n        CanvasTextBuilder.prototype.finish = function () {\n            var instructions = _super.prototype.finish.call(this);\n            instructions.textStates = this.textStates;\n            instructions.fillStates = this.fillStates;\n            instructions.strokeStates = this.strokeStates;\n            return instructions;\n        };\n        /**\n         * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         */\n        CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n            var fillState = this.textFillState_;\n            var strokeState = this.textStrokeState_;\n            var textState = this.textState_;\n            if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n                return;\n            }\n            var coordinates = this.coordinates;\n            var begin = coordinates.length;\n            var geometryType = geometry.getType();\n            var flatCoordinates = null;\n            var stride = geometry.getStride();\n            if (textState.placement === TextPlacement.LINE &&\n                (geometryType == GeometryType.LINE_STRING ||\n                    geometryType == GeometryType.MULTI_LINE_STRING ||\n                    geometryType == GeometryType.POLYGON ||\n                    geometryType == GeometryType.MULTI_POLYGON)) {\n                if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                    return;\n                }\n                var ends = void 0;\n                flatCoordinates = geometry.getFlatCoordinates();\n                if (geometryType == GeometryType.LINE_STRING) {\n                    ends = [flatCoordinates.length];\n                }\n                else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                    ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n                }\n                else if (geometryType == GeometryType.POLYGON) {\n                    ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                        .getEnds()\n                        .slice(0, 1);\n                }\n                else if (geometryType == GeometryType.MULTI_POLYGON) {\n                    var endss = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                    ends = [];\n                    for (var i = 0, ii = endss.length; i < ii; ++i) {\n                        ends.push(endss[i][0]);\n                    }\n                }\n                this.beginGeometry(geometry, feature);\n                var textAlign = textState.textAlign;\n                var flatOffset = 0;\n                var flatEnd = void 0;\n                for (var o = 0, oo = ends.length; o < oo; ++o) {\n                    if (textAlign == undefined) {\n                        var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                        flatOffset = range[0];\n                        flatEnd = range[1];\n                    }\n                    else {\n                        flatEnd = ends[o];\n                    }\n                    for (var i = flatOffset; i < flatEnd; i += stride) {\n                        coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                    }\n                    var end = coordinates.length;\n                    flatOffset = ends[o];\n                    this.drawChars_(begin, end);\n                    begin = end;\n                }\n                this.endGeometry(feature);\n            }\n            else {\n                var geometryWidths = textState.overflow ? null : [];\n                switch (geometryType) {\n                    case GeometryType.POINT:\n                    case GeometryType.MULTI_POINT:\n                        flatCoordinates =\n                            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                        break;\n                    case GeometryType.LINE_STRING:\n                        flatCoordinates =\n                            /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                        break;\n                    case GeometryType.CIRCLE:\n                        flatCoordinates =\n                            /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                        break;\n                    case GeometryType.MULTI_LINE_STRING:\n                        flatCoordinates =\n                            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                        stride = 2;\n                        break;\n                    case GeometryType.POLYGON:\n                        flatCoordinates =\n                            /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                        if (!textState.overflow) {\n                            geometryWidths.push(flatCoordinates[2] / this.resolution);\n                        }\n                        stride = 3;\n                        break;\n                    case GeometryType.MULTI_POLYGON:\n                        var interiorPoints = \n                        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                        flatCoordinates = [];\n                        for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                            if (!textState.overflow) {\n                                geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                            }\n                            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                        }\n                        if (flatCoordinates.length === 0) {\n                            return;\n                        }\n                        stride = 2;\n                        break;\n                }\n                var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n                if (end === begin) {\n                    return;\n                }\n                if (geometryWidths &&\n                    (end - begin) / 2 !== flatCoordinates.length / stride) {\n                    var beg_1 = begin / 2;\n                    geometryWidths = geometryWidths.filter(function (w, i) {\n                        var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                            coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                        if (!keep) {\n                            --beg_1;\n                        }\n                        return keep;\n                    });\n                }\n                this.saveTextStates_();\n                if (textState.backgroundFill || textState.backgroundStroke) {\n                    this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                    if (textState.backgroundFill) {\n                        this.updateFillStyle(this.state, this.createFill);\n                        this.hitDetectionInstructions.push(this.createFill(this.state));\n                    }\n                    if (textState.backgroundStroke) {\n                        this.updateStrokeStyle(this.state, this.applyStroke);\n                        this.hitDetectionInstructions.push(this.createStroke(this.state));\n                    }\n                }\n                this.beginGeometry(geometry, feature);\n                // adjust padding for negative scale\n                var padding = textState.padding;\n                if (padding != defaultPadding &&\n                    (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                    var p0 = textState.padding[0];\n                    var p1 = textState.padding[1];\n                    var p2 = textState.padding[2];\n                    var p3 = textState.padding[3];\n                    if (textState.scale[0] < 0) {\n                        p1 = -p1;\n                        p3 = -p3;\n                    }\n                    if (textState.scale[1] < 0) {\n                        p0 = -p0;\n                        p2 = -p2;\n                    }\n                    padding = [p0, p1, p2, p3];\n                }\n                // The image is unknown at this stage so we pass null; it will be computed at render time.\n                // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n                // render time.\n                var pixelRatio_1 = this.pixelRatio;\n                this.instructions.push([\n                    CanvasInstruction.DRAW_IMAGE,\n                    begin,\n                    end,\n                    null,\n                    NaN,\n                    NaN,\n                    NaN,\n                    1,\n                    0,\n                    0,\n                    this.textRotateWithView_,\n                    this.textRotation_,\n                    [1, 1],\n                    NaN,\n                    this.declutterImageWithText_,\n                    padding == defaultPadding\n                        ? defaultPadding\n                        : padding.map(function (p) {\n                            return p * pixelRatio_1;\n                        }),\n                    !!textState.backgroundFill,\n                    !!textState.backgroundStroke,\n                    this.text_,\n                    this.textKey_,\n                    this.strokeKey_,\n                    this.fillKey_,\n                    this.textOffsetX_,\n                    this.textOffsetY_,\n                    geometryWidths,\n                ]);\n                var scale = 1 / pixelRatio_1;\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.DRAW_IMAGE,\n                    begin,\n                    end,\n                    null,\n                    NaN,\n                    NaN,\n                    NaN,\n                    1,\n                    0,\n                    0,\n                    this.textRotateWithView_,\n                    this.textRotation_,\n                    [scale, scale],\n                    NaN,\n                    this.declutterImageWithText_,\n                    padding,\n                    !!textState.backgroundFill,\n                    !!textState.backgroundStroke,\n                    this.text_,\n                    this.textKey_,\n                    this.strokeKey_,\n                    this.fillKey_,\n                    this.textOffsetX_,\n                    this.textOffsetY_,\n                    geometryWidths,\n                ]);\n                this.endGeometry(feature);\n            }\n        };\n        /**\n         * @private\n         */\n        CanvasTextBuilder.prototype.saveTextStates_ = function () {\n            var strokeState = this.textStrokeState_;\n            var textState = this.textState_;\n            var fillState = this.textFillState_;\n            var strokeKey = this.strokeKey_;\n            if (strokeState) {\n                if (!(strokeKey in this.strokeStates)) {\n                    this.strokeStates[strokeKey] = {\n                        strokeStyle: strokeState.strokeStyle,\n                        lineCap: strokeState.lineCap,\n                        lineDashOffset: strokeState.lineDashOffset,\n                        lineWidth: strokeState.lineWidth,\n                        lineJoin: strokeState.lineJoin,\n                        miterLimit: strokeState.miterLimit,\n                        lineDash: strokeState.lineDash,\n                    };\n                }\n            }\n            var textKey = this.textKey_;\n            if (!(textKey in this.textStates)) {\n                this.textStates[textKey] = {\n                    font: textState.font,\n                    textAlign: textState.textAlign || defaultTextAlign,\n                    textBaseline: textState.textBaseline || defaultTextBaseline,\n                    scale: textState.scale,\n                };\n            }\n            var fillKey = this.fillKey_;\n            if (fillState) {\n                if (!(fillKey in this.fillStates)) {\n                    this.fillStates[fillKey] = {\n                        fillStyle: fillState.fillStyle,\n                    };\n                }\n            }\n        };\n        /**\n         * @private\n         * @param {number} begin Begin.\n         * @param {number} end End.\n         */\n        CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n            var strokeState = this.textStrokeState_;\n            var textState = this.textState_;\n            var strokeKey = this.strokeKey_;\n            var textKey = this.textKey_;\n            var fillKey = this.fillKey_;\n            this.saveTextStates_();\n            var pixelRatio = this.pixelRatio;\n            var baseline = TEXT_ALIGN[textState.textBaseline];\n            var offsetY = this.textOffsetY_ * pixelRatio;\n            var text = this.text_;\n            var strokeWidth = strokeState\n                ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n                : 0;\n            this.instructions.push([\n                CanvasInstruction.DRAW_CHARS,\n                begin,\n                end,\n                baseline,\n                textState.overflow,\n                fillKey,\n                textState.maxAngle,\n                pixelRatio,\n                offsetY,\n                strokeKey,\n                strokeWidth * pixelRatio,\n                text,\n                textKey,\n                1,\n            ]);\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_CHARS,\n                begin,\n                end,\n                baseline,\n                textState.overflow,\n                fillKey,\n                textState.maxAngle,\n                1,\n                offsetY,\n                strokeKey,\n                strokeWidth,\n                text,\n                textKey,\n                1 / pixelRatio,\n            ]);\n        };\n        /**\n         * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n         * @param {Object} [opt_sharedData] Shared data.\n         */\n        CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n            var textState, fillState, strokeState;\n            if (!textStyle) {\n                this.text_ = '';\n            }\n            else {\n                var textFillStyle = textStyle.getFill();\n                if (!textFillStyle) {\n                    fillState = null;\n                    this.textFillState_ = fillState;\n                }\n                else {\n                    fillState = this.textFillState_;\n                    if (!fillState) {\n                        fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                        this.textFillState_ = fillState;\n                    }\n                    fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n                }\n                var textStrokeStyle = textStyle.getStroke();\n                if (!textStrokeStyle) {\n                    strokeState = null;\n                    this.textStrokeState_ = strokeState;\n                }\n                else {\n                    strokeState = this.textStrokeState_;\n                    if (!strokeState) {\n                        strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                        this.textStrokeState_ = strokeState;\n                    }\n                    var lineDash = textStrokeStyle.getLineDash();\n                    var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                    var lineWidth = textStrokeStyle.getWidth();\n                    var miterLimit = textStrokeStyle.getMiterLimit();\n                    strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                    strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                    strokeState.lineDashOffset =\n                        lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                    strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                    strokeState.lineWidth =\n                        lineWidth === undefined ? defaultLineWidth : lineWidth;\n                    strokeState.miterLimit =\n                        miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                    strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n                }\n                textState = this.textState_;\n                var font = textStyle.getFont() || defaultFont;\n                registerFont(font);\n                var textScale = textStyle.getScaleArray();\n                textState.overflow = textStyle.getOverflow();\n                textState.font = font;\n                textState.maxAngle = textStyle.getMaxAngle();\n                textState.placement = textStyle.getPlacement();\n                textState.textAlign = textStyle.getTextAlign();\n                textState.textBaseline =\n                    textStyle.getTextBaseline() || defaultTextBaseline;\n                textState.backgroundFill = textStyle.getBackgroundFill();\n                textState.backgroundStroke = textStyle.getBackgroundStroke();\n                textState.padding = textStyle.getPadding() || defaultPadding;\n                textState.scale = textScale === undefined ? [1, 1] : textScale;\n                var textOffsetX = textStyle.getOffsetX();\n                var textOffsetY = textStyle.getOffsetY();\n                var textRotateWithView = textStyle.getRotateWithView();\n                var textRotation = textStyle.getRotation();\n                this.text_ = textStyle.getText() || '';\n                this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n                this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n                this.textRotateWithView_ =\n                    textRotateWithView === undefined ? false : textRotateWithView;\n                this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n                this.strokeKey_ = strokeState\n                    ? (typeof strokeState.strokeStyle == 'string'\n                        ? strokeState.strokeStyle\n                        : getUid(strokeState.strokeStyle)) +\n                        strokeState.lineCap +\n                        strokeState.lineDashOffset +\n                        '|' +\n                        strokeState.lineWidth +\n                        strokeState.lineJoin +\n                        strokeState.miterLimit +\n                        '[' +\n                        strokeState.lineDash.join() +\n                        ']'\n                    : '';\n                this.textKey_ =\n                    textState.font +\n                        textState.scale +\n                        (textState.textAlign || '?') +\n                        (textState.textBaseline || '?');\n                this.fillKey_ = fillState\n                    ? typeof fillState.fillStyle == 'string'\n                        ? fillState.fillStyle\n                        : '|' + getUid(fillState.fillStyle)\n                    : '';\n            }\n            this.declutterImageWithText_ = opt_sharedData;\n        };\n        return CanvasTextBuilder;\n    }(Builder));\n    var TextBuilder = CanvasTextBuilder;\n\n    /**\n     * @module ol/render/canvas/BuilderGroup\n     */\n    /**\n     * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n     */\n    var BATCH_CONSTRUCTORS = {\n        'Circle': PolygonBuilder,\n        'Default': Builder,\n        'Image': ImageBuilder,\n        'LineString': LineStringBuilder,\n        'Polygon': PolygonBuilder,\n        'Text': TextBuilder,\n    };\n    var BuilderGroup = /** @class */ (function () {\n        /**\n         * @param {number} tolerance Tolerance.\n         * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n         * @param {number} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         */\n        function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n            /**\n             * @private\n             * @type {number}\n             */\n            this.tolerance_ = tolerance;\n            /**\n             * @private\n             * @type {import(\"../../extent.js\").Extent}\n             */\n            this.maxExtent_ = maxExtent;\n            /**\n             * @private\n             * @type {number}\n             */\n            this.pixelRatio_ = pixelRatio;\n            /**\n             * @private\n             * @type {number}\n             */\n            this.resolution_ = resolution;\n            /**\n             * @private\n             * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n             */\n            this.buildersByZIndex_ = {};\n        }\n        /**\n         * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n         */\n        BuilderGroup.prototype.finish = function () {\n            var builderInstructions = {};\n            for (var zKey in this.buildersByZIndex_) {\n                builderInstructions[zKey] = builderInstructions[zKey] || {};\n                var builders = this.buildersByZIndex_[zKey];\n                for (var builderKey in builders) {\n                    var builderInstruction = builders[builderKey].finish();\n                    builderInstructions[zKey][builderKey] = builderInstruction;\n                }\n            }\n            return builderInstructions;\n        };\n        /**\n         * @param {number|undefined} zIndex Z index.\n         * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n         * @return {import(\"../VectorContext.js\").default} Replay.\n         */\n        BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n            var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n            var replays = this.buildersByZIndex_[zIndexKey];\n            if (replays === undefined) {\n                replays = {};\n                this.buildersByZIndex_[zIndexKey] = replays;\n            }\n            var replay = replays[builderType];\n            if (replay === undefined) {\n                var Constructor = BATCH_CONSTRUCTORS[builderType];\n                replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n                replays[builderType] = replay;\n            }\n            return replay;\n        };\n        return BuilderGroup;\n    }());\n    var CanvasBuilderGroup = BuilderGroup;\n\n    var __extends$j = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @template {import(\"../layer/Layer.js\").default} LayerType\n     */\n    var LayerRenderer = /** @class */ (function (_super) {\n        __extends$j(LayerRenderer, _super);\n        /**\n         * @param {LayerType} layer Layer.\n         */\n        function LayerRenderer(layer) {\n            var _this = _super.call(this) || this;\n            /**\n             * The renderer is initialized and ready to render.\n             * @type {boolean}\n             */\n            _this.ready = true;\n            /** @private */\n            _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n            /**\n             * @protected\n             * @type {LayerType}\n             */\n            _this.layer_ = layer;\n            /**\n             * @type {import(\"../render/canvas/ExecutorGroup\").default}\n             */\n            _this.declutterExecutorGroup = null;\n            return _this;\n        }\n        /**\n         * Asynchronous layer level hit detection.\n         * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n         * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n         * an array of features.\n         */\n        LayerRenderer.prototype.getFeatures = function (pixel) {\n            return abstract();\n        };\n        /**\n         * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n         * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n         */\n        LayerRenderer.prototype.getData = function (pixel) {\n            return null;\n        };\n        /**\n         * Determine whether render should be called.\n         * @abstract\n         * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n         * @return {boolean} Layer is ready to be rendered.\n         */\n        LayerRenderer.prototype.prepareFrame = function (frameState) {\n            return abstract();\n        };\n        /**\n         * Render the layer.\n         * @abstract\n         * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n         * @param {HTMLElement} target Target that may be used to render content to.\n         * @return {HTMLElement} The rendered element.\n         */\n        LayerRenderer.prototype.renderFrame = function (frameState, target) {\n            return abstract();\n        };\n        /**\n         * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         * @return {boolean|void} If `false`, the tile will not be considered loaded.\n         */\n        LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n            if (!tiles[zoom]) {\n                tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n            return undefined;\n        };\n        /**\n         * Create a function that adds loaded tiles to the tile lookup.\n         * @param {import(\"../source/Tile.js\").default} source Tile source.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n         * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n         * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n         *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n         * @protected\n         */\n        LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n            return (\n            /**\n             * @param {number} zoom Zoom level.\n             * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n             * @return {boolean} The tile range is fully loaded.\n             * @this {LayerRenderer}\n             */\n            function (zoom, tileRange) {\n                var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n                return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n            }.bind(this));\n        };\n        /**\n         * @abstract\n         * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n         * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n         * @param {number} hitTolerance Hit tolerance in pixels.\n         * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n         * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n         * @return {T|undefined} Callback result.\n         * @template T\n         */\n        LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n            return undefined;\n        };\n        /**\n         * @abstract\n         * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n         * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n         * @param {number} hitTolerance Hit tolerance in pixels.\n         * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n         *    location, null will be returned.  If there is data, but pixel values cannot be\n         *    returned, and empty array will be returned.\n         */\n        LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n            return null;\n        };\n        /**\n         * @return {LayerType} Layer.\n         */\n        LayerRenderer.prototype.getLayer = function () {\n            return this.layer_;\n        };\n        /**\n         * Perform action necessary to get the layer rendered after new fonts have loaded\n         * @abstract\n         */\n        LayerRenderer.prototype.handleFontsChanged = function () { };\n        /**\n         * Handle changes in image state.\n         * @param {import(\"../events/Event.js\").default} event Image change event.\n         * @private\n         */\n        LayerRenderer.prototype.handleImageChange_ = function (event) {\n            var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n            if (image.getState() === ImageState.LOADED) {\n                this.renderIfReadyAndVisible();\n            }\n        };\n        /**\n         * Load the image if not already loaded, and register the image change\n         * listener if needed.\n         * @param {import(\"../ImageBase.js\").default} image Image.\n         * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n         * @protected\n         */\n        LayerRenderer.prototype.loadImage = function (image) {\n            var imageState = image.getState();\n            if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n                image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n            }\n            if (imageState == ImageState.IDLE) {\n                image.load();\n                imageState = image.getState();\n            }\n            return imageState == ImageState.LOADED;\n        };\n        /**\n         * @protected\n         */\n        LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n            var layer = this.getLayer();\n            if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n                layer.changed();\n            }\n        };\n        /**\n         * Clean up.\n         */\n        LayerRenderer.prototype.disposeInternal = function () {\n            delete this.layer_;\n            _super.prototype.disposeInternal.call(this);\n        };\n        return LayerRenderer;\n    }(Observable$1));\n    var LayerRenderer$1 = LayerRenderer;\n\n    /**\n     * @module ol/render/Event\n     */\n    var __extends$i = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var RenderEvent = /** @class */ (function (_super) {\n        __extends$i(RenderEvent, _super);\n        /**\n         * @param {import(\"./EventType.js\").default} type Type.\n         * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n         *     CSS pixels to rendered pixels.\n         * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n         * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n         */\n        function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n            var _this = _super.call(this, type) || this;\n            /**\n             * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n             * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n             * @type {import(\"../transform.js\").Transform|undefined}\n             * @api\n             */\n            _this.inversePixelTransform = opt_inversePixelTransform;\n            /**\n             * An object representing the current render frame state.\n             * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n             * @api\n             */\n            _this.frameState = opt_frameState;\n            /**\n             * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n             * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n             * context.\n             * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n             * @api\n             */\n            _this.context = opt_context;\n            return _this;\n        }\n        return RenderEvent;\n    }(Event));\n    var RenderEvent$1 = RenderEvent;\n\n    /**\n     * @module ol/transform\n     */\n    /**\n     * An array representing an affine 2d transformation for use with\n     * {@link module:ol/transform} functions. The array has 6 elements.\n     * @typedef {!Array<number>} Transform\n     * @api\n     */\n    /**\n     * Collection of affine 2d transformation functions. The functions work on an\n     * array of 6 elements. The element order is compatible with the [SVGMatrix\n     * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n     * a subset (elements a to f) of a 3×3 matrix:\n     * ```\n     * [ a c e ]\n     * [ b d f ]\n     * [ 0 0 1 ]\n     * ```\n     */\n    /**\n     * @private\n     * @type {Transform}\n     */\n    new Array(6);\n    /**\n     * Create an identity transform.\n     * @return {!Transform} Identity transform.\n     */\n    function create() {\n        return [1, 0, 0, 1, 0, 0];\n    }\n    /**\n     * Set the transform components a-f on a given transform.\n     * @param {!Transform} transform Transform.\n     * @param {number} a The a component of the transform.\n     * @param {number} b The b component of the transform.\n     * @param {number} c The c component of the transform.\n     * @param {number} d The d component of the transform.\n     * @param {number} e The e component of the transform.\n     * @param {number} f The f component of the transform.\n     * @return {!Transform} Matrix with transform applied.\n     */\n    function set(transform, a, b, c, d, e, f) {\n        transform[0] = a;\n        transform[1] = b;\n        transform[2] = c;\n        transform[3] = d;\n        transform[4] = e;\n        transform[5] = f;\n        return transform;\n    }\n    /**\n     * Set transform on one matrix from another matrix.\n     * @param {!Transform} transform1 Matrix to set transform to.\n     * @param {!Transform} transform2 Matrix to set transform from.\n     * @return {!Transform} transform1 with transform from transform2 applied.\n     */\n    function setFromArray(transform1, transform2) {\n        transform1[0] = transform2[0];\n        transform1[1] = transform2[1];\n        transform1[2] = transform2[2];\n        transform1[3] = transform2[3];\n        transform1[4] = transform2[4];\n        transform1[5] = transform2[5];\n        return transform1;\n    }\n    /**\n     * Transforms the given coordinate with the given transform returning the\n     * resulting, transformed coordinate. The coordinate will be modified in-place.\n     *\n     * @param {Transform} transform The transformation.\n     * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n     * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n     *     chained together.\n     */\n    function apply(transform, coordinate) {\n        var x = coordinate[0];\n        var y = coordinate[1];\n        coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n        coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n        return coordinate;\n    }\n    /**\n     * Creates a scale transform.\n     * @param {!Transform} target Transform to overwrite.\n     * @param {number} x Scale factor x.\n     * @param {number} y Scale factor y.\n     * @return {!Transform} The scale transform.\n     */\n    function makeScale(target, x, y) {\n        return set(target, x, 0, 0, y, 0, 0);\n    }\n    /**\n     * Creates a composite transform given an initial translation, scale, rotation, and\n     * final translation (in that order only, not commutative).\n     * @param {!Transform} transform The transform (will be modified in place).\n     * @param {number} dx1 Initial translation x.\n     * @param {number} dy1 Initial translation y.\n     * @param {number} sx Scale factor x.\n     * @param {number} sy Scale factor y.\n     * @param {number} angle Rotation (in counter-clockwise radians).\n     * @param {number} dx2 Final translation x.\n     * @param {number} dy2 Final translation y.\n     * @return {!Transform} The composite transform.\n     */\n    function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n        var sin = Math.sin(angle);\n        var cos = Math.cos(angle);\n        transform[0] = sx * cos;\n        transform[1] = sy * sin;\n        transform[2] = -sx * sin;\n        transform[3] = sy * cos;\n        transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n        transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n        return transform;\n    }\n    /**\n     * Invert the given transform.\n     * @param {!Transform} target Transform to be set as the inverse of\n     *     the source transform.\n     * @param {!Transform} source The source transform to invert.\n     * @return {!Transform} The inverted (target) transform.\n     */\n    function makeInverse(target, source) {\n        var det = determinant(source);\n        assert(det !== 0, 32); // Transformation matrix cannot be inverted\n        var a = source[0];\n        var b = source[1];\n        var c = source[2];\n        var d = source[3];\n        var e = source[4];\n        var f = source[5];\n        target[0] = d / det;\n        target[1] = -b / det;\n        target[2] = -c / det;\n        target[3] = a / det;\n        target[4] = (c * f - d * e) / det;\n        target[5] = -(a * f - b * e) / det;\n        return target;\n    }\n    /**\n     * Returns the determinant of the given matrix.\n     * @param {!Transform} mat Matrix.\n     * @return {number} Determinant.\n     */\n    function determinant(mat) {\n        return mat[0] * mat[3] - mat[1] * mat[2];\n    }\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    var transformStringDiv;\n    /**\n     * A rounded string version of the transform.  This can be used\n     * for CSS transforms.\n     * @param {!Transform} mat Matrix.\n     * @return {string} The transform as a string.\n     */\n    function toString(mat) {\n        var transformString = 'matrix(' + mat.join(', ') + ')';\n        if (WORKER_OFFSCREEN_CANVAS) {\n            return transformString;\n        }\n        var node = transformStringDiv || (transformStringDiv = document.createElement('div'));\n        node.style.transform = transformString;\n        return node.style.transform;\n    }\n\n    var __extends$h = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    var pixelContext = null;\n    function createPixelContext() {\n        var canvas = document.createElement('canvas');\n        canvas.width = 1;\n        canvas.height = 1;\n        pixelContext = canvas.getContext('2d');\n    }\n    /**\n     * @abstract\n     * @template {import(\"../../layer/Layer.js\").default} LayerType\n     * @extends {LayerRenderer<LayerType>}\n     */\n    var CanvasLayerRenderer = /** @class */ (function (_super) {\n        __extends$h(CanvasLayerRenderer, _super);\n        /**\n         * @param {LayerType} layer Layer.\n         */\n        function CanvasLayerRenderer(layer) {\n            var _this = _super.call(this, layer) || this;\n            /**\n             * @protected\n             * @type {HTMLElement}\n             */\n            _this.container = null;\n            /**\n             * @protected\n             * @type {number}\n             */\n            _this.renderedResolution;\n            /**\n             * A temporary transform.  The values in this transform should only be used in a\n             * function that sets the values.\n             * @protected\n             * @type {import(\"../../transform.js\").Transform}\n             */\n            _this.tempTransform = create();\n            /**\n             * The transform for rendered pixels to viewport CSS pixels.  This transform must\n             * be set when rendering a frame and may be used by other functions after rendering.\n             * @protected\n             * @type {import(\"../../transform.js\").Transform}\n             */\n            _this.pixelTransform = create();\n            /**\n             * The transform for viewport CSS pixels to rendered pixels.  This transform must\n             * be set when rendering a frame and may be used by other functions after rendering.\n             * @protected\n             * @type {import(\"../../transform.js\").Transform}\n             */\n            _this.inversePixelTransform = create();\n            /**\n             * @type {CanvasRenderingContext2D}\n             */\n            _this.context = null;\n            /**\n             * @type {boolean}\n             */\n            _this.containerReused = false;\n            /**\n             * @private\n             * @type {CanvasRenderingContext2D}\n             */\n            _this.pixelContext_ = null;\n            /**\n             * @protected\n             * @type {import(\"../../PluggableMap.js\").FrameState|null}\n             */\n            _this.frameState = null;\n            return _this;\n        }\n        /**\n         * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n         * @param {number} col The column index.\n         * @param {number} row The row index.\n         * @return {Uint8ClampedArray|null} The image data.\n         */\n        CanvasLayerRenderer.prototype.getImageData = function (image, col, row) {\n            if (!pixelContext) {\n                createPixelContext();\n            }\n            pixelContext.clearRect(0, 0, 1, 1);\n            var data;\n            try {\n                pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n                data = pixelContext.getImageData(0, 0, 1, 1).data;\n            }\n            catch (err) {\n                return null;\n            }\n            return data;\n        };\n        /**\n         * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n         * @return {string} Background color.\n         */\n        CanvasLayerRenderer.prototype.getBackground = function (frameState) {\n            var layer = this.getLayer();\n            var background = layer.getBackground();\n            if (typeof background === 'function') {\n                background = background(frameState.viewState.resolution);\n            }\n            return background || undefined;\n        };\n        /**\n         * Get a rendering container from an existing target, if compatible.\n         * @param {HTMLElement} target Potential render target.\n         * @param {string} transform CSS Transform.\n         * @param {number} opacity Opacity.\n         * @param {string} [opt_backgroundColor] Background color.\n         */\n        CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity, opt_backgroundColor) {\n            var layerClassName = this.getLayer().getClassName();\n            var container, context;\n            if (target &&\n                target.className === layerClassName &&\n                target.style.opacity === '' &&\n                opacity === 1 &&\n                (!opt_backgroundColor ||\n                    (target.style.backgroundColor &&\n                        equals$1(asArray(target.style.backgroundColor), asArray(opt_backgroundColor))))) {\n                var canvas = target.firstElementChild;\n                if (canvas instanceof HTMLCanvasElement) {\n                    context = canvas.getContext('2d');\n                }\n            }\n            if (context && context.canvas.style.transform === transform) {\n                // Container of the previous layer renderer can be used.\n                this.container = target;\n                this.context = context;\n                this.containerReused = true;\n            }\n            else if (this.containerReused) {\n                // Previously reused container cannot be used any more.\n                this.container = null;\n                this.context = null;\n                this.containerReused = false;\n            }\n            if (!this.container) {\n                container = document.createElement('div');\n                container.className = layerClassName;\n                var style = container.style;\n                style.position = 'absolute';\n                style.width = '100%';\n                style.height = '100%';\n                if (opt_backgroundColor) {\n                    style.backgroundColor = opt_backgroundColor;\n                }\n                context = createCanvasContext2D();\n                var canvas = context.canvas;\n                container.appendChild(canvas);\n                style = canvas.style;\n                style.position = 'absolute';\n                style.left = '0';\n                style.transformOrigin = 'top left';\n                this.container = container;\n                this.context = context;\n            }\n        };\n        /**\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n         * @protected\n         */\n        CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n            var topLeft = getTopLeft(extent);\n            var topRight = getTopRight(extent);\n            var bottomRight = getBottomRight(extent);\n            var bottomLeft = getBottomLeft(extent);\n            apply(frameState.coordinateToPixelTransform, topLeft);\n            apply(frameState.coordinateToPixelTransform, topRight);\n            apply(frameState.coordinateToPixelTransform, bottomRight);\n            apply(frameState.coordinateToPixelTransform, bottomLeft);\n            var inverted = this.inversePixelTransform;\n            apply(inverted, topLeft);\n            apply(inverted, topRight);\n            apply(inverted, bottomRight);\n            apply(inverted, bottomLeft);\n            context.save();\n            context.beginPath();\n            context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n            context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n            context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n            context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n            context.clip();\n        };\n        /**\n         * @param {import(\"../../render/EventType.js\").default} type Event type.\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         * @private\n         */\n        CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n            var layer = this.getLayer();\n            if (layer.hasListener(type)) {\n                var event_1 = new RenderEvent$1(type, this.inversePixelTransform, frameState, context);\n                layer.dispatchEvent(event_1);\n            }\n        };\n        /**\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         * @protected\n         */\n        CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n            this.frameState = frameState;\n            this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n        };\n        /**\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         * @protected\n         */\n        CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n            this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n        };\n        /**\n         * Creates a transform for rendering to an element that will be rotated after rendering.\n         * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n         * @param {number} resolution Resolution.\n         * @param {number} rotation Rotation.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {number} width Width of the rendered element (in pixels).\n         * @param {number} height Height of the rendered element (in pixels).\n         * @param {number} offsetX Offset on the x-axis in view coordinates.\n         * @protected\n         * @return {!import(\"../../transform.js\").Transform} Transform.\n         */\n        CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n            var dx1 = width / 2;\n            var dy1 = height / 2;\n            var sx = pixelRatio / resolution;\n            var sy = -sx;\n            var dx2 = -center[0] + offsetX;\n            var dy2 = -center[1];\n            return compose(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n        };\n        /**\n         * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n         * @param {number} hitTolerance Hit tolerance in pixels.\n         * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n         *    location, null will be returned.  If there is data, but pixel values cannot be\n         *    returned, and empty array will be returned.\n         */\n        CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n            var renderPixel = apply(this.inversePixelTransform, pixel.slice());\n            var context = this.context;\n            var layer = this.getLayer();\n            var layerExtent = layer.getExtent();\n            if (layerExtent) {\n                var renderCoordinate = apply(frameState.pixelToCoordinateTransform, pixel.slice());\n                /** get only data inside of the layer extent */\n                if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                    return null;\n                }\n            }\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var pixelContext = this.pixelContext_;\n            if (!pixelContext) {\n                var pixelCanvas = document.createElement('canvas');\n                pixelCanvas.width = 1;\n                pixelCanvas.height = 1;\n                pixelContext = pixelCanvas.getContext('2d');\n                this.pixelContext_ = pixelContext;\n            }\n            pixelContext.clearRect(0, 0, 1, 1);\n            var data;\n            try {\n                pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n                data = pixelContext.getImageData(0, 0, 1, 1).data;\n            }\n            catch (err) {\n                if (err.name === 'SecurityError') {\n                    // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                    this.pixelContext_ = null;\n                    return new Uint8Array();\n                }\n                return data;\n            }\n            if (data[3] === 0) {\n                return null;\n            }\n            return data;\n        };\n        /**\n         * Clean up.\n         */\n        CanvasLayerRenderer.prototype.disposeInternal = function () {\n            delete this.frameState;\n            _super.prototype.disposeInternal.call(this);\n        };\n        return CanvasLayerRenderer;\n    }(LayerRenderer$1));\n    var CanvasLayerRenderer$1 = CanvasLayerRenderer;\n\n    /**\n     * @module ol/render/canvas/BuilderType\n     */\n    /**\n     * @enum {string}\n     */\n    var BuilderType = {\n        CIRCLE: 'Circle',\n        DEFAULT: 'Default',\n        IMAGE: 'Image',\n        LINE_STRING: 'LineString',\n        POLYGON: 'Polygon',\n        TEXT: 'Text',\n    };\n\n    /**\n     * @module ol/geom/flat/transform\n     */\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<number>} [opt_dest] Destination.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n        var dest = opt_dest ? opt_dest : [];\n        var i = 0;\n        for (var j = offset; j < end; j += stride) {\n            var x = flatCoordinates[j];\n            var y = flatCoordinates[j + 1];\n            dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n            dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n        }\n        if (opt_dest && dest.length != i) {\n            dest.length = i;\n        }\n        return dest;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {number} angle Angle.\n     * @param {Array<number>} anchor Rotation anchor point.\n     * @param {Array<number>} [opt_dest] Destination.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n        var dest = opt_dest ? opt_dest : [];\n        var cos = Math.cos(angle);\n        var sin = Math.sin(angle);\n        var anchorX = anchor[0];\n        var anchorY = anchor[1];\n        var i = 0;\n        for (var j = offset; j < end; j += stride) {\n            var deltaX = flatCoordinates[j] - anchorX;\n            var deltaY = flatCoordinates[j + 1] - anchorY;\n            dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n            dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n            for (var k = j + 2; k < j + stride; ++k) {\n                dest[i++] = flatCoordinates[k];\n            }\n        }\n        if (opt_dest && dest.length != i) {\n            dest.length = i;\n        }\n        return dest;\n    }\n    /**\n     * Scale the coordinates.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {number} sx Scale factor in the x-direction.\n     * @param {number} sy Scale factor in the y-direction.\n     * @param {Array<number>} anchor Scale anchor point.\n     * @param {Array<number>} [opt_dest] Destination.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n        var dest = opt_dest ? opt_dest : [];\n        var anchorX = anchor[0];\n        var anchorY = anchor[1];\n        var i = 0;\n        for (var j = offset; j < end; j += stride) {\n            var deltaX = flatCoordinates[j] - anchorX;\n            var deltaY = flatCoordinates[j + 1] - anchorY;\n            dest[i++] = anchorX + sx * deltaX;\n            dest[i++] = anchorY + sy * deltaY;\n            for (var k = j + 2; k < j + stride; ++k) {\n                dest[i++] = flatCoordinates[k];\n            }\n        }\n        if (opt_dest && dest.length != i) {\n            dest.length = i;\n        }\n        return dest;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @param {Array<number>} [opt_dest] Destination.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n        var dest = opt_dest ? opt_dest : [];\n        var i = 0;\n        for (var j = offset; j < end; j += stride) {\n            dest[i++] = flatCoordinates[j] + deltaX;\n            dest[i++] = flatCoordinates[j + 1] + deltaY;\n            for (var k = j + 2; k < j + stride; ++k) {\n                dest[i++] = flatCoordinates[k];\n            }\n        }\n        if (opt_dest && dest.length != i) {\n            dest.length = i;\n        }\n        return dest;\n    }\n\n    /**\n     * @module ol/geom/flat/textpath\n     */\n    /**\n     * @param {Array<number>} flatCoordinates Path to put text on.\n     * @param {number} offset Start offset of the `flatCoordinates`.\n     * @param {number} end End offset of the `flatCoordinates`.\n     * @param {number} stride Stride.\n     * @param {string} text Text to place on the path.\n     * @param {number} startM m along the path where the text starts.\n     * @param {number} maxAngle Max angle between adjacent chars in radians.\n     * @param {number} scale The product of the text scale and the device pixel ratio.\n     * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n     * @param {string} font The font.\n     * @param {Object<string, number>} cache A cache of measured widths.\n     * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n     * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n     * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n     */\n    function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var x1 = 0;\n        var y1 = 0;\n        var segmentLength = 0;\n        var segmentM = 0;\n        function advance() {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        }\n        do {\n            advance();\n        } while (offset < end - stride && segmentM + segmentLength < startM);\n        var interpolate = segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n        var beginX = lerp(x1, x2, interpolate);\n        var beginY = lerp(y1, y2, interpolate);\n        var startOffset = offset - stride;\n        var startLength = segmentM;\n        var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n        while (offset < end - stride && segmentM + segmentLength < endM) {\n            advance();\n        }\n        interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n        var endX = lerp(x1, x2, interpolate);\n        var endY = lerp(y1, y2, interpolate);\n        // Keep text upright\n        var reverse;\n        if (rotation) {\n            var flat = [beginX, beginY, endX, endY];\n            rotate(flat, 0, 4, 2, rotation, flat, flat);\n            reverse = flat[0] > flat[2];\n        }\n        else {\n            reverse = beginX > endX;\n        }\n        var PI = Math.PI;\n        var result = [];\n        var singleSegment = startOffset + stride === offset;\n        offset = startOffset;\n        segmentLength = 0;\n        segmentM = startLength;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        var previousAngle;\n        // All on the same segment\n        if (singleSegment) {\n            advance();\n            previousAngle = Math.atan2(y2 - y1, x2 - x1);\n            if (reverse) {\n                previousAngle += previousAngle > 0 ? -PI : PI;\n            }\n            var x = (endX + beginX) / 2;\n            var y = (endY + beginY) / 2;\n            result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n            return result;\n        }\n        for (var i = 0, ii = text.length; i < ii;) {\n            advance();\n            var angle = Math.atan2(y2 - y1, x2 - x1);\n            if (reverse) {\n                angle += angle > 0 ? -PI : PI;\n            }\n            if (previousAngle !== undefined) {\n                var delta = angle - previousAngle;\n                delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n                if (Math.abs(delta) > maxAngle) {\n                    return null;\n                }\n            }\n            previousAngle = angle;\n            var iStart = i;\n            var charLength = 0;\n            for (; i < ii; ++i) {\n                var index = reverse ? ii - i - 1 : i;\n                var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n                if (offset + stride < end &&\n                    segmentM + segmentLength < startM + charLength + len / 2) {\n                    break;\n                }\n                charLength += len;\n            }\n            if (i === iStart) {\n                continue;\n            }\n            var chars = reverse\n                ? text.substring(ii - iStart, ii - i)\n                : text.substring(iStart, i);\n            interpolate =\n                segmentLength === 0\n                    ? 0\n                    : (startM + charLength / 2 - segmentM) / segmentLength;\n            var x = lerp(x1, x2, interpolate);\n            var y = lerp(y1, y2, interpolate);\n            result.push([x, y, charLength / 2, angle, chars]);\n            startM += charLength;\n        }\n        return result;\n    }\n\n    /**\n     * @module ol/geom/flat/length\n     */\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @return {number} Length.\n     */\n    function lineStringLength(flatCoordinates, offset, end, stride) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length = 0;\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            x1 = x2;\n            y1 = y2;\n        }\n        return length;\n    }\n\n    /**\n     * @module ol/render/canvas/Executor\n     */\n    /**\n     * @typedef {Object} BBox\n     * @property {number} minX Minimal x.\n     * @property {number} minY Minimal y.\n     * @property {number} maxX Maximal x.\n     * @property {number} maxY Maximal y\n     * @property {*} value Value.\n     */\n    /**\n     * @typedef {Object} ImageOrLabelDimensions\n     * @property {number} drawImageX DrawImageX.\n     * @property {number} drawImageY DrawImageY.\n     * @property {number} drawImageW DrawImageW.\n     * @property {number} drawImageH DrawImageH.\n     * @property {number} originX OriginX.\n     * @property {number} originY OriginY.\n     * @property {Array<number>} scale Scale.\n     * @property {BBox} declutterBox DeclutterBox.\n     * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n     */\n    /**\n     * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n     */\n    /**\n     * @template T\n     * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n     */\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var tmpExtent = createEmpty();\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1 = [];\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2 = [];\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3 = [];\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4 = [];\n    /**\n     * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n     * @return {BBox} Declutter bbox.\n     */\n    function getDeclutterBox(replayImageOrLabelArgs) {\n        return replayImageOrLabelArgs[3].declutterBox;\n    }\n    var rtlRegEx = new RegExp(\n    /* eslint-disable prettier/prettier */\n    '[' +\n        String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n        String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n        String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n        String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n        String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n        ']'\n    /* eslint-enable prettier/prettier */\n    );\n    /**\n     * @param {string} text Text.\n     * @param {string} align Alignment.\n     * @return {number} Text alignment.\n     */\n    function horizontalTextAlign(text, align) {\n        if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n            align = align === 'start' ? 'left' : 'right';\n        }\n        return TEXT_ALIGN[align];\n    }\n    /**\n     * @param {Array<string>} acc Accumulator.\n     * @param {string} line Line of text.\n     * @param {number} i Index\n     * @return {Array<string>} Accumulator.\n     */\n    function createTextChunks(acc, line, i) {\n        if (i > 0) {\n            acc.push('\\n', '');\n        }\n        acc.push(line, '');\n        return acc;\n    }\n    var Executor = /** @class */ (function () {\n        /**\n         * @param {number} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {boolean} overlaps The replay can have overlapping geometries.\n         * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n         */\n        function Executor(resolution, pixelRatio, overlaps, instructions) {\n            /**\n             * @protected\n             * @type {boolean}\n             */\n            this.overlaps = overlaps;\n            /**\n             * @protected\n             * @type {number}\n             */\n            this.pixelRatio = pixelRatio;\n            /**\n             * @protected\n             * @const\n             * @type {number}\n             */\n            this.resolution = resolution;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this.alignFill_;\n            /**\n             * @protected\n             * @type {Array<*>}\n             */\n            this.instructions = instructions.instructions;\n            /**\n             * @protected\n             * @type {Array<number>}\n             */\n            this.coordinates = instructions.coordinates;\n            /**\n             * @private\n             * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n             */\n            this.coordinateCache_ = {};\n            /**\n             * @private\n             * @type {!import(\"../../transform.js\").Transform}\n             */\n            this.renderedTransform_ = create();\n            /**\n             * @protected\n             * @type {Array<*>}\n             */\n            this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n            /**\n             * @private\n             * @type {Array<number>}\n             */\n            this.pixelCoordinates_ = null;\n            /**\n             * @private\n             * @type {number}\n             */\n            this.viewRotation_ = 0;\n            /**\n             * @type {!Object<string, import(\"../canvas.js\").FillState>}\n             */\n            this.fillStates = instructions.fillStates || {};\n            /**\n             * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n             */\n            this.strokeStates = instructions.strokeStates || {};\n            /**\n             * @type {!Object<string, import(\"../canvas.js\").TextState>}\n             */\n            this.textStates = instructions.textStates || {};\n            /**\n             * @private\n             * @type {Object<string, Object<string, number>>}\n             */\n            this.widths_ = {};\n            /**\n             * @private\n             * @type {Object<string, import(\"../canvas.js\").Label>}\n             */\n            this.labels_ = {};\n        }\n        /**\n         * @param {string|Array<string>} text Text.\n         * @param {string} textKey Text style key.\n         * @param {string} fillKey Fill style key.\n         * @param {string} strokeKey Stroke style key.\n         * @return {import(\"../canvas.js\").Label} Label.\n         */\n        Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n            var key = text + textKey + fillKey + strokeKey;\n            if (this.labels_[key]) {\n                return this.labels_[key];\n            }\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = [\n                textState.scale[0] * pixelRatio,\n                textState.scale[1] * pixelRatio,\n            ];\n            var textIsArray = Array.isArray(text);\n            var align = horizontalTextAlign(textIsArray ? text[0] : text, textState.textAlign || defaultTextAlign);\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var chunks = textIsArray\n                ? text\n                : text.split('\\n').reduce(createTextChunks, []);\n            var _a = getTextDimensions(textState, chunks), width = _a.width, height = _a.height, widths = _a.widths, heights = _a.heights, lineWidths = _a.lineWidths;\n            var renderWidth = width + strokeWidth;\n            var contextInstructions = [];\n            // make canvas 2 pixels wider to account for italic text width measurement errors\n            var w = (renderWidth + 2) * scale[0];\n            var h = (height + strokeWidth) * scale[1];\n            /** @type {import(\"../canvas.js\").Label} */\n            var label = {\n                width: w < 0 ? Math.floor(w) : Math.ceil(w),\n                height: h < 0 ? Math.floor(h) : Math.ceil(h),\n                contextInstructions: contextInstructions,\n            };\n            if (scale[0] != 1 || scale[1] != 1) {\n                contextInstructions.push('scale', scale);\n            }\n            if (strokeKey) {\n                contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n                contextInstructions.push('lineWidth', strokeWidth);\n                contextInstructions.push('lineCap', strokeState.lineCap);\n                contextInstructions.push('lineJoin', strokeState.lineJoin);\n                contextInstructions.push('miterLimit', strokeState.miterLimit);\n                // eslint-disable-next-line\n                var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n                if (Context.prototype.setLineDash) {\n                    contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                    contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n                }\n            }\n            if (fillKey) {\n                contextInstructions.push('fillStyle', fillState.fillStyle);\n            }\n            contextInstructions.push('textBaseline', 'middle');\n            contextInstructions.push('textAlign', 'center');\n            var leftRight = 0.5 - align;\n            var x = align * renderWidth + leftRight * strokeWidth;\n            var strokeInstructions = [];\n            var fillInstructions = [];\n            var lineHeight = 0;\n            var lineOffset = 0;\n            var widthHeightIndex = 0;\n            var lineWidthIndex = 0;\n            var previousFont;\n            for (var i = 0, ii = chunks.length; i < ii; i += 2) {\n                var text_1 = chunks[i];\n                if (text_1 === '\\n') {\n                    lineOffset += lineHeight;\n                    lineHeight = 0;\n                    x = align * renderWidth + leftRight * strokeWidth;\n                    ++lineWidthIndex;\n                    continue;\n                }\n                var font = chunks[i + 1] || textState.font;\n                if (font !== previousFont) {\n                    if (strokeKey) {\n                        strokeInstructions.push('font', font);\n                    }\n                    if (fillKey) {\n                        fillInstructions.push('font', font);\n                    }\n                    previousFont = font;\n                }\n                lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n                var fillStrokeArgs = [\n                    text_1,\n                    x +\n                        leftRight * widths[widthHeightIndex] +\n                        align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n                    0.5 * (strokeWidth + lineHeight) + lineOffset,\n                ];\n                x += widths[widthHeightIndex];\n                if (strokeKey) {\n                    strokeInstructions.push('strokeText', fillStrokeArgs);\n                }\n                if (fillKey) {\n                    fillInstructions.push('fillText', fillStrokeArgs);\n                }\n                ++widthHeightIndex;\n            }\n            Array.prototype.push.apply(contextInstructions, strokeInstructions);\n            Array.prototype.push.apply(contextInstructions, fillInstructions);\n            this.labels_[key] = label;\n            return label;\n        };\n        /**\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n         * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n         * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n         * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n         * @param {Array<*>} fillInstruction Fill instruction.\n         * @param {Array<*>} strokeInstruction Stroke instruction.\n         */\n        Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n            context.beginPath();\n            context.moveTo.apply(context, p1);\n            context.lineTo.apply(context, p2);\n            context.lineTo.apply(context, p3);\n            context.lineTo.apply(context, p4);\n            context.lineTo.apply(context, p1);\n            if (fillInstruction) {\n                this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n                this.fill_(context);\n            }\n            if (strokeInstruction) {\n                this.setStrokeStyle_(context, \n                /** @type {Array<*>} */ (strokeInstruction));\n                context.stroke();\n            }\n        };\n        /**\n         * @private\n         * @param {number} sheetWidth Width of the sprite sheet.\n         * @param {number} sheetHeight Height of the sprite sheet.\n         * @param {number} centerX X.\n         * @param {number} centerY Y.\n         * @param {number} width Width.\n         * @param {number} height Height.\n         * @param {number} anchorX Anchor X.\n         * @param {number} anchorY Anchor Y.\n         * @param {number} originX Origin X.\n         * @param {number} originY Origin Y.\n         * @param {number} rotation Rotation.\n         * @param {import(\"../../size.js\").Size} scale Scale.\n         * @param {boolean} snapToPixel Snap to pixel.\n         * @param {Array<number>} padding Padding.\n         * @param {boolean} fillStroke Background fill or stroke.\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n         */\n        Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n            anchorX *= scale[0];\n            anchorY *= scale[1];\n            var x = centerX - anchorX;\n            var y = centerY - anchorY;\n            var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n            var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n            var boxW = padding[3] + w * scale[0] + padding[1];\n            var boxH = padding[0] + h * scale[1] + padding[2];\n            var boxX = x - padding[3];\n            var boxY = y - padding[0];\n            if (fillStroke || rotation !== 0) {\n                p1[0] = boxX;\n                p4[0] = boxX;\n                p1[1] = boxY;\n                p2[1] = boxY;\n                p2[0] = boxX + boxW;\n                p3[0] = p2[0];\n                p3[1] = boxY + boxH;\n                p4[1] = p3[1];\n            }\n            var transform;\n            if (rotation !== 0) {\n                transform = compose(create(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                apply(transform, p1);\n                apply(transform, p2);\n                apply(transform, p3);\n                apply(transform, p4);\n                createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n            }\n            else {\n                createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n            }\n            if (snapToPixel) {\n                x = Math.round(x);\n                y = Math.round(y);\n            }\n            return {\n                drawImageX: x,\n                drawImageY: y,\n                drawImageW: w,\n                drawImageH: h,\n                originX: originX,\n                originY: originY,\n                declutterBox: {\n                    minX: tmpExtent[0],\n                    minY: tmpExtent[1],\n                    maxX: tmpExtent[2],\n                    maxY: tmpExtent[3],\n                    value: feature,\n                },\n                canvasTransform: transform,\n                scale: scale,\n            };\n        };\n        /**\n         * @private\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {number} contextScale Scale of the context.\n         * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n         * @param {ImageOrLabelDimensions} dimensions Dimensions.\n         * @param {number} opacity Opacity.\n         * @param {Array<*>} fillInstruction Fill instruction.\n         * @param {Array<*>} strokeInstruction Stroke instruction.\n         * @return {boolean} The image or label was rendered.\n         */\n        Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n            var fillStroke = !!(fillInstruction || strokeInstruction);\n            var box = dimensions.declutterBox;\n            var canvas = context.canvas;\n            var strokePadding = strokeInstruction\n                ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n                : 0;\n            var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n                box.maxX + strokePadding >= 0 &&\n                box.minY - strokePadding <= canvas.height / contextScale &&\n                box.maxY + strokePadding >= 0;\n            if (intersects) {\n                if (fillStroke) {\n                    this.replayTextBackground_(context, p1, p2, p3, p4, \n                    /** @type {Array<*>} */ (fillInstruction), \n                    /** @type {Array<*>} */ (strokeInstruction));\n                }\n                drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n            }\n            return true;\n        };\n        /**\n         * @private\n         * @param {CanvasRenderingContext2D} context Context.\n         */\n        Executor.prototype.fill_ = function (context) {\n            if (this.alignFill_) {\n                var origin_1 = apply(this.renderedTransform_, [0, 0]);\n                var repeatSize = 512 * this.pixelRatio;\n                context.save();\n                context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n                context.rotate(this.viewRotation_);\n            }\n            context.fill();\n            if (this.alignFill_) {\n                context.restore();\n            }\n        };\n        /**\n         * @private\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {Array<*>} instruction Instruction.\n         */\n        Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n            context['strokeStyle'] =\n                /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n            context.lineWidth = /** @type {number} */ (instruction[2]);\n            context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n            context.miterLimit = /** @type {number} */ (instruction[5]);\n            if (context.setLineDash) {\n                context.lineDashOffset = /** @type {number} */ (instruction[7]);\n                context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n            }\n        };\n        /**\n         * @private\n         * @param {string|Array<string>} text The text to draw.\n         * @param {string} textKey The key of the text state.\n         * @param {string} strokeKey The key for the stroke state.\n         * @param {string} fillKey The key for the fill state.\n         * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n         */\n        Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n            var textState = this.textStates[textKey];\n            var label = this.createLabel(text, textKey, fillKey, strokeKey);\n            var strokeState = this.strokeStates[strokeKey];\n            var pixelRatio = this.pixelRatio;\n            var align = horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n            var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n            var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            // Remove the 2 pixels we added in createLabel() for the anchor\n            var width = label.width / pixelRatio - 2 * textState.scale[0];\n            var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n            var anchorY = (baseline * label.height) / pixelRatio +\n                2 * (0.5 - baseline) * strokeWidth;\n            return {\n                label: label,\n                anchorX: anchorX,\n                anchorY: anchorY,\n            };\n        };\n        /**\n         * @private\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {number} contextScale Scale of the context.\n         * @param {import(\"../../transform.js\").Transform} transform Transform.\n         * @param {Array<*>} instructions Instructions array.\n         * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n         * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n         * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n         *     features that intersect this extent.\n         * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n         * @return {T|undefined} Callback result.\n         * @template T\n         */\n        Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n            /** @type {Array<number>} */\n            var pixelCoordinates;\n            if (this.pixelCoordinates_ && equals$1(transform, this.renderedTransform_)) {\n                pixelCoordinates = this.pixelCoordinates_;\n            }\n            else {\n                if (!this.pixelCoordinates_) {\n                    this.pixelCoordinates_ = [];\n                }\n                pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n                setFromArray(this.renderedTransform_, transform);\n            }\n            var i = 0; // instruction index\n            var ii = instructions.length; // end of instructions\n            var d = 0; // data index\n            var dd; // end of per-instruction data\n            var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n            var pendingFill = 0;\n            var pendingStroke = 0;\n            var lastFillInstruction = null;\n            var lastStrokeInstruction = null;\n            var coordinateCache = this.coordinateCache_;\n            var viewRotation = this.viewRotation_;\n            var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n            var state = /** @type {import(\"../../render.js\").State} */ ({\n                context: context,\n                pixelRatio: this.pixelRatio,\n                resolution: this.resolution,\n                rotation: viewRotation,\n            });\n            // When the batch size gets too big, performance decreases. 200 is a good\n            // balance between batch size and number of fill/stroke instructions.\n            var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n            var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n            var x, y, currentGeometry;\n            while (i < ii) {\n                var instruction = instructions[i];\n                var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n                switch (type) {\n                    case CanvasInstruction.BEGIN_GEOMETRY:\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        currentGeometry = instruction[3];\n                        if (!feature.getGeometry()) {\n                            i = /** @type {number} */ (instruction[2]);\n                        }\n                        else if (opt_hitExtent !== undefined &&\n                            !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                            i = /** @type {number} */ (instruction[2]) + 1;\n                        }\n                        else {\n                            ++i;\n                        }\n                        break;\n                    case CanvasInstruction.BEGIN_PATH:\n                        if (pendingFill > batchSize) {\n                            this.fill_(context);\n                            pendingFill = 0;\n                        }\n                        if (pendingStroke > batchSize) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                        if (!pendingFill && !pendingStroke) {\n                            context.beginPath();\n                            prevX = NaN;\n                            prevY = NaN;\n                        }\n                        ++i;\n                        break;\n                    case CanvasInstruction.CIRCLE:\n                        d = /** @type {number} */ (instruction[1]);\n                        var x1 = pixelCoordinates[d];\n                        var y1 = pixelCoordinates[d + 1];\n                        var x2 = pixelCoordinates[d + 2];\n                        var y2 = pixelCoordinates[d + 3];\n                        var dx = x2 - x1;\n                        var dy = y2 - y1;\n                        var r = Math.sqrt(dx * dx + dy * dy);\n                        context.moveTo(x1 + r, y1);\n                        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                        ++i;\n                        break;\n                    case CanvasInstruction.CLOSE_PATH:\n                        context.closePath();\n                        ++i;\n                        break;\n                    case CanvasInstruction.CUSTOM:\n                        d = /** @type {number} */ (instruction[1]);\n                        dd = instruction[2];\n                        var geometry = \n                        /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                        var renderer = instruction[4];\n                        var fn = instruction.length == 6 ? instruction[5] : undefined;\n                        state.geometry = geometry;\n                        state.feature = feature;\n                        if (!(i in coordinateCache)) {\n                            coordinateCache[i] = [];\n                        }\n                        var coords = coordinateCache[i];\n                        if (fn) {\n                            fn(pixelCoordinates, d, dd, 2, coords);\n                        }\n                        else {\n                            coords[0] = pixelCoordinates[d];\n                            coords[1] = pixelCoordinates[d + 1];\n                            coords.length = 2;\n                        }\n                        renderer(coords, state);\n                        ++i;\n                        break;\n                    case CanvasInstruction.DRAW_IMAGE:\n                        d = /** @type {number} */ (instruction[1]);\n                        dd = /** @type {number} */ (instruction[2]);\n                        image =\n                            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                        anchorX = /** @type {number} */ (instruction[4]);\n                        anchorY = /** @type {number} */ (instruction[5]);\n                        var height = /** @type {number} */ (instruction[6]);\n                        var opacity = /** @type {number} */ (instruction[7]);\n                        var originX = /** @type {number} */ (instruction[8]);\n                        var originY = /** @type {number} */ (instruction[9]);\n                        var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                        var rotation = /** @type {number} */ (instruction[11]);\n                        var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                        var width = /** @type {number} */ (instruction[13]);\n                        var declutterImageWithText = \n                        /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                        if (!image && instruction.length >= 19) {\n                            // create label images\n                            text = /** @type {string} */ (instruction[18]);\n                            textKey = /** @type {string} */ (instruction[19]);\n                            strokeKey = /** @type {string} */ (instruction[20]);\n                            fillKey = /** @type {string} */ (instruction[21]);\n                            var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                            image = labelWithAnchor.label;\n                            instruction[3] = image;\n                            var textOffsetX = /** @type {number} */ (instruction[22]);\n                            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                            instruction[4] = anchorX;\n                            var textOffsetY = /** @type {number} */ (instruction[23]);\n                            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                            instruction[5] = anchorY;\n                            height = image.height;\n                            instruction[6] = height;\n                            width = image.width;\n                            instruction[13] = width;\n                        }\n                        var geometryWidths = void 0;\n                        if (instruction.length > 24) {\n                            geometryWidths = /** @type {number} */ (instruction[24]);\n                        }\n                        var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                        if (instruction.length > 16) {\n                            padding = /** @type {Array<number>} */ (instruction[15]);\n                            backgroundFill = /** @type {boolean} */ (instruction[16]);\n                            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                        }\n                        else {\n                            padding = defaultPadding;\n                            backgroundFill = false;\n                            backgroundStroke = false;\n                        }\n                        if (rotateWithView && viewRotationFromTransform) {\n                            // Canvas is expected to be rotated to reverse view rotation.\n                            rotation += viewRotation;\n                        }\n                        else if (!rotateWithView && !viewRotationFromTransform) {\n                            // Canvas is not rotated, images need to be rotated back to be north-up.\n                            rotation -= viewRotation;\n                        }\n                        var widthIndex = 0;\n                        for (; d < dd; d += 2) {\n                            if (geometryWidths &&\n                                geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                                continue;\n                            }\n                            var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                            /** @type {ReplayImageOrLabelArgs} */\n                            var args = [\n                                context,\n                                contextScale,\n                                image,\n                                dimensions,\n                                opacity,\n                                backgroundFill\n                                    ? /** @type {Array<*>} */ (lastFillInstruction)\n                                    : null,\n                                backgroundStroke\n                                    ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                    : null,\n                            ];\n                            var imageArgs = void 0;\n                            var imageDeclutterBox = void 0;\n                            if (opt_declutterTree && declutterImageWithText) {\n                                var index = dd - d;\n                                if (!declutterImageWithText[index]) {\n                                    // We now have the image for an image+text combination.\n                                    declutterImageWithText[index] = args;\n                                    // Don't render anything for now, wait for the text.\n                                    continue;\n                                }\n                                imageArgs = declutterImageWithText[index];\n                                delete declutterImageWithText[index];\n                                imageDeclutterBox = getDeclutterBox(imageArgs);\n                                if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                    continue;\n                                }\n                            }\n                            if (opt_declutterTree &&\n                                opt_declutterTree.collides(dimensions.declutterBox)) {\n                                continue;\n                            }\n                            if (imageArgs) {\n                                // We now have image and text for an image+text combination.\n                                if (opt_declutterTree) {\n                                    opt_declutterTree.insert(imageDeclutterBox);\n                                }\n                                // Render the image before we render the text.\n                                this.replayImageOrLabel_.apply(this, imageArgs);\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(dimensions.declutterBox);\n                            }\n                            this.replayImageOrLabel_.apply(this, args);\n                        }\n                        ++i;\n                        break;\n                    case CanvasInstruction.DRAW_CHARS:\n                        var begin = /** @type {number} */ (instruction[1]);\n                        var end = /** @type {number} */ (instruction[2]);\n                        var baseline = /** @type {number} */ (instruction[3]);\n                        var overflow = /** @type {number} */ (instruction[4]);\n                        fillKey = /** @type {string} */ (instruction[5]);\n                        var maxAngle = /** @type {number} */ (instruction[6]);\n                        var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                        var offsetY = /** @type {number} */ (instruction[8]);\n                        strokeKey = /** @type {string} */ (instruction[9]);\n                        var strokeWidth = /** @type {number} */ (instruction[10]);\n                        text = /** @type {string} */ (instruction[11]);\n                        textKey = /** @type {string} */ (instruction[12]);\n                        var pixelRatioScale = [\n                            /** @type {number} */ (instruction[13]),\n                            /** @type {number} */ (instruction[13]),\n                        ];\n                        var textState = this.textStates[textKey];\n                        var font = textState.font;\n                        var textScale = [\n                            textState.scale[0] * measurePixelRatio,\n                            textState.scale[1] * measurePixelRatio,\n                        ];\n                        var cachedWidths = void 0;\n                        if (font in this.widths_) {\n                            cachedWidths = this.widths_[font];\n                        }\n                        else {\n                            cachedWidths = {};\n                            this.widths_[font] = cachedWidths;\n                        }\n                        var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                        var textLength = Math.abs(textScale[0]) *\n                            measureAndCacheTextWidth(font, text, cachedWidths);\n                        if (overflow || textLength <= pathLength) {\n                            var textAlign = this.textStates[textKey].textAlign;\n                            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                            var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                            drawChars: if (parts) {\n                                /** @type {Array<ReplayImageOrLabelArgs>} */\n                                var replayImageOrLabelArgs = [];\n                                var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                                if (strokeKey) {\n                                    for (c = 0, cc = parts.length; c < cc; ++c) {\n                                        part = parts[c]; // x, y, anchorX, rotation, chunk\n                                        chars = /** @type {string} */ (part[4]);\n                                        label = this.createLabel(chars, textKey, '', strokeKey);\n                                        anchorX =\n                                            /** @type {number} */ (part[2]) +\n                                                (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                        anchorY =\n                                            baseline * label.height +\n                                                ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                    textScale[0] -\n                                                offsetY;\n                                        var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                        if (opt_declutterTree &&\n                                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                                            break drawChars;\n                                        }\n                                        replayImageOrLabelArgs.push([\n                                            context,\n                                            contextScale,\n                                            label,\n                                            dimensions,\n                                            1,\n                                            null,\n                                            null,\n                                        ]);\n                                    }\n                                }\n                                if (fillKey) {\n                                    for (c = 0, cc = parts.length; c < cc; ++c) {\n                                        part = parts[c]; // x, y, anchorX, rotation, chunk\n                                        chars = /** @type {string} */ (part[4]);\n                                        label = this.createLabel(chars, textKey, fillKey, '');\n                                        anchorX = /** @type {number} */ (part[2]);\n                                        anchorY = baseline * label.height - offsetY;\n                                        var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                        if (opt_declutterTree &&\n                                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                                            break drawChars;\n                                        }\n                                        replayImageOrLabelArgs.push([\n                                            context,\n                                            contextScale,\n                                            label,\n                                            dimensions,\n                                            1,\n                                            null,\n                                            null,\n                                        ]);\n                                    }\n                                }\n                                if (opt_declutterTree) {\n                                    opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                                }\n                                for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                    this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                                }\n                            }\n                        }\n                        ++i;\n                        break;\n                    case CanvasInstruction.END_GEOMETRY:\n                        if (opt_featureCallback !== undefined) {\n                            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                            var result = opt_featureCallback(feature, currentGeometry);\n                            if (result) {\n                                return result;\n                            }\n                        }\n                        ++i;\n                        break;\n                    case CanvasInstruction.FILL:\n                        if (batchSize) {\n                            pendingFill++;\n                        }\n                        else {\n                            this.fill_(context);\n                        }\n                        ++i;\n                        break;\n                    case CanvasInstruction.MOVE_TO_LINE_TO:\n                        d = /** @type {number} */ (instruction[1]);\n                        dd = /** @type {number} */ (instruction[2]);\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (roundX !== prevX || roundY !== prevY) {\n                            context.moveTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                        for (d += 2; d < dd; d += 2) {\n                            x = pixelCoordinates[d];\n                            y = pixelCoordinates[d + 1];\n                            roundX = (x + 0.5) | 0;\n                            roundY = (y + 0.5) | 0;\n                            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                                context.lineTo(x, y);\n                                prevX = roundX;\n                                prevY = roundY;\n                            }\n                        }\n                        ++i;\n                        break;\n                    case CanvasInstruction.SET_FILL_STYLE:\n                        lastFillInstruction = instruction;\n                        this.alignFill_ = instruction[2];\n                        if (pendingFill) {\n                            this.fill_(context);\n                            pendingFill = 0;\n                            if (pendingStroke) {\n                                context.stroke();\n                                pendingStroke = 0;\n                            }\n                        }\n                        context.fillStyle =\n                            /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                        ++i;\n                        break;\n                    case CanvasInstruction.SET_STROKE_STYLE:\n                        lastStrokeInstruction = instruction;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                        this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                        ++i;\n                        break;\n                    case CanvasInstruction.STROKE:\n                        if (batchSize) {\n                            pendingStroke++;\n                        }\n                        else {\n                            context.stroke();\n                        }\n                        ++i;\n                        break;\n                    default:\n                        ++i; // consume the instruction anyway, to avoid an infinite loop\n                        break;\n                }\n            }\n            if (pendingFill) {\n                this.fill_(context);\n            }\n            if (pendingStroke) {\n                context.stroke();\n            }\n            return undefined;\n        };\n        /**\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {number} contextScale Scale of the context.\n         * @param {import(\"../../transform.js\").Transform} transform Transform.\n         * @param {number} viewRotation View rotation.\n         * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n         * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n         */\n        Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n            this.viewRotation_ = viewRotation;\n            this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n        };\n        /**\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {import(\"../../transform.js\").Transform} transform Transform.\n         * @param {number} viewRotation View rotation.\n         * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n         * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n         *     features that intersect this extent.\n         * @return {T|undefined} Callback result.\n         * @template T\n         */\n        Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n            this.viewRotation_ = viewRotation;\n            return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n        };\n        return Executor;\n    }());\n    var Executor$1 = Executor;\n\n    /**\n     * @module ol/render/canvas/ExecutorGroup\n     */\n    /**\n     * @const\n     * @type {Array<import(\"./BuilderType.js\").default>}\n     */\n    var ORDER = [\n        BuilderType.POLYGON,\n        BuilderType.CIRCLE,\n        BuilderType.LINE_STRING,\n        BuilderType.IMAGE,\n        BuilderType.TEXT,\n        BuilderType.DEFAULT,\n    ];\n    var ExecutorGroup = /** @class */ (function () {\n        /**\n         * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n         * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n         * should be set here, unless the target context does not exceed that extent (which\n         * can be the case when rendering to tiles).\n         * @param {number} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {boolean} overlaps The executor group can have overlapping geometries.\n         * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n         * The serializable instructions.\n         * @param {number} [opt_renderBuffer] Optional rendering buffer.\n         */\n        function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n            /**\n             * @private\n             * @type {import(\"../../extent.js\").Extent}\n             */\n            this.maxExtent_ = maxExtent;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this.overlaps_ = overlaps;\n            /**\n             * @private\n             * @type {number}\n             */\n            this.pixelRatio_ = pixelRatio;\n            /**\n             * @private\n             * @type {number}\n             */\n            this.resolution_ = resolution;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            this.renderBuffer_ = opt_renderBuffer;\n            /**\n             * @private\n             * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n             */\n            this.executorsByZIndex_ = {};\n            /**\n             * @private\n             * @type {CanvasRenderingContext2D}\n             */\n            this.hitDetectionContext_ = null;\n            /**\n             * @private\n             * @type {import(\"../../transform.js\").Transform}\n             */\n            this.hitDetectionTransform_ = create();\n            this.createExecutors_(allInstructions);\n        }\n        /**\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {import(\"../../transform.js\").Transform} transform Transform.\n         */\n        ExecutorGroup.prototype.clip = function (context, transform) {\n            var flatClipCoords = this.getClipCoords(transform);\n            context.beginPath();\n            context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n            context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n            context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n            context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n            context.clip();\n        };\n        /**\n         * Create executors and populate them using the provided instructions.\n         * @private\n         * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n         */\n        ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n            for (var zIndex in allInstructions) {\n                var executors = this.executorsByZIndex_[zIndex];\n                if (executors === undefined) {\n                    executors = {};\n                    this.executorsByZIndex_[zIndex] = executors;\n                }\n                var instructionByZindex = allInstructions[zIndex];\n                for (var builderType in instructionByZindex) {\n                    var instructions = instructionByZindex[builderType];\n                    executors[builderType] = new Executor$1(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n                }\n            }\n        };\n        /**\n         * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n         * @return {boolean} Has executors of the provided types.\n         */\n        ExecutorGroup.prototype.hasExecutors = function (executors) {\n            for (var zIndex in this.executorsByZIndex_) {\n                var candidates = this.executorsByZIndex_[zIndex];\n                for (var i = 0, ii = executors.length; i < ii; ++i) {\n                    if (executors[i] in candidates) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        /**\n         * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n         * @param {number} resolution Resolution.\n         * @param {number} rotation Rotation.\n         * @param {number} hitTolerance Hit tolerance in pixels.\n         * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n         * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n         * @return {T|undefined} Callback result.\n         * @template T\n         */\n        ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n            hitTolerance = Math.round(hitTolerance);\n            var contextSize = hitTolerance * 2 + 1;\n            var transform = compose(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n            var newContext = !this.hitDetectionContext_;\n            if (newContext) {\n                this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n            }\n            var context = this.hitDetectionContext_;\n            if (context.canvas.width !== contextSize ||\n                context.canvas.height !== contextSize) {\n                context.canvas.width = contextSize;\n                context.canvas.height = contextSize;\n            }\n            else if (!newContext) {\n                context.clearRect(0, 0, contextSize, contextSize);\n            }\n            /**\n             * @type {import(\"../../extent.js\").Extent}\n             */\n            var hitExtent;\n            if (this.renderBuffer_ !== undefined) {\n                hitExtent = createEmpty();\n                extendCoordinate(hitExtent, coordinate);\n                buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n            }\n            var indexes = getPixelIndexArray(hitTolerance);\n            var builderType;\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n             * @return {T|undefined} Callback result.\n             */\n            function featureCallback(feature, geometry) {\n                var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n                for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                    if (imageData[indexes[i_1]] > 0) {\n                        if (!declutteredFeatures ||\n                            (builderType !== BuilderType.IMAGE &&\n                                builderType !== BuilderType.TEXT) ||\n                            declutteredFeatures.indexOf(feature) !== -1) {\n                            var idx = (indexes[i_1] - 3) / 4;\n                            var x = hitTolerance - (idx % contextSize);\n                            var y = hitTolerance - ((idx / contextSize) | 0);\n                            var result_1 = callback(feature, geometry, x * x + y * y);\n                            if (result_1) {\n                                return result_1;\n                            }\n                        }\n                        context.clearRect(0, 0, contextSize, contextSize);\n                        break;\n                    }\n                }\n                return undefined;\n            }\n            /** @type {Array<number>} */\n            var zs = Object.keys(this.executorsByZIndex_).map(Number);\n            zs.sort(numberSafeCompareFunction);\n            var i, j, executors, executor, result;\n            for (i = zs.length - 1; i >= 0; --i) {\n                var zIndexKey = zs[i].toString();\n                executors = this.executorsByZIndex_[zIndexKey];\n                for (j = ORDER.length - 1; j >= 0; --j) {\n                    builderType = ORDER[j];\n                    executor = executors[builderType];\n                    if (executor !== undefined) {\n                        result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return undefined;\n        };\n        /**\n         * @param {import(\"../../transform.js\").Transform} transform Transform.\n         * @return {Array<number>} Clip coordinates.\n         */\n        ExecutorGroup.prototype.getClipCoords = function (transform) {\n            var maxExtent = this.maxExtent_;\n            if (!maxExtent) {\n                return null;\n            }\n            var minX = maxExtent[0];\n            var minY = maxExtent[1];\n            var maxX = maxExtent[2];\n            var maxY = maxExtent[3];\n            var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n            transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n            return flatClipCoords;\n        };\n        /**\n         * @return {boolean} Is empty.\n         */\n        ExecutorGroup.prototype.isEmpty = function () {\n            return isEmpty(this.executorsByZIndex_);\n        };\n        /**\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {number} contextScale Scale of the context.\n         * @param {import(\"../../transform.js\").Transform} transform Transform.\n         * @param {number} viewRotation View rotation.\n         * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n         * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n         *     Default is {@link module:ol/render/replay~ORDER}\n         * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n         */\n        ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n            /** @type {Array<number>} */\n            var zs = Object.keys(this.executorsByZIndex_).map(Number);\n            zs.sort(numberSafeCompareFunction);\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            if (this.maxExtent_) {\n                context.save();\n                this.clip(context, transform);\n            }\n            var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n            var i, ii, j, jj, replays, replay;\n            if (opt_declutterTree) {\n                zs.reverse();\n            }\n            for (i = 0, ii = zs.length; i < ii; ++i) {\n                var zIndexKey = zs[i].toString();\n                replays = this.executorsByZIndex_[zIndexKey];\n                for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                    var builderType = builderTypes[j];\n                    replay = replays[builderType];\n                    if (replay !== undefined) {\n                        replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                    }\n                }\n            }\n            if (this.maxExtent_) {\n                context.restore();\n            }\n        };\n        return ExecutorGroup;\n    }());\n    /**\n     * This cache is used to store arrays of indexes for calculated pixel circles\n     * to increase performance.\n     * It is a static property to allow each Replaygroup to access it.\n     * @type {Object<number, Array<number>>}\n     */\n    var circlePixelIndexArrayCache = {};\n    /**\n     * This methods creates an array with indexes of all pixels within a circle,\n     * ordered by how close they are to the center.\n     * A cache is used to increase performance.\n     * @param {number} radius Radius.\n     * @return {Array<number>} An array with indexes within a circle.\n     */\n    function getPixelIndexArray(radius) {\n        if (circlePixelIndexArrayCache[radius] !== undefined) {\n            return circlePixelIndexArrayCache[radius];\n        }\n        var size = radius * 2 + 1;\n        var maxDistanceSq = radius * radius;\n        var distances = new Array(maxDistanceSq + 1);\n        for (var i = 0; i <= radius; ++i) {\n            for (var j = 0; j <= radius; ++j) {\n                var distanceSq = i * i + j * j;\n                if (distanceSq > maxDistanceSq) {\n                    break;\n                }\n                var distance = distances[distanceSq];\n                if (!distance) {\n                    distance = [];\n                    distances[distanceSq] = distance;\n                }\n                distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n                }\n                if (j > 0) {\n                    distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                    if (i > 0) {\n                        distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                    }\n                }\n            }\n        }\n        var pixelIndex = [];\n        for (var i = 0, ii = distances.length; i < ii; ++i) {\n            if (distances[i]) {\n                pixelIndex.push.apply(pixelIndex, distances[i]);\n            }\n        }\n        circlePixelIndexArrayCache[radius] = pixelIndex;\n        return pixelIndex;\n    }\n    var ExecutorGroup$1 = ExecutorGroup;\n\n    /**\n     * @module ol/ViewHint\n     */\n    /**\n     * @enum {number}\n     */\n    var ViewHint = {\n        ANIMATING: 0,\n        INTERACTING: 1,\n    };\n\n    /**\n     * @module ol/proj/Units\n     */\n    /**\n     * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n     * `'us-ft'`.\n     * @enum {string}\n     */\n    var Units = {\n        /**\n         * Radians\n         * @api\n         */\n        RADIANS: 'radians',\n        /**\n         * Degrees\n         * @api\n         */\n        DEGREES: 'degrees',\n        /**\n         * Feet\n         * @api\n         */\n        FEET: 'ft',\n        /**\n         * Meters\n         * @api\n         */\n        METERS: 'm',\n        /**\n         * Pixels\n         * @api\n         */\n        PIXELS: 'pixels',\n        /**\n         * Tile Pixels\n         * @api\n         */\n        TILE_PIXELS: 'tile-pixels',\n        /**\n         * US Feet\n         * @api\n         */\n        USFEET: 'us-ft',\n    };\n    /**\n     * Meters per unit lookup table.\n     * @const\n     * @type {Object<Units, number>}\n     * @api\n     */\n    var METERS_PER_UNIT$1 = {};\n    // use the radius of the Normal sphere\n    METERS_PER_UNIT$1[Units.RADIANS] = 6370997 / (2 * Math.PI);\n    METERS_PER_UNIT$1[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\n    METERS_PER_UNIT$1[Units.FEET] = 0.3048;\n    METERS_PER_UNIT$1[Units.METERS] = 1;\n    METERS_PER_UNIT$1[Units.USFEET] = 1200 / 3937;\n    var Units$1 = Units;\n\n    /**\n     * @module ol/proj/Projection\n     */\n    /**\n     * @typedef {Object} Options\n     * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n     * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n     * proj4 projection is defined for `code`.\n     * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n     * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n     * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n     * @property {number} [metersPerUnit] The meters per unit for the SRS.\n     * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n     * lookup table.\n     * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n     * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n     * Function to determine resolution at a point. The function is called with a\n     * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n     * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n     * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n     */\n    /**\n     * @classdesc\n     * Projection definition class. One of these is created for each projection\n     * supported in the application and stored in the {@link module:ol/proj} namespace.\n     * You can use these in applications, but this is not required, as API params\n     * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n     * code will suffice.\n     *\n     * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n     * projection.\n     *\n     * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n     * with the following aliases:\n     * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n     *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n     *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n     *     urn:x-ogc:def:crs:EPSG:4326\n     * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n     *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n     *     http://www.opengis.net/gml/srs/epsg.xml#3857\n     *\n     * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n     * be added using `proj4.defs()`. After all required projection definitions are\n     * added, call the {@link module:ol/proj/proj4.register} function.\n     *\n     * @api\n     */\n    var Projection = /** @class */ (function () {\n        /**\n         * @param {Options} options Projection options.\n         */\n        function Projection(options) {\n            /**\n             * @private\n             * @type {string}\n             */\n            this.code_ = options.code;\n            /**\n             * Units of projected coordinates. When set to `TILE_PIXELS`, a\n             * `this.extent_` and `this.worldExtent_` must be configured properly for each\n             * tile.\n             * @private\n             * @type {import(\"./Units.js\").default}\n             */\n            this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n            /**\n             * Validity extent of the projection in projected coordinates. For projections\n             * with `TILE_PIXELS` units, this is the extent of the tile in\n             * tile pixel space.\n             * @private\n             * @type {import(\"../extent.js\").Extent}\n             */\n            this.extent_ = options.extent !== undefined ? options.extent : null;\n            /**\n             * Extent of the world in EPSG:4326. For projections with\n             * `TILE_PIXELS` units, this is the extent of the tile in\n             * projected coordinate space.\n             * @private\n             * @type {import(\"../extent.js\").Extent}\n             */\n            this.worldExtent_ =\n                options.worldExtent !== undefined ? options.worldExtent : null;\n            /**\n             * @private\n             * @type {string}\n             */\n            this.axisOrientation_ =\n                options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this.global_ = options.global !== undefined ? options.global : false;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this.canWrapX_ = !!(this.global_ && this.extent_);\n            /**\n             * @private\n             * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n             */\n            this.getPointResolutionFunc_ = options.getPointResolution;\n            /**\n             * @private\n             * @type {import(\"../tilegrid/TileGrid.js\").default}\n             */\n            this.defaultTileGrid_ = null;\n            /**\n             * @private\n             * @type {number|undefined}\n             */\n            this.metersPerUnit_ = options.metersPerUnit;\n        }\n        /**\n         * @return {boolean} The projection is suitable for wrapping the x-axis\n         */\n        Projection.prototype.canWrapX = function () {\n            return this.canWrapX_;\n        };\n        /**\n         * Get the code for this projection, e.g. 'EPSG:4326'.\n         * @return {string} Code.\n         * @api\n         */\n        Projection.prototype.getCode = function () {\n            return this.code_;\n        };\n        /**\n         * Get the validity extent for this projection.\n         * @return {import(\"../extent.js\").Extent} Extent.\n         * @api\n         */\n        Projection.prototype.getExtent = function () {\n            return this.extent_;\n        };\n        /**\n         * Get the units of this projection.\n         * @return {import(\"./Units.js\").default} Units.\n         * @api\n         */\n        Projection.prototype.getUnits = function () {\n            return this.units_;\n        };\n        /**\n         * Get the amount of meters per unit of this projection.  If the projection is\n         * not configured with `metersPerUnit` or a units identifier, the return is\n         * `undefined`.\n         * @return {number|undefined} Meters.\n         * @api\n         */\n        Projection.prototype.getMetersPerUnit = function () {\n            return this.metersPerUnit_ || METERS_PER_UNIT$1[this.units_];\n        };\n        /**\n         * Get the world extent for this projection.\n         * @return {import(\"../extent.js\").Extent} Extent.\n         * @api\n         */\n        Projection.prototype.getWorldExtent = function () {\n            return this.worldExtent_;\n        };\n        /**\n         * Get the axis orientation of this projection.\n         * Example values are:\n         * enu - the default easting, northing, elevation.\n         * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n         *     or south orientated transverse mercator.\n         * wnu - westing, northing, up - some planetary coordinate systems have\n         *     \"west positive\" coordinate systems\n         * @return {string} Axis orientation.\n         * @api\n         */\n        Projection.prototype.getAxisOrientation = function () {\n            return this.axisOrientation_;\n        };\n        /**\n         * Is this projection a global projection which spans the whole world?\n         * @return {boolean} Whether the projection is global.\n         * @api\n         */\n        Projection.prototype.isGlobal = function () {\n            return this.global_;\n        };\n        /**\n         * Set if the projection is a global projection which spans the whole world\n         * @param {boolean} global Whether the projection is global.\n         * @api\n         */\n        Projection.prototype.setGlobal = function (global) {\n            this.global_ = global;\n            this.canWrapX_ = !!(global && this.extent_);\n        };\n        /**\n         * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n         */\n        Projection.prototype.getDefaultTileGrid = function () {\n            return this.defaultTileGrid_;\n        };\n        /**\n         * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n         */\n        Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n            this.defaultTileGrid_ = tileGrid;\n        };\n        /**\n         * Set the validity extent for this projection.\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @api\n         */\n        Projection.prototype.setExtent = function (extent) {\n            this.extent_ = extent;\n            this.canWrapX_ = !!(this.global_ && extent);\n        };\n        /**\n         * Set the world extent for this projection.\n         * @param {import(\"../extent.js\").Extent} worldExtent World extent\n         *     [minlon, minlat, maxlon, maxlat].\n         * @api\n         */\n        Projection.prototype.setWorldExtent = function (worldExtent) {\n            this.worldExtent_ = worldExtent;\n        };\n        /**\n         * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n         * for this projection.\n         * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n         * @api\n         */\n        Projection.prototype.setGetPointResolution = function (func) {\n            this.getPointResolutionFunc_ = func;\n        };\n        /**\n         * Get the custom point resolution function for this projection (if set).\n         * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n         * resolution function (if set).\n         */\n        Projection.prototype.getPointResolutionFunc = function () {\n            return this.getPointResolutionFunc_;\n        };\n        return Projection;\n    }());\n    var Projection$1 = Projection;\n\n    var __extends$g = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * Radius of WGS84 sphere\n     *\n     * @const\n     * @type {number}\n     */\n    var RADIUS$1 = 6378137;\n    /**\n     * @const\n     * @type {number}\n     */\n    var HALF_SIZE = Math.PI * RADIUS$1;\n    /**\n     * @const\n     * @type {import(\"../extent.js\").Extent}\n     */\n    var EXTENT$1 = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n    /**\n     * @const\n     * @type {import(\"../extent.js\").Extent}\n     */\n    var WORLD_EXTENT = [-180, -85, 180, 85];\n    /**\n     * Maximum safe value in y direction\n     * @const\n     * @type {number}\n     */\n    var MAX_SAFE_Y = RADIUS$1 * Math.log(Math.tan(Math.PI / 2));\n    /**\n     * @classdesc\n     * Projection object for web/spherical Mercator (EPSG:3857).\n     */\n    var EPSG3857Projection = /** @class */ (function (_super) {\n        __extends$g(EPSG3857Projection, _super);\n        /**\n         * @param {string} code Code.\n         */\n        function EPSG3857Projection(code) {\n            return _super.call(this, {\n                code: code,\n                units: Units$1.METERS,\n                extent: EXTENT$1,\n                global: true,\n                worldExtent: WORLD_EXTENT,\n                getPointResolution: function (resolution, point) {\n                    return resolution / cosh(point[1] / RADIUS$1);\n                },\n            }) || this;\n        }\n        return EPSG3857Projection;\n    }(Projection$1));\n    /**\n     * Projections equal to EPSG:3857.\n     *\n     * @const\n     * @type {Array<import(\"./Projection.js\").default>}\n     */\n    var PROJECTIONS$1 = [\n        new EPSG3857Projection('EPSG:3857'),\n        new EPSG3857Projection('EPSG:102100'),\n        new EPSG3857Projection('EPSG:102113'),\n        new EPSG3857Projection('EPSG:900913'),\n        new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n        new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n    ];\n    /**\n     * Transformation from EPSG:4326 to EPSG:3857.\n     *\n     * @param {Array<number>} input Input array of coordinate values.\n     * @param {Array<number>} [opt_output] Output array of coordinate values.\n     * @param {number} [opt_dimension] Dimension (default is `2`).\n     * @return {Array<number>} Output array of coordinate values.\n     */\n    function fromEPSG4326(input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension > 1 ? opt_dimension : 2;\n        var output = opt_output;\n        if (output === undefined) {\n            if (dimension > 2) {\n                // preserve values beyond second dimension\n                output = input.slice();\n            }\n            else {\n                output = new Array(length);\n            }\n        }\n        for (var i = 0; i < length; i += dimension) {\n            output[i] = (HALF_SIZE * input[i]) / 180;\n            var y = RADIUS$1 * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n            if (y > MAX_SAFE_Y) {\n                y = MAX_SAFE_Y;\n            }\n            else if (y < -MAX_SAFE_Y) {\n                y = -MAX_SAFE_Y;\n            }\n            output[i + 1] = y;\n        }\n        return output;\n    }\n    /**\n     * Transformation from EPSG:3857 to EPSG:4326.\n     *\n     * @param {Array<number>} input Input array of coordinate values.\n     * @param {Array<number>} [opt_output] Output array of coordinate values.\n     * @param {number} [opt_dimension] Dimension (default is `2`).\n     * @return {Array<number>} Output array of coordinate values.\n     */\n    function toEPSG4326(input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension > 1 ? opt_dimension : 2;\n        var output = opt_output;\n        if (output === undefined) {\n            if (dimension > 2) {\n                // preserve values beyond second dimension\n                output = input.slice();\n            }\n            else {\n                output = new Array(length);\n            }\n        }\n        for (var i = 0; i < length; i += dimension) {\n            output[i] = (180 * input[i]) / HALF_SIZE;\n            output[i + 1] =\n                (360 * Math.atan(Math.exp(input[i + 1] / RADIUS$1))) / Math.PI - 90;\n        }\n        return output;\n    }\n\n    var __extends$f = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * Semi-major radius of the WGS84 ellipsoid.\n     *\n     * @const\n     * @type {number}\n     */\n    var RADIUS = 6378137;\n    /**\n     * Extent of the EPSG:4326 projection which is the whole world.\n     *\n     * @const\n     * @type {import(\"../extent.js\").Extent}\n     */\n    var EXTENT = [-180, -90, 180, 90];\n    /**\n     * @const\n     * @type {number}\n     */\n    var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n    /**\n     * @classdesc\n     * Projection object for WGS84 geographic coordinates (EPSG:4326).\n     *\n     * Note that OpenLayers does not strictly comply with the EPSG definition.\n     * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n     * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n     */\n    var EPSG4326Projection = /** @class */ (function (_super) {\n        __extends$f(EPSG4326Projection, _super);\n        /**\n         * @param {string} code Code.\n         * @param {string} [opt_axisOrientation] Axis orientation.\n         */\n        function EPSG4326Projection(code, opt_axisOrientation) {\n            return _super.call(this, {\n                code: code,\n                units: Units$1.DEGREES,\n                extent: EXTENT,\n                axisOrientation: opt_axisOrientation,\n                global: true,\n                metersPerUnit: METERS_PER_UNIT,\n                worldExtent: EXTENT,\n            }) || this;\n        }\n        return EPSG4326Projection;\n    }(Projection$1));\n    /**\n     * Projections equal to EPSG:4326.\n     *\n     * @const\n     * @type {Array<import(\"./Projection.js\").default>}\n     */\n    var PROJECTIONS = [\n        new EPSG4326Projection('CRS:84'),\n        new EPSG4326Projection('EPSG:4326', 'neu'),\n        new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n        new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n        new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n        new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n        new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n    ];\n\n    /**\n     * @module ol/proj/projections\n     */\n    /**\n     * @type {Object<string, import(\"./Projection.js\").default>}\n     */\n    var cache = {};\n    /**\n     * Get a cached projection by code.\n     * @param {string} code The code for the projection.\n     * @return {import(\"./Projection.js\").default} The projection (if cached).\n     */\n    function get$3(code) {\n        return (cache[code] ||\n            cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n            null);\n    }\n    /**\n     * Add a projection to the cache.\n     * @param {string} code The projection code.\n     * @param {import(\"./Projection.js\").default} projection The projection to cache.\n     */\n    function add$1(code, projection) {\n        cache[code] = projection;\n    }\n\n    /**\n     * @module ol/proj/transforms\n     */\n    /**\n     * @private\n     * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n     */\n    var transforms = {};\n    /**\n     * Registers a conversion function to convert coordinates from the source\n     * projection to the destination projection.\n     *\n     * @param {import(\"./Projection.js\").default} source Source.\n     * @param {import(\"./Projection.js\").default} destination Destination.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    function add(source, destination, transformFn) {\n        var sourceCode = source.getCode();\n        var destinationCode = destination.getCode();\n        if (!(sourceCode in transforms)) {\n            transforms[sourceCode] = {};\n        }\n        transforms[sourceCode][destinationCode] = transformFn;\n    }\n    /**\n     * Get a transform given a source code and a destination code.\n     * @param {string} sourceCode The code for the source projection.\n     * @param {string} destinationCode The code for the destination projection.\n     * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n     */\n    function get$2(sourceCode, destinationCode) {\n        var transform;\n        if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n            transform = transforms[sourceCode][destinationCode];\n        }\n        return transform;\n    }\n\n    /**\n     * @module ol/coordinate\n     */\n    /**\n     * Modifies the provided coordinate in-place to be within the real world\n     * extent. The lower projection extent boundary is inclusive, the upper one\n     * exclusive.\n     *\n     * @param {Coordinate} coordinate Coordinate.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {Coordinate} The coordinate within the real world extent.\n     */\n    function wrapX(coordinate, projection) {\n        if (projection.canWrapX()) {\n            var worldWidth = getWidth(projection.getExtent());\n            var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n            if (worldsAway) {\n                coordinate[0] -= worldsAway * worldWidth;\n            }\n        }\n        return coordinate;\n    }\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n     * @return {number} Offset in world widths.\n     */\n    function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n        var projectionExtent = projection.getExtent();\n        var worldsAway = 0;\n        if (projection.canWrapX() &&\n            (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n            var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n            worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n        }\n        return worldsAway;\n    }\n\n    /**\n     * @module ol/sphere\n     */\n    /**\n     * Object literal with options for the {@link getLength} or {@link getArea}\n     * functions.\n     * @typedef {Object} SphereMetricOptions\n     * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n     * Projection of the  geometry.  By default, the geometry is assumed to be in\n     * Web Mercator.\n     * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n     * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n     * for the WGS84 ellipsoid is used.\n     */\n    /**\n     * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n     * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n     * @type {number}\n     */\n    var DEFAULT_RADIUS = 6371008.8;\n    /**\n     * Get the great circle distance (in meters) between two geographic coordinates.\n     * @param {Array} c1 Starting coordinate.\n     * @param {Array} c2 Ending coordinate.\n     * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n     *     mean radius using the WGS84 ellipsoid.\n     * @return {number} The great circle distance between the points (in meters).\n     * @api\n     */\n    function getDistance(c1, c2, opt_radius) {\n        var radius = opt_radius || DEFAULT_RADIUS;\n        var lat1 = toRadians(c1[1]);\n        var lat2 = toRadians(c2[1]);\n        var deltaLatBy2 = (lat2 - lat1) / 2;\n        var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n        var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n            Math.sin(deltaLonBy2) *\n                Math.sin(deltaLonBy2) *\n                Math.cos(lat1) *\n                Math.cos(lat2);\n        return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    }\n\n    /**\n     * @module ol/proj\n     */\n    /**\n     * @param {Array<number>} input Input coordinate array.\n     * @param {Array<number>} [opt_output] Output array of coordinate values.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output coordinate array (new array, same coordinate\n     *     values).\n     */\n    function cloneTransform(input, opt_output, opt_dimension) {\n        var output;\n        if (opt_output !== undefined) {\n            for (var i = 0, ii = input.length; i < ii; ++i) {\n                opt_output[i] = input[i];\n            }\n            output = opt_output;\n        }\n        else {\n            output = input.slice();\n        }\n        return output;\n    }\n    /**\n     * @param {Array<number>} input Input coordinate array.\n     * @param {Array<number>} [opt_output] Output array of coordinate values.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Input coordinate array (same array as input).\n     */\n    function identityTransform(input, opt_output, opt_dimension) {\n        if (opt_output !== undefined && input !== opt_output) {\n            for (var i = 0, ii = input.length; i < ii; ++i) {\n                opt_output[i] = input[i];\n            }\n            input = opt_output;\n        }\n        return input;\n    }\n    /**\n     * Add a Projection object to the list of supported projections that can be\n     * looked up by their code.\n     *\n     * @param {Projection} projection Projection instance.\n     * @api\n     */\n    function addProjection(projection) {\n        add$1(projection.getCode(), projection);\n        add(projection, projection, cloneTransform);\n    }\n    /**\n     * @param {Array<Projection>} projections Projections.\n     */\n    function addProjections(projections) {\n        projections.forEach(addProjection);\n    }\n    /**\n     * Fetches a Projection object for the code specified.\n     *\n     * @param {ProjectionLike} projectionLike Either a code string which is\n     *     a combination of authority and identifier such as \"EPSG:4326\", or an\n     *     existing projection object, or undefined.\n     * @return {Projection|null} Projection object, or null if not in list.\n     * @api\n     */\n    function get$1(projectionLike) {\n        return typeof projectionLike === 'string'\n            ? get$3(/** @type {string} */ (projectionLike))\n            : /** @type {Projection} */ (projectionLike) || null;\n    }\n    /**\n     * Registers transformation functions that don't alter coordinates. Those allow\n     * to transform between projections with equal meaning.\n     *\n     * @param {Array<Projection>} projections Projections.\n     * @api\n     */\n    function addEquivalentProjections(projections) {\n        addProjections(projections);\n        projections.forEach(function (source) {\n            projections.forEach(function (destination) {\n                if (source !== destination) {\n                    add(source, destination, cloneTransform);\n                }\n            });\n        });\n    }\n    /**\n     * Registers transformation functions to convert coordinates in any projection\n     * in projection1 to any projection in projection2.\n     *\n     * @param {Array<Projection>} projections1 Projections with equal\n     *     meaning.\n     * @param {Array<Projection>} projections2 Projections with equal\n     *     meaning.\n     * @param {TransformFunction} forwardTransform Transformation from any\n     *   projection in projection1 to any projection in projection2.\n     * @param {TransformFunction} inverseTransform Transform from any projection\n     *   in projection2 to any projection in projection1..\n     */\n    function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n        projections1.forEach(function (projection1) {\n            projections2.forEach(function (projection2) {\n                add(projection1, projection2, forwardTransform);\n                add(projection2, projection1, inverseTransform);\n            });\n        });\n    }\n    /**\n     * Searches in the list of transform functions for the function for converting\n     * coordinates from the source projection to the destination projection.\n     *\n     * @param {Projection} sourceProjection Source Projection object.\n     * @param {Projection} destinationProjection Destination Projection\n     *     object.\n     * @return {TransformFunction} Transform function.\n     */\n    function getTransformFromProjections(sourceProjection, destinationProjection) {\n        var sourceCode = sourceProjection.getCode();\n        var destinationCode = destinationProjection.getCode();\n        var transformFunc = get$2(sourceCode, destinationCode);\n        if (!transformFunc) {\n            transformFunc = identityTransform;\n        }\n        return transformFunc;\n    }\n    /**\n     * Given the projection-like objects, searches for a transformation\n     * function to convert a coordinates array from the source projection to the\n     * destination projection.\n     *\n     * @param {ProjectionLike} source Source.\n     * @param {ProjectionLike} destination Destination.\n     * @return {TransformFunction} Transform function.\n     * @api\n     */\n    function getTransform(source, destination) {\n        var sourceProjection = get$1(source);\n        var destinationProjection = get$1(destination);\n        return getTransformFromProjections(sourceProjection, destinationProjection);\n    }\n    /**\n     * Transforms a coordinate from source projection to destination projection.\n     * This returns a new coordinate (and does not modify the original).\n     *\n     * See {@link module:ol/proj.transformExtent} for extent transformation.\n     * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n     * subclasses for geometry transforms.\n     *\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {ProjectionLike} source Source projection-like.\n     * @param {ProjectionLike} destination Destination projection-like.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    function transform(coordinate, source, destination) {\n        var transformFunc = getTransform(source, destination);\n        return transformFunc(coordinate, undefined, coordinate.length);\n    }\n    /**\n     * Return an extent transformed into the user projection.  If no user projection\n     * is set, the original extent is returned.\n     * @param {import(\"./extent.js\").Extent} extent Input extent.\n     * @param {ProjectionLike} sourceProjection The input extent projection.\n     * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n     */\n    function toUserExtent(extent, sourceProjection) {\n        {\n            return extent;\n        }\n    }\n    /**\n     * Return an extent transformed from the user projection.  If no user projection\n     * is set, the original extent is returned.\n     * @param {import(\"./extent.js\").Extent} extent Input extent.\n     * @param {ProjectionLike} destProjection The destination projection.\n     * @return {import(\"./extent.js\").Extent} The input extent transformed.\n     */\n    function fromUserExtent(extent, destProjection) {\n        {\n            return extent;\n        }\n    }\n    /**\n     * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n     * by when this module is executed and should only need to be called again after\n     * `clearAllProjections()` is called (e.g. in tests).\n     */\n    function addCommon() {\n        // Add transformations that don't alter coordinates to convert within set of\n        // projections with equal meaning.\n        addEquivalentProjections(PROJECTIONS$1);\n        addEquivalentProjections(PROJECTIONS);\n        // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n        // coordinates and back.\n        addEquivalentTransforms(PROJECTIONS, PROJECTIONS$1, fromEPSG4326, toEPSG4326);\n    }\n    addCommon();\n\n    var __extends$e = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @type {import(\"../transform.js\").Transform}\n     */\n    var tmpTransform = create();\n    /**\n     * @classdesc\n     * Abstract base class; normally only used for creating subclasses and not\n     * instantiated in apps.\n     * Base class for vector geometries.\n     *\n     * To get notified of changes to the geometry, register a listener for the\n     * generic `change` event on your geometry instance.\n     *\n     * @abstract\n     * @api\n     */\n    var Geometry = /** @class */ (function (_super) {\n        __extends$e(Geometry, _super);\n        function Geometry() {\n            var _this = _super.call(this) || this;\n            /**\n             * @private\n             * @type {import(\"../extent.js\").Extent}\n             */\n            _this.extent_ = createEmpty();\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.extentRevision_ = -1;\n            /**\n             * @protected\n             * @type {number}\n             */\n            _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            /**\n             * @protected\n             * @type {number}\n             */\n            _this.simplifiedGeometryRevision = 0;\n            /**\n             * Get a transformed and simplified version of the geometry.\n             * @abstract\n             * @param {number} revision The geometry revision.\n             * @param {number} squaredTolerance Squared tolerance.\n             * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n             * @return {Geometry} Simplified geometry.\n             */\n            _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n                if (!opt_transform) {\n                    return this.getSimplifiedGeometry(squaredTolerance);\n                }\n                var clone = this.clone();\n                clone.applyTransform(opt_transform);\n                return clone.getSimplifiedGeometry(squaredTolerance);\n            });\n            return _this;\n        }\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n            return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n        };\n        /**\n         * Make a complete copy of the geometry.\n         * @abstract\n         * @return {!Geometry} Clone.\n         */\n        Geometry.prototype.clone = function () {\n            return abstract();\n        };\n        /**\n         * @abstract\n         * @param {number} x X.\n         * @param {number} y Y.\n         * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n         * @param {number} minSquaredDistance Minimum squared distance.\n         * @return {number} Minimum squared distance.\n         */\n        Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n            return abstract();\n        };\n        /**\n         * @param {number} x X.\n         * @param {number} y Y.\n         * @return {boolean} Contains (x, y).\n         */\n        Geometry.prototype.containsXY = function (x, y) {\n            var coord = this.getClosestPoint([x, y]);\n            return coord[0] === x && coord[1] === y;\n        };\n        /**\n         * Return the closest point of the geometry to the passed point as\n         * {@link module:ol/coordinate~Coordinate coordinate}.\n         * @param {import(\"../coordinate.js\").Coordinate} point Point.\n         * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n         * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n         * @api\n         */\n        Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n            var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n            this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n            return closestPoint;\n        };\n        /**\n         * Returns true if this geometry includes the specified coordinate. If the\n         * coordinate is on the boundary of the geometry, returns false.\n         * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n         * @return {boolean} Contains coordinate.\n         * @api\n         */\n        Geometry.prototype.intersectsCoordinate = function (coordinate) {\n            return this.containsXY(coordinate[0], coordinate[1]);\n        };\n        /**\n         * @abstract\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @protected\n         * @return {import(\"../extent.js\").Extent} extent Extent.\n         */\n        Geometry.prototype.computeExtent = function (extent) {\n            return abstract();\n        };\n        /**\n         * Get the extent of the geometry.\n         * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n         * @return {import(\"../extent.js\").Extent} extent Extent.\n         * @api\n         */\n        Geometry.prototype.getExtent = function (opt_extent) {\n            if (this.extentRevision_ != this.getRevision()) {\n                var extent = this.computeExtent(this.extent_);\n                if (isNaN(extent[0]) || isNaN(extent[1])) {\n                    createOrUpdateEmpty(extent);\n                }\n                this.extentRevision_ = this.getRevision();\n            }\n            return returnOrUpdate(this.extent_, opt_extent);\n        };\n        /**\n         * Rotate the geometry around a given coordinate. This modifies the geometry\n         * coordinates in place.\n         * @abstract\n         * @param {number} angle Rotation angle in radians.\n         * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n         * @api\n         */\n        Geometry.prototype.rotate = function (angle, anchor) {\n            abstract();\n        };\n        /**\n         * Scale the geometry (with an optional origin).  This modifies the geometry\n         * coordinates in place.\n         * @abstract\n         * @param {number} sx The scaling factor in the x-direction.\n         * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n         * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n         *     of the geometry extent).\n         * @api\n         */\n        Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n            abstract();\n        };\n        /**\n         * Create a simplified version of this geometry.  For linestrings, this uses\n         * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n         * algorithm.  For polygons, a quantization-based\n         * simplification is used to preserve topology.\n         * @param {number} tolerance The tolerance distance for simplification.\n         * @return {Geometry} A new, simplified version of the original geometry.\n         * @api\n         */\n        Geometry.prototype.simplify = function (tolerance) {\n            return this.getSimplifiedGeometry(tolerance * tolerance);\n        };\n        /**\n         * Create a simplified version of this geometry using the Douglas Peucker\n         * algorithm.\n         * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n         * @abstract\n         * @param {number} squaredTolerance Squared tolerance.\n         * @return {Geometry} Simplified geometry.\n         */\n        Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n            return abstract();\n        };\n        /**\n         * Get the type of this geometry.\n         * @abstract\n         * @return {import(\"./GeometryType.js\").default} Geometry type.\n         */\n        Geometry.prototype.getType = function () {\n            return abstract();\n        };\n        /**\n         * Apply a transform function to the coordinates of the geometry.\n         * The geometry is modified in place.\n         * If you do not want the geometry modified in place, first `clone()` it and\n         * then use this function on the clone.\n         * @abstract\n         * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n         * Called with a flat array of geometry coordinates.\n         */\n        Geometry.prototype.applyTransform = function (transformFn) {\n            abstract();\n        };\n        /**\n         * Test if the geometry and the passed extent intersect.\n         * @abstract\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @return {boolean} `true` if the geometry and the extent intersect.\n         */\n        Geometry.prototype.intersectsExtent = function (extent) {\n            return abstract();\n        };\n        /**\n         * Translate the geometry.  This modifies the geometry coordinates in place.  If\n         * instead you want a new geometry, first `clone()` this geometry.\n         * @abstract\n         * @param {number} deltaX Delta X.\n         * @param {number} deltaY Delta Y.\n         * @api\n         */\n        Geometry.prototype.translate = function (deltaX, deltaY) {\n            abstract();\n        };\n        /**\n         * Transform each coordinate of the geometry from one coordinate reference\n         * system to another. The geometry is modified in place.\n         * For example, a line will be transformed to a line and a circle to a circle.\n         * If you do not want the geometry modified in place, first `clone()` it and\n         * then use this function on the clone.\n         *\n         * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n         *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n         * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n         *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n         * @return {Geometry} This geometry.  Note that original geometry is\n         *     modified in place.\n         * @api\n         */\n        Geometry.prototype.transform = function (source, destination) {\n            /** @type {import(\"../proj/Projection.js\").default} */\n            var sourceProj = get$1(source);\n            var transformFn = sourceProj.getUnits() == Units$1.TILE_PIXELS\n                ? function (inCoordinates, outCoordinates, stride) {\n                    var pixelExtent = sourceProj.getExtent();\n                    var projectedExtent = sourceProj.getWorldExtent();\n                    var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                    compose(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                    transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                    return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n                }\n                : getTransform(sourceProj, destination);\n            this.applyTransform(transformFn);\n            return this;\n        };\n        return Geometry;\n    }(BaseObject$1));\n    var Geometry$1 = Geometry;\n\n    /**\n     * @module ol/geom/GeometryLayout\n     */\n    /**\n     * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n     * or measure ('M') coordinate is available. Supported values are `'XY'`,\n     * `'XYZ'`, `'XYM'`, `'XYZM'`.\n     * @enum {string}\n     */\n    var GeometryLayout = {\n        XY: 'XY',\n        XYZ: 'XYZ',\n        XYM: 'XYM',\n        XYZM: 'XYZM',\n    };\n\n    var __extends$d = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @classdesc\n     * Abstract base class; only used for creating subclasses; do not instantiate\n     * in apps, as cannot be rendered.\n     *\n     * @abstract\n     * @api\n     */\n    var SimpleGeometry = /** @class */ (function (_super) {\n        __extends$d(SimpleGeometry, _super);\n        function SimpleGeometry() {\n            var _this = _super.call(this) || this;\n            /**\n             * @protected\n             * @type {import(\"./GeometryLayout.js\").default}\n             */\n            _this.layout = GeometryLayout.XY;\n            /**\n             * @protected\n             * @type {number}\n             */\n            _this.stride = 2;\n            /**\n             * @protected\n             * @type {Array<number>}\n             */\n            _this.flatCoordinates = null;\n            return _this;\n        }\n        /**\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @protected\n         * @return {import(\"../extent.js\").Extent} extent Extent.\n         */\n        SimpleGeometry.prototype.computeExtent = function (extent) {\n            return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n        };\n        /**\n         * @abstract\n         * @return {Array<*> | null} Coordinates.\n         */\n        SimpleGeometry.prototype.getCoordinates = function () {\n            return abstract();\n        };\n        /**\n         * Return the first coordinate of the geometry.\n         * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n         * @api\n         */\n        SimpleGeometry.prototype.getFirstCoordinate = function () {\n            return this.flatCoordinates.slice(0, this.stride);\n        };\n        /**\n         * @return {Array<number>} Flat coordinates.\n         */\n        SimpleGeometry.prototype.getFlatCoordinates = function () {\n            return this.flatCoordinates;\n        };\n        /**\n         * Return the last coordinate of the geometry.\n         * @return {import(\"../coordinate.js\").Coordinate} Last point.\n         * @api\n         */\n        SimpleGeometry.prototype.getLastCoordinate = function () {\n            return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n        };\n        /**\n         * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n         * @return {import(\"./GeometryLayout.js\").default} Layout.\n         * @api\n         */\n        SimpleGeometry.prototype.getLayout = function () {\n            return this.layout;\n        };\n        /**\n         * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @return {SimpleGeometry} Simplified geometry.\n         */\n        SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n            if (this.simplifiedGeometryRevision !== this.getRevision()) {\n                this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n                this.simplifiedGeometryRevision = this.getRevision();\n            }\n            // If squaredTolerance is negative or if we know that simplification will not\n            // have any effect then just return this.\n            if (squaredTolerance < 0 ||\n                (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                    squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n                return this;\n            }\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        };\n        /**\n         * @param {number} squaredTolerance Squared tolerance.\n         * @return {SimpleGeometry} Simplified geometry.\n         * @protected\n         */\n        SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n            return this;\n        };\n        /**\n         * @return {number} Stride.\n         */\n        SimpleGeometry.prototype.getStride = function () {\n            return this.stride;\n        };\n        /**\n         * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         */\n        SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n            this.stride = getStrideForLayout(layout);\n            this.layout = layout;\n            this.flatCoordinates = flatCoordinates;\n        };\n        /**\n         * @abstract\n         * @param {!Array<*>} coordinates Coordinates.\n         * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n         */\n        SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n            abstract();\n        };\n        /**\n         * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n         * @param {Array<*>} coordinates Coordinates.\n         * @param {number} nesting Nesting.\n         * @protected\n         */\n        SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n            /** @type {number} */\n            var stride;\n            if (layout) {\n                stride = getStrideForLayout(layout);\n            }\n            else {\n                for (var i = 0; i < nesting; ++i) {\n                    if (coordinates.length === 0) {\n                        this.layout = GeometryLayout.XY;\n                        this.stride = 2;\n                        return;\n                    }\n                    else {\n                        coordinates = /** @type {Array} */ (coordinates[0]);\n                    }\n                }\n                stride = coordinates.length;\n                layout = getLayoutForStride(stride);\n            }\n            this.layout = layout;\n            this.stride = stride;\n        };\n        /**\n         * Apply a transform function to the coordinates of the geometry.\n         * The geometry is modified in place.\n         * If you do not want the geometry modified in place, first `clone()` it and\n         * then use this function on the clone.\n         * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n         * Called with a flat array of geometry coordinates.\n         * @api\n         */\n        SimpleGeometry.prototype.applyTransform = function (transformFn) {\n            if (this.flatCoordinates) {\n                transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n                this.changed();\n            }\n        };\n        /**\n         * Rotate the geometry around a given coordinate. This modifies the geometry\n         * coordinates in place.\n         * @param {number} angle Rotation angle in counter-clockwise radians.\n         * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n         * @api\n         */\n        SimpleGeometry.prototype.rotate = function (angle, anchor) {\n            var flatCoordinates = this.getFlatCoordinates();\n            if (flatCoordinates) {\n                var stride = this.getStride();\n                rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n                this.changed();\n            }\n        };\n        /**\n         * Scale the geometry (with an optional origin).  This modifies the geometry\n         * coordinates in place.\n         * @param {number} sx The scaling factor in the x-direction.\n         * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n         * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n         *     of the geometry extent).\n         * @api\n         */\n        SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n            var sy = opt_sy;\n            if (sy === undefined) {\n                sy = sx;\n            }\n            var anchor = opt_anchor;\n            if (!anchor) {\n                anchor = getCenter(this.getExtent());\n            }\n            var flatCoordinates = this.getFlatCoordinates();\n            if (flatCoordinates) {\n                var stride = this.getStride();\n                scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n                this.changed();\n            }\n        };\n        /**\n         * Translate the geometry.  This modifies the geometry coordinates in place.  If\n         * instead you want a new geometry, first `clone()` this geometry.\n         * @param {number} deltaX Delta X.\n         * @param {number} deltaY Delta Y.\n         * @api\n         */\n        SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n            var flatCoordinates = this.getFlatCoordinates();\n            if (flatCoordinates) {\n                var stride = this.getStride();\n                translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n                this.changed();\n            }\n        };\n        return SimpleGeometry;\n    }(Geometry$1));\n    /**\n     * @param {number} stride Stride.\n     * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n     */\n    function getLayoutForStride(stride) {\n        var layout;\n        if (stride == 2) {\n            layout = GeometryLayout.XY;\n        }\n        else if (stride == 3) {\n            layout = GeometryLayout.XYZ;\n        }\n        else if (stride == 4) {\n            layout = GeometryLayout.XYZM;\n        }\n        return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n    }\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @return {number} Stride.\n     */\n    function getStrideForLayout(layout) {\n        var stride;\n        if (layout == GeometryLayout.XY) {\n            stride = 2;\n        }\n        else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n            stride = 3;\n        }\n        else if (layout == GeometryLayout.XYZM) {\n            stride = 4;\n        }\n        return /** @type {number} */ (stride);\n    }\n    /**\n     * @param {SimpleGeometry} simpleGeometry Simple geometry.\n     * @param {import(\"../transform.js\").Transform} transform Transform.\n     * @param {Array<number>} [opt_dest] Destination.\n     * @return {Array<number>} Transformed flat coordinates.\n     */\n    function transformGeom2D(simpleGeometry, transform, opt_dest) {\n        var flatCoordinates = simpleGeometry.getFlatCoordinates();\n        if (!flatCoordinates) {\n            return null;\n        }\n        else {\n            var stride = simpleGeometry.getStride();\n            return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n        }\n    }\n    var SimpleGeometry$1 = SimpleGeometry;\n\n    /**\n     * @module ol/render/canvas/Immediate\n     */\n    // FIXME test, especially polygons with holes and multipolygons\n    // FIXME need to handle large thick features (where pixel size matters)\n    // FIXME add offset and end to ol/geom/flat/transform~transform2D?\n    var __extends$c = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @classdesc\n     * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n     * direct rendering of features and geometries to an HTML5 Canvas context.\n     * Instances of this class are created internally by the library and\n     * provided to application code as vectorContext member of the\n     * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n     * render events emitted by layers and maps.\n     */\n    var CanvasImmediateRenderer = /** @class */ (function (_super) {\n        __extends$c(CanvasImmediateRenderer, _super);\n        /**\n         * @param {CanvasRenderingContext2D} context Context.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../../extent.js\").Extent} extent Extent.\n         * @param {import(\"../../transform.js\").Transform} transform Transform.\n         * @param {number} viewRotation View rotation.\n         * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n         * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n         */\n        function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n            var _this = _super.call(this) || this;\n            /**\n             * @private\n             * @type {CanvasRenderingContext2D}\n             */\n            _this.context_ = context;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.pixelRatio_ = pixelRatio;\n            /**\n             * @private\n             * @type {import(\"../../extent.js\").Extent}\n             */\n            _this.extent_ = extent;\n            /**\n             * @private\n             * @type {import(\"../../transform.js\").Transform}\n             */\n            _this.transform_ = transform;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.viewRotation_ = viewRotation;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.squaredTolerance_ = opt_squaredTolerance;\n            /**\n             * @private\n             * @type {import(\"../../proj.js\").TransformFunction}\n             */\n            _this.userTransform_ = opt_userTransform;\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").FillState}\n             */\n            _this.contextFillState_ = null;\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").StrokeState}\n             */\n            _this.contextStrokeState_ = null;\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").TextState}\n             */\n            _this.contextTextState_ = null;\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").FillState}\n             */\n            _this.fillState_ = null;\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").StrokeState}\n             */\n            _this.strokeState_ = null;\n            /**\n             * @private\n             * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n             */\n            _this.image_ = null;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.imageAnchorX_ = 0;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.imageAnchorY_ = 0;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.imageHeight_ = 0;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.imageOpacity_ = 0;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.imageOriginX_ = 0;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.imageOriginY_ = 0;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            _this.imageRotateWithView_ = false;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.imageRotation_ = 0;\n            /**\n             * @private\n             * @type {import(\"../../size.js\").Size}\n             */\n            _this.imageScale_ = [0, 0];\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.imageWidth_ = 0;\n            /**\n             * @private\n             * @type {string}\n             */\n            _this.text_ = '';\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.textOffsetX_ = 0;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.textOffsetY_ = 0;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            _this.textRotateWithView_ = false;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.textRotation_ = 0;\n            /**\n             * @private\n             * @type {import(\"../../size.js\").Size}\n             */\n            _this.textScale_ = [0, 0];\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").FillState}\n             */\n            _this.textFillState_ = null;\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").StrokeState}\n             */\n            _this.textStrokeState_ = null;\n            /**\n             * @private\n             * @type {?import(\"../canvas.js\").TextState}\n             */\n            _this.textState_ = null;\n            /**\n             * @private\n             * @type {Array<number>}\n             */\n            _this.pixelCoordinates_ = [];\n            /**\n             * @private\n             * @type {import(\"../../transform.js\").Transform}\n             */\n            _this.tmpLocalTransform_ = create();\n            return _this;\n        }\n        /**\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         * @param {number} offset Offset.\n         * @param {number} end End.\n         * @param {number} stride Stride.\n         * @private\n         */\n        CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n            if (!this.image_) {\n                return;\n            }\n            var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n            var context = this.context_;\n            var localTransform = this.tmpLocalTransform_;\n            var alpha = context.globalAlpha;\n            if (this.imageOpacity_ != 1) {\n                context.globalAlpha = alpha * this.imageOpacity_;\n            }\n            var rotation = this.imageRotation_;\n            if (this.imageRotateWithView_) {\n                rotation += this.viewRotation_;\n            }\n            for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n                var x = pixelCoordinates[i] - this.imageAnchorX_;\n                var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n                if (rotation !== 0 ||\n                    this.imageScale_[0] != 1 ||\n                    this.imageScale_[1] != 1) {\n                    var centerX = x + this.imageAnchorX_;\n                    var centerY = y + this.imageAnchorY_;\n                    compose(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                    context.setTransform.apply(context, localTransform);\n                    context.translate(centerX, centerY);\n                    context.scale(this.imageScale_[0], this.imageScale_[1]);\n                    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                    context.setTransform(1, 0, 0, 1, 0, 0);\n                }\n                else {\n                    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n                }\n            }\n            if (this.imageOpacity_ != 1) {\n                context.globalAlpha = alpha;\n            }\n        };\n        /**\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         * @param {number} offset Offset.\n         * @param {number} end End.\n         * @param {number} stride Stride.\n         * @private\n         */\n        CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n            if (!this.textState_ || this.text_ === '') {\n                return;\n            }\n            if (this.textFillState_) {\n                this.setContextFillState_(this.textFillState_);\n            }\n            if (this.textStrokeState_) {\n                this.setContextStrokeState_(this.textStrokeState_);\n            }\n            this.setContextTextState_(this.textState_);\n            var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n            var context = this.context_;\n            var rotation = this.textRotation_;\n            if (this.textRotateWithView_) {\n                rotation += this.viewRotation_;\n            }\n            for (; offset < end; offset += stride) {\n                var x = pixelCoordinates[offset] + this.textOffsetX_;\n                var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n                if (rotation !== 0 ||\n                    this.textScale_[0] != 1 ||\n                    this.textScale_[1] != 1) {\n                    var localTransform = compose(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                    context.setTransform.apply(context, localTransform);\n                    context.translate(x, y);\n                    context.scale(this.textScale_[0], this.textScale_[1]);\n                    if (this.textStrokeState_) {\n                        context.strokeText(this.text_, 0, 0);\n                    }\n                    if (this.textFillState_) {\n                        context.fillText(this.text_, 0, 0);\n                    }\n                    context.setTransform(1, 0, 0, 1, 0, 0);\n                }\n                else {\n                    if (this.textStrokeState_) {\n                        context.strokeText(this.text_, x, y);\n                    }\n                    if (this.textFillState_) {\n                        context.fillText(this.text_, x, y);\n                    }\n                }\n            }\n        };\n        /**\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         * @param {number} offset Offset.\n         * @param {number} end End.\n         * @param {number} stride Stride.\n         * @param {boolean} close Close.\n         * @private\n         * @return {number} end End.\n         */\n        CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n            var context = this.context_;\n            var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n            context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n            var length = pixelCoordinates.length;\n            if (close) {\n                length -= 2;\n            }\n            for (var i = 2; i < length; i += 2) {\n                context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n            }\n            if (close) {\n                context.closePath();\n            }\n            return end;\n        };\n        /**\n         * @param {Array<number>} flatCoordinates Flat coordinates.\n         * @param {number} offset Offset.\n         * @param {Array<number>} ends Ends.\n         * @param {number} stride Stride.\n         * @private\n         * @return {number} End.\n         */\n        CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n            }\n            return offset;\n        };\n        /**\n         * Render a circle geometry into the canvas.  Rendering is immediate and uses\n         * the current fill and stroke styles.\n         *\n         * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n         * @api\n         */\n        CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n            if (!intersects(this.extent_, geometry.getExtent())) {\n                return;\n            }\n            if (this.fillState_ || this.strokeState_) {\n                if (this.fillState_) {\n                    this.setContextFillState_(this.fillState_);\n                }\n                if (this.strokeState_) {\n                    this.setContextStrokeState_(this.strokeState_);\n                }\n                var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n                var dx = pixelCoordinates[2] - pixelCoordinates[0];\n                var dy = pixelCoordinates[3] - pixelCoordinates[1];\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                var context = this.context_;\n                context.beginPath();\n                context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n                if (this.fillState_) {\n                    context.fill();\n                }\n                if (this.strokeState_) {\n                    context.stroke();\n                }\n            }\n            if (this.text_ !== '') {\n                this.drawText_(geometry.getCenter(), 0, 2, 2);\n            }\n        };\n        /**\n         * Set the rendering style.  Note that since this is an immediate rendering API,\n         * any `zIndex` on the provided style will be ignored.\n         *\n         * @param {import(\"../../style/Style.js\").default} style The rendering style.\n         * @api\n         */\n        CanvasImmediateRenderer.prototype.setStyle = function (style) {\n            this.setFillStrokeStyle(style.getFill(), style.getStroke());\n            this.setImageStyle(style.getImage());\n            this.setTextStyle(style.getText());\n        };\n        /**\n         * @param {import(\"../../transform.js\").Transform} transform Transform.\n         */\n        CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n            this.transform_ = transform;\n        };\n        /**\n         * Render a geometry into the canvas.  Call\n         * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n         *\n         * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n         * @api\n         */\n        CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n            var type = geometry.getType();\n            switch (type) {\n                case GeometryType.POINT:\n                    this.drawPoint(\n                    /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                    break;\n                case GeometryType.LINE_STRING:\n                    this.drawLineString(\n                    /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                    break;\n                case GeometryType.POLYGON:\n                    this.drawPolygon(\n                    /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                    break;\n                case GeometryType.MULTI_POINT:\n                    this.drawMultiPoint(\n                    /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    this.drawMultiLineString(\n                    /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    this.drawMultiPolygon(\n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                    break;\n                case GeometryType.GEOMETRY_COLLECTION:\n                    this.drawGeometryCollection(\n                    /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                    break;\n                case GeometryType.CIRCLE:\n                    this.drawCircle(\n                    /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                    break;\n            }\n        };\n        /**\n         * Render a feature into the canvas.  Note that any `zIndex` on the provided\n         * style will be ignored - features are rendered immediately in the order that\n         * this method is called.  If you need `zIndex` support, you should be using an\n         * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n         *\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @param {import(\"../../style/Style.js\").default} style Style.\n         * @api\n         */\n        CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n            var geometry = style.getGeometryFunction()(feature);\n            if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n                return;\n            }\n            this.setStyle(style);\n            this.drawGeometry(geometry);\n        };\n        /**\n         * Render a GeometryCollection to the canvas.  Rendering is immediate and\n         * uses the current styles appropriate for each geometry in the collection.\n         *\n         * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n         */\n        CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n            var geometries = geometry.getGeometriesArray();\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                this.drawGeometry(geometries[i]);\n            }\n        };\n        /**\n         * Render a Point geometry into the canvas.  Rendering is immediate and uses\n         * the current style.\n         *\n         * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n         */\n        CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n            if (this.squaredTolerance_) {\n                geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n            }\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var stride = geometry.getStride();\n            if (this.image_) {\n                this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n            }\n            if (this.text_ !== '') {\n                this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n            }\n        };\n        /**\n         * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n         * uses the current style.\n         *\n         * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n         */\n        CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n            if (this.squaredTolerance_) {\n                geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n            }\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var stride = geometry.getStride();\n            if (this.image_) {\n                this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n            }\n            if (this.text_ !== '') {\n                this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n            }\n        };\n        /**\n         * Render a LineString into the canvas.  Rendering is immediate and uses\n         * the current style.\n         *\n         * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n         */\n        CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n            if (this.squaredTolerance_) {\n                geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n            }\n            if (!intersects(this.extent_, geometry.getExtent())) {\n                return;\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n                var context = this.context_;\n                var flatCoordinates = geometry.getFlatCoordinates();\n                context.beginPath();\n                this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n                context.stroke();\n            }\n            if (this.text_ !== '') {\n                var flatMidpoint = geometry.getFlatMidpoint();\n                this.drawText_(flatMidpoint, 0, 2, 2);\n            }\n        };\n        /**\n         * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n         * and uses the current style.\n         *\n         * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n         */\n        CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n            if (this.squaredTolerance_) {\n                geometry =\n                    /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n            }\n            var geometryExtent = geometry.getExtent();\n            if (!intersects(this.extent_, geometryExtent)) {\n                return;\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n                var context = this.context_;\n                var flatCoordinates = geometry.getFlatCoordinates();\n                var offset = 0;\n                var ends = /** @type {Array<number>} */ (geometry.getEnds());\n                var stride = geometry.getStride();\n                context.beginPath();\n                for (var i = 0, ii = ends.length; i < ii; ++i) {\n                    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n                }\n                context.stroke();\n            }\n            if (this.text_ !== '') {\n                var flatMidpoints = geometry.getFlatMidpoints();\n                this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n            }\n        };\n        /**\n         * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n         * the current style.\n         *\n         * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n         */\n        CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n            if (this.squaredTolerance_) {\n                geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n            }\n            if (!intersects(this.extent_, geometry.getExtent())) {\n                return;\n            }\n            if (this.strokeState_ || this.fillState_) {\n                if (this.fillState_) {\n                    this.setContextFillState_(this.fillState_);\n                }\n                if (this.strokeState_) {\n                    this.setContextStrokeState_(this.strokeState_);\n                }\n                var context = this.context_;\n                context.beginPath();\n                this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n                /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n                if (this.fillState_) {\n                    context.fill();\n                }\n                if (this.strokeState_) {\n                    context.stroke();\n                }\n            }\n            if (this.text_ !== '') {\n                var flatInteriorPoint = geometry.getFlatInteriorPoint();\n                this.drawText_(flatInteriorPoint, 0, 2, 2);\n            }\n        };\n        /**\n         * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n         * uses the current style.\n         * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n         */\n        CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n            if (this.squaredTolerance_) {\n                geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n            }\n            if (!intersects(this.extent_, geometry.getExtent())) {\n                return;\n            }\n            if (this.strokeState_ || this.fillState_) {\n                if (this.fillState_) {\n                    this.setContextFillState_(this.fillState_);\n                }\n                if (this.strokeState_) {\n                    this.setContextStrokeState_(this.strokeState_);\n                }\n                var context = this.context_;\n                var flatCoordinates = geometry.getOrientedFlatCoordinates();\n                var offset = 0;\n                var endss = geometry.getEndss();\n                var stride = geometry.getStride();\n                context.beginPath();\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    var ends = endss[i];\n                    offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n                }\n                if (this.fillState_) {\n                    context.fill();\n                }\n                if (this.strokeState_) {\n                    context.stroke();\n                }\n            }\n            if (this.text_ !== '') {\n                var flatInteriorPoints = geometry.getFlatInteriorPoints();\n                this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n            }\n        };\n        /**\n         * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n         * @private\n         */\n        CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n            var context = this.context_;\n            var contextFillState = this.contextFillState_;\n            if (!contextFillState) {\n                context.fillStyle = fillState.fillStyle;\n                this.contextFillState_ = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n            else {\n                if (contextFillState.fillStyle != fillState.fillStyle) {\n                    contextFillState.fillStyle = fillState.fillStyle;\n                    context.fillStyle = fillState.fillStyle;\n                }\n            }\n        };\n        /**\n         * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n         * @private\n         */\n        CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n            var context = this.context_;\n            var contextStrokeState = this.contextStrokeState_;\n            if (!contextStrokeState) {\n                context.lineCap = strokeState.lineCap;\n                if (context.setLineDash) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n                context.lineJoin = strokeState.lineJoin;\n                context.lineWidth = strokeState.lineWidth;\n                context.miterLimit = strokeState.miterLimit;\n                context.strokeStyle = strokeState.strokeStyle;\n                this.contextStrokeState_ = {\n                    lineCap: strokeState.lineCap,\n                    lineDash: strokeState.lineDash,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineJoin: strokeState.lineJoin,\n                    lineWidth: strokeState.lineWidth,\n                    miterLimit: strokeState.miterLimit,\n                    strokeStyle: strokeState.strokeStyle,\n                };\n            }\n            else {\n                if (contextStrokeState.lineCap != strokeState.lineCap) {\n                    contextStrokeState.lineCap = strokeState.lineCap;\n                    context.lineCap = strokeState.lineCap;\n                }\n                if (context.setLineDash) {\n                    if (!equals$1(contextStrokeState.lineDash, strokeState.lineDash)) {\n                        context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                    }\n                    if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                        context.lineDashOffset = strokeState.lineDashOffset;\n                    }\n                }\n                if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                    contextStrokeState.lineJoin = strokeState.lineJoin;\n                    context.lineJoin = strokeState.lineJoin;\n                }\n                if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                    contextStrokeState.lineWidth = strokeState.lineWidth;\n                    context.lineWidth = strokeState.lineWidth;\n                }\n                if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                    contextStrokeState.miterLimit = strokeState.miterLimit;\n                    context.miterLimit = strokeState.miterLimit;\n                }\n                if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                    contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                    context.strokeStyle = strokeState.strokeStyle;\n                }\n            }\n        };\n        /**\n         * @param {import(\"../canvas.js\").TextState} textState Text state.\n         * @private\n         */\n        CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n            var context = this.context_;\n            var contextTextState = this.contextTextState_;\n            var textAlign = textState.textAlign\n                ? textState.textAlign\n                : defaultTextAlign;\n            if (!contextTextState) {\n                context.font = textState.font;\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                this.contextTextState_ = {\n                    font: textState.font,\n                    textAlign: textAlign,\n                    textBaseline: textState.textBaseline,\n                };\n            }\n            else {\n                if (contextTextState.font != textState.font) {\n                    contextTextState.font = textState.font;\n                    context.font = textState.font;\n                }\n                if (contextTextState.textAlign != textAlign) {\n                    contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                    context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                }\n                if (contextTextState.textBaseline != textState.textBaseline) {\n                    contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                    context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                }\n            }\n        };\n        /**\n         * Set the fill and stroke style for subsequent draw operations.  To clear\n         * either fill or stroke styles, pass null for the appropriate parameter.\n         *\n         * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n         * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n         */\n        CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n            var _this = this;\n            if (!fillStyle) {\n                this.fillState_ = null;\n            }\n            else {\n                var fillStyleColor = fillStyle.getColor();\n                this.fillState_ = {\n                    fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n                };\n            }\n            if (!strokeStyle) {\n                this.strokeState_ = null;\n            }\n            else {\n                var strokeStyleColor = strokeStyle.getColor();\n                var strokeStyleLineCap = strokeStyle.getLineCap();\n                var strokeStyleLineDash = strokeStyle.getLineDash();\n                var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n                var strokeStyleLineJoin = strokeStyle.getLineJoin();\n                var strokeStyleWidth = strokeStyle.getWidth();\n                var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n                var lineDash = strokeStyleLineDash\n                    ? strokeStyleLineDash\n                    : defaultLineDash;\n                this.strokeState_ = {\n                    lineCap: strokeStyleLineCap !== undefined\n                        ? strokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: this.pixelRatio_ === 1\n                        ? lineDash\n                        : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                    lineDashOffset: (strokeStyleLineDashOffset\n                        ? strokeStyleLineDashOffset\n                        : defaultLineDashOffset) * this.pixelRatio_,\n                    lineJoin: strokeStyleLineJoin !== undefined\n                        ? strokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth) * this.pixelRatio_,\n                    miterLimit: strokeStyleMiterLimit !== undefined\n                        ? strokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n                };\n            }\n        };\n        /**\n         * Set the image style for subsequent draw operations.  Pass null to remove\n         * the image style.\n         *\n         * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n         */\n        CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n            var imageSize;\n            if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n                this.image_ = null;\n                return;\n            }\n            var imageAnchor = imageStyle.getAnchor();\n            var imageOrigin = imageStyle.getOrigin();\n            this.image_ = imageStyle.getImage(this.pixelRatio_);\n            this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n            this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n            this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScaleArray();\n            this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n        };\n        /**\n         * Set the text style for subsequent draw operations.  Pass null to\n         * remove the text style.\n         *\n         * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n         */\n        CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n            if (!textStyle) {\n                this.text_ = '';\n            }\n            else {\n                var textFillStyle = textStyle.getFill();\n                if (!textFillStyle) {\n                    this.textFillState_ = null;\n                }\n                else {\n                    var textFillStyleColor = textFillStyle.getColor();\n                    this.textFillState_ = {\n                        fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                    };\n                }\n                var textStrokeStyle = textStyle.getStroke();\n                if (!textStrokeStyle) {\n                    this.textStrokeState_ = null;\n                }\n                else {\n                    var textStrokeStyleColor = textStrokeStyle.getColor();\n                    var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                    var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                    var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                    var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                    var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                    var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                    this.textStrokeState_ = {\n                        lineCap: textStrokeStyleLineCap !== undefined\n                            ? textStrokeStyleLineCap\n                            : defaultLineCap,\n                        lineDash: textStrokeStyleLineDash\n                            ? textStrokeStyleLineDash\n                            : defaultLineDash,\n                        lineDashOffset: textStrokeStyleLineDashOffset\n                            ? textStrokeStyleLineDashOffset\n                            : defaultLineDashOffset,\n                        lineJoin: textStrokeStyleLineJoin !== undefined\n                            ? textStrokeStyleLineJoin\n                            : defaultLineJoin,\n                        lineWidth: textStrokeStyleWidth !== undefined\n                            ? textStrokeStyleWidth\n                            : defaultLineWidth,\n                        miterLimit: textStrokeStyleMiterLimit !== undefined\n                            ? textStrokeStyleMiterLimit\n                            : defaultMiterLimit,\n                        strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                    };\n                }\n                var textFont = textStyle.getFont();\n                var textOffsetX = textStyle.getOffsetX();\n                var textOffsetY = textStyle.getOffsetY();\n                var textRotateWithView = textStyle.getRotateWithView();\n                var textRotation = textStyle.getRotation();\n                var textScale = textStyle.getScaleArray();\n                var textText = textStyle.getText();\n                var textTextAlign = textStyle.getTextAlign();\n                var textTextBaseline = textStyle.getTextBaseline();\n                this.textState_ = {\n                    font: textFont !== undefined ? textFont : defaultFont,\n                    textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                    textBaseline: textTextBaseline !== undefined\n                        ? textTextBaseline\n                        : defaultTextBaseline,\n                };\n                this.text_ =\n                    textText !== undefined\n                        ? Array.isArray(textText)\n                            ? textText.reduce(function (acc, t, i) { return (acc += i % 2 ? ' ' : t); }, '')\n                            : textText\n                        : '';\n                this.textOffsetX_ =\n                    textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n                this.textOffsetY_ =\n                    textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n                this.textRotateWithView_ =\n                    textRotateWithView !== undefined ? textRotateWithView : false;\n                this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n                this.textScale_ = [\n                    this.pixelRatio_ * textScale[0],\n                    this.pixelRatio_ * textScale[1],\n                ];\n            }\n        };\n        return CanvasImmediateRenderer;\n    }(VectorContext$1));\n    var CanvasImmediateRenderer$1 = CanvasImmediateRenderer;\n\n    /**\n     * @module ol/style/IconAnchorUnits\n     */\n    /**\n     * Icon anchor units. One of 'fraction', 'pixels'.\n     * @enum {string}\n     */\n    var IconAnchorUnits = {\n        /**\n         * Anchor is a fraction\n         * @api\n         */\n        FRACTION: 'fraction',\n        /**\n         * Anchor is in pixels\n         * @api\n         */\n        PIXELS: 'pixels',\n    };\n\n    /**\n     * @module ol/style/IconOrigin\n     */\n    /**\n     * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n     * @enum {string}\n     */\n    var IconOrigin = {\n        /**\n         * Origin is at bottom left\n         * @api\n         */\n        BOTTOM_LEFT: 'bottom-left',\n        /**\n         * Origin is at bottom right\n         * @api\n         */\n        BOTTOM_RIGHT: 'bottom-right',\n        /**\n         * Origin is at top left\n         * @api\n         */\n        TOP_LEFT: 'top-left',\n        /**\n         * Origin is at top right\n         * @api\n         */\n        TOP_RIGHT: 'top-right',\n    };\n\n    /**\n     * @module ol/style/IconImageCache\n     */\n    /**\n     * @classdesc\n     * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n     */\n    var IconImageCache = /** @class */ (function () {\n        function IconImageCache() {\n            /**\n             * @type {!Object<string, import(\"./IconImage.js\").default>}\n             * @private\n             */\n            this.cache_ = {};\n            /**\n             * @type {number}\n             * @private\n             */\n            this.cacheSize_ = 0;\n            /**\n             * @type {number}\n             * @private\n             */\n            this.maxCacheSize_ = 32;\n        }\n        /**\n         * FIXME empty description for jsdoc\n         */\n        IconImageCache.prototype.clear = function () {\n            this.cache_ = {};\n            this.cacheSize_ = 0;\n        };\n        /**\n         * @return {boolean} Can expire cache.\n         */\n        IconImageCache.prototype.canExpireCache = function () {\n            return this.cacheSize_ > this.maxCacheSize_;\n        };\n        /**\n         * FIXME empty description for jsdoc\n         */\n        IconImageCache.prototype.expire = function () {\n            if (this.canExpireCache()) {\n                var i = 0;\n                for (var key in this.cache_) {\n                    var iconImage = this.cache_[key];\n                    if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                        delete this.cache_[key];\n                        --this.cacheSize_;\n                    }\n                }\n            }\n        };\n        /**\n         * @param {string} src Src.\n         * @param {?string} crossOrigin Cross origin.\n         * @param {import(\"../color.js\").Color} color Color.\n         * @return {import(\"./IconImage.js\").default} Icon image.\n         */\n        IconImageCache.prototype.get = function (src, crossOrigin, color) {\n            var key = getKey(src, crossOrigin, color);\n            return key in this.cache_ ? this.cache_[key] : null;\n        };\n        /**\n         * @param {string} src Src.\n         * @param {?string} crossOrigin Cross origin.\n         * @param {import(\"../color.js\").Color} color Color.\n         * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n         */\n        IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n            var key = getKey(src, crossOrigin, color);\n            this.cache_[key] = iconImage;\n            ++this.cacheSize_;\n        };\n        /**\n         * Set the cache size of the icon cache. Default is `32`. Change this value when\n         * your map uses more than 32 different icon images and you are not caching icon\n         * styles on the application level.\n         * @param {number} maxCacheSize Cache max size.\n         * @api\n         */\n        IconImageCache.prototype.setSize = function (maxCacheSize) {\n            this.maxCacheSize_ = maxCacheSize;\n            this.expire();\n        };\n        return IconImageCache;\n    }());\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {string} Cache key.\n     */\n    function getKey(src, crossOrigin, color) {\n        var colorString = color ? asString(color) : 'null';\n        return crossOrigin + ':' + src + ':' + colorString;\n    }\n    /**\n     * The {@link module:ol/style/IconImageCache~IconImageCache} for\n     * {@link module:ol/style/Icon~Icon} images.\n     * @api\n     */\n    var shared = new IconImageCache();\n\n    var __extends$b = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @abstract\n     */\n    var ImageBase = /** @class */ (function (_super) {\n        __extends$b(ImageBase, _super);\n        /**\n         * @param {import(\"./extent.js\").Extent} extent Extent.\n         * @param {number|undefined} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"./ImageState.js\").default} state State.\n         */\n        function ImageBase(extent, resolution, pixelRatio, state) {\n            var _this = _super.call(this) || this;\n            /**\n             * @protected\n             * @type {import(\"./extent.js\").Extent}\n             */\n            _this.extent = extent;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.pixelRatio_ = pixelRatio;\n            /**\n             * @protected\n             * @type {number|undefined}\n             */\n            _this.resolution = resolution;\n            /**\n             * @protected\n             * @type {import(\"./ImageState.js\").default}\n             */\n            _this.state = state;\n            return _this;\n        }\n        /**\n         * @protected\n         */\n        ImageBase.prototype.changed = function () {\n            this.dispatchEvent(EventType.CHANGE);\n        };\n        /**\n         * @return {import(\"./extent.js\").Extent} Extent.\n         */\n        ImageBase.prototype.getExtent = function () {\n            return this.extent;\n        };\n        /**\n         * @abstract\n         * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n         */\n        ImageBase.prototype.getImage = function () {\n            return abstract();\n        };\n        /**\n         * @return {number} PixelRatio.\n         */\n        ImageBase.prototype.getPixelRatio = function () {\n            return this.pixelRatio_;\n        };\n        /**\n         * @return {number} Resolution.\n         */\n        ImageBase.prototype.getResolution = function () {\n            return /** @type {number} */ (this.resolution);\n        };\n        /**\n         * @return {import(\"./ImageState.js\").default} State.\n         */\n        ImageBase.prototype.getState = function () {\n            return this.state;\n        };\n        /**\n         * Load not yet loaded URI.\n         * @abstract\n         */\n        ImageBase.prototype.load = function () {\n            abstract();\n        };\n        return ImageBase;\n    }(EventTarget));\n    var ImageBase$1 = ImageBase;\n\n    var __extends$a = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n     * `{string}` for the src as arguments. It is supposed to make it so the\n     * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n     * content specified by the src. If not specified, the default is\n     *\n     *     function(image, src) {\n     *       image.getImage().src = src;\n     *     }\n     *\n     * Providing a custom `imageLoadFunction` can be useful to load images with\n     * post requests or - in general - through XHR requests, where the src of the\n     * image element would be set to a data URI when the content is loaded.\n     *\n     * @typedef {function(ImageWrapper, string): void} LoadFunction\n     * @api\n     */\n    /** @class */ ((function (_super) {\n        __extends$a(ImageWrapper, _super);\n        /**\n         * @param {import(\"./extent.js\").Extent} extent Extent.\n         * @param {number|undefined} resolution Resolution.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {string} src Image source URI.\n         * @param {?string} crossOrigin Cross origin.\n         * @param {LoadFunction} imageLoadFunction Image load function.\n         */\n        function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n            var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n            /**\n             * @private\n             * @type {string}\n             */\n            _this.src_ = src;\n            /**\n             * @private\n             * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n             */\n            _this.image_ = new Image();\n            if (crossOrigin !== null) {\n                _this.image_.crossOrigin = crossOrigin;\n            }\n            /**\n             * @private\n             * @type {?function():void}\n             */\n            _this.unlisten_ = null;\n            /**\n             * @protected\n             * @type {import(\"./ImageState.js\").default}\n             */\n            _this.state = ImageState.IDLE;\n            /**\n             * @private\n             * @type {LoadFunction}\n             */\n            _this.imageLoadFunction_ = imageLoadFunction;\n            return _this;\n        }\n        /**\n         * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n         * @api\n         */\n        ImageWrapper.prototype.getImage = function () {\n            return this.image_;\n        };\n        /**\n         * Tracks loading or read errors.\n         *\n         * @private\n         */\n        ImageWrapper.prototype.handleImageError_ = function () {\n            this.state = ImageState.ERROR;\n            this.unlistenImage_();\n            this.changed();\n        };\n        /**\n         * Tracks successful image load.\n         *\n         * @private\n         */\n        ImageWrapper.prototype.handleImageLoad_ = function () {\n            if (this.resolution === undefined) {\n                this.resolution = getHeight(this.extent) / this.image_.height;\n            }\n            this.state = ImageState.LOADED;\n            this.unlistenImage_();\n            this.changed();\n        };\n        /**\n         * Load the image or retry if loading previously failed.\n         * Loading is taken care of by the tile queue, and calling this method is\n         * only needed for preloading or for reloading in case of an error.\n         * @api\n         */\n        ImageWrapper.prototype.load = function () {\n            if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n                this.state = ImageState.LOADING;\n                this.changed();\n                this.imageLoadFunction_(this, this.src_);\n                this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n            }\n        };\n        /**\n         * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n         */\n        ImageWrapper.prototype.setImage = function (image) {\n            this.image_ = image;\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        };\n        /**\n         * Discards event handlers which listen for load completion or errors.\n         *\n         * @private\n         */\n        ImageWrapper.prototype.unlistenImage_ = function () {\n            if (this.unlisten_) {\n                this.unlisten_();\n                this.unlisten_ = null;\n            }\n        };\n        return ImageWrapper;\n    })(ImageBase$1));\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n     * @param {function():any} loadHandler Load callback function.\n     * @param {function():any} errorHandler Error callback function.\n     * @return {function():void} Callback to stop listening.\n     */\n    function listenImage(image, loadHandler, errorHandler) {\n        var img = /** @type {HTMLImageElement} */ (image);\n        var listening = true;\n        var decoding = false;\n        var loaded = false;\n        var listenerKeys = [\n            listenOnce(img, EventType.LOAD, function () {\n                loaded = true;\n                if (!decoding) {\n                    loadHandler();\n                }\n            }),\n        ];\n        if (img.src && IMAGE_DECODE) {\n            decoding = true;\n            img\n                .decode()\n                .then(function () {\n                if (listening) {\n                    loadHandler();\n                }\n            })\n                .catch(function (error) {\n                if (listening) {\n                    if (loaded) {\n                        loadHandler();\n                    }\n                    else {\n                        errorHandler();\n                    }\n                }\n            });\n        }\n        else {\n            listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n        }\n        return function unlisten() {\n            listening = false;\n            listenerKeys.forEach(unlistenByKey);\n        };\n    }\n\n    /**\n     * @module ol/style/IconImage\n     */\n    var __extends$9 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    var taintedTestContext = null;\n    var IconImage = /** @class */ (function (_super) {\n        __extends$9(IconImage, _super);\n        /**\n         * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n         * @param {string|undefined} src Src.\n         * @param {import(\"../size.js\").Size} size Size.\n         * @param {?string} crossOrigin Cross origin.\n         * @param {import(\"../ImageState.js\").default} imageState Image state.\n         * @param {import(\"../color.js\").Color} color Color.\n         */\n        function IconImage(image, src, size, crossOrigin, imageState, color) {\n            var _this = _super.call(this) || this;\n            /**\n             * @private\n             * @type {HTMLImageElement|HTMLCanvasElement}\n             */\n            _this.hitDetectionImage_ = null;\n            /**\n             * @private\n             * @type {HTMLImageElement|HTMLCanvasElement}\n             */\n            _this.image_ = !image ? new Image() : image;\n            if (crossOrigin !== null) {\n                /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n            }\n            /**\n             * @private\n             * @type {Object<number, HTMLCanvasElement>}\n             */\n            _this.canvas_ = {};\n            /**\n             * @private\n             * @type {import(\"../color.js\").Color}\n             */\n            _this.color_ = color;\n            /**\n             * @private\n             * @type {?function():void}\n             */\n            _this.unlisten_ = null;\n            /**\n             * @private\n             * @type {import(\"../ImageState.js\").default}\n             */\n            _this.imageState_ = imageState;\n            /**\n             * @private\n             * @type {import(\"../size.js\").Size}\n             */\n            _this.size_ = size;\n            /**\n             * @private\n             * @type {string|undefined}\n             */\n            _this.src_ = src;\n            /**\n             * @private\n             */\n            _this.tainted_;\n            return _this;\n        }\n        /**\n         * @private\n         * @return {boolean} The image canvas is tainted.\n         */\n        IconImage.prototype.isTainted_ = function () {\n            if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n                if (!taintedTestContext) {\n                    taintedTestContext = createCanvasContext2D(1, 1);\n                }\n                taintedTestContext.drawImage(this.image_, 0, 0);\n                try {\n                    taintedTestContext.getImageData(0, 0, 1, 1);\n                    this.tainted_ = false;\n                }\n                catch (e) {\n                    taintedTestContext = null;\n                    this.tainted_ = true;\n                }\n            }\n            return this.tainted_ === true;\n        };\n        /**\n         * @private\n         */\n        IconImage.prototype.dispatchChangeEvent_ = function () {\n            this.dispatchEvent(EventType.CHANGE);\n        };\n        /**\n         * @private\n         */\n        IconImage.prototype.handleImageError_ = function () {\n            this.imageState_ = ImageState.ERROR;\n            this.unlistenImage_();\n            this.dispatchChangeEvent_();\n        };\n        /**\n         * @private\n         */\n        IconImage.prototype.handleImageLoad_ = function () {\n            this.imageState_ = ImageState.LOADED;\n            if (this.size_) {\n                this.image_.width = this.size_[0];\n                this.image_.height = this.size_[1];\n            }\n            else {\n                this.size_ = [this.image_.width, this.image_.height];\n            }\n            this.unlistenImage_();\n            this.dispatchChangeEvent_();\n        };\n        /**\n         * @param {number} pixelRatio Pixel ratio.\n         * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n         */\n        IconImage.prototype.getImage = function (pixelRatio) {\n            this.replaceColor_(pixelRatio);\n            return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n        };\n        /**\n         * @param {number} pixelRatio Pixel ratio.\n         * @return {number} Image or Canvas element.\n         */\n        IconImage.prototype.getPixelRatio = function (pixelRatio) {\n            this.replaceColor_(pixelRatio);\n            return this.canvas_[pixelRatio] ? pixelRatio : 1;\n        };\n        /**\n         * @return {import(\"../ImageState.js\").default} Image state.\n         */\n        IconImage.prototype.getImageState = function () {\n            return this.imageState_;\n        };\n        /**\n         * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n         */\n        IconImage.prototype.getHitDetectionImage = function () {\n            if (!this.hitDetectionImage_) {\n                if (this.isTainted_()) {\n                    var width = this.size_[0];\n                    var height = this.size_[1];\n                    var context = createCanvasContext2D(width, height);\n                    context.fillRect(0, 0, width, height);\n                    this.hitDetectionImage_ = context.canvas;\n                }\n                else {\n                    this.hitDetectionImage_ = this.image_;\n                }\n            }\n            return this.hitDetectionImage_;\n        };\n        /**\n         * Get the size of the icon (in pixels).\n         * @return {import(\"../size.js\").Size} Image size.\n         */\n        IconImage.prototype.getSize = function () {\n            return this.size_;\n        };\n        /**\n         * @return {string|undefined} Image src.\n         */\n        IconImage.prototype.getSrc = function () {\n            return this.src_;\n        };\n        /**\n         * Load not yet loaded URI.\n         */\n        IconImage.prototype.load = function () {\n            if (this.imageState_ == ImageState.IDLE) {\n                this.imageState_ = ImageState.LOADING;\n                try {\n                    /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n                }\n                catch (e) {\n                    this.handleImageError_();\n                }\n                this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n            }\n        };\n        /**\n         * @param {number} pixelRatio Pixel ratio.\n         * @private\n         */\n        IconImage.prototype.replaceColor_ = function (pixelRatio) {\n            if (!this.color_ ||\n                this.canvas_[pixelRatio] ||\n                this.imageState_ !== ImageState.LOADED) {\n                return;\n            }\n            var canvas = document.createElement('canvas');\n            this.canvas_[pixelRatio] = canvas;\n            canvas.width = Math.ceil(this.image_.width * pixelRatio);\n            canvas.height = Math.ceil(this.image_.height * pixelRatio);\n            var ctx = canvas.getContext('2d');\n            ctx.scale(pixelRatio, pixelRatio);\n            ctx.drawImage(this.image_, 0, 0);\n            ctx.globalCompositeOperation = 'multiply';\n            // Internet Explorer 11 does not support the multiply operation.\n            // If the canvas is tainted in Internet Explorer this still produces\n            // a solid color image with the shape of the icon.\n            if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n                ctx.fillStyle = asString(this.color_);\n                ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n                ctx.globalCompositeOperation = 'destination-in';\n                ctx.drawImage(this.image_, 0, 0);\n            }\n            else {\n                var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                var data = imgData.data;\n                var r = this.color_[0] / 255.0;\n                var g = this.color_[1] / 255.0;\n                var b = this.color_[2] / 255.0;\n                var a = this.color_[3];\n                for (var i = 0, ii = data.length; i < ii; i += 4) {\n                    data[i] *= r;\n                    data[i + 1] *= g;\n                    data[i + 2] *= b;\n                    data[i + 3] *= a;\n                }\n                ctx.putImageData(imgData, 0, 0);\n            }\n        };\n        /**\n         * Discards event handlers which listen for load completion or errors.\n         *\n         * @private\n         */\n        IconImage.prototype.unlistenImage_ = function () {\n            if (this.unlisten_) {\n                this.unlisten_();\n                this.unlisten_ = null;\n            }\n        };\n        return IconImage;\n    }(EventTarget));\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {IconImage} Icon image.\n     */\n    function get(image, src, size, crossOrigin, imageState, color) {\n        var iconImage = shared.get(src, crossOrigin, color);\n        if (!iconImage) {\n            iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n            shared.set(src, crossOrigin, color, iconImage);\n        }\n        return iconImage;\n    }\n\n    var __extends$8 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @typedef {Object} Options\n     * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n     * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n     * `top-left` or `top-right`.\n     * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n     * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n     * the x value in pixels.\n     * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n     * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n     * the y value in pixels.\n     * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n     * the icon will be left as is.\n     * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n     * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n     * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n     * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n     * provided image must already be loaded. And in that case, it is required\n     * to provide the size of the image, with the `imgSize` option.\n     * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n     * sub-rectangle to use from the original icon image.\n     * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n     * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n     * `top-left` or `top-right`.\n     * @property {number} [opacity=1] Opacity of the icon.\n     * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n     * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n     * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n     * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n     * sub-rectangle to use from the origin (sprite) icon image.\n     * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n     * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n     * @property {string} [src] Image source URI.\n     */\n    /**\n     * @classdesc\n     * Set icon style for vector features.\n     * @api\n     */\n    var Icon = /** @class */ (function (_super) {\n        __extends$8(Icon, _super);\n        /**\n         * @param {Options} [opt_options] Options.\n         */\n        function Icon(opt_options) {\n            var _this = this;\n            var options = opt_options || {};\n            /**\n             * @type {number}\n             */\n            var opacity = options.opacity !== undefined ? options.opacity : 1;\n            /**\n             * @type {number}\n             */\n            var rotation = options.rotation !== undefined ? options.rotation : 0;\n            /**\n             * @type {number|import(\"../size.js\").Size}\n             */\n            var scale = options.scale !== undefined ? options.scale : 1;\n            /**\n             * @type {boolean}\n             */\n            var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n            _this = _super.call(this, {\n                opacity: opacity,\n                rotation: rotation,\n                scale: scale,\n                displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n                rotateWithView: rotateWithView,\n            }) || this;\n            /**\n             * @private\n             * @type {Array<number>}\n             */\n            _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n            /**\n             * @private\n             * @type {Array<number>}\n             */\n            _this.normalizedAnchor_ = null;\n            /**\n             * @private\n             * @type {import(\"./IconOrigin.js\").default}\n             */\n            _this.anchorOrigin_ =\n                options.anchorOrigin !== undefined\n                    ? options.anchorOrigin\n                    : IconOrigin.TOP_LEFT;\n            /**\n             * @private\n             * @type {import(\"./IconAnchorUnits.js\").default}\n             */\n            _this.anchorXUnits_ =\n                options.anchorXUnits !== undefined\n                    ? options.anchorXUnits\n                    : IconAnchorUnits.FRACTION;\n            /**\n             * @private\n             * @type {import(\"./IconAnchorUnits.js\").default}\n             */\n            _this.anchorYUnits_ =\n                options.anchorYUnits !== undefined\n                    ? options.anchorYUnits\n                    : IconAnchorUnits.FRACTION;\n            /**\n             * @private\n             * @type {?string}\n             */\n            _this.crossOrigin_ =\n                options.crossOrigin !== undefined ? options.crossOrigin : null;\n            /**\n             * @type {HTMLImageElement|HTMLCanvasElement}\n             */\n            var image = options.img !== undefined ? options.img : null;\n            /**\n             * @private\n             * @type {import(\"../size.js\").Size|undefined}\n             */\n            _this.imgSize_ = options.imgSize;\n            /**\n             * @type {string|undefined}\n             */\n            var src = options.src;\n            assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n            assert(!image || (image && _this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n            if ((src === undefined || src.length === 0) && image) {\n                src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n            }\n            assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n            /**\n             * @type {import(\"../ImageState.js\").default}\n             */\n            var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n            /**\n             * @private\n             * @type {import(\"../color.js\").Color}\n             */\n            _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n            /**\n             * @private\n             * @type {import(\"./IconImage.js\").default}\n             */\n            _this.iconImage_ = get(image, \n            /** @type {string} */ (src), _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n            /**\n             * @private\n             * @type {Array<number>}\n             */\n            _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n            /**\n             * @private\n             * @type {import(\"./IconOrigin.js\").default}\n             */\n            _this.offsetOrigin_ =\n                options.offsetOrigin !== undefined\n                    ? options.offsetOrigin\n                    : IconOrigin.TOP_LEFT;\n            /**\n             * @private\n             * @type {Array<number>}\n             */\n            _this.origin_ = null;\n            /**\n             * @private\n             * @type {import(\"../size.js\").Size}\n             */\n            _this.size_ = options.size !== undefined ? options.size : null;\n            return _this;\n        }\n        /**\n         * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n         * @return {Icon} The cloned style.\n         * @api\n         */\n        Icon.prototype.clone = function () {\n            var scale = this.getScale();\n            return new Icon({\n                anchor: this.anchor_.slice(),\n                anchorOrigin: this.anchorOrigin_,\n                anchorXUnits: this.anchorXUnits_,\n                anchorYUnits: this.anchorYUnits_,\n                color: this.color_ && this.color_.slice\n                    ? this.color_.slice()\n                    : this.color_ || undefined,\n                crossOrigin: this.crossOrigin_,\n                imgSize: this.imgSize_,\n                offset: this.offset_.slice(),\n                offsetOrigin: this.offsetOrigin_,\n                opacity: this.getOpacity(),\n                rotateWithView: this.getRotateWithView(),\n                rotation: this.getRotation(),\n                scale: Array.isArray(scale) ? scale.slice() : scale,\n                size: this.size_ !== null ? this.size_.slice() : undefined,\n                src: this.getSrc(),\n            });\n        };\n        /**\n         * Get the anchor point in pixels. The anchor determines the center point for the\n         * symbolizer.\n         * @return {Array<number>} Anchor.\n         * @api\n         */\n        Icon.prototype.getAnchor = function () {\n            var anchor = this.normalizedAnchor_;\n            if (!anchor) {\n                anchor = this.anchor_;\n                var size = this.getSize();\n                if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n                    this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                    if (!size) {\n                        return null;\n                    }\n                    anchor = this.anchor_.slice();\n                    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                        anchor[0] *= size[0];\n                    }\n                    if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                        anchor[1] *= size[1];\n                    }\n                }\n                if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n                    if (!size) {\n                        return null;\n                    }\n                    if (anchor === this.anchor_) {\n                        anchor = this.anchor_.slice();\n                    }\n                    if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                        anchor[0] = -anchor[0] + size[0];\n                    }\n                    if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                        anchor[1] = -anchor[1] + size[1];\n                    }\n                }\n                this.normalizedAnchor_ = anchor;\n            }\n            var displacement = this.getDisplacement();\n            return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n        };\n        /**\n         * Set the anchor point. The anchor determines the center point for the\n         * symbolizer.\n         *\n         * @param {Array<number>} anchor Anchor.\n         * @api\n         */\n        Icon.prototype.setAnchor = function (anchor) {\n            this.anchor_ = anchor;\n            this.normalizedAnchor_ = null;\n        };\n        /**\n         * Get the icon color.\n         * @return {import(\"../color.js\").Color} Color.\n         * @api\n         */\n        Icon.prototype.getColor = function () {\n            return this.color_;\n        };\n        /**\n         * Get the image icon.\n         * @param {number} pixelRatio Pixel ratio.\n         * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n         * @api\n         */\n        Icon.prototype.getImage = function (pixelRatio) {\n            return this.iconImage_.getImage(pixelRatio);\n        };\n        /**\n         * Get the pixel ratio.\n         * @param {number} pixelRatio Pixel ratio.\n         * @return {number} The pixel ratio of the image.\n         * @api\n         */\n        Icon.prototype.getPixelRatio = function (pixelRatio) {\n            return this.iconImage_.getPixelRatio(pixelRatio);\n        };\n        /**\n         * @return {import(\"../size.js\").Size} Image size.\n         */\n        Icon.prototype.getImageSize = function () {\n            return this.iconImage_.getSize();\n        };\n        /**\n         * @return {import(\"../ImageState.js\").default} Image state.\n         */\n        Icon.prototype.getImageState = function () {\n            return this.iconImage_.getImageState();\n        };\n        /**\n         * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n         */\n        Icon.prototype.getHitDetectionImage = function () {\n            return this.iconImage_.getHitDetectionImage();\n        };\n        /**\n         * Get the origin of the symbolizer.\n         * @return {Array<number>} Origin.\n         * @api\n         */\n        Icon.prototype.getOrigin = function () {\n            if (this.origin_) {\n                return this.origin_;\n            }\n            var offset = this.offset_;\n            if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n                var size = this.getSize();\n                var iconImageSize = this.iconImage_.getSize();\n                if (!size || !iconImageSize) {\n                    return null;\n                }\n                offset = offset.slice();\n                if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                    this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    offset[0] = iconImageSize[0] - size[0] - offset[0];\n                }\n                if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                    this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    offset[1] = iconImageSize[1] - size[1] - offset[1];\n                }\n            }\n            this.origin_ = offset;\n            return this.origin_;\n        };\n        /**\n         * Get the image URL.\n         * @return {string|undefined} Image src.\n         * @api\n         */\n        Icon.prototype.getSrc = function () {\n            return this.iconImage_.getSrc();\n        };\n        /**\n         * Get the size of the icon (in pixels).\n         * @return {import(\"../size.js\").Size} Image size.\n         * @api\n         */\n        Icon.prototype.getSize = function () {\n            return !this.size_ ? this.iconImage_.getSize() : this.size_;\n        };\n        /**\n         * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n         */\n        Icon.prototype.listenImageChange = function (listener) {\n            this.iconImage_.addEventListener(EventType.CHANGE, listener);\n        };\n        /**\n         * Load not yet loaded URI.\n         * When rendering a feature with an icon style, the vector renderer will\n         * automatically call this method. However, you might want to call this\n         * method yourself for preloading or other purposes.\n         * @api\n         */\n        Icon.prototype.load = function () {\n            this.iconImage_.load();\n        };\n        /**\n         * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n         */\n        Icon.prototype.unlistenImageChange = function (listener) {\n            this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n        };\n        return Icon;\n    }(ImageStyle$1));\n    var Icon$1 = Icon;\n\n    /**\n     * @module ol/render/canvas/hitdetect\n     */\n    var HIT_DETECT_RESOLUTION = 0.5;\n    /**\n     * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n     * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n     * for rendering features to all worlds of the viewport, from coordinates to css\n     * pixels.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n     * Features to consider for hit detection.\n     * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n     * Layer style function.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @return {ImageData} Hit detection image data.\n     */\n    function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n        var width = size[0] * HIT_DETECT_RESOLUTION;\n        var height = size[1] * HIT_DETECT_RESOLUTION;\n        var context = createCanvasContext2D(width, height);\n        context.imageSmoothingEnabled = false;\n        var canvas = context.canvas;\n        var renderer = new CanvasImmediateRenderer$1(context, HIT_DETECT_RESOLUTION, extent, null, rotation);\n        var featureCount = features.length;\n        // Stretch hit detection index to use the whole available color range\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n        var featuresByZIndex = {};\n        for (var i = 1; i <= featureCount; ++i) {\n            var feature = features[i - 1];\n            var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n            if (!styleFunction) {\n                continue;\n            }\n            var styles = featureStyleFunction(feature, resolution);\n            if (!styles) {\n                continue;\n            }\n            if (!Array.isArray(styles)) {\n                styles = [styles];\n            }\n            var index = i * indexFactor;\n            var color = '#' + ('000000' + index.toString(16)).slice(-6);\n            for (var j = 0, jj = styles.length; j < jj; ++j) {\n                var originalStyle = styles[j];\n                var geometry = originalStyle.getGeometryFunction()(feature);\n                if (!geometry || !intersects(extent, geometry.getExtent())) {\n                    continue;\n                }\n                var style = originalStyle.clone();\n                var fill = style.getFill();\n                if (fill) {\n                    fill.setColor(color);\n                }\n                var stroke = style.getStroke();\n                if (stroke) {\n                    stroke.setColor(color);\n                    stroke.setLineDash(null);\n                }\n                style.setText(undefined);\n                var image = originalStyle.getImage();\n                if (image && image.getOpacity() !== 0) {\n                    var imgSize = image.getImageSize();\n                    if (!imgSize) {\n                        continue;\n                    }\n                    var imgContext = createCanvasContext2D(imgSize[0], imgSize[1], undefined, { alpha: false });\n                    var img = imgContext.canvas;\n                    imgContext.fillStyle = color;\n                    imgContext.fillRect(0, 0, img.width, img.height);\n                    style.setImage(new Icon$1({\n                        img: img,\n                        imgSize: imgSize,\n                        anchor: image.getAnchor(),\n                        anchorXUnits: IconAnchorUnits.PIXELS,\n                        anchorYUnits: IconAnchorUnits.PIXELS,\n                        offset: image.getOrigin(),\n                        opacity: 1,\n                        size: image.getSize(),\n                        scale: image.getScale(),\n                        rotation: image.getRotation(),\n                        rotateWithView: image.getRotateWithView(),\n                    }));\n                }\n                var zIndex = style.getZIndex() || 0;\n                var byGeometryType = featuresByZIndex[zIndex];\n                if (!byGeometryType) {\n                    byGeometryType = {};\n                    featuresByZIndex[zIndex] = byGeometryType;\n                    byGeometryType[GeometryType.POLYGON] = [];\n                    byGeometryType[GeometryType.CIRCLE] = [];\n                    byGeometryType[GeometryType.LINE_STRING] = [];\n                    byGeometryType[GeometryType.POINT] = [];\n                }\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n        var zIndexKeys = Object.keys(featuresByZIndex)\n            .map(Number)\n            .sort(numberSafeCompareFunction);\n        for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n            var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n            for (var type in byGeometryType) {\n                var geomAndStyle = byGeometryType[type];\n                for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                    renderer.setStyle(geomAndStyle[j + 1]);\n                    for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                        renderer.setTransform(transforms[k]);\n                        renderer.drawGeometry(geomAndStyle[j]);\n                    }\n                }\n            }\n        }\n        return context.getImageData(0, 0, canvas.width, canvas.height);\n    }\n    /**\n     * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n     * detection canvas in css pixels.\n     * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n     * match the `features` array that was passed to `createHitDetectionImageData()`.\n     * @param {ImageData} imageData Hit detection image data generated by\n     * `createHitDetectionImageData()`.\n     * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n     */\n    function hitDetect(pixel, features, imageData) {\n        var resultFeatures = [];\n        if (imageData) {\n            var x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n            var y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n            // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n            // for browsers returning coordinates slightly larger than the actual canvas size\n            // due to a non-integer pixel ratio.\n            var index = (clamp(x, 0, imageData.width - 1) +\n                clamp(y, 0, imageData.height - 1) * imageData.width) *\n                4;\n            var r = imageData.data[index];\n            var g = imageData.data[index + 1];\n            var b = imageData.data[index + 2];\n            var i = b + 256 * (g + 256 * r);\n            var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n            if (i && i % indexFactor === 0) {\n                resultFeatures.push(features[i / indexFactor - 1]);\n            }\n        }\n        return resultFeatures;\n    }\n\n    /**\n     * @module ol/renderer/vector\n     */\n    /**\n     * Feature callback. The callback will be called with three arguments. The first\n     * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n     * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n     * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n     * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n     * @template T\n     * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n     */\n    /**\n     * Tolerance for geometry simplification in device pixels.\n     * @type {number}\n     */\n    var SIMPLIFY_TOLERANCE = 0.5;\n    /**\n     * @const\n     * @type {Object<import(\"../geom/GeometryType.js\").default,\n     *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n     *                         import(\"../style/Style.js\").default, Object): void>}\n     */\n    var GEOMETRY_RENDERERS = {\n        'Point': renderPointGeometry,\n        'LineString': renderLineStringGeometry,\n        'Polygon': renderPolygonGeometry,\n        'MultiPoint': renderMultiPointGeometry,\n        'MultiLineString': renderMultiLineStringGeometry,\n        'MultiPolygon': renderMultiPolygonGeometry,\n        'GeometryCollection': renderGeometryCollectionGeometry,\n        'Circle': renderCircleGeometry,\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n     * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n     * @return {number} Order.\n     */\n    function defaultOrder(feature1, feature2) {\n        return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n    }\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Squared pixel tolerance.\n     */\n    function getSquaredTolerance(resolution, pixelRatio) {\n        var tolerance = getTolerance(resolution, pixelRatio);\n        return tolerance * tolerance;\n    }\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel tolerance.\n     */\n    function getTolerance(resolution, pixelRatio) {\n        return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     */\n    function renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n        var fillStyle = style.getFill();\n        var strokeStyle = style.getStroke();\n        if (fillStyle || strokeStyle) {\n            var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n            circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n            circleReplay.drawCircle(geometry, feature);\n        }\n        var textStyle = style.getText();\n        if (textStyle && textStyle.getText()) {\n            var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n            textReplay.setTextStyle(textStyle);\n            textReplay.drawText(geometry, feature);\n        }\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     * @return {boolean} `true` if style is loading.\n     */\n    function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n        var loading = false;\n        var imageStyle = style.getImage();\n        if (imageStyle) {\n            var imageState = imageStyle.getImageState();\n            if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n                imageStyle.unlistenImageChange(listener);\n            }\n            else {\n                if (imageState == ImageState.IDLE) {\n                    imageStyle.load();\n                }\n                imageState = imageStyle.getImageState();\n                imageStyle.listenImageChange(listener);\n                loading = true;\n            }\n        }\n        renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n        return loading;\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     */\n    function renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry) {\n            return;\n        }\n        var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n        var renderer = style.getRenderer();\n        if (renderer) {\n            renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n        }\n        else {\n            var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n            geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n        }\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    function renderGeometry(replayGroup, geometry, style, feature) {\n        if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n            var geometries = \n            /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                renderGeometry(replayGroup, geometries[i], style, feature);\n            }\n            return;\n        }\n        var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n        replay.drawCustom(\n        /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer(), style.getHitDetectionRenderer());\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     */\n    function renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n        var geometries = geometry.getGeometriesArray();\n        var i, ii;\n        for (i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n            geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n        }\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     */\n    function renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n        var strokeStyle = style.getStroke();\n        if (strokeStyle) {\n            var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n            lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n            lineStringReplay.drawLineString(geometry, feature);\n        }\n        var textStyle = style.getText();\n        if (textStyle && textStyle.getText()) {\n            var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n            textReplay.setTextStyle(textStyle);\n            textReplay.drawText(geometry, feature);\n        }\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     */\n    function renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n        var strokeStyle = style.getStroke();\n        if (strokeStyle) {\n            var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n            lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n            lineStringReplay.drawMultiLineString(geometry, feature);\n        }\n        var textStyle = style.getText();\n        if (textStyle && textStyle.getText()) {\n            var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n            textReplay.setTextStyle(textStyle);\n            textReplay.drawText(geometry, feature);\n        }\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     */\n    function renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n        var fillStyle = style.getFill();\n        var strokeStyle = style.getStroke();\n        if (strokeStyle || fillStyle) {\n            var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n            polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n            polygonReplay.drawMultiPolygon(geometry, feature);\n        }\n        var textStyle = style.getText();\n        if (textStyle && textStyle.getText()) {\n            var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n            textReplay.setTextStyle(textStyle);\n            textReplay.drawText(geometry, feature);\n        }\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     */\n    function renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n        var imageStyle = style.getImage();\n        var textStyle = style.getText();\n        /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n        var declutterImageWithText;\n        if (opt_declutterBuilderGroup) {\n            builderGroup = opt_declutterBuilderGroup;\n            declutterImageWithText =\n                imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n        }\n        if (imageStyle) {\n            if (imageStyle.getImageState() != ImageState.LOADED) {\n                return;\n            }\n            var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n            imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n            imageReplay.drawPoint(geometry, feature);\n        }\n        if (textStyle && textStyle.getText()) {\n            var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n            textReplay.setTextStyle(textStyle, declutterImageWithText);\n            textReplay.drawText(geometry, feature);\n        }\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     */\n    function renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n        var imageStyle = style.getImage();\n        var textStyle = style.getText();\n        /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n        var declutterImageWithText;\n        if (opt_declutterBuilderGroup) {\n            builderGroup = opt_declutterBuilderGroup;\n            declutterImageWithText =\n                imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n        }\n        if (imageStyle) {\n            if (imageStyle.getImageState() != ImageState.LOADED) {\n                return;\n            }\n            var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n            imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n            imageReplay.drawMultiPoint(geometry, feature);\n        }\n        if (textStyle && textStyle.getText()) {\n            var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n            textReplay.setTextStyle(textStyle, declutterImageWithText);\n            textReplay.drawText(geometry, feature);\n        }\n    }\n    /**\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     */\n    function renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n        var fillStyle = style.getFill();\n        var strokeStyle = style.getStroke();\n        if (fillStyle || strokeStyle) {\n            var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n            polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n            polygonReplay.drawPolygon(geometry, feature);\n        }\n        var textStyle = style.getText();\n        if (textStyle && textStyle.getText()) {\n            var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n            textReplay.setTextStyle(textStyle);\n            textReplay.drawText(geometry, feature);\n        }\n    }\n\n    var __extends$7 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @classdesc\n     * Canvas renderer for vector layers.\n     * @api\n     */\n    var CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n        __extends$7(CanvasVectorLayerRenderer, _super);\n        /**\n         * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n         */\n        function CanvasVectorLayerRenderer(vectorLayer) {\n            var _this = _super.call(this, vectorLayer) || this;\n            /** @private */\n            _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n            /**\n             * @type {boolean}\n             */\n            _this.animatingOrInteracting_;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            _this.dirty_ = false;\n            /**\n             * @type {ImageData}\n             */\n            _this.hitDetectionImageData_ = null;\n            /**\n             * @type {Array<import(\"../../Feature.js\").default>}\n             */\n            _this.renderedFeatures_ = null;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.renderedRevision_ = -1;\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.renderedResolution_ = NaN;\n            /**\n             * @private\n             * @type {import(\"../../extent.js\").Extent}\n             */\n            _this.renderedExtent_ = createEmpty();\n            /**\n             * @private\n             * @type {import(\"../../extent.js\").Extent}\n             */\n            _this.wrappedRenderedExtent_ = createEmpty();\n            /**\n             * @private\n             * @type {number}\n             */\n            _this.renderedRotation_;\n            /**\n             * @private\n             * @type {import(\"../../coordinate\").Coordinate}\n             */\n            _this.renderedCenter_ = null;\n            /**\n             * @private\n             * @type {import(\"../../proj/Projection\").default}\n             */\n            _this.renderedProjection_ = null;\n            /**\n             * @private\n             * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n             */\n            _this.renderedRenderOrder_ = null;\n            /**\n             * @private\n             * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n             */\n            _this.replayGroup_ = null;\n            /**\n             * A new replay group had to be created by `prepareFrame()`\n             * @type {boolean}\n             */\n            _this.replayGroupChanged = true;\n            /**\n             * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n             */\n            _this.declutterExecutorGroup = null;\n            /**\n             * Clipping to be performed by `renderFrame()`\n             * @type {boolean}\n             */\n            _this.clipping = true;\n            return _this;\n        }\n        /**\n         * @param {ExecutorGroup} executorGroup Executor group.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n         */\n        CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n            var extent = frameState.extent;\n            var viewState = frameState.viewState;\n            var center = viewState.center;\n            var resolution = viewState.resolution;\n            var projection = viewState.projection;\n            var rotation = viewState.rotation;\n            var projectionExtent = projection.getExtent();\n            var vectorSource = this.getLayer().getSource();\n            var pixelRatio = frameState.pixelRatio;\n            var viewHints = frameState.viewHints;\n            var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n            var context = this.context;\n            var width = Math.round(frameState.size[0] * pixelRatio);\n            var height = Math.round(frameState.size[1] * pixelRatio);\n            var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n            var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n            var endWorld = multiWorld\n                ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n                : 1;\n            var world = multiWorld\n                ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n                : 0;\n            do {\n                var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n                executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n            } while (++world < endWorld);\n        };\n        /**\n         * Render declutter items for this layer\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         */\n        CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n            if (this.declutterExecutorGroup) {\n                this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n            }\n        };\n        /**\n         * Render the layer.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         * @param {HTMLElement} target Target that may be used to render content to.\n         * @return {HTMLElement} The rendered element.\n         */\n        CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n            var pixelRatio = frameState.pixelRatio;\n            var layerState = frameState.layerStatesArray[frameState.layerIndex];\n            // set forward and inverse pixel transforms\n            makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n            makeInverse(this.inversePixelTransform, this.pixelTransform);\n            var canvasTransform = toString(this.pixelTransform);\n            this.useContainer(target, canvasTransform, layerState.opacity, this.getBackground(frameState));\n            var context = this.context;\n            var canvas = context.canvas;\n            var replayGroup = this.replayGroup_;\n            var declutterExecutorGroup = this.declutterExecutorGroup;\n            if ((!replayGroup || replayGroup.isEmpty()) &&\n                (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n                return null;\n            }\n            // resize and clear\n            var width = Math.round(frameState.size[0] * pixelRatio);\n            var height = Math.round(frameState.size[1] * pixelRatio);\n            if (canvas.width != width || canvas.height != height) {\n                canvas.width = width;\n                canvas.height = height;\n                if (canvas.style.transform !== canvasTransform) {\n                    canvas.style.transform = canvasTransform;\n                }\n            }\n            else if (!this.containerReused) {\n                context.clearRect(0, 0, width, height);\n            }\n            this.preRender(context, frameState);\n            var viewState = frameState.viewState;\n            viewState.projection;\n            // clipped rendering if layer extent is set\n            var clipped = false;\n            var render = true;\n            if (layerState.extent && this.clipping) {\n                var layerExtent = fromUserExtent(layerState.extent);\n                render = intersects(layerExtent, frameState.extent);\n                clipped = render && !containsExtent(layerExtent, frameState.extent);\n                if (clipped) {\n                    this.clipUnrotated(context, frameState, layerExtent);\n                }\n            }\n            if (render) {\n                this.renderWorlds(replayGroup, frameState);\n            }\n            if (clipped) {\n                context.restore();\n            }\n            this.postRender(context, frameState);\n            var opacity = cssOpacity(layerState.opacity);\n            var container = this.container;\n            if (opacity !== container.style.opacity) {\n                container.style.opacity = opacity;\n            }\n            if (this.renderedRotation_ !== viewState.rotation) {\n                this.renderedRotation_ = viewState.rotation;\n                this.hitDetectionImageData_ = null;\n            }\n            return this.container;\n        };\n        /**\n         * Asynchronous layer level hit detection.\n         * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n         * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n         */\n        CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n            return new Promise(\n            /**\n             * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n             * @this {CanvasVectorLayerRenderer}\n             */\n            function (resolve) {\n                if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                    var size = [this.context.canvas.width, this.context.canvas.height];\n                    apply(this.pixelTransform, size);\n                    var center = this.renderedCenter_;\n                    var resolution = this.renderedResolution_;\n                    var rotation = this.renderedRotation_;\n                    var projection = this.renderedProjection_;\n                    var extent = this.wrappedRenderedExtent_;\n                    var layer = this.getLayer();\n                    var transforms = [];\n                    var width = size[0] * HIT_DETECT_RESOLUTION;\n                    var height = size[1] * HIT_DETECT_RESOLUTION;\n                    transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n                    var source = layer.getSource();\n                    var projectionExtent = projection.getExtent();\n                    if (source.getWrapX() &&\n                        projection.canWrapX() &&\n                        !containsExtent(projectionExtent, extent)) {\n                        var startX = extent[0];\n                        var worldWidth = getWidth(projectionExtent);\n                        var world = 0;\n                        var offsetX = void 0;\n                        while (startX < projectionExtent[0]) {\n                            --world;\n                            offsetX = worldWidth * world;\n                            transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                            startX += worldWidth;\n                        }\n                        world = 0;\n                        startX = extent[2];\n                        while (startX > projectionExtent[2]) {\n                            ++world;\n                            offsetX = worldWidth * world;\n                            transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                            startX -= worldWidth;\n                        }\n                    }\n                    this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n                }\n                resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n            }.bind(this));\n        };\n        /**\n         * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         * @param {number} hitTolerance Hit tolerance in pixels.\n         * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n         * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n         * @return {T|undefined} Callback result.\n         * @template T\n         */\n        CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n            var _this = this;\n            if (!this.replayGroup_) {\n                return undefined;\n            }\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer = this.getLayer();\n            /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n            var features = {};\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n             * @param {number} distanceSq The squared distance to the click position\n             * @return {T|undefined} Callback result.\n             */\n            var featureCallback = function (feature, geometry, distanceSq) {\n                var key = getUid(feature);\n                var match = features[key];\n                if (!match) {\n                    if (distanceSq === 0) {\n                        features[key] = true;\n                        return callback(feature, layer, geometry);\n                    }\n                    matches.push((features[key] = {\n                        feature: feature,\n                        layer: layer,\n                        geometry: geometry,\n                        distanceSq: distanceSq,\n                        callback: callback,\n                    }));\n                }\n                else if (match !== true && distanceSq < match.distanceSq) {\n                    if (distanceSq === 0) {\n                        features[key] = true;\n                        matches.splice(matches.lastIndexOf(match), 1);\n                        return callback(feature, layer, geometry);\n                    }\n                    match.geometry = geometry;\n                    match.distanceSq = distanceSq;\n                }\n                return undefined;\n            };\n            var result;\n            var executorGroups = [this.replayGroup_];\n            if (this.declutterExecutorGroup) {\n                executorGroups.push(this.declutterExecutorGroup);\n            }\n            executorGroups.some(function (executorGroup) {\n                return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup &&\n                    frameState.declutterTree\n                    ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                    : null));\n            });\n            return result;\n        };\n        /**\n         * Perform action necessary to get the layer rendered after new fonts have loaded\n         */\n        CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n            var layer = this.getLayer();\n            if (layer.getVisible() && this.replayGroup_) {\n                layer.changed();\n            }\n        };\n        /**\n         * Handle changes in image style state.\n         * @param {import(\"../../events/Event.js\").default} event Image style change event.\n         * @private\n         */\n        CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n            this.renderIfReadyAndVisible();\n        };\n        /**\n         * Determine whether render should be called.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         * @return {boolean} Layer is ready to be rendered.\n         */\n        CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n            var vectorLayer = this.getLayer();\n            var vectorSource = vectorLayer.getSource();\n            if (!vectorSource) {\n                return false;\n            }\n            var animating = frameState.viewHints[ViewHint.ANIMATING];\n            var interacting = frameState.viewHints[ViewHint.INTERACTING];\n            var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n            var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n            if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n                (!updateWhileInteracting && interacting)) {\n                this.animatingOrInteracting_ = true;\n                return true;\n            }\n            this.animatingOrInteracting_ = false;\n            var frameStateExtent = frameState.extent;\n            var viewState = frameState.viewState;\n            var projection = viewState.projection;\n            var resolution = viewState.resolution;\n            var pixelRatio = frameState.pixelRatio;\n            var vectorLayerRevision = vectorLayer.getRevision();\n            var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n            var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n            if (vectorLayerRenderOrder === undefined) {\n                vectorLayerRenderOrder = defaultOrder;\n            }\n            var center = viewState.center.slice();\n            var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n            var renderedExtent = extent.slice();\n            var loadExtents = [extent.slice()];\n            var projectionExtent = projection.getExtent();\n            if (vectorSource.getWrapX() &&\n                projection.canWrapX() &&\n                !containsExtent(projectionExtent, frameState.extent)) {\n                // For the replay group, we need an extent that intersects the real world\n                // (-180° to +180°). To support geometries in a coordinate range from -540°\n                // to +540°, we add at least 1 world width on each side of the projection\n                // extent. If the viewport is wider than the world, we need to add half of\n                // the viewport width to make sure we cover the whole viewport.\n                var worldWidth = getWidth(projectionExtent);\n                var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n                extent[0] = projectionExtent[0] - gutter;\n                extent[2] = projectionExtent[2] + gutter;\n                wrapX(center, projection);\n                var loadExtent = wrapX$1(loadExtents[0], projection);\n                // If the extent crosses the date line, we load data for both edges of the worlds\n                if (loadExtent[0] < projectionExtent[0] &&\n                    loadExtent[2] < projectionExtent[2]) {\n                    loadExtents.push([\n                        loadExtent[0] + worldWidth,\n                        loadExtent[1],\n                        loadExtent[2] + worldWidth,\n                        loadExtent[3],\n                    ]);\n                }\n                else if (loadExtent[0] > projectionExtent[0] &&\n                    loadExtent[2] > projectionExtent[2]) {\n                    loadExtents.push([\n                        loadExtent[0] - worldWidth,\n                        loadExtent[1],\n                        loadExtent[2] - worldWidth,\n                        loadExtent[3],\n                    ]);\n                }\n            }\n            if (!this.dirty_ &&\n                this.renderedResolution_ == resolution &&\n                this.renderedRevision_ == vectorLayerRevision &&\n                this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n                containsExtent(this.wrappedRenderedExtent_, extent)) {\n                if (!equals$1(this.renderedExtent_, renderedExtent)) {\n                    this.hitDetectionImageData_ = null;\n                    this.renderedExtent_ = renderedExtent;\n                }\n                this.renderedCenter_ = center;\n                this.replayGroupChanged = false;\n                return true;\n            }\n            this.replayGroup_ = null;\n            this.dirty_ = false;\n            var replayGroup = new CanvasBuilderGroup(getTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n            var declutterBuilderGroup;\n            if (this.getLayer().getDeclutter()) {\n                declutterBuilderGroup = new CanvasBuilderGroup(getTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n            }\n            var userTransform;\n            var i, ii; {\n                for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                    vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n                }\n            }\n            var squaredTolerance = getSquaredTolerance(resolution, pixelRatio);\n            var render = \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             * @this {CanvasVectorLayerRenderer}\n             */\n            function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                    this.dirty_ = this.dirty_ || dirty;\n                }\n            }.bind(this);\n            var userExtent = toUserExtent(extent);\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features = vectorSource.getFeaturesInExtent(userExtent);\n            if (vectorLayerRenderOrder) {\n                features.sort(vectorLayerRenderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                render(features[i]);\n            }\n            this.renderedFeatures_ = features;\n            var replayGroupInstructions = replayGroup.finish();\n            var executorGroup = new ExecutorGroup$1(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n            if (declutterBuilderGroup) {\n                this.declutterExecutorGroup = new ExecutorGroup$1(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n            }\n            this.renderedResolution_ = resolution;\n            this.renderedRevision_ = vectorLayerRevision;\n            this.renderedRenderOrder_ = vectorLayerRenderOrder;\n            this.renderedExtent_ = renderedExtent;\n            this.wrappedRenderedExtent_ = extent;\n            this.renderedCenter_ = center;\n            this.renderedProjection_ = projection;\n            this.replayGroup_ = executorGroup;\n            this.hitDetectionImageData_ = null;\n            this.replayGroupChanged = true;\n            return true;\n        };\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @param {number} squaredTolerance Squared render tolerance.\n         * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n         * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n         * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n         * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n         * @return {boolean} `true` if an image is loading.\n         */\n        CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n            if (!styles) {\n                return false;\n            }\n            var loading = false;\n            if (Array.isArray(styles)) {\n                for (var i = 0, ii = styles.length; i < ii; ++i) {\n                    loading =\n                        renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n                }\n            }\n            else {\n                loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n            }\n            return loading;\n        };\n        return CanvasVectorLayerRenderer;\n    }(CanvasLayerRenderer$1));\n    var CanvasVectorLayerRenderer$1 = CanvasVectorLayerRenderer;\n\n    var __extends$6 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @classdesc\n     * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n     * even during animations. Points and labels stay upright on rotated views. For very large\n     * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n     * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n     *\n     * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n     * property on the layer object; for example, setting `title: 'My Title'` in the\n     * options means that `title` is observable, and has get/set accessors.\n     *\n     * @template {import(\"../source/Vector.js\").default} VectorSourceType\n     * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n     * @api\n     */\n    var VectorLayer = /** @class */ (function (_super) {\n        __extends$6(VectorLayer, _super);\n        /**\n         * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n         */\n        function VectorLayer(opt_options) {\n            return _super.call(this, opt_options) || this;\n        }\n        VectorLayer.prototype.createRenderer = function () {\n            return new CanvasVectorLayerRenderer$1(this);\n        };\n        return VectorLayer;\n    }(BaseVectorLayer$1));\n    var VectorLayer$1 = VectorLayer;\n\n    /**\n     * @module ol/CollectionEventType\n     */\n    /**\n     * @enum {string}\n     */\n    var CollectionEventType = {\n        /**\n         * Triggered when an item is added to the collection.\n         * @event module:ol/Collection.CollectionEvent#add\n         * @api\n         */\n        ADD: 'add',\n        /**\n         * Triggered when an item is removed from the collection.\n         * @event module:ol/Collection.CollectionEvent#remove\n         * @api\n         */\n        REMOVE: 'remove',\n    };\n\n    var __extends$5 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @enum {string}\n     * @private\n     */\n    var Property = {\n        LENGTH: 'length',\n    };\n    /**\n     * @classdesc\n     * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n     * type.\n     */\n    var CollectionEvent = /** @class */ (function (_super) {\n        __extends$5(CollectionEvent, _super);\n        /**\n         * @param {import(\"./CollectionEventType.js\").default} type Type.\n         * @param {*} [opt_element] Element.\n         * @param {number} [opt_index] The index of the added or removed element.\n         */\n        function CollectionEvent(type, opt_element, opt_index) {\n            var _this = _super.call(this, type) || this;\n            /**\n             * The element that is added to or removed from the collection.\n             * @type {*}\n             * @api\n             */\n            _this.element = opt_element;\n            /**\n             * The index of the added or removed element.\n             * @type {number}\n             * @api\n             */\n            _this.index = opt_index;\n            return _this;\n        }\n        return CollectionEvent;\n    }(Event));\n    /***\n     * @template Return\n     * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n     *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n     *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n     *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n     *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n     */\n    /**\n     * @typedef {Object} Options\n     * @property {boolean} [unique=false] Disallow the same item from being added to\n     * the collection twice.\n     */\n    /**\n     * @classdesc\n     * An expanded version of standard JS Array, adding convenience methods for\n     * manipulation. Add and remove changes to the Collection trigger a Collection\n     * event. Note that this does not cover changes to the objects _within_ the\n     * Collection; they trigger events on the appropriate object, not on the\n     * Collection as a whole.\n     *\n     * @fires CollectionEvent\n     *\n     * @template T\n     * @api\n     */\n    var Collection = /** @class */ (function (_super) {\n        __extends$5(Collection, _super);\n        /**\n         * @param {Array<T>} [opt_array] Array.\n         * @param {Options} [opt_options] Collection options.\n         */\n        function Collection(opt_array, opt_options) {\n            var _this = _super.call(this) || this;\n            /***\n             * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n             */\n            _this.on;\n            /***\n             * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n             */\n            _this.once;\n            /***\n             * @type {CollectionOnSignature<void>}\n             */\n            _this.un;\n            var options = opt_options || {};\n            /**\n             * @private\n             * @type {boolean}\n             */\n            _this.unique_ = !!options.unique;\n            /**\n             * @private\n             * @type {!Array<T>}\n             */\n            _this.array_ = opt_array ? opt_array : [];\n            if (_this.unique_) {\n                for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                    _this.assertUnique_(_this.array_[i], i);\n                }\n            }\n            _this.updateLength_();\n            return _this;\n        }\n        /**\n         * Remove all elements from the collection.\n         * @api\n         */\n        Collection.prototype.clear = function () {\n            while (this.getLength() > 0) {\n                this.pop();\n            }\n        };\n        /**\n         * Add elements to the collection.  This pushes each item in the provided array\n         * to the end of the collection.\n         * @param {!Array<T>} arr Array.\n         * @return {Collection<T>} This collection.\n         * @api\n         */\n        Collection.prototype.extend = function (arr) {\n            for (var i = 0, ii = arr.length; i < ii; ++i) {\n                this.push(arr[i]);\n            }\n            return this;\n        };\n        /**\n         * Iterate over each element, calling the provided callback.\n         * @param {function(T, number, Array<T>): *} f The function to call\n         *     for every element. This function takes 3 arguments (the element, the\n         *     index and the array). The return value is ignored.\n         * @api\n         */\n        Collection.prototype.forEach = function (f) {\n            var array = this.array_;\n            for (var i = 0, ii = array.length; i < ii; ++i) {\n                f(array[i], i, array);\n            }\n        };\n        /**\n         * Get a reference to the underlying Array object. Warning: if the array\n         * is mutated, no events will be dispatched by the collection, and the\n         * collection's \"length\" property won't be in sync with the actual length\n         * of the array.\n         * @return {!Array<T>} Array.\n         * @api\n         */\n        Collection.prototype.getArray = function () {\n            return this.array_;\n        };\n        /**\n         * Get the element at the provided index.\n         * @param {number} index Index.\n         * @return {T} Element.\n         * @api\n         */\n        Collection.prototype.item = function (index) {\n            return this.array_[index];\n        };\n        /**\n         * Get the length of this collection.\n         * @return {number} The length of the array.\n         * @observable\n         * @api\n         */\n        Collection.prototype.getLength = function () {\n            return this.get(Property.LENGTH);\n        };\n        /**\n         * Insert an element at the provided index.\n         * @param {number} index Index.\n         * @param {T} elem Element.\n         * @api\n         */\n        Collection.prototype.insertAt = function (index, elem) {\n            if (this.unique_) {\n                this.assertUnique_(elem);\n            }\n            this.array_.splice(index, 0, elem);\n            this.updateLength_();\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        };\n        /**\n         * Remove the last element of the collection and return it.\n         * Return `undefined` if the collection is empty.\n         * @return {T|undefined} Element.\n         * @api\n         */\n        Collection.prototype.pop = function () {\n            return this.removeAt(this.getLength() - 1);\n        };\n        /**\n         * Insert the provided element at the end of the collection.\n         * @param {T} elem Element.\n         * @return {number} New length of the collection.\n         * @api\n         */\n        Collection.prototype.push = function (elem) {\n            if (this.unique_) {\n                this.assertUnique_(elem);\n            }\n            var n = this.getLength();\n            this.insertAt(n, elem);\n            return this.getLength();\n        };\n        /**\n         * Remove the first occurrence of an element from the collection.\n         * @param {T} elem Element.\n         * @return {T|undefined} The removed element or undefined if none found.\n         * @api\n         */\n        Collection.prototype.remove = function (elem) {\n            var arr = this.array_;\n            for (var i = 0, ii = arr.length; i < ii; ++i) {\n                if (arr[i] === elem) {\n                    return this.removeAt(i);\n                }\n            }\n            return undefined;\n        };\n        /**\n         * Remove the element at the provided index and return it.\n         * Return `undefined` if the collection does not contain this index.\n         * @param {number} index Index.\n         * @return {T|undefined} Value.\n         * @api\n         */\n        Collection.prototype.removeAt = function (index) {\n            var prev = this.array_[index];\n            this.array_.splice(index, 1);\n            this.updateLength_();\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            return prev;\n        };\n        /**\n         * Set the element at the provided index.\n         * @param {number} index Index.\n         * @param {T} elem Element.\n         * @api\n         */\n        Collection.prototype.setAt = function (index, elem) {\n            var n = this.getLength();\n            if (index < n) {\n                if (this.unique_) {\n                    this.assertUnique_(elem, index);\n                }\n                var prev = this.array_[index];\n                this.array_[index] = elem;\n                this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n                this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n            }\n            else {\n                for (var j = n; j < index; ++j) {\n                    this.insertAt(j, undefined);\n                }\n                this.insertAt(index, elem);\n            }\n        };\n        /**\n         * @private\n         */\n        Collection.prototype.updateLength_ = function () {\n            this.set(Property.LENGTH, this.array_.length);\n        };\n        /**\n         * @private\n         * @param {T} elem Element.\n         * @param {number} [opt_except] Optional index to ignore.\n         */\n        Collection.prototype.assertUnique_ = function (elem, opt_except) {\n            for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n                if (this.array_[i] === elem && i !== opt_except) {\n                    throw new AssertionError$1(58);\n                }\n            }\n        };\n        return Collection;\n    }(BaseObject$1));\n    var Collection$1 = Collection;\n\n    /**\n     * @module ol/structs/RBush\n     */\n    /**\n     * @typedef {Object} Entry\n     * @property {number} minX MinX.\n     * @property {number} minY MinY.\n     * @property {number} maxX MaxX.\n     * @property {number} maxY MaxY.\n     * @property {Object} [value] Value.\n     */\n    /**\n     * @classdesc\n     * Wrapper around the RBush by Vladimir Agafonkin.\n     * See https://github.com/mourner/rbush.\n     *\n     * @template T\n     */\n    var RBush = /** @class */ (function () {\n        /**\n         * @param {number} [opt_maxEntries] Max entries.\n         */\n        function RBush(opt_maxEntries) {\n            /**\n             * @private\n             */\n            this.rbush_ = new RBush$2(opt_maxEntries);\n            /**\n             * A mapping between the objects added to this rbush wrapper\n             * and the objects that are actually added to the internal rbush.\n             * @private\n             * @type {Object<string, Entry>}\n             */\n            this.items_ = {};\n        }\n        /**\n         * Insert a value into the RBush.\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @param {T} value Value.\n         */\n        RBush.prototype.insert = function (extent, value) {\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            this.rbush_.insert(item);\n            this.items_[getUid(value)] = item;\n        };\n        /**\n         * Bulk-insert values into the RBush.\n         * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n         * @param {Array<T>} values Values.\n         */\n        RBush.prototype.load = function (extents, values) {\n            var items = new Array(values.length);\n            for (var i = 0, l = values.length; i < l; i++) {\n                var extent = extents[i];\n                var value = values[i];\n                /** @type {Entry} */\n                var item = {\n                    minX: extent[0],\n                    minY: extent[1],\n                    maxX: extent[2],\n                    maxY: extent[3],\n                    value: value,\n                };\n                items[i] = item;\n                this.items_[getUid(value)] = item;\n            }\n            this.rbush_.load(items);\n        };\n        /**\n         * Remove a value from the RBush.\n         * @param {T} value Value.\n         * @return {boolean} Removed.\n         */\n        RBush.prototype.remove = function (value) {\n            var uid = getUid(value);\n            // get the object in which the value was wrapped when adding to the\n            // internal rbush. then use that object to do the removal.\n            var item = this.items_[uid];\n            delete this.items_[uid];\n            return this.rbush_.remove(item) !== null;\n        };\n        /**\n         * Update the extent of a value in the RBush.\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @param {T} value Value.\n         */\n        RBush.prototype.update = function (extent, value) {\n            var item = this.items_[getUid(value)];\n            var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n            if (!equals(bbox, extent)) {\n                this.remove(value);\n                this.insert(extent, value);\n            }\n        };\n        /**\n         * Return all values in the RBush.\n         * @return {Array<T>} All.\n         */\n        RBush.prototype.getAll = function () {\n            var items = this.rbush_.all();\n            return items.map(function (item) {\n                return item.value;\n            });\n        };\n        /**\n         * Return all values in the given extent.\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @return {Array<T>} All in extent.\n         */\n        RBush.prototype.getInExtent = function (extent) {\n            /** @type {Entry} */\n            var bbox = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n            };\n            var items = this.rbush_.search(bbox);\n            return items.map(function (item) {\n                return item.value;\n            });\n        };\n        /**\n         * Calls a callback function with each value in the tree.\n         * If the callback returns a truthy value, this value is returned without\n         * checking the rest of the tree.\n         * @param {function(T): *} callback Callback.\n         * @return {*} Callback return value.\n         */\n        RBush.prototype.forEach = function (callback) {\n            return this.forEach_(this.getAll(), callback);\n        };\n        /**\n         * Calls a callback function with each value in the provided extent.\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @param {function(T): *} callback Callback.\n         * @return {*} Callback return value.\n         */\n        RBush.prototype.forEachInExtent = function (extent, callback) {\n            return this.forEach_(this.getInExtent(extent), callback);\n        };\n        /**\n         * @param {Array<T>} values Values.\n         * @param {function(T): *} callback Callback.\n         * @private\n         * @return {*} Callback return value.\n         */\n        RBush.prototype.forEach_ = function (values, callback) {\n            var result;\n            for (var i = 0, l = values.length; i < l; i++) {\n                result = callback(values[i]);\n                if (result) {\n                    return result;\n                }\n            }\n            return result;\n        };\n        /**\n         * @return {boolean} Is empty.\n         */\n        RBush.prototype.isEmpty = function () {\n            return isEmpty(this.items_);\n        };\n        /**\n         * Remove all values from the RBush.\n         */\n        RBush.prototype.clear = function () {\n            this.rbush_.clear();\n            this.items_ = {};\n        };\n        /**\n         * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n         * @return {import(\"../extent.js\").Extent} Extent.\n         */\n        RBush.prototype.getExtent = function (opt_extent) {\n            var data = this.rbush_.toJSON();\n            return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n        };\n        /**\n         * @param {RBush} rbush R-Tree.\n         */\n        RBush.prototype.concat = function (rbush) {\n            this.rbush_.load(rbush.rbush_.all());\n            for (var i in rbush.items_) {\n                this.items_[i] = rbush.items_[i];\n            }\n        };\n        return RBush;\n    }());\n    var RBush$1 = RBush;\n\n    var __extends$4 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n     * an array of strings representing source attributions.\n     *\n     * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n     */\n    /**\n     * A type that can be used to provide attribution information for data sources.\n     *\n     * It represents either\n     * * a simple string (e.g. `'© Acme Inc.'`)\n     * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n     * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n     *\n     * @typedef {string|Array<string>|Attribution} AttributionLike\n     */\n    /**\n     * @typedef {Object} Options\n     * @property {AttributionLike} [attributions] Attributions.\n     * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n     * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n     * @property {import(\"./State.js\").default} [state='ready'] State.\n     * @property {boolean} [wrapX=false] WrapX.\n     * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n     * the nearest neighbor is used when resampling.\n     */\n    /**\n     * @classdesc\n     * Abstract base class; normally only used for creating subclasses and not\n     * instantiated in apps.\n     * Base class for {@link module:ol/layer/Layer~Layer} sources.\n     *\n     * A generic `change` event is triggered when the state of the source changes.\n     * @abstract\n     * @api\n     */\n    var Source = /** @class */ (function (_super) {\n        __extends$4(Source, _super);\n        /**\n         * @param {Options} options Source options.\n         */\n        function Source(options) {\n            var _this = _super.call(this) || this;\n            /**\n             * @protected\n             * @type {import(\"../proj/Projection.js\").default}\n             */\n            _this.projection = get$1(options.projection);\n            /**\n             * @private\n             * @type {?Attribution}\n             */\n            _this.attributions_ = adaptAttributions(options.attributions);\n            /**\n             * @private\n             * @type {boolean}\n             */\n            _this.attributionsCollapsible_ =\n                options.attributionsCollapsible !== undefined\n                    ? options.attributionsCollapsible\n                    : true;\n            /**\n             * This source is currently loading data. Sources that defer loading to the\n             * map's tile queue never set this to `true`.\n             * @type {boolean}\n             */\n            _this.loading = false;\n            /**\n             * @private\n             * @type {import(\"./State.js\").default}\n             */\n            _this.state_ =\n                options.state !== undefined ? options.state : SourceState.READY;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            _this.interpolate_ = !!options.interpolate;\n            /**\n             * @protected\n             * @type {function(import(\"../View.js\").ViewOptions):void}\n             */\n            _this.viewResolver = null;\n            /**\n             * @protected\n             * @type {function(Error):void}\n             */\n            _this.viewRejector = null;\n            var self = _this;\n            /**\n             * @private\n             * @type {Promise<import(\"../View.js\").ViewOptions>}\n             */\n            _this.viewPromise_ = new Promise(function (resolve, reject) {\n                self.viewResolver = resolve;\n                self.viewRejector = reject;\n            });\n            return _this;\n        }\n        /**\n         * Get the attribution function for the source.\n         * @return {?Attribution} Attribution function.\n         * @api\n         */\n        Source.prototype.getAttributions = function () {\n            return this.attributions_;\n        };\n        /**\n         * @return {boolean} Attributions are collapsible.\n         * @api\n         */\n        Source.prototype.getAttributionsCollapsible = function () {\n            return this.attributionsCollapsible_;\n        };\n        /**\n         * Get the projection of the source.\n         * @return {import(\"../proj/Projection.js\").default} Projection.\n         * @api\n         */\n        Source.prototype.getProjection = function () {\n            return this.projection;\n        };\n        /**\n         * @abstract\n         * @return {Array<number>|null} Resolutions.\n         */\n        Source.prototype.getResolutions = function () {\n            return abstract();\n        };\n        /**\n         * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n         */\n        Source.prototype.getView = function () {\n            return this.viewPromise_;\n        };\n        /**\n         * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n         * @return {import(\"./State.js\").default} State.\n         * @api\n         */\n        Source.prototype.getState = function () {\n            return this.state_;\n        };\n        /**\n         * @return {boolean|undefined} Wrap X.\n         */\n        Source.prototype.getWrapX = function () {\n            return this.wrapX_;\n        };\n        /**\n         * @return {boolean} Use linear interpolation when resampling.\n         */\n        Source.prototype.getInterpolate = function () {\n            return this.interpolate_;\n        };\n        /**\n         * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n         * @api\n         */\n        Source.prototype.refresh = function () {\n            this.changed();\n        };\n        /**\n         * Set the attributions of the source.\n         * @param {AttributionLike|undefined} attributions Attributions.\n         *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n         *     or `undefined`.\n         * @api\n         */\n        Source.prototype.setAttributions = function (attributions) {\n            this.attributions_ = adaptAttributions(attributions);\n            this.changed();\n        };\n        /**\n         * Set the state of the source.\n         * @param {import(\"./State.js\").default} state State.\n         */\n        Source.prototype.setState = function (state) {\n            this.state_ = state;\n            this.changed();\n        };\n        return Source;\n    }(BaseObject$1));\n    /**\n     * Turns the attributions option into an attributions function.\n     * @param {AttributionLike|undefined} attributionLike The attribution option.\n     * @return {Attribution|null} An attribution function (or null).\n     */\n    function adaptAttributions(attributionLike) {\n        if (!attributionLike) {\n            return null;\n        }\n        if (Array.isArray(attributionLike)) {\n            return function (frameState) {\n                return attributionLike;\n            };\n        }\n        if (typeof attributionLike === 'function') {\n            return attributionLike;\n        }\n        return function (frameState) {\n            return [attributionLike];\n        };\n    }\n    var Source$1 = Source;\n\n    /**\n     * @module ol/source/VectorEventType\n     */\n    /**\n     * @enum {string}\n     */\n    var VectorEventType = {\n        /**\n         * Triggered when a feature is added to the source.\n         * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n         * @api\n         */\n        ADDFEATURE: 'addfeature',\n        /**\n         * Triggered when a feature is updated.\n         * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n         * @api\n         */\n        CHANGEFEATURE: 'changefeature',\n        /**\n         * Triggered when the clear method is called on the source.\n         * @event module:ol/source/Vector.VectorSourceEvent#clear\n         * @api\n         */\n        CLEAR: 'clear',\n        /**\n         * Triggered when a feature is removed from the source.\n         * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n         * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n         * @api\n         */\n        REMOVEFEATURE: 'removefeature',\n        /**\n         * Triggered when features starts loading.\n         * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n         * @api\n         */\n        FEATURESLOADSTART: 'featuresloadstart',\n        /**\n         * Triggered when features finishes loading.\n         * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n         * @api\n         */\n        FEATURESLOADEND: 'featuresloadend',\n        /**\n         * Triggered if feature loading results in an error.\n         * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n         * @api\n         */\n        FEATURESLOADERROR: 'featuresloaderror',\n    };\n    /**\n     * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n     */\n\n    /**\n     * @module ol/loadingstrategy\n     */\n    /**\n     * Strategy function for loading all features with a single request.\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     * @api\n     */\n    function all(extent, resolution) {\n        return [[-Infinity, -Infinity, Infinity, Infinity]];\n    }\n\n    /**\n     * @module ol/format/FormatType\n     */\n    /**\n     * @enum {string}\n     */\n    var FormatType = {\n        ARRAY_BUFFER: 'arraybuffer',\n        JSON: 'json',\n        TEXT: 'text',\n        XML: 'xml',\n    };\n\n    /**\n     * @module ol/featureloader\n     */\n    /**\n     *\n     * @type {boolean}\n     * @private\n     */\n    var withCredentials = false;\n    /**\n     * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n     * load features.\n     *\n     * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n     * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n     * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n     * the loaded features passed as an argument and an optional failure callback with no arguments. If\n     * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n     * `'featuresloaderror'` events. `this` within the function is bound to the\n     * {@link module:ol/source/Vector~VectorSource} it's called from.\n     *\n     * The function is responsible for loading the features and adding them to the\n     * source.\n     * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n     *           import(\"./extent.js\").Extent,\n     *           number,\n     *           import(\"./proj/Projection.js\").default,\n     *           function(Array<import(\"./Feature.js\").default>): void=,\n     *           function(): void=): void} FeatureLoader\n     * @api\n     */\n    /**\n     * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n     * get the url to load features from.\n     *\n     * This function takes an {@link module:ol/extent~Extent} representing the area\n     * to be loaded, a `{number}` representing the resolution (map units per pixel)\n     * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n     * arguments and returns a `{string}` representing the URL.\n     * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n     * @api\n     */\n    /**\n     * @param {string|FeatureUrlFunction} url Feature URL service.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n     *      Function called with the loaded features and optionally with the data projection.\n     * @param {function(): void} failure Failure\n     *      Function called when loading failed.\n     */\n    function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        xhr.withCredentials = withCredentials;\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success(\n                    /** @type {Array<import(\"./Feature.js\").default>} */\n                    (format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection,\n                    })), format.readProjection(source));\n                }\n                else {\n                    failure();\n                }\n            }\n            else {\n                failure();\n            }\n        };\n        /**\n         * @private\n         */\n        xhr.onerror = failure;\n        xhr.send();\n    }\n    /**\n     * Create an XHR feature loader for a `url` and `format`. The feature loader\n     * loads features (with XHR), parses the features, and adds them to the\n     * vector source.\n     * @param {string|FeatureUrlFunction} url Feature URL service.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @return {FeatureLoader} The feature loader.\n     * @api\n     */\n    function xhr(url, format) {\n        /**\n         * @param {import(\"./extent.js\").Extent} extent Extent.\n         * @param {number} resolution Resolution.\n         * @param {import(\"./proj/Projection.js\").default} projection Projection.\n         * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n         *      Function called when loading succeeded.\n         * @param {function(): void} [failure] Failure\n         *      Function called when loading failed.\n         * @this {import(\"./source/Vector\").default}\n         */\n        return function (extent, resolution, projection, success, failure) {\n            var source = /** @type {import(\"./source/Vector\").default} */ (this);\n            loadFeaturesXhr(url, format, extent, resolution, projection, \n            /**\n             * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n             * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n             * projection.\n             */\n            function (features, dataProjection) {\n                source.addFeatures(features);\n                if (success !== undefined) {\n                    success(features);\n                }\n            }, \n            /* FIXME handle error */ failure ? failure : VOID);\n        };\n    }\n\n    /**\n     * @module ol/source/Vector\n     */\n    var __extends$3 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n     * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n     * is one of the standard {@link module:ol/loadingstrategy} strategies.\n     *\n     * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n     * @api\n     */\n    /**\n     * @classdesc\n     * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n     * type.\n     * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n     */\n    var VectorSourceEvent = /** @class */ (function (_super) {\n        __extends$3(VectorSourceEvent, _super);\n        /**\n         * @param {string} type Type.\n         * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n         * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n         */\n        function VectorSourceEvent(type, opt_feature, opt_features) {\n            var _this = _super.call(this, type) || this;\n            /**\n             * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n             * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n             * @api\n             */\n            _this.feature = opt_feature;\n            /**\n             * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n             * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n             * @api\n             */\n            _this.features = opt_features;\n            return _this;\n        }\n        return VectorSourceEvent;\n    }(Event));\n    /***\n     * @template Return\n     * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n     *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n     *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n     *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n     *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n     */\n    /**\n     * @typedef {Object} Options\n     * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n     * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n     * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n     * and the collection will stay in sync.\n     * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n     * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n     * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n     * The loader function used to load features, from a remote source for example.\n     * If this is not set and `url` is set, the source will create and use an XHR\n     * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n     * will only fire if the `success` and `failure` callbacks are used.\n     *\n     * Example:\n     *\n     * ```js\n     * import {Vector} from 'ol/source';\n     * import {GeoJSON} from 'ol/format';\n     * import {bbox} from 'ol/loadingstrategy';\n     *\n     * var vectorSource = new Vector({\n     *   format: new GeoJSON(),\n     *   loader: function(extent, resolution, projection, success, failure) {\n     *      var proj = projection.getCode();\n     *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n     *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n     *          'outputFormat=application/json&srsname=' + proj + '&' +\n     *          'bbox=' + extent.join(',') + ',' + proj;\n     *      var xhr = new XMLHttpRequest();\n     *      xhr.open('GET', url);\n     *      var onError = function() {\n     *        vectorSource.removeLoadedExtent(extent);\n     *        failure();\n     *      }\n     *      xhr.onerror = onError;\n     *      xhr.onload = function() {\n     *        if (xhr.status == 200) {\n     *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n     *          vectorSource.addFeatures(features);\n     *          success(features);\n     *        } else {\n     *          onError();\n     *        }\n     *      }\n     *      xhr.send();\n     *    },\n     *    strategy: bbox\n     *  });\n     * ```\n     * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n     * Setting this to `false` (e.g. for sources with polygons that represent administrative\n     * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n     * stroke operations.\n     * @property {LoadingStrategy} [strategy] The loading strategy to use.\n     * By default an {@link module:ol/loadingstrategy.all}\n     * strategy is used, a one-off strategy which loads all features at once.\n     * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n     * Setting this option instructs the source to load features using an XHR loader\n     * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n     * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n     * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n     * other loading strategies.\n     * Requires `format` to be set as well.\n     * When default XHR feature loader is provided, the features will\n     * be transformed from the data projection to the view projection\n     * during parsing. If your remote data source does not advertise its projection\n     * properly, this transformation will be incorrect. For some formats, the\n     * default projection (usually EPSG:4326) can be overridden by setting the\n     * dataProjection constructor option on the format.\n     * Note that if a source contains non-feature data, such as a GeoJSON geometry\n     * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n     * @property {boolean} [useSpatialIndex=true]\n     * By default, an RTree is used as spatial index. When features are removed and\n     * added frequently, and the total number of features is low, setting this to\n     * `false` may improve performance.\n     *\n     * Note that\n     * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n     * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n     * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n     * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n     * through all features.\n     *\n     * When set to `false`, the features will be maintained in an\n     * {@link module:ol/Collection~Collection}, which can be retrieved through\n     * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n     * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n     * -180° and 180° meridians to work properly, this should be set to `false`. The\n     * resulting geometry coordinates will then exceed the world bounds.\n     */\n    /**\n     * @classdesc\n     * Provides a source of features for vector layers. Vector features provided\n     * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n     * vector data that is optimized for rendering.\n     *\n     * @fires VectorSourceEvent\n     * @api\n     * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n     */\n    var VectorSource = /** @class */ (function (_super) {\n        __extends$3(VectorSource, _super);\n        /**\n         * @param {Options} [opt_options] Vector source options.\n         */\n        function VectorSource(opt_options) {\n            var _this = this;\n            var options = opt_options || {};\n            _this = _super.call(this, {\n                attributions: options.attributions,\n                interpolate: true,\n                projection: undefined,\n                state: SourceState.READY,\n                wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            }) || this;\n            /***\n             * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n             */\n            _this.on;\n            /***\n             * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n             */\n            _this.once;\n            /***\n             * @type {VectorSourceOnSignature<void>}\n             */\n            _this.un;\n            /**\n             * @private\n             * @type {import(\"../featureloader.js\").FeatureLoader}\n             */\n            _this.loader_ = VOID;\n            /**\n             * @private\n             * @type {import(\"../format/Feature.js\").default|undefined}\n             */\n            _this.format_ = options.format;\n            /**\n             * @private\n             * @type {boolean}\n             */\n            _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n            /**\n             * @private\n             * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n             */\n            _this.url_ = options.url;\n            if (options.loader !== undefined) {\n                _this.loader_ = options.loader;\n            }\n            else if (_this.url_ !== undefined) {\n                assert(_this.format_, 7); // `format` must be set when `url` is set\n                // create a XHR feature loader for \"url\" and \"format\"\n                _this.loader_ = xhr(_this.url_, \n                /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n            }\n            /**\n             * @private\n             * @type {LoadingStrategy}\n             */\n            _this.strategy_ =\n                options.strategy !== undefined ? options.strategy : all;\n            var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n            /**\n             * @private\n             * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n             */\n            _this.featuresRtree_ = useSpatialIndex ? new RBush$1() : null;\n            /**\n             * @private\n             * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n             */\n            _this.loadedExtentsRtree_ = new RBush$1();\n            /**\n             * @type {number}\n             * @private\n             */\n            _this.loadingExtentsCount_ = 0;\n            /**\n             * @private\n             * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n             */\n            _this.nullGeometryFeatures_ = {};\n            /**\n             * A lookup of features by id (the return from feature.getId()).\n             * @private\n             * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n             */\n            _this.idIndex_ = {};\n            /**\n             * A lookup of features by uid (using getUid(feature)).\n             * @private\n             * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n             */\n            _this.uidIndex_ = {};\n            /**\n             * @private\n             * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n             */\n            _this.featureChangeKeys_ = {};\n            /**\n             * @private\n             * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n             */\n            _this.featuresCollection_ = null;\n            var collection, features;\n            if (Array.isArray(options.features)) {\n                features =\n                    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n            }\n            else if (options.features) {\n                collection =\n                    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n                features = collection.getArray();\n            }\n            if (!useSpatialIndex && collection === undefined) {\n                collection = new Collection$1(features);\n            }\n            if (features !== undefined) {\n                _this.addFeaturesInternal(features);\n            }\n            if (collection !== undefined) {\n                _this.bindFeaturesCollection_(collection);\n            }\n            return _this;\n        }\n        /**\n         * Add a single feature to the source.  If you want to add a batch of features\n         * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n         * instead. A feature will not be added to the source if feature with\n         * the same id is already there. The reason for this behavior is to avoid\n         * feature duplication when using bbox or tile loading strategies.\n         * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n         * meaning that if a feature with a duplicate id is added in the collection, it will\n         * be removed from it right away.\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n         * @api\n         */\n        VectorSource.prototype.addFeature = function (feature) {\n            this.addFeatureInternal(feature);\n            this.changed();\n        };\n        /**\n         * Add a feature without firing a `change` event.\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @protected\n         */\n        VectorSource.prototype.addFeatureInternal = function (feature) {\n            var featureKey = getUid(feature);\n            if (!this.addToIndex_(featureKey, feature)) {\n                if (this.featuresCollection_) {\n                    this.featuresCollection_.remove(feature);\n                }\n                return;\n            }\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n        };\n        /**\n         * @param {string} featureKey Unique identifier for the feature.\n         * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n         * @private\n         */\n        VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n            this.featureChangeKeys_[featureKey] = [\n                listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n                listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n            ];\n        };\n        /**\n         * @param {string} featureKey Unique identifier for the feature.\n         * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n         * @return {boolean} The feature is \"valid\", in the sense that it is also a\n         *     candidate for insertion into the Rtree.\n         * @private\n         */\n        VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n            var valid = true;\n            var id = feature.getId();\n            if (id !== undefined) {\n                if (!(id.toString() in this.idIndex_)) {\n                    this.idIndex_[id.toString()] = feature;\n                }\n                else {\n                    valid = false;\n                }\n            }\n            if (valid) {\n                assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n                this.uidIndex_[featureKey] = feature;\n            }\n            return valid;\n        };\n        /**\n         * Add a batch of features to the source.\n         * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n         * @api\n         */\n        VectorSource.prototype.addFeatures = function (features) {\n            this.addFeaturesInternal(features);\n            this.changed();\n        };\n        /**\n         * Add features without firing a `change` event.\n         * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n         * @protected\n         */\n        VectorSource.prototype.addFeaturesInternal = function (features) {\n            var extents = [];\n            var newFeatures = [];\n            var geometryFeatures = [];\n            for (var i = 0, length_1 = features.length; i < length_1; i++) {\n                var feature = features[i];\n                var featureKey = getUid(feature);\n                if (this.addToIndex_(featureKey, feature)) {\n                    newFeatures.push(feature);\n                }\n            }\n            for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n                var feature = newFeatures[i];\n                var featureKey = getUid(feature);\n                this.setupChangeEvents_(featureKey, feature);\n                var geometry = feature.getGeometry();\n                if (geometry) {\n                    var extent = geometry.getExtent();\n                    extents.push(extent);\n                    geometryFeatures.push(feature);\n                }\n                else {\n                    this.nullGeometryFeatures_[featureKey] = feature;\n                }\n            }\n            if (this.featuresRtree_) {\n                this.featuresRtree_.load(extents, geometryFeatures);\n            }\n            if (this.hasListener(VectorEventType.ADDFEATURE)) {\n                for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n                }\n            }\n        };\n        /**\n         * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n         * @private\n         */\n        VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n            var modifyingCollection = false;\n            this.addEventListener(VectorEventType.ADDFEATURE, \n            /**\n             * @param {VectorSourceEvent<Geometry>} evt The vector source event\n             */\n            function (evt) {\n                if (!modifyingCollection) {\n                    modifyingCollection = true;\n                    collection.push(evt.feature);\n                    modifyingCollection = false;\n                }\n            });\n            this.addEventListener(VectorEventType.REMOVEFEATURE, \n            /**\n             * @param {VectorSourceEvent<Geometry>} evt The vector source event\n             */\n            function (evt) {\n                if (!modifyingCollection) {\n                    modifyingCollection = true;\n                    collection.remove(evt.feature);\n                    modifyingCollection = false;\n                }\n            });\n            collection.addEventListener(CollectionEventType.ADD, \n            /**\n             * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n             */\n            function (evt) {\n                if (!modifyingCollection) {\n                    modifyingCollection = true;\n                    this.addFeature(\n                    /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                    modifyingCollection = false;\n                }\n            }.bind(this));\n            collection.addEventListener(CollectionEventType.REMOVE, \n            /**\n             * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n             */\n            function (evt) {\n                if (!modifyingCollection) {\n                    modifyingCollection = true;\n                    this.removeFeature(\n                    /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                    modifyingCollection = false;\n                }\n            }.bind(this));\n            this.featuresCollection_ = collection;\n        };\n        /**\n         * Remove all features from the source.\n         * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n         * @api\n         */\n        VectorSource.prototype.clear = function (opt_fast) {\n            if (opt_fast) {\n                for (var featureId in this.featureChangeKeys_) {\n                    var keys = this.featureChangeKeys_[featureId];\n                    keys.forEach(unlistenByKey);\n                }\n                if (!this.featuresCollection_) {\n                    this.featureChangeKeys_ = {};\n                    this.idIndex_ = {};\n                    this.uidIndex_ = {};\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    var removeAndIgnoreReturn = function (feature) {\n                        this.removeFeatureInternal(feature);\n                    }.bind(this);\n                    this.featuresRtree_.forEach(removeAndIgnoreReturn);\n                    for (var id in this.nullGeometryFeatures_) {\n                        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                    }\n                }\n            }\n            if (this.featuresCollection_) {\n                this.featuresCollection_.clear();\n            }\n            if (this.featuresRtree_) {\n                this.featuresRtree_.clear();\n            }\n            this.nullGeometryFeatures_ = {};\n            var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n            this.dispatchEvent(clearEvent);\n            this.changed();\n        };\n        /**\n         * Iterate through all features on the source, calling the provided callback\n         * with each one.  If the callback returns any \"truthy\" value, iteration will\n         * stop and the function will return the same value.\n         * Note: this function only iterate through the feature that have a defined geometry.\n         *\n         * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n         *     on the source.  Return a truthy value to stop iteration.\n         * @return {T|undefined} The return value from the last call to the callback.\n         * @template T\n         * @api\n         */\n        VectorSource.prototype.forEachFeature = function (callback) {\n            if (this.featuresRtree_) {\n                return this.featuresRtree_.forEach(callback);\n            }\n            else if (this.featuresCollection_) {\n                this.featuresCollection_.forEach(callback);\n            }\n        };\n        /**\n         * Iterate through all features whose geometries contain the provided\n         * coordinate, calling the callback with each feature.  If the callback returns\n         * a \"truthy\" value, iteration will stop and the function will return the same\n         * value.\n         *\n         * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n         * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n         *     whose goemetry contains the provided coordinate.\n         * @return {T|undefined} The return value from the last call to the callback.\n         * @template T\n         */\n        VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n            var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n            return this.forEachFeatureInExtent(extent, function (feature) {\n                var geometry = feature.getGeometry();\n                if (geometry.intersectsCoordinate(coordinate)) {\n                    return callback(feature);\n                }\n                else {\n                    return undefined;\n                }\n            });\n        };\n        /**\n         * Iterate through all features whose bounding box intersects the provided\n         * extent (note that the feature's geometry may not intersect the extent),\n         * calling the callback with each feature.  If the callback returns a \"truthy\"\n         * value, iteration will stop and the function will return the same value.\n         *\n         * If you are interested in features whose geometry intersects an extent, call\n         * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n         *\n         * When `useSpatialIndex` is set to false, this method will loop through all\n         * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n         *\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n         *     whose bounding box intersects the provided extent.\n         * @return {T|undefined} The return value from the last call to the callback.\n         * @template T\n         * @api\n         */\n        VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n            if (this.featuresRtree_) {\n                return this.featuresRtree_.forEachInExtent(extent, callback);\n            }\n            else if (this.featuresCollection_) {\n                this.featuresCollection_.forEach(callback);\n            }\n        };\n        /**\n         * Iterate through all features whose geometry intersects the provided extent,\n         * calling the callback with each feature.  If the callback returns a \"truthy\"\n         * value, iteration will stop and the function will return the same value.\n         *\n         * If you only want to test for bounding box intersection, call the\n         * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n         *\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n         *     whose geometry intersects the provided extent.\n         * @return {T|undefined} The return value from the last call to the callback.\n         * @template T\n         * @api\n         */\n        VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n            return this.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n             * @return {T|undefined} The return value from the last call to the callback.\n             */\n            function (feature) {\n                var geometry = feature.getGeometry();\n                if (geometry.intersectsExtent(extent)) {\n                    var result = callback(feature);\n                    if (result) {\n                        return result;\n                    }\n                }\n            });\n        };\n        /**\n         * Get the features collection associated with this source. Will be `null`\n         * unless the source was configured with `useSpatialIndex` set to `false`, or\n         * with an {@link module:ol/Collection~Collection} as `features`.\n         * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n         * @api\n         */\n        VectorSource.prototype.getFeaturesCollection = function () {\n            return this.featuresCollection_;\n        };\n        /**\n         * Get a snapshot of the features currently on the source in random order. The returned array\n         * is a copy, the features are references to the features in the source.\n         * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n         * @api\n         */\n        VectorSource.prototype.getFeatures = function () {\n            var features;\n            if (this.featuresCollection_) {\n                features = this.featuresCollection_.getArray().slice(0);\n            }\n            else if (this.featuresRtree_) {\n                features = this.featuresRtree_.getAll();\n                if (!isEmpty(this.nullGeometryFeatures_)) {\n                    extend$1(features, getValues(this.nullGeometryFeatures_));\n                }\n            }\n            return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n        };\n        /**\n         * Get all features whose geometry intersects the provided coordinate.\n         * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n         * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n         * @api\n         */\n        VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n            var features = [];\n            this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n                features.push(feature);\n            });\n            return features;\n        };\n        /**\n         * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n         * all features intersecting the given extent in random order (so it may include\n         * features whose geometries do not intersect the extent).\n         *\n         * When `useSpatialIndex` is set to false, this method will return all\n         * features.\n         *\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n         * @api\n         */\n        VectorSource.prototype.getFeaturesInExtent = function (extent) {\n            if (this.featuresRtree_) {\n                return this.featuresRtree_.getInExtent(extent);\n            }\n            else if (this.featuresCollection_) {\n                return this.featuresCollection_.getArray().slice(0);\n            }\n            else {\n                return [];\n            }\n        };\n        /**\n         * Get the closest feature to the provided coordinate.\n         *\n         * This method is not available when the source is configured with\n         * `useSpatialIndex` set to `false`.\n         * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n         * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n         *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n         *     and it should return a boolean value. By default, no filtering is made.\n         * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n         * @api\n         */\n        VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n            // Find the closest feature using branch and bound.  We start searching an\n            // infinite extent, and find the distance from the first feature found.  This\n            // becomes the closest feature.  We then compute a smaller extent which any\n            // closer feature must intersect.  We continue searching with this smaller\n            // extent, trying to find a closer feature.  Every time we find a closer\n            // feature, we update the extent being searched so that any even closer\n            // feature must intersect it.  We continue until we run out of features.\n            var x = coordinate[0];\n            var y = coordinate[1];\n            var closestFeature = null;\n            var closestPoint = [NaN, NaN];\n            var minSquaredDistance = Infinity;\n            var extent = [-Infinity, -Infinity, Infinity, Infinity];\n            var filter = opt_filter ? opt_filter : TRUE;\n            this.featuresRtree_.forEachInExtent(extent, \n            /**\n             * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n             */\n            function (feature) {\n                if (filter(feature)) {\n                    var geometry = feature.getGeometry();\n                    var previousMinSquaredDistance = minSquaredDistance;\n                    minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                    if (minSquaredDistance < previousMinSquaredDistance) {\n                        closestFeature = feature;\n                        // This is sneaky.  Reduce the extent that it is currently being\n                        // searched while the R-Tree traversal using this same extent object\n                        // is still in progress.  This is safe because the new extent is\n                        // strictly contained by the old extent.\n                        var minDistance = Math.sqrt(minSquaredDistance);\n                        extent[0] = x - minDistance;\n                        extent[1] = y - minDistance;\n                        extent[2] = x + minDistance;\n                        extent[3] = y + minDistance;\n                    }\n                }\n            });\n            return closestFeature;\n        };\n        /**\n         * Get the extent of the features currently in the source.\n         *\n         * This method is not available when the source is configured with\n         * `useSpatialIndex` set to `false`.\n         * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n         *     will be created. Instead, that extent's coordinates will be overwritten.\n         * @return {import(\"../extent.js\").Extent} Extent.\n         * @api\n         */\n        VectorSource.prototype.getExtent = function (opt_extent) {\n            return this.featuresRtree_.getExtent(opt_extent);\n        };\n        /**\n         * Get a feature by its identifier (the value returned by feature.getId()).\n         * Note that the index treats string and numeric identifiers as the same.  So\n         * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n         *\n         * @param {string|number} id Feature identifier.\n         * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n         * @api\n         */\n        VectorSource.prototype.getFeatureById = function (id) {\n            var feature = this.idIndex_[id.toString()];\n            return feature !== undefined ? feature : null;\n        };\n        /**\n         * Get a feature by its internal unique identifier (using `getUid`).\n         *\n         * @param {string} uid Feature identifier.\n         * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n         */\n        VectorSource.prototype.getFeatureByUid = function (uid) {\n            var feature = this.uidIndex_[uid];\n            return feature !== undefined ? feature : null;\n        };\n        /**\n         * Get the format associated with this source.\n         *\n         * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n         * @api\n         */\n        VectorSource.prototype.getFormat = function () {\n            return this.format_;\n        };\n        /**\n         * @return {boolean} The source can have overlapping geometries.\n         */\n        VectorSource.prototype.getOverlaps = function () {\n            return this.overlaps_;\n        };\n        /**\n         * Get the url associated with this source.\n         *\n         * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n         * @api\n         */\n        VectorSource.prototype.getUrl = function () {\n            return this.url_;\n        };\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        VectorSource.prototype.handleFeatureChange_ = function (event) {\n            var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n            var featureKey = getUid(feature);\n            var geometry = feature.getGeometry();\n            if (!geometry) {\n                if (!(featureKey in this.nullGeometryFeatures_)) {\n                    if (this.featuresRtree_) {\n                        this.featuresRtree_.remove(feature);\n                    }\n                    this.nullGeometryFeatures_[featureKey] = feature;\n                }\n            }\n            else {\n                var extent = geometry.getExtent();\n                if (featureKey in this.nullGeometryFeatures_) {\n                    delete this.nullGeometryFeatures_[featureKey];\n                    if (this.featuresRtree_) {\n                        this.featuresRtree_.insert(extent, feature);\n                    }\n                }\n                else {\n                    if (this.featuresRtree_) {\n                        this.featuresRtree_.update(extent, feature);\n                    }\n                }\n            }\n            var id = feature.getId();\n            if (id !== undefined) {\n                var sid = id.toString();\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n            else {\n                this.removeFromIdIndex_(feature);\n                this.uidIndex_[featureKey] = feature;\n            }\n            this.changed();\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n        };\n        /**\n         * Returns true if the feature is contained within the source.\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {boolean} Has feature.\n         * @api\n         */\n        VectorSource.prototype.hasFeature = function (feature) {\n            var id = feature.getId();\n            if (id !== undefined) {\n                return id in this.idIndex_;\n            }\n            else {\n                return getUid(feature) in this.uidIndex_;\n            }\n        };\n        /**\n         * @return {boolean} Is empty.\n         */\n        VectorSource.prototype.isEmpty = function () {\n            if (this.featuresRtree_) {\n                return (this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_));\n            }\n            if (this.featuresCollection_) {\n                return this.featuresCollection_.getLength() === 0;\n            }\n            return true;\n        };\n        /**\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @param {number} resolution Resolution.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         */\n        VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n            var loadedExtentsRtree = this.loadedExtentsRtree_;\n            var extentsToLoad = this.strategy_(extent, resolution, projection);\n            var _loop_1 = function (i, ii) {\n                var extentToLoad = extentsToLoad[i];\n                var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n                /**\n                 * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n                 * @return {boolean} Contains.\n                 */\n                function (object) {\n                    return containsExtent(object.extent, extentToLoad);\n                });\n                if (!alreadyLoaded) {\n                    ++this_1.loadingExtentsCount_;\n                    this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                    this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                        --this.loadingExtentsCount_;\n                        this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                    }.bind(this_1), function () {\n                        --this.loadingExtentsCount_;\n                        this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                    }.bind(this_1));\n                    loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                }\n            };\n            var this_1 = this;\n            for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n                _loop_1(i);\n            }\n            this.loading =\n                this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n        };\n        VectorSource.prototype.refresh = function () {\n            this.clear(true);\n            this.loadedExtentsRtree_.clear();\n            _super.prototype.refresh.call(this);\n        };\n        /**\n         * Remove an extent from the list of loaded extents.\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @api\n         */\n        VectorSource.prototype.removeLoadedExtent = function (extent) {\n            var loadedExtentsRtree = this.loadedExtentsRtree_;\n            var obj;\n            loadedExtentsRtree.forEachInExtent(extent, function (object) {\n                if (equals(object.extent, extent)) {\n                    obj = object;\n                    return true;\n                }\n            });\n            if (obj) {\n                loadedExtentsRtree.remove(obj);\n            }\n        };\n        /**\n         * Remove a single feature from the source.  If you want to remove all features\n         * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n         * instead.\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n         * @api\n         */\n        VectorSource.prototype.removeFeature = function (feature) {\n            if (!feature) {\n                return;\n            }\n            var featureKey = getUid(feature);\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n            }\n            var result = this.removeFeatureInternal(feature);\n            if (result) {\n                this.changed();\n            }\n        };\n        /**\n         * Remove feature without firing a `change` event.\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n         *     (or undefined if the feature was not found).\n         * @protected\n         */\n        VectorSource.prototype.removeFeatureInternal = function (feature) {\n            var featureKey = getUid(feature);\n            var featureChangeKeys = this.featureChangeKeys_[featureKey];\n            if (!featureChangeKeys) {\n                return;\n            }\n            featureChangeKeys.forEach(unlistenByKey);\n            delete this.featureChangeKeys_[featureKey];\n            var id = feature.getId();\n            if (id !== undefined) {\n                delete this.idIndex_[id.toString()];\n            }\n            delete this.uidIndex_[featureKey];\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n            return feature;\n        };\n        /**\n         * Remove a feature from the id index.  Called internally when the feature id\n         * may have changed.\n         * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n         * @return {boolean} Removed the feature from the index.\n         * @private\n         */\n        VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n            var removed = false;\n            for (var id in this.idIndex_) {\n                if (this.idIndex_[id] === feature) {\n                    delete this.idIndex_[id];\n                    removed = true;\n                    break;\n                }\n            }\n            return removed;\n        };\n        /**\n         * Set the new loader of the source. The next render cycle will use the\n         * new loader.\n         * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n         * @api\n         */\n        VectorSource.prototype.setLoader = function (loader) {\n            this.loader_ = loader;\n        };\n        /**\n         * Points the source to a new url. The next render cycle will use the new url.\n         * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n         * @api\n         */\n        VectorSource.prototype.setUrl = function (url) {\n            assert(this.format_, 7); // `format` must be set when `url` is set\n            this.url_ = url;\n            this.setLoader(xhr(url, this.format_));\n        };\n        return VectorSource;\n    }(Source$1));\n    var VectorSource$1 = VectorSource;\n\n    var __extends$2 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n     */\n    /**\n     * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n     */\n    /***\n     * @template Return\n     * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n     *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n     *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n     *     |'change:geometry', Return>} FeatureOnSignature\n     */\n    /***\n     * @template Geometry\n     * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n     */\n    /**\n     * @classdesc\n     * A vector object for geographic features with a geometry and other\n     * attribute properties, similar to the features in vector file formats like\n     * GeoJSON.\n     *\n     * Features can be styled individually with `setStyle`; otherwise they use the\n     * style of their vector layer.\n     *\n     * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n     * the feature object, so they are observable, and have get/set accessors.\n     *\n     * Typically, a feature has a single geometry property. You can set the\n     * geometry using the `setGeometry` method and get it with `getGeometry`.\n     * It is possible to store more than one geometry on a feature using attribute\n     * properties. By default, the geometry used for rendering is identified by\n     * the property name `geometry`. If you want to use another geometry property\n     * for rendering, use the `setGeometryName` method to change the attribute\n     * property associated with the geometry for the feature.  For example:\n     *\n     * ```js\n     *\n     * import Feature from 'ol/Feature';\n     * import Polygon from 'ol/geom/Polygon';\n     * import Point from 'ol/geom/Point';\n     *\n     * var feature = new Feature({\n     *   geometry: new Polygon(polyCoords),\n     *   labelPoint: new Point(labelCoords),\n     *   name: 'My Polygon'\n     * });\n     *\n     * // get the polygon geometry\n     * var poly = feature.getGeometry();\n     *\n     * // Render the feature as a point using the coordinates from labelPoint\n     * feature.setGeometryName('labelPoint');\n     *\n     * // get the point geometry\n     * var point = feature.getGeometry();\n     * ```\n     *\n     * @api\n     * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n     */\n    var Feature = /** @class */ (function (_super) {\n        __extends$2(Feature, _super);\n        /**\n         * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n         *     You may pass a Geometry object directly, or an object literal containing\n         *     properties. If you pass an object literal, you may include a Geometry\n         *     associated with a `geometry` key.\n         */\n        function Feature(opt_geometryOrProperties) {\n            var _this = _super.call(this) || this;\n            /***\n             * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n             */\n            _this.on;\n            /***\n             * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n             */\n            _this.once;\n            /***\n             * @type {FeatureOnSignature<void>}\n             */\n            _this.un;\n            /**\n             * @private\n             * @type {number|string|undefined}\n             */\n            _this.id_ = undefined;\n            /**\n             * @type {string}\n             * @private\n             */\n            _this.geometryName_ = 'geometry';\n            /**\n             * User provided style.\n             * @private\n             * @type {import(\"./style/Style.js\").StyleLike}\n             */\n            _this.style_ = null;\n            /**\n             * @private\n             * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n             */\n            _this.styleFunction_ = undefined;\n            /**\n             * @private\n             * @type {?import(\"./events.js\").EventsKey}\n             */\n            _this.geometryChangeKey_ = null;\n            _this.addChangeListener(_this.geometryName_, _this.handleGeometryChanged_);\n            if (opt_geometryOrProperties) {\n                if (typeof (\n                /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                    var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                    _this.setGeometry(geometry);\n                }\n                else {\n                    /** @type {Object<string, *>} */\n                    var properties = opt_geometryOrProperties;\n                    _this.setProperties(properties);\n                }\n            }\n            return _this;\n        }\n        /**\n         * Clone this feature. If the original feature has a geometry it\n         * is also cloned. The feature id is not set in the clone.\n         * @return {Feature<Geometry>} The clone.\n         * @api\n         */\n        Feature.prototype.clone = function () {\n            var clone = /** @type {Feature<Geometry>} */ (new Feature(this.hasProperties() ? this.getProperties() : null));\n            clone.setGeometryName(this.getGeometryName());\n            var geometry = this.getGeometry();\n            if (geometry) {\n                clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n            }\n            var style = this.getStyle();\n            if (style) {\n                clone.setStyle(style);\n            }\n            return clone;\n        };\n        /**\n         * Get the feature's default geometry.  A feature may have any number of named\n         * geometries.  The \"default\" geometry (the one that is rendered by default) is\n         * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n         * @return {Geometry|undefined} The default geometry for the feature.\n         * @api\n         * @observable\n         */\n        Feature.prototype.getGeometry = function () {\n            return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n        };\n        /**\n         * Get the feature identifier.  This is a stable identifier for the feature and\n         * is either set when reading data from a remote source or set explicitly by\n         * calling {@link module:ol/Feature~Feature#setId}.\n         * @return {number|string|undefined} Id.\n         * @api\n         */\n        Feature.prototype.getId = function () {\n            return this.id_;\n        };\n        /**\n         * Get the name of the feature's default geometry.  By default, the default\n         * geometry is named `geometry`.\n         * @return {string} Get the property name associated with the default geometry\n         *     for this feature.\n         * @api\n         */\n        Feature.prototype.getGeometryName = function () {\n            return this.geometryName_;\n        };\n        /**\n         * Get the feature's style. Will return what was provided to the\n         * {@link module:ol/Feature~Feature#setStyle} method.\n         * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n         * @api\n         */\n        Feature.prototype.getStyle = function () {\n            return this.style_;\n        };\n        /**\n         * Get the feature's style function.\n         * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n         * representing the current style of this feature.\n         * @api\n         */\n        Feature.prototype.getStyleFunction = function () {\n            return this.styleFunction_;\n        };\n        /**\n         * @private\n         */\n        Feature.prototype.handleGeometryChange_ = function () {\n            this.changed();\n        };\n        /**\n         * @private\n         */\n        Feature.prototype.handleGeometryChanged_ = function () {\n            if (this.geometryChangeKey_) {\n                unlistenByKey(this.geometryChangeKey_);\n                this.geometryChangeKey_ = null;\n            }\n            var geometry = this.getGeometry();\n            if (geometry) {\n                this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n            }\n            this.changed();\n        };\n        /**\n         * Set the default geometry for the feature.  This will update the property\n         * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n         * @param {Geometry|undefined} geometry The new geometry.\n         * @api\n         * @observable\n         */\n        Feature.prototype.setGeometry = function (geometry) {\n            this.set(this.geometryName_, geometry);\n        };\n        /**\n         * Set the style for the feature to override the layer style.  This can be a\n         * single style object, an array of styles, or a function that takes a\n         * resolution and returns an array of styles. To unset the feature style, call\n         * `setStyle()` without arguments or a falsey value.\n         * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n         * @api\n         * @fires module:ol/events/Event~BaseEvent#event:change\n         */\n        Feature.prototype.setStyle = function (opt_style) {\n            this.style_ = opt_style;\n            this.styleFunction_ = !opt_style\n                ? undefined\n                : createStyleFunction(opt_style);\n            this.changed();\n        };\n        /**\n         * Set the feature id.  The feature id is considered stable and may be used when\n         * requesting features or comparing identifiers returned from a remote source.\n         * The feature id can be used with the\n         * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n         * @param {number|string|undefined} id The feature id.\n         * @api\n         * @fires module:ol/events/Event~BaseEvent#event:change\n         */\n        Feature.prototype.setId = function (id) {\n            this.id_ = id;\n            this.changed();\n        };\n        /**\n         * Set the property name to be used when getting the feature's default geometry.\n         * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n         * this name will be returned.\n         * @param {string} name The property name of the default geometry.\n         * @api\n         */\n        Feature.prototype.setGeometryName = function (name) {\n            this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n            this.geometryName_ = name;\n            this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n            this.handleGeometryChanged_();\n        };\n        return Feature;\n    }(BaseObject$1));\n    /**\n     * Convert the provided object into a feature style function.  Functions passed\n     * through unchanged.  Arrays of Style or single style objects wrapped\n     * in a new feature style function.\n     * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n     *     A feature style function, a single style, or an array of styles.\n     * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n     */\n    function createStyleFunction(obj) {\n        if (typeof obj === 'function') {\n            return obj;\n        }\n        else {\n            /**\n             * @type {Array<import(\"./style/Style.js\").default>}\n             */\n            var styles_1;\n            if (Array.isArray(obj)) {\n                styles_1 = obj;\n            }\n            else {\n                assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n                var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n                styles_1 = [style];\n            }\n            return function () {\n                return styles_1;\n            };\n        }\n    }\n    var Feature$1 = Feature;\n\n    /**\n     * @module ol/geom/flat/deflate\n     */\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} stride Stride.\n     * @return {number} offset Offset.\n     */\n    function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n        for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n            flatCoordinates[offset++] = coordinate[i];\n        }\n        return offset;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {number} stride Stride.\n     * @return {number} offset Offset.\n     */\n    function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n        for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n            var coordinate = coordinates[i];\n            for (var j = 0; j < stride; ++j) {\n                flatCoordinates[offset++] = coordinate[j];\n            }\n        }\n        return offset;\n    }\n\n    var __extends$1 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @classdesc\n     * Point geometry.\n     *\n     * @api\n     */\n    var Point = /** @class */ (function (_super) {\n        __extends$1(Point, _super);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n         * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n         */\n        function Point(coordinates, opt_layout) {\n            var _this = _super.call(this) || this;\n            _this.setCoordinates(coordinates, opt_layout);\n            return _this;\n        }\n        /**\n         * Make a complete copy of the geometry.\n         * @return {!Point} Clone.\n         * @api\n         */\n        Point.prototype.clone = function () {\n            var point = new Point(this.flatCoordinates.slice(), this.layout);\n            point.applyProperties(this);\n            return point;\n        };\n        /**\n         * @param {number} x X.\n         * @param {number} y Y.\n         * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n         * @param {number} minSquaredDistance Minimum squared distance.\n         * @return {number} Minimum squared distance.\n         */\n        Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n            var flatCoordinates = this.flatCoordinates;\n            var squaredDistance$1 = squaredDistance(x, y, flatCoordinates[0], flatCoordinates[1]);\n            if (squaredDistance$1 < minSquaredDistance) {\n                var stride = this.stride;\n                for (var i = 0; i < stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n                closestPoint.length = stride;\n                return squaredDistance$1;\n            }\n            else {\n                return minSquaredDistance;\n            }\n        };\n        /**\n         * Return the coordinate of the point.\n         * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n         * @api\n         */\n        Point.prototype.getCoordinates = function () {\n            return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n        };\n        /**\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @protected\n         * @return {import(\"../extent.js\").Extent} extent Extent.\n         */\n        Point.prototype.computeExtent = function (extent) {\n            return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n        };\n        /**\n         * Get the type of this geometry.\n         * @return {import(\"./GeometryType.js\").default} Geometry type.\n         * @api\n         */\n        Point.prototype.getType = function () {\n            return GeometryType.POINT;\n        };\n        /**\n         * Test if the geometry and the passed extent intersect.\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @return {boolean} `true` if the geometry and the extent intersect.\n         * @api\n         */\n        Point.prototype.intersectsExtent = function (extent) {\n            return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n        };\n        /**\n         * @param {!Array<*>} coordinates Coordinates.\n         * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n         * @api\n         */\n        Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n            this.setLayout(opt_layout, coordinates, 0);\n            if (!this.flatCoordinates) {\n                this.flatCoordinates = [];\n            }\n            this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n            this.changed();\n        };\n        return Point;\n    }(SimpleGeometry$1));\n    var Point$1 = Point;\n\n    var __extends = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * @classdesc\n     * Multi-point geometry.\n     *\n     * @api\n     */\n    var MultiPoint = /** @class */ (function (_super) {\n        __extends(MultiPoint, _super);\n        /**\n         * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n         *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n         * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n         */\n        function MultiPoint(coordinates, opt_layout) {\n            var _this = _super.call(this) || this;\n            if (opt_layout && !Array.isArray(coordinates[0])) {\n                _this.setFlatCoordinates(opt_layout, \n                /** @type {Array<number>} */ (coordinates));\n            }\n            else {\n                _this.setCoordinates(\n                /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n            }\n            return _this;\n        }\n        /**\n         * Append the passed point to this multipoint.\n         * @param {Point} point Point.\n         * @api\n         */\n        MultiPoint.prototype.appendPoint = function (point) {\n            if (!this.flatCoordinates) {\n                this.flatCoordinates = point.getFlatCoordinates().slice();\n            }\n            else {\n                extend$1(this.flatCoordinates, point.getFlatCoordinates());\n            }\n            this.changed();\n        };\n        /**\n         * Make a complete copy of the geometry.\n         * @return {!MultiPoint} Clone.\n         * @api\n         */\n        MultiPoint.prototype.clone = function () {\n            var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n            multiPoint.applyProperties(this);\n            return multiPoint;\n        };\n        /**\n         * @param {number} x X.\n         * @param {number} y Y.\n         * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n         * @param {number} minSquaredDistance Minimum squared distance.\n         * @return {number} Minimum squared distance.\n         */\n        MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n            if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n                return minSquaredDistance;\n            }\n            var flatCoordinates = this.flatCoordinates;\n            var stride = this.stride;\n            for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n                var squaredDistance$1 = squaredDistance(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n                if (squaredDistance$1 < minSquaredDistance) {\n                    minSquaredDistance = squaredDistance$1;\n                    for (var j = 0; j < stride; ++j) {\n                        closestPoint[j] = flatCoordinates[i + j];\n                    }\n                    closestPoint.length = stride;\n                }\n            }\n            return minSquaredDistance;\n        };\n        /**\n         * Return the coordinates of the multipoint.\n         * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n         * @api\n         */\n        MultiPoint.prototype.getCoordinates = function () {\n            return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n        };\n        /**\n         * Return the point at the specified index.\n         * @param {number} index Index.\n         * @return {Point} Point.\n         * @api\n         */\n        MultiPoint.prototype.getPoint = function (index) {\n            var n = !this.flatCoordinates\n                ? 0\n                : this.flatCoordinates.length / this.stride;\n            if (index < 0 || n <= index) {\n                return null;\n            }\n            return new Point$1(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n        };\n        /**\n         * Return the points of this multipoint.\n         * @return {Array<Point>} Points.\n         * @api\n         */\n        MultiPoint.prototype.getPoints = function () {\n            var flatCoordinates = this.flatCoordinates;\n            var layout = this.layout;\n            var stride = this.stride;\n            /** @type {Array<Point>} */\n            var points = [];\n            for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n                var point = new Point$1(flatCoordinates.slice(i, i + stride), layout);\n                points.push(point);\n            }\n            return points;\n        };\n        /**\n         * Get the type of this geometry.\n         * @return {import(\"./GeometryType.js\").default} Geometry type.\n         * @api\n         */\n        MultiPoint.prototype.getType = function () {\n            return GeometryType.MULTI_POINT;\n        };\n        /**\n         * Test if the geometry and the passed extent intersect.\n         * @param {import(\"../extent.js\").Extent} extent Extent.\n         * @return {boolean} `true` if the geometry and the extent intersect.\n         * @api\n         */\n        MultiPoint.prototype.intersectsExtent = function (extent) {\n            var flatCoordinates = this.flatCoordinates;\n            var stride = this.stride;\n            for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n                var x = flatCoordinates[i];\n                var y = flatCoordinates[i + 1];\n                if (containsXY(extent, x, y)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        /**\n         * Set the coordinates of the multipoint.\n         * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n         * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n         * @api\n         */\n        MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n            this.setLayout(opt_layout, coordinates, 1);\n            if (!this.flatCoordinates) {\n                this.flatCoordinates = [];\n            }\n            this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n            this.changed();\n        };\n        return MultiPoint;\n    }(SimpleGeometry$1));\n    var MultiPoint$1 = MultiPoint;\n\n    /**\n     * @typedef {Object} Options\n     * @property {ol.Coordinate} [originCoordinate=[0, 0]] origin coordinate for the grid\n     * @property {ol.Coordinate} [rotationAnchorCoordinate] coordinate describing the rotation of the grid\n     * @property {number} [xGridSize] the x grid size. If the origin point and rotation anchor point have the same latitude, then this sets the horizontal (width) of the grid cells.\n     * @property {number} [yGridSize] the y grid size. If the origin point and rotation anchor point have the same latitude, then this sets the vertical (height) of the grid cells.\n     * @property {number} [maxPointsPerSide] the max number of points per side. Controls the maximum number of points to be drawn on the screen at one time.\n     * @property {ol.style.StyleLike} [style] grid point style\n     */\n\n    const DEFAULT_ORIGIN_COORDINATE = [0, 0];\n    const DEFAULT_GRID_SIZE = 10;\n    const DEFAULT_MAX_POINTS_PER_SIDE = 64;\n\n    /**\n     * @classdesc\n     * Creates a grid of points within the current map extents based on two points\n     * and x/y grid cell sizes in map units.\n     *\n     * @api\n     */\n    class Grid extends Interaction$1 {\n\n      /**\n       * @param {Options=} opt_options Options.\n       */\n      constructor(opt_options) {\n\n        const options = opt_options ? opt_options : {};\n\n        super(/** @type {Interaction.InteractionOptions} */ (options));\n\n        this.originCoordinate = options.originCoordinate || DEFAULT_ORIGIN_COORDINATE;\n        this.rotationAnchorCoordinate = options.rotationAnchorCoordinate || null;\n        this.xGridSize = options.xGridSize || DEFAULT_GRID_SIZE;\n        this.yGridSize = options.yGridSize || DEFAULT_GRID_SIZE;\n        this.maxPointsPerSide = options.maxPointsPerSide || DEFAULT_MAX_POINTS_PER_SIDE;\n\n        /**\n         * Draw overlay where our grid feature is drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        this.overlay_ = new VectorLayer$1({\n          source: createAlwaysVisibleVectorSource(),\n          style: options.style,\n          updateWhileInteracting: true\n        });\n\n        /**\n         * Feature used to draw our grid.\n         * @type {Feature}\n         * @private\n         */\n        this.gridFeature_ = new Feature$1({\n          geometry: new MultiPoint$1([])\n        });\n\n        this.updateGridDescription_();\n\n        this.overlay_.getSource().addFeature(this.gridFeature_);\n\n        this.overlay_.on('postrender', this.handleGridLayerPostRender_.bind(this));\n        this.addEventListener('change:active', this.updateState_);\n      }\n\n      /**\n       * Get a feature containing the current grid points. Callers should not\n       * modify the feature or its geometry, but may use it to modify the behavior\n       * of the map - such as adding it to a Snap interaction. The feature geometry\n       * is empty when the grid is not active.\n       * @return {Feature} grid feature with a single MultiPoint geometry.\n       * @api\n       */\n      getGridFeature() {\n        return this.gridFeature_;\n      }\n\n      /**\n       * Set the origin coordinate for the grid.\n       * @param {ol.Coordinate} originCoordinate Coordinate.\n       * @api\n       */\n      setOriginPoint(originCoordinate) {\n        this.originCoordinate = originCoordinate;\n        this.updateGridDescription_();\n      }\n\n      /**\n       * Set the rotation anchor coordinate used to control how the rid is rotated.\n       * @param {ol.Coordinate} rotationAnchorCoordinate Coordinate.\n       * @api\n       */\n      setRotationControlPoint(rotationAnchorCoordinate) {\n        this.rotationAnchorCoordinate = rotationAnchorCoordinate;\n        this.updateGridDescription_();\n      }\n\n      /**\n       * Set the x grid size. If the origin point and rotation anchor point have the\n       * same latitude, then this sets the horizontal (width) of the grid cells.\n       * @param {number} xGridSize number in map units.\n       * @api\n       */\n      setXGridSize(xGridSize) {\n        this.xGridSize = xGridSize;\n        this.updateGridDescription_();\n      }\n\n      /**\n       * Set the y grid size. If the origin point and rotation anchor point have the\n       * same latitude, then this sets the vertical (height) of the grid cells.\n       * @param {number} yGridSize number in map units.\n       * @api\n       */\n      setYGridSize(yGridSize) {\n        this.yGridSize = yGridSize;\n        this.updateGridDescription_();\n      }\n\n      /**\n       * Set the max number of points per side. Controls the maximum number of points\n       * to be drawn on the screen at one time.\n       * @param {number} maxPointsPerSide number of points per side.\n       * @api\n       */\n      setMaxPointsPerSide(maxPointsPerSide) {\n        this.maxPointsPerSide = maxPointsPerSide;\n        this.changed();\n      }\n\n      /**\n       * Set the style of the grid points.\n       * @param {ol.style.StyleLike} style of the grid points.\n       * @api\n       */\n      setStyle(style) {\n        this.overlay_.setStyle(style);\n      }\n\n      /**\n       * @param {ol.PluggableMap} map Map.\n       */\n      setMap(map) {\n        super.setMap(map);\n        this.updateState_();\n      }\n\n      /**\n       * @private\n       */\n      updateState_() {\n        const map = this.getMap();\n        const active = this.getActive();\n        this.overlay_.setMap(active ? map : null);\n        this.updateGridDescription_();\n      }\n\n      /**\n       * @private\n       */\n      updateGridDescription_() {\n        const map = this.getMap();\n\n        if (!map || !this.originCoordinate || !this.xGridSize || !this.yGridSize || !this.getActive()) {\n          this.gridDescription_ = null;\n          this.lastGridDescription_ = null;\n          this.gridFeature_.getGeometry().setCoordinates([]);\n          this.changed();\n          return;\n        }\n\n        const mapViewProj = map.getView().getProjection();\n\n        // ol.sphere.getDistance - a.k.a. 'getSphericalDistance' here - only seems to work correctly\n        // in 'EPSG:4326'\n        const cp1 = transform(this.originCoordinate, mapViewProj, 'EPSG:4326');\n\n        const rotationAnchorCoordinate = this.rotationAnchorCoordinate || addVectors(this.originCoordinate, [1, 0]);\n\n        const cp2 = transform(rotationAnchorCoordinate, mapViewProj, 'EPSG:4326');\n\n        const cp3 = [cp1[0], cp2[1]];\n        const cp4 = [cp2[0], cp1[1]];\n\n        const len = getDistance(cp1, cp2);\n        let rise = getDistance(cp1, cp3);\n        let run = getDistance(cp1, cp4);\n\n        // Potential bug: This approach to calculating the direction of the rise/run probably won't\n        // work correctly when the coordinates wrap around.\n        if (cp1[0] > cp2[0]) {\n          run *= -1;\n        }\n\n        if (cp1[1] > cp2[1]) {\n          rise *= -1;\n        }\n\n        const riseFactor = rise / len;\n        const runFactor = run / len;\n\n        !this.gridDescription_;\n\n        this.gridDescription_ = {\n          originCoordinate: this.originCoordinate,\n          riseFactor,\n          runFactor,\n          xDim: this.xGridSize,\n          yDim: this.yGridSize,\n        };\n\n        this.changed();\n      }\n\n      /**\n       * @inheritDoc\n       * @api\n       */\n      changed() {\n        super.changed();\n        this.overlay_.changed();\n      }\n\n      /**\n       * Handle post render events for our grid layer\n       * @param {ol.render.Event} event A render event.\n       * @private\n       */\n      handleGridLayerPostRender_(event) {\n        const map = this.getMap();\n\n        const gridDescription = this.gridDescription_;\n\n        if (!gridDescription) {\n          return;\n        }\n\n        const viewExtent = map.getView().calculateExtent(map.getSize());\n\n        const gridDescriptionUnchanged = gridDescription === this.lastGridDescription_ || JSON.stringify(gridDescription) === JSON.stringify(this.lastGridDescription_);\n        const viewExtentUnchanged = viewExtent === this.lastViewExtent_ || JSON.stringify(viewExtent) === JSON.stringify(this.lastViewExtent_);\n\n        // No need to recalculate the grid geometry if nothing has changed\n        if (gridDescriptionUnchanged && viewExtentUnchanged) {\n          return;\n        }\n\n        const selectedOriginCoords = gridDescription.originCoordinate;\n\n        // Calculate orthogonal basis vectors for the grid\n        let xBasisVector = [\n          gridDescription.xDim * gridDescription.runFactor,\n          gridDescription.xDim * gridDescription.riseFactor,\n        ];\n        let yBasisVector = [\n          gridDescription.yDim * (-1) * gridDescription.riseFactor,\n          gridDescription.yDim * gridDescription.runFactor,\n        ];\n\n        const localSphereNormalizationCoefficients = this\n          .calculateLocalSphereNormalizationCoefficients(new Point$1(gridDescription.originCoordinate));\n\n        xBasisVector = elementWiseVectorProduct(xBasisVector,\n          localSphereNormalizationCoefficients);\n        yBasisVector = elementWiseVectorProduct(yBasisVector,\n          localSphereNormalizationCoefficients);\n\n        const viewExtentCenter = getCenter(viewExtent);\n\n        const viewCenterCoordinateVector = getAlignedIntegerCoordinateVector(\n          selectedOriginCoords,\n          xBasisVector,\n          yBasisVector,\n          viewExtentCenter,\n        );\n\n        const vOriginCoords = addVectors(selectedOriginCoords, multiplyTwoByTwoMatrixByTwoVector(\n          [xBasisVector, yBasisVector],\n          viewCenterCoordinateVector,\n        ));\n\n        const vOrigin = new Point$1(vOriginCoords);\n\n        const vGridExtentCoordinateVectors = getCoordinateVectorsToExtentCorners(\n          vOriginCoords,\n          xBasisVector,\n          yBasisVector,\n          viewExtent,\n        );\n\n        const gridPoints = calculateGridPoints(\n          viewExtent,\n          vOrigin,\n          vGridExtentCoordinateVectors,\n          xBasisVector,\n          yBasisVector,\n          this.maxPointsPerSide,\n        );\n\n        this.lastGridDescription_ = gridDescription;\n        this.lastViewExtent_ = viewExtent;\n        this.gridFeature_.getGeometry().setCoordinates(gridPoints);\n      }\n\n      calculateLocalSphereNormalizationCoefficients(origin) {\n        const mapViewProjCode = this.getMap().getView().getProjection().getCode();\n\n        function asEpsg4326Coords(point) {\n          return point\n            .transform(mapViewProjCode, 'EPSG:4326')\n            .getCoordinates();\n        }\n\n        function translateCopy(point, deltaX, deltaY) {\n          const p = point.clone();\n          p.translate(deltaX, deltaY);\n          return p;\n        }\n\n        const originCoords = asEpsg4326Coords(origin.clone());\n        const testXCoords = asEpsg4326Coords(translateCopy(origin, 1, 0));\n        const testYCoords = asEpsg4326Coords(translateCopy(origin, 0, 1));\n\n        return [\n          1 / getDistance(originCoords, testXCoords),\n          1 / getDistance(originCoords, testYCoords),\n        ];\n      }\n\n    }\n\n    function getGridPoint(vOrigin, xi, yi, xBasisVector, yBasisVector) {\n      const xVector = scaleVector(xBasisVector, xi);\n      const yVector = scaleVector(yBasisVector, yi);\n\n      const p = vOrigin.clone();\n      p.setCoordinates(addVectors(vOrigin.getCoordinates(), xVector, yVector));\n\n      return p;\n    }\n\n    // Assumes M is a 2x2 matrix as an array of columns\n    function invertTwoByTwoMatrix(M) {\n      const A = M[0][0];\n      const B = M[0][1];\n      const C = M[1][0];\n      const D = M[1][1];\n\n      const divisor = (A * D - B * C);\n\n      return [\n        [\n          D / divisor,\n          -B / divisor,\n        ],\n        [\n          -C / divisor,\n          A / divisor,\n        ],\n      ];\n    }\n\n    // Assumes M is a 2x2 matrix as an array of columns\n    // Assumes V is an array of size two\n    function multiplyTwoByTwoMatrixByTwoVector(M, V) {\n      const A = M[0][0];\n      const B = M[0][1];\n      const C = M[1][0];\n      const D = M[1][1];\n\n      const E = V[0];\n      const F = V[1];\n\n      return [\n        A * E + C * F,\n        B * E + D * F,\n      ];\n    }\n\n    function getCoordinateVector(bx, by, Z) {\n      const I = invertTwoByTwoMatrix([bx, by]);\n\n      return multiplyTwoByTwoMatrixByTwoVector(I, Z);\n    }\n\n    function getIntegerCoordinateVector(bx, by, Z, roundingFunction) {\n      const round = roundingFunction || Math.round;\n\n      const cv = getCoordinateVector(bx, by, Z);\n\n      return [round(cv[0]), round(cv[1])];\n    }\n\n    function subtractVectors(va, vb) {\n      return [va[0] - vb[0], va[1] - vb[1]];\n    }\n\n    function addVectors(va, vb, vc) {\n      if (vc) {\n        return [va[0] + vb[0] + vc[0], va[1] + vb[1] + vc[1]];\n      }\n      return [va[0] + vb[0], va[1] + vb[1]];\n    }\n\n    function scaleVector(v, c) {\n      return [v[0] * c, v[1] * c];\n    }\n\n    function elementWiseVectorProduct(va, vb) {\n      return [va[0] * vb[0], va[1] * vb[1]];\n    }\n\n    /*\n     * Get the integer coordinate vector between a given origin and point Z in terms of the basis\n     * vectors [bx, by].\n     */\n    function getAlignedIntegerCoordinateVector(origin, bx, by, Z, roundingFunction) {\n      const zOffset = subtractVectors(Z, origin);\n\n      return getIntegerCoordinateVector(bx, by, zOffset, roundingFunction);\n    }\n\n    function getCoordinateVectorsToExtentCorners(origin, bx, by, extent) {\n      return [\n        getAlignedIntegerCoordinateVector(origin, bx, by, [extent[0], extent[1]], Math.ceil),\n        getAlignedIntegerCoordinateVector(origin, bx, by, [extent[2], extent[3]], Math.ceil),\n        getAlignedIntegerCoordinateVector(origin, bx, by, [extent[0], extent[3]], Math.ceil),\n        getAlignedIntegerCoordinateVector(origin, bx, by, [extent[2], extent[1]], Math.ceil),\n      ];\n    }\n\n    function calculateGridPoints(\n      viewExtent,\n      vOrigin,\n      vGridExtentCoordinateVectors,\n      xBasisVector,\n      yBasisVector,\n      maxPointsPerSide,\n    ) {\n      const x1 = vGridExtentCoordinateVectors[0][0];\n      const y1 = vGridExtentCoordinateVectors[0][1];\n\n      const x2 = vGridExtentCoordinateVectors[1][0];\n      const y2 = vGridExtentCoordinateVectors[1][1];\n\n      const x3 = vGridExtentCoordinateVectors[2][0];\n      const y3 = vGridExtentCoordinateVectors[2][1];\n\n      const x4 = vGridExtentCoordinateVectors[3][0];\n      const y4 = vGridExtentCoordinateVectors[3][1];\n\n      const minX = Math.min(x1, x2, x3, x4);\n      const minY = Math.min(y1, y2, y3, y4);\n\n      const maxX = Math.max(x1, x2, x3, x4);\n      const maxY = Math.max(y1, y2, y3, y4);\n\n      const deltaX = maxX - minX;\n      const deltaY = maxY - minY;\n\n      const incrementX = Math.max(1, Math.floor(deltaX / maxPointsPerSide));\n      const incrementY = Math.max(1, Math.floor(deltaY / maxPointsPerSide));\n\n      const gridPointCoords = [];\n\n      for (let xi = minX; xi <= maxX; xi += incrementX) {\n        for (let yi = minY; yi <= maxY; yi += incrementY) {\n\n          const gridPoint = getGridPoint(vOrigin, xi, yi, xBasisVector, yBasisVector);\n\n          if (gridPoint.intersectsExtent(viewExtent)) {\n            gridPointCoords.push(gridPoint.getCoordinates());\n          }\n\n        }\n      }\n\n      return gridPointCoords;\n    }\n\n    /**\n     * @returns a vector source which always returns all its features - ignoring extents.\n     * @private\n     */\n    function createAlwaysVisibleVectorSource() {\n      const vectorSource = new VectorSource$1({\n        useSpatialIndex: false,\n        features: [],\n        wrapX: false,\n      });\n\n      // Monkey-patch this function to ensure the grid is always rendered even\n      // when the origin/rotation points are outside the view extents\n      vectorSource.getFeaturesInExtent = vectorSource.getFeatures;\n\n      return vectorSource;\n    }\n\n    return Grid;\n\n}));\n"],
  "mappings": "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",
  "names": ["BaseEvent", "Disposable", "d", "b", "Target", "Observable", "ObjectEvent", "BaseObject", "Interaction", "AssertionError", "cosh", "BaseLayer", "Layer", "ImageStyle", "scale", "cache", "transform", "RegularShape", "add", "CircleStyle", "Fill", "Stroke", "Style", "BaseVectorLayer", "VectorContext", "CanvasBuilder", "fillInstruction", "CanvasImageBuilder", "CanvasLineStringBuilder", "CanvasPolygonBuilder", "CanvasTextBuilder", "i", "p1", "p2", "p3", "BuilderGroup", "LayerRenderer", "RenderEvent", "CanvasLayerRenderer", "pixelContext", "measureAndCacheTextWidth", "Executor", "p4", "strokeInstruction", "intersects", "ExecutorGroup", "Projection", "EPSG3857Projection", "EPSG4326Projection", "Geometry", "clone", "SimpleGeometry", "CanvasImmediateRenderer", "IconImageCache", "ImageBase", "IconImage", "Icon", "transforms", "CanvasVectorLayerRenderer", "VectorLayer", "CollectionEvent", "Collection", "RBush", "Source", "self", "xhr", "VectorSourceEvent", "VectorSource", "ii", "Feature", "Point", "MultiPoint"]
}
